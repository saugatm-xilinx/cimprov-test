// Copyright (c) 1997-2003 Microsoft Corporation, All Rights Reserved

[Abstract,Locale(1033) : ToInstance,UUID("{8502C517-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class CIM_ManagedSystemElement
{
  [MaxLen(64) : ToSubclass,Read : ToSubclass] string Caption;
  [Read : ToSubclass] string Description;
  [MappingStrings{"MIF.DMTF|ComponentID|001.5"} : ToSubclass,Read : ToSubclass] datetime InstallDate;
  [Read : ToSubclass] string Name;
  [Read : ToSubclass,MaxLen(10) : ToSubclass,ValueMap{"OK", "Error", "Degraded", "Unknown", "Pred Fail", "Starting", "Stopping", "Service", "Stressed", "NonRecover", "No Contact", "Lost Comm"} : ToSubclass] string Status;
};

[Abstract,Locale(1033) : ToInstance,UUID("{8502C518-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class CIM_LogicalElement : CIM_ManagedSystemElement
{
};

[Abstract,Locale(1033) : ToInstance,UUID("{8502C519-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class CIM_SystemResource : CIM_LogicalElement
{
};

[Abstract,Locale(1033) : ToInstance,UUID("{8502C51A-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class CIM_IRQ : CIM_SystemResource
{
  [read : ToSubclass,Propagated("CIM_ComputerSystem.CreationClassName") : ToSubclass,CIM_Key : ToSubclass,MaxLen(256) : ToSubclass] string CSCreationClassName;
  [read : ToSubclass,Propagated("CIM_ComputerSystem.Name") : ToSubclass,CIM_Key : ToSubclass,MaxLen(256) : ToSubclass] string CSName;
  [read : ToSubclass,CIM_Key : ToSubclass,MaxLen(256) : ToSubclass] string CreationClassName;
  [read : ToSubclass,MappingStrings{"MIF.DMTF|IRQ|001.1"} : ToSubclass,key : ToInstance ToSubclass DisableOverride] uint32 IRQNumber;
  [read : ToSubclass,ValueMap{"1", "2", "3", "4", "5"} : ToSubclass,MappingStrings{"MIF.DMTF|IRQ|001.2"} : ToSubclass] uint16 Availability;
  [read : ToSubclass,ValueMap{"1", "2", "3", "4"} : ToSubclass,MappingStrings{"MIF.DMTF|IRQ|001.3", "MIF.DMTF|System Resource IRQ Info|001.2"} : ToSubclass] uint16 TriggerType;
  [read : ToSubclass,ValueMap{"1", "2", "3", "4"} : ToSubclass,MappingStrings{"MIF.DMTF|System Resource IRQ Info|001.3"} : ToSubclass] uint16 TriggerLevel;
  [read : ToSubclass,MappingStrings{"MIF.DMTF|IRQ|001.4"} : ToSubclass] boolean Shareable;
};

[Abstract,Locale(1033) : ToInstance,UUID("{8502C51B-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class CIM_MemoryMappedIO : CIM_SystemResource
{
  [read : ToSubclass,Propagated("CIM_ComputerSystem.CreationClassName") : ToSubclass,CIM_Key : ToSubclass,MaxLen(256) : ToSubclass] string CSCreationClassName;
  [read : ToSubclass,Propagated("CIM_ComputerSystem.Name") : ToSubclass,MaxLen(256) : ToSubclass,CIM_Key : ToSubclass] string CSName;
  [read : ToSubclass,MaxLen(256) : ToSubclass,CIM_Key : ToSubclass] string CreationClassName;
  [read : ToSubclass,CIM_Key : ToSubclass,MappingStrings{"MIF.DMTF|Memory Mapped I/O|001.1"} : ToSubclass] uint64 StartingAddress;
  [read : ToSubclass,MappingStrings{"MIF.DMTF|Memory Mapped I/O|001.2"} : ToSubclass] uint64 EndingAddress;
};

[Abstract,Locale(1033) : ToInstance,UUID("{8502C523-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class CIM_DMA : CIM_SystemResource
{
  [read : ToSubclass,Propagated("CIM_ComputerSystem.CreationClassName") : ToSubclass,MaxLen(256) : ToSubclass,CIM_Key : ToSubclass] string CSCreationClassName;
  [read : ToSubclass,Propagated("CIM_ComputerSystem.Name") : ToSubclass,CIM_Key : ToSubclass,MaxLen(256) : ToSubclass] string CSName;
  [read : ToSubclass,MaxLen(256) : ToSubclass,CIM_Key : ToSubclass] string CreationClassName;
  [read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,MappingStrings{"MIF.DMTF|DMA|001.1"} : ToSubclass] uint32 DMAChannel;
  [read : ToSubclass,ValueMap{"1", "2", "3", "4", "5"} : ToSubclass,MappingStrings{"MIF.DMTF|DMA|001.2"} : ToSubclass] uint16 Availability;
  [read : ToSubclass,MappingStrings{"MIF.DMTF|DMA|001.3"} : ToSubclass] boolean BurstMode;
  [read : ToSubclass,MappingStrings{"MIF.DMTF|System Resource DMA Info|001.2"} : ToSubclass,ValueMap{"0", "8", "16", "32", "64", "128"} : ToSubclass] uint16 TransferWidths[];
  [read : ToSubclass,ValueMap{"0", "8", "16", "32", "64"} : ToSubclass,MappingStrings{"MIF.DMTF|System Resource DMA Info|001.3"} : ToSubclass] uint16 AddressSize;
  [read : ToSubclass,MappingStrings{"MIF.DMTF|System Resource DMA Info|001.4"} : ToSubclass] uint32 MaxTransferSize;
  [read : ToSubclass,ValueMap{"1", "2", "3", "4"} : ToSubclass,MappingStrings{"MIF.DMTF|System Resource DMA Info|001.7"} : ToSubclass] uint16 ByteMode;
  [read : ToSubclass,ValueMap{"1", "2", "3", "4"} : ToSubclass,MappingStrings{"MIF.DMTF|System Resource DMA Info|001.8"} : ToSubclass] uint16 WordMode;
  [read : ToSubclass,ValueMap{"1", "2", "3", "4", "5", "6"} : ToSubclass,MappingStrings{"MIF.DMTF|System Resource DMA Info|001.9"} : ToSubclass] uint16 ChannelTiming;
  [read : ToSubclass,ValueMap{"1", "2", "3", "4", "5"} : ToSubclass,MappingStrings{"MIF.DMTF|System Resource DMA Info|001.10"} : ToSubclass] uint16 TypeCTiming;
};

[Abstract,Locale(1033) : ToInstance,UUID("{8502C524-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class CIM_System : CIM_LogicalElement
{
  [CIM_Key : ToSubclass,Read : ToSubclass] string CreationClassName;
  [Override("Name"),Key : ToInstance ToSubclass DisableOverride,Read : ToSubclass] string Name;
  [Read : ToSubclass] string NameFormat;
  [Read : ToSubclass] string PrimaryOwnerContact;
  [MaxLen(64) : ToSubclass,Read : ToSubclass] string PrimaryOwnerName;
  [Read : ToSubclass,Write : ToSubclass] string Roles[];
};

[Abstract,Locale(1033) : ToInstance,UUID("{8502C525-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class CIM_ComputerSystem : CIM_System
{
  [Override("NameFormat"),ValueMap{"IP", "Dial", "HID", "NWA", "HWA", "X25", "ISDN", "IPX", "DCC", "ICD", "E.164", "SNA", "OID/OSI", "Other"} : ToSubclass,Read : ToSubclass] string NameFormat;
};

[Abstract,Locale(1033) : ToInstance,UUID("{8502C526-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class CIM_UnitaryComputerSystem : CIM_ComputerSystem
{
  [Read : ToSubclass] string InitialLoadInfo[];
  [Read : ToSubclass] string LastLoadInfo;
  [Read : ToSubclass] boolean PowerManagementSupported;
  [read : ToSubclass,MappingStrings{"MIF.DMTF|System Power Controls|001.2"} : ToSubclass] uint16 PowerManagementCapabilities[];
  [Read : ToSubclass] uint16 PowerState;
  [read : ToSubclass,ValueMap{"1", "2", "3", "4", "5"} : ToSubclass,MappingStrings{"MIF.DMTF|System Hardware Security|001.4"} : ToSubclass] uint16 ResetCapability;
  uint32 SetPowerState([IN,ValueMap{"1", "2", "3", "4", "5", "6", "7", "8"} : ToSubclass] uint16 PowerState,[IN] datetime Time);
};

[Abstract,Locale(1033) : ToInstance,UUID("{8502C527-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class CIM_Service : CIM_LogicalElement
{
  [CIM_Key : ToSubclass,Read : ToSubclass] string CreationClassName;
  [Override("Name"),Key : ToInstance ToSubclass DisableOverride,Read : ToSubclass] string Name;
  [ValueMap{"Automatic", "Manual"} : ToSubclass,Read : ToSubclass] string StartMode;
  [Read : ToSubclass] boolean Started;
  [Propagated("CIM_System.CreationClassName") : ToSubclass,CIM_Key : ToSubclass,Read : ToSubclass] string SystemCreationClassName;
  [Propagated("CIM_System.Name") : ToSubclass,CIM_Key : ToSubclass,Read : ToSubclass] string SystemName;
  uint32 StartService();
  uint32 StopService();
};

[Abstract,Locale(1033) : ToInstance,UUID("{debac832-6b54-4add-8a62-8d3861b97b1d}") : ToInstance] 
class CIM_ClusteringService : CIM_Service
{
  uint32 AddNode([IN] CIM_ComputerSystem Ref CS);
  uint32 EvictNode([IN] CIM_ComputerSystem Ref CS);
};

[Locale(1033) : ToInstance,UUID("{F126ACC2-E3D4-11d2-8601-0000F8102E5F}") : ToInstance,Abstract] 
class CIM_ServiceAccessPoint : CIM_LogicalElement
{
  [CIM_Key : ToSubclass,MaxLen(256) : ToSubclass,Read : ToSubclass] string CreationClassName;
  [Override("Name"),Key : ToInstance ToSubclass DisableOverride,MaxLen(256) : ToSubclass,Read : ToSubclass] string Name;
  [Propagated("CIM_System.CreationClassName") : ToSubclass,CIM_Key : ToSubclass,MaxLen(256) : ToSubclass,Read : ToSubclass] string SystemCreationClassName;
  [Propagated("CIM_System.Name") : ToSubclass,CIM_Key : ToSubclass,MaxLen(256) : ToSubclass,Read : ToSubclass] string SystemName;
  [Read : ToSubclass,Schema("Win32") : ToInstance ToSubclass] uint32 Type;
};

[Abstract,Locale(1033) : ToInstance,UUID("{2bb2b772-ffed-4aa6-b1b3-3d0cb74fc613}") : ToInstance] 
class CIM_ClusteringSAP : CIM_ServiceAccessPoint
{
};

[Abstract,Locale(1033) : ToInstance,UUID("{8502C529-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class CIM_LogicalDevice : CIM_LogicalElement
{
  [Read : ToSubclass,ValueMap{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21"} : ToSubclass,MappingStrings{"MIF.DMTF|Operational State|003.5", "MIB.IETF|HOST-RESOURCES-MIB.hrDeviceStatus"} : ToSubclass] uint16 Availability;
  [CIM_Key : ToSubclass,Read : ToSubclass] string CreationClassName;
  [Read : ToSubclass,Schema("Win32") : ToInstance,ValueMap{"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31"} : ToSubclass] uint32 ConfigManagerErrorCode;
  [read : ToSubclass,Schema("Win32") : ToInstance] boolean ConfigManagerUserConfig;
  [read : ToSubclass,CIM_Key : ToSubclass] string DeviceID;
  [read : ToSubclass] uint16 PowerManagementCapabilities[];
  [read : ToSubclass,Schema("Win32") : ToInstance] string PNPDeviceID;
  [read : ToSubclass] boolean PowerManagementSupported;
  [read : ToSubclass,ValueMap{"1", "2", "3", "4", "5"} : ToSubclass,MappingStrings{"MIF.DMTF|Operational State|003.3"} : ToSubclass] uint16 StatusInfo;
  [Propagated("CIM_System.CreationClassName") : ToSubclass,CIM_Key : ToSubclass,Read : ToSubclass] string SystemCreationClassName;
  [Propagated("CIM_System.Name") : ToSubclass,CIM_Key : ToSubclass,Read : ToSubclass] string SystemName;
  uint32 SetPowerState([IN,ValueMap{"1", "2", "3", "4", "5", "6"} : ToSubclass] uint16 PowerState,[IN] datetime Time);
  uint32 Reset();
  [Read : ToSubclass] uint32 LastErrorCode;
  [Read : ToSubclass] string ErrorDescription;
  [Read : ToSubclass] boolean ErrorCleared;
};

[Abstract,Locale(1033) : ToInstance,UUID("{8502C52A-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class CIM_MediaAccessDevice : CIM_LogicalDevice
{
  [read : ToSubclass,ArrayType("Indexed") : ToSubclass,MappingStrings{"MIF.DMTF|Storage Devices|001.9", "MIF.DMTF|Storage Devices|001.11", "MIF.DMTF|Storage Devices|001.12", "MIF.DMTF|Disks|003.7"} : ToSubclass,ModelCorrespondence{"CIM_MediaAccessDevice.CapabilityDescriptions"} : ToSubclass] uint16 Capabilities[];
  [read : ToSubclass,ArrayType("Indexed") : ToSubclass,ModelCorrespondence{"CIM_MediaAccessDevice.Capabilities"} : ToSubclass] string CapabilityDescriptions[];
  [read : ToSubclass] string CompressionMethod;
  [read : ToSubclass] string ErrorMethodology;
  [read : ToSubclass,MappingStrings{"MIF.DMTF|Sequential Access Devices|001.2"} : ToSubclass] uint64 MaxMediaSize;
  [read : ToSubclass] uint64 DefaultBlockSize;
  [read : ToSubclass] uint64 MaxBlockSize;
  [read : ToSubclass] uint64 MinBlockSize;
  [read : ToSubclass] uint32 NumberOfMediaSupported;
  [Read : ToSubclass] boolean NeedsCleaning;
};

[Abstract,Locale(1033) : ToInstance,UUID("{F27851CD-BBAC-11d2-85E5-0000F8102E5F}") : ToInstance] 
class CIM_DisketteDrive : CIM_MediaAccessDevice
{
};

[Abstract,Locale(1033) : ToInstance,UUID("{9565979A-7D80-11D2-AAD3-006008C78BC7}") : ToInstance] 
class CIM_CoolingDevice : CIM_LogicalDevice
{
  [read : ToSubclass] boolean ActiveCooling;
};

[Locale(1033) : ToInstance,UUID("{F3A5233A-E3D3-11d2-8601-0000F8102E5F}") : ToInstance,Abstract] 
class CIM_Refrigeration : CIM_CoolingDevice
{
};

[Locale(1033) : ToInstance,UUID("{FE5D55E0-E3D3-11d2-8601-0000F8102E5F}") : ToInstance,Abstract] 
class CIM_HeatPipe : CIM_CoolingDevice
{
};

[Locale(1033) : ToInstance,UUID("{0A59C856-E3D4-11d2-8601-0000F8102E5F}") : ToInstance,Abstract] 
class CIM_Fan : CIM_CoolingDevice
{
  [read : ToSubclass] boolean VariableSpeed;
  [read : ToSubclass] uint64 DesiredSpeed;
  uint32 SetSpeed([IN] uint64 DesiredSpeed);
};

[Abstract,Locale(1033) : ToInstance,UUID("{9565979B-7D80-11D2-AAD3-006008C78BC7}") : ToInstance] 
class CIM_Sensor : CIM_LogicalDevice
{
};

[Abstract,Locale(1033) : ToInstance,UUID("{9565979C-7D80-11D2-AAD3-006008C78BC7}") : ToInstance] 
class CIM_NumericSensor : CIM_Sensor
{
  [read : ToSubclass] sint32 CurrentReading;
  [read : ToSubclass] sint32 NominalReading;
  [read : ToSubclass] sint32 NormalMax;
  [read : ToSubclass] sint32 NormalMin;
  [read : ToSubclass] sint32 MaxReadable;
  [read : ToSubclass] sint32 MinReadable;
  [read : ToSubclass] uint32 Resolution;
  [read : ToSubclass] sint32 Tolerance;
  [read : ToSubclass] sint32 Accuracy;
  [read : ToSubclass] boolean IsLinear;
  [read : ToSubclass] sint32 LowerThresholdNonCritical;
  [read : ToSubclass] sint32 UpperThresholdNonCritical;
  [read : ToSubclass] sint32 LowerThresholdCritical;
  [read : ToSubclass] sint32 UpperThresholdCritical;
  [read : ToSubclass] sint32 LowerThresholdFatal;
  [read : ToSubclass] sint32 UpperThresholdFatal;
};

[Abstract,Locale(1033) : ToInstance,UUID("{9565979D-7D80-11D2-AAD3-006008C78BC7}") : ToInstance] 
class CIM_TemperatureSensor : CIM_NumericSensor
{
  [Override("CurrentReading"),MappingStrings{"MIF.DMTF|Temperature Probe|001.5"} : ToSubclass,read : ToSubclass] sint32 CurrentReading;
  [Override("NominalReading"),MappingStrings{"MIF.DMTF|Temperature Probe|001.6"} : ToSubclass,read : ToSubclass] sint32 NominalReading;
  [Override("NormalMax"),MappingStrings{"MIF.DMTF|Temperature Probe|001.7"} : ToSubclass,read : ToSubclass] sint32 NormalMax;
  [Override("NormalMin"),MappingStrings{"MIF.DMTF|Temperature Probe|001.8"} : ToSubclass,read : ToSubclass] sint32 NormalMin;
  [Override("MaxReadable"),MappingStrings{"MIF.DMTF|Temperature Probe|001.9"} : ToSubclass,read : ToSubclass] sint32 MaxReadable;
  [Override("MinReadable"),MappingStrings{"MIF.DMTF|Temperature Probe|001.10"} : ToSubclass,read : ToSubclass] sint32 MinReadable;
  [Override("Resolution"),MappingStrings{"MIF.DMTF|Temperature Probe|001.17"} : ToSubclass,read : ToSubclass] uint32 Resolution;
  [Override("Tolerance"),MappingStrings{"MIF.DMTF|Temperature Probe|001.18"} : ToSubclass,read : ToSubclass] sint32 Tolerance;
  [Override("Accuracy"),MappingStrings{"MIF.DMTF|Temperature Probe|001.19"} : ToSubclass,read : ToSubclass] sint32 Accuracy;
  [Override("LowerThresholdNonCritical"),MappingStrings{"MIF.DMTF|Temperature Probe|001.11"} : ToSubclass,read : ToSubclass] sint32 LowerThresholdNonCritical;
  [Override("UpperThresholdNonCritical"),MappingStrings{"MIF.DMTF|Temperature Probe|001.12"} : ToSubclass,read : ToSubclass] sint32 UpperThresholdNonCritical;
  [Override("LowerThresholdCritical"),MappingStrings{"MIF.DMTF|Temperature Probe|001.13"} : ToSubclass,read : ToSubclass] sint32 LowerThresholdCritical;
  [Override("UpperThresholdCritical"),MappingStrings{"MIF.DMTF|Temperature Probe|001.14"} : ToSubclass,read : ToSubclass] sint32 UpperThresholdCritical;
  [Override("LowerThresholdFatal"),MappingStrings{"MIF.DMTF|Temperature Probe|001.15"} : ToSubclass,read : ToSubclass] sint32 LowerThresholdFatal;
  [Override("UpperThresholdFatal"),MappingStrings{"MIF.DMTF|Temperature Probe|001.16"} : ToSubclass,read : ToSubclass] sint32 UpperThresholdFatal;
};

[Locale(1033) : ToInstance,UUID("{DCA1D084-E3D3-11d2-8601-0000F8102E5F}") : ToInstance,Abstract] 
class CIM_CurrentSensor : CIM_NumericSensor
{
  [Override("CurrentReading"),MappingStrings{"MIF.DMTF|Electrical Current Probe|001.5"} : ToSubclass,read : ToSubclass] sint32 CurrentReading;
  [Override("NominalReading"),MappingStrings{"MIF.DMTF|Electrical Current Probe|001.6"} : ToSubclass,read : ToSubclass] sint32 NominalReading;
  [Override("NormalMax"),MappingStrings{"MIF.DMTF|Electrical Current Probe|001.7"} : ToSubclass,read : ToSubclass] sint32 NormalMax;
  [Override("NormalMin"),MappingStrings{"MIF.DMTF|Electrical Current Probe|001.8"} : ToSubclass,read : ToSubclass] sint32 NormalMin;
  [Override("MaxReadable"),MappingStrings{"MIF.DMTF|Electrical Current Probe|001.9"} : ToSubclass,read : ToSubclass] sint32 MaxReadable;
  [Override("MinReadable"),MappingStrings{"MIF.DMTF|Electrical Current Probe|001.10"} : ToSubclass,read : ToSubclass] sint32 MinReadable;
  [Override("Resolution"),MappingStrings{"MIF.DMTF|Electrical Current Probe|001.17"} : ToSubclass,read : ToSubclass] uint32 Resolution;
  [Override("Tolerance"),MappingStrings{"MIF.DMTF|Electrical Current Probe|001.18"} : ToSubclass,read : ToSubclass] sint32 Tolerance;
  [Override("Accuracy"),MappingStrings{"MIF.DMTF|Electrical Current Probe|001.19"} : ToSubclass,read : ToSubclass] sint32 Accuracy;
  [Override("LowerThresholdNonCritical"),MappingStrings{"MIF.DMTF|Electrical Current Probe|001.11"} : ToSubclass,read : ToSubclass] sint32 LowerThresholdNonCritical;
  [Override("UpperThresholdNonCritical"),MappingStrings{"MIF.DMTF|Electrical Current Probe|001.12"} : ToSubclass,read : ToSubclass] sint32 UpperThresholdNonCritical;
  [Override("LowerThresholdCritical"),MappingStrings{"MIF.DMTF|Electrical Current Probe|001.13"} : ToSubclass,read : ToSubclass] sint32 LowerThresholdCritical;
  [Override("UpperThresholdCritical"),MappingStrings{"MIF.DMTF|Electrical Current Probe|001.14"} : ToSubclass,read : ToSubclass] sint32 UpperThresholdCritical;
  [Override("LowerThresholdFatal"),MappingStrings{"MIF.DMTF|Electrical Current Probe|001.15"} : ToSubclass,read : ToSubclass] sint32 LowerThresholdFatal;
  [Override("UpperThresholdFatal"),MappingStrings{"MIF.DMTF|Electrical Current Probe|001.16"} : ToSubclass,read : ToSubclass] sint32 UpperThresholdFatal;
};

[Locale(1033) : ToInstance,UUID("{A998F9B4-E3D4-11d2-8601-0000F8102E5F}") : ToInstance,Abstract] 
class CIM_VoltageSensor : CIM_NumericSensor
{
  [Override("CurrentReading"),MappingStrings{"MIF.DMTF|Voltage Probe|001.5"} : ToSubclass,read : ToSubclass] sint32 CurrentReading;
  [Override("NominalReading"),MappingStrings{"MIF.DMTF|Voltage Probe|001.6"} : ToSubclass,read : ToSubclass] sint32 NominalReading;
  [Override("NormalMax"),MappingStrings{"MIF.DMTF|Voltage Probe|001.7"} : ToSubclass,read : ToSubclass] sint32 NormalMax;
  [Override("NormalMin"),MappingStrings{"MIF.DMTF|Voltage Probe|001.8"} : ToSubclass,read : ToSubclass] sint32 NormalMin;
  [Override("MaxReadable"),MappingStrings{"MIF.DMTF|Voltage Probe|001.9"} : ToSubclass,read : ToSubclass] sint32 MaxReadable;
  [Override("MinReadable"),MappingStrings{"MIF.DMTF|Voltage Probe|001.10"} : ToSubclass,read : ToSubclass] sint32 MinReadable;
  [Override("Resolution"),MappingStrings{"MIF.DMTF|Voltage Probe|001.17"} : ToSubclass,read : ToSubclass] uint32 Resolution;
  [Override("Tolerance"),MappingStrings{"MIF.DMTF|Voltage Probe|001.18"} : ToSubclass,read : ToSubclass] sint32 Tolerance;
  [Override("Accuracy"),MappingStrings{"MIF.DMTF|Voltage Probe|001.19"} : ToSubclass,read : ToSubclass] sint32 Accuracy;
  [Override("LowerThresholdNonCritical"),MappingStrings{"MIF.DMTF|Voltage Probe|001.11"} : ToSubclass,read : ToSubclass] sint32 LowerThresholdNonCritical;
  [Override("UpperThresholdNonCritical"),MappingStrings{"MIF.DMTF|Voltage Probe|001.12"} : ToSubclass,read : ToSubclass] sint32 UpperThresholdNonCritical;
  [Override("LowerThresholdCritical"),MappingStrings{"MIF.DMTF|Voltage Probe|001.13"} : ToSubclass,read : ToSubclass] sint32 LowerThresholdCritical;
  [Override("UpperThresholdCritical"),MappingStrings{"MIF.DMTF|Voltage Probe|001.14"} : ToSubclass,read : ToSubclass] sint32 UpperThresholdCritical;
  [Override("LowerThresholdFatal"),MappingStrings{"MIF.DMTF|Voltage Probe|001.15"} : ToSubclass,read : ToSubclass] sint32 LowerThresholdFatal;
  [Override("UpperThresholdFatal"),MappingStrings{"MIF.DMTF|Voltage Probe|001.16"} : ToSubclass,read : ToSubclass] sint32 UpperThresholdFatal;
};

[Abstract,Locale(1033) : ToInstance,UUID("{8502C52B-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class CIM_CDROMDrive : CIM_MediaAccessDevice
{
};

[Abstract,Locale(1033) : ToInstance,UUID("{8502C52C-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class CIM_DiskDrive : CIM_MediaAccessDevice
{
};

[Abstract,Locale(1033) : ToInstance,UUID("{8502C52D-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class CIM_TapeDrive : CIM_MediaAccessDevice
{
  [read : ToSubclass] uint32 EOTWarningZoneSize;
  [read : ToSubclass] uint32 MaxPartitionCount;
  [read : ToSubclass] uint32 Padding;
};

[Abstract,Locale(1033) : ToInstance,UUID("{8502C531-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class CIM_Controller : CIM_LogicalDevice
{
  [MappingStrings{"MIF.DMTF|Bus Port|001.9"} : ToSubclass,Read : ToSubclass] uint32 MaxNumberControlled;
  [read : ToSubclass,ValueMap{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47"} : ToSubclass,MappingStrings{"MIF.DMTF|Bus Port|001.2", "MIF.DMTF|Disks|003.3"} : ToSubclass] uint16 ProtocolSupported;
  [Read : ToSubclass] datetime TimeOfLastReset;
};

[Abstract,Locale(1033) : ToInstance,UUID("{1008CCE5-7BFF-11D2-AAD2-006008C78BC7}") : ToInstance] 
class CIM_VideoController : CIM_Controller
{
  [Read : ToSubclass] string VideoProcessor;
  [Read : ToSubclass,ValueMap{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13"} : ToSubclass,MappingStrings{"MIF.DMTF|Video|003.6"} : ToSubclass] uint16 VideoMemoryType;
  [Read : ToSubclass] uint32 NumberOfVideoPages;
  [Read : ToSubclass] uint32 MaxMemorySupported;
  [Read : ToSubclass,ModelCorrespondence{"CIM_VideoController.CapabilityDescriptions"} : ToSubclass] uint16 AcceleratorCapabilities[];
  [Read : ToSubclass,ArrayType("Indexed") : ToSubclass,ModelCorrespondence{"CIM_VideoController.AcceleratorCapabilities"} : ToSubclass] string CapabilityDescriptions[];
  [Read : ToSubclass,MappingStrings{"MIF.DMTF|Video|003.12"} : ToSubclass] uint32 CurrentBitsPerPixel;
  [Read : ToSubclass,MappingStrings{"MIF.DMTF|Video|003.11"} : ToSubclass] uint32 CurrentHorizontalResolution;
  [Read : ToSubclass,MappingStrings{"MIF.DMTF|Video|003.10"} : ToSubclass] uint32 CurrentVerticalResolution;
  [Read : ToSubclass,MappingStrings{"MIF.DMTF|Video|003.5"} : ToSubclass] uint32 MaxRefreshRate;
  [Read : ToSubclass,MappingStrings{"MIF.DMTF|Video|003.4"} : ToSubclass] uint32 MinRefreshRate;
  [Read : ToSubclass,MappingStrings{"MIF.DMTF|Video|003.15"} : ToSubclass] uint32 CurrentRefreshRate;
  [Read : ToSubclass,ValueMap{"1", "2", "3", "4"} : ToSubclass,MappingStrings{"MIF.DMTF|Video|003.8"} : ToSubclass] uint16 CurrentScanMode;
  [Read : ToSubclass] uint64 CurrentNumberOfColors;
  [Read : ToSubclass,MappingStrings{"MIF.DMTF|Video|003.13"} : ToSubclass] uint32 CurrentNumberOfRows;
  [Read : ToSubclass,MappingStrings{"MIF.DMTF|Video|003.14"} : ToSubclass] uint32 CurrentNumberOfColumns;
};

[Abstract,Locale(1033) : ToInstance,UUID("{1008CCE6-7BFF-11D2-AAD2-006008C78BC7}") : ToInstance] 
class CIM_PCVideoController : CIM_VideoController
{
  [Read : ToSubclass,ValueMap{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "160"} : ToSubclass,MappingStrings{"MIF.DMTF|Video|003.2"} : ToSubclass] uint16 VideoArchitecture;
  [Read : ToSubclass,MappingStrings{"MIF.DMTF|Video|003.3"} : ToSubclass] uint16 VideoMode;
  [Read : ToSubclass] uint16 NumberOfColorPlanes;
};

[Abstract,Locale(1033) : ToInstance,UUID("{FAF76B5A-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class CIM_PCMCIAController : cim_controller
{
  [read : ToSubclass,Schema("Win32") : ToInstance] string Manufacturer;
};

[Abstract,Locale(1033) : ToInstance,UUID("{FAF76B5B-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class CIM_USBController : CIM_Controller
{
  [read : ToSubclass,Schema("Win32") : ToInstance] string Manufacturer;
};

[Abstract,Locale(1033) : ToInstance,UUID("{8502C532-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class CIM_NetworkAdapter : CIM_LogicalDevice
{
  [read : ToSubclass,MaxLen(64) : ToSubclass,MappingStrings{"MIF.DMTF|Network Adapter 802 Port|001.2"} : ToSubclass] string PermanentAddress;
  [read : ToSubclass,MaxLen(64) : ToSubclass,MappingStrings{"MIF.DMTF|Network Adapter 802 Port|001.3"} : ToSubclass] string NetworkAddresses[];
  [read : ToSubclass,MappingStrings{"MIB.IETF|RFC1213-MIB.ifSpeed", "MIF.DMTF|Network Adapter 802 Port|001.5"} : ToSubclass] uint64 Speed;
  [read : ToSubclass] uint64 MaxSpeed;
  [Read : ToSubclass] boolean AutoSense;
};

[Abstract,Locale(1033) : ToInstance,UUID("{8502C533-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class CIM_UserDevice : CIM_LogicalDevice
{
  [read : ToSubclass] boolean IsLocked;
};

[Abstract,Locale(1033) : ToInstance,UUID("{1008CCE7-7BFF-11D2-AAD2-006008C78BC7}") : ToInstance] 
class CIM_Display : CIM_UserDevice
{
};

[Abstract,Locale(1033) : ToInstance,UUID("{1008CCE8-7BFF-11D2-AAD2-006008C78BC7}") : ToInstance] 
class CIM_DesktopMonitor : CIM_Display
{
  [Read : ToSubclass] uint16 DisplayType;
  [Read : ToSubclass] uint32 Bandwidth;
  [Read : ToSubclass] uint32 ScreenHeight;
  [Read : ToSubclass] uint32 ScreenWidth;
};

[Abstract,Locale(1033) : ToInstance,UUID("{1008CCE9-7BFF-11D2-AAD2-006008C78BC7}") : ToInstance] 
class CIM_FlatPanel : CIM_Display
{
  [Read : ToSubclass] uint32 HorizontalResolution;
  [Read : ToSubclass] uint32 VerticalResolution;
  [Read : ToSubclass] uint16 ScanMode;
  [Read : ToSubclass] uint16 DisplayType;
  [Read : ToSubclass] uint16 LightSource;
  [Read : ToSubclass] boolean SupportsColor;
};

[Abstract,Locale(1033) : ToInstance,UUID("{8502C534-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class CIM_Keyboard : CIM_UserDevice
{
  [Read : ToSubclass] string Layout;
  [Read : ToSubclass] uint16 NumberOfFunctionKeys;
  [read : ToSubclass,ValueMap{"1", "2", "3", "4", "5"} : ToSubclass,MappingStrings{"MIF.DMTF|System Hardware Security|001.2"} : ToSubclass] uint16 Password;
};

[Abstract,Locale(1033) : ToInstance,UUID("{8502C535-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class CIM_PointingDevice : CIM_UserDevice
{
  [read : ToSubclass] uint16 Handedness;
  [read : ToSubclass] uint8 NumberOfButtons;
  [read : ToSubclass,ValueMap{"1", "2", "3", "4", "5", "6", "7", "8", "9"} : ToSubclass,MappingStrings{"MIF.DMTF|Pointing Device|001.1"} : ToSubclass] uint16 PointingType;
  [read : ToSubclass] uint32 Resolution;
};

[Abstract,Locale(1033) : ToInstance,UUID("{8502C538-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class CIM_StorageExtent : CIM_LogicalDevice
{
  [read : ToSubclass] uint16 Access;
  [read : ToSubclass,MappingStrings{"MIB.IETF|HOST-RESOURCES-MIB.hrStorageAllocationUnits"} : ToSubclass] uint64 BlockSize;
  [Read : ToSubclass] string ErrorMethodology;
  [MappingStrings{"MIB.IETF|HOST-RESOURCES-MIB.hrStorageSize"} : ToSubclass] uint64 NumberOfBlocks;
  [Read : ToSubclass] string Purpose;
};

[Abstract,Locale(1033) : ToInstance,UUID("{9565979E-7D80-11D2-AAD3-006008C78BC7}") : ToInstance] 
class CIM_PhysicalExtent : CIM_StorageExtent
{
  [read : ToSubclass,Override("BlockSize"),MappingStrings{"MIF.DMTF|Physical Extent|001.4"} : ToSubclass] uint64 BlockSize;
  [read : ToSubclass,Override("NumberOfBlocks"),MappingStrings{"MIF.DMTF|Physical Extent|001.3"} : ToSubclass] uint64 NumberOfBlocks;
  [read : ToSubclass,MappingStrings{"MIF.DMTF|Physical Extent|001.6"} : ToSubclass] uint64 UnitsBeforeCheckDataInterleave;
  [read : ToSubclass,MappingStrings{"MIF.DMTF|Physical Extent|001.7"} : ToSubclass] uint64 UnitsOfCheckData;
  [read : ToSubclass,MappingStrings{"MIF.DMTF|Physical Extent|001.8"} : ToSubclass] uint64 UnitsOfUserData;
};

[Abstract,Locale(1033) : ToInstance,UUID("{9565979F-7D80-11D2-AAD3-006008C78BC7}") : ToInstance] 
class CIM_AggregatePExtent : CIM_StorageExtent
{
  [read : ToSubclass,Override("NumberOfBlocks"),MappingStrings{"MIF.DMTF|Aggregate Physical Extent|001.2"} : ToSubclass] uint64 NumberOfBlocks;
};

[Abstract,Locale(1033) : ToInstance,UUID("{8502C539-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class CIM_LogicalDisk : CIM_StorageExtent
{
  [read : ToSubclass] uint64 FreeSpace;
  [read : ToSubclass] uint64 Size;
};

[Association : ToInstance ToSubclass DisableOverride,Abstract,Locale(1033) : ToInstance,UUID("{8502C53A-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class CIM_Dependency
{
  [Read : ToSubclass] CIM_ManagedSystemElement Ref Antecedent;
  [Read : ToSubclass] CIM_ManagedSystemElement Ref Dependent;
};

[Abstract,Locale(1033) : ToInstance,UUID("{8502C53B-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class CIM_ServiceServiceDependency : CIM_Dependency
{
  [read : ToSubclass,Override("Antecedent")] CIM_Service Ref Antecedent;
  [read : ToSubclass,Override("Dependent")] CIM_Service Ref Dependent;
  [read : ToSubclass] uint16 TypeOfDependency;
};

[Abstract,Locale(1033) : ToInstance,UUID("{8502C53C-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class CIM_DeviceConnection : CIM_Dependency
{
  [read : ToSubclass,Override("Antecedent")] CIM_LogicalDevice Ref Antecedent;
  [read : ToSubclass,Override("Dependent")] CIM_LogicalDevice Ref Dependent;
  [read : ToSubclass] uint64 NegotiatedSpeed;
  [read : ToSubclass] uint32 NegotiatedDataWidth;
};

[Abstract,Locale(1033) : ToInstance,UUID("{956597A0-7D80-11D2-AAD3-006008C78BC7}") : ToInstance] 
class CIM_AssociatedSensor : CIM_Dependency
{
  [read : ToSubclass,Override("Antecedent")] CIM_Sensor Ref Antecedent;
  [read : ToSubclass,Override("Dependent")] CIM_LogicalDevice Ref Dependent;
};

[Abstract,Locale(1033) : ToInstance,UUID("{8502C53D-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class CIM_ControlledBy : CIM_DeviceConnection
{
  [read : ToSubclass,Override("Antecedent")] CIM_Controller Ref Antecedent;
  [read : ToSubclass,Override("Dependent")] CIM_LogicalDevice Ref Dependent;
  [read : ToSubclass] uint16 AccessState;
  [read : ToSubclass] uint32 NumberOfHardResets;
  [read : ToSubclass] uint32 NumberOfSoftResets;
};

[Abstract,Locale(1033) : ToInstance,UUID("{8502C53E-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class CIM_BasedOn : CIM_Dependency
{
  [read : ToSubclass,Override("Antecedent")] CIM_StorageExtent Ref Antecedent;
  [read : ToSubclass,Override("Dependent")] CIM_StorageExtent Ref Dependent;
  [read : ToSubclass] uint64 StartingAddress;
  [read : ToSubclass] uint64 EndingAddress;
};

[Abstract,Locale(1033) : ToInstance,UUID("{8502C540-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class CIM_MediaPresent : CIM_Dependency
{
  [read : ToSubclass,Override("Antecedent")] CIM_MediaAccessDevice Ref Antecedent;
  [read : ToSubclass,Override("Dependent")] CIM_StorageExtent Ref Dependent;
};

[Abstract,Locale(1033) : ToInstance,UUID("{8502C541-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class CIM_DiskPartition : CIM_StorageExtent
{
  [Read : ToSubclass] boolean Bootable;
  [Read : ToSubclass] boolean PrimaryPartition;
};

[Abstract,Locale(1033) : ToInstance,UUID("{8502C53F-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class CIM_LogicalDiskBasedOnPartition : CIM_BasedOn
{
  [read : ToSubclass,Override("Antecedent"),Max(1) : ToSubclass] CIM_DiskPartition Ref Antecedent;
  [read : ToSubclass,Override("Dependent")] CIM_LogicalDisk Ref Dependent;
};

[Abstract,Locale(1033) : ToInstance,UUID("{8502C546-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class CIM_PotsModem : CIM_LogicalDevice
{
  [read : ToSubclass] uint16 AnswerMode;
  [read : ToSubclass] uint16 CompressionInfo;
  [Read : ToSubclass] string CountriesSupported[];
  [Read : ToSubclass] string CountrySelected;
  [Read : ToSubclass] string CurrentPasswords[];
  [read : ToSubclass] uint16 DialType;
  [read : ToSubclass] uint16 ErrorControlInfo;
  [read : ToSubclass] uint32 InactivityTimeout;
  [Read : ToSubclass] uint32 MaxBaudRateToPhone;
  [Read : ToSubclass] uint32 MaxBaudRateToSerialPort;
  [Read : ToSubclass] uint16 MaxNumberOfPasswords;
  [read : ToSubclass] uint16 ModulationScheme;
  [read : ToSubclass] uint8 RingsBeforeAnswer;
  [read : ToSubclass] uint16 SpeakerVolumeInfo;
  [Read : ToSubclass] boolean SupportsCallback;
  [Read : ToSubclass] boolean SupportsSynchronousConnect;
  [Read : ToSubclass] datetime TimeOfLastReset;
};

[Abstract,Locale(1033) : ToInstance,UUID("{8502C547-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class CIM_PowerSupply : CIM_LogicalDevice
{
  [read : ToSubclass,ValueMap{"1", "2", "3", "4", "5", "6"} : ToSubclass,MappingStrings{"MIF.DMTF|Power Supply|002.15"} : ToSubclass] uint16 ActiveInputVoltage;
  [read : ToSubclass] boolean IsSwitchingSupply;
  [Read : ToSubclass] uint32 Range1InputFrequencyHigh;
  [MappingStrings{"MIF.DMTF|Power Supply|002.17"} : ToSubclass,Read : ToSubclass] uint32 Range1InputFrequencyLow;
  [MappingStrings{"MIF.DMTF|Power Supply|002.8"} : ToSubclass,Read : ToSubclass] uint32 Range1InputVoltageHigh;
  [MappingStrings{"MIF.DMTF|Power Supply|002.7"} : ToSubclass,Read : ToSubclass] uint32 Range1InputVoltageLow;
  [MappingStrings{"MIF.DMTF|Power Supply|002.20"} : ToSubclass,Read : ToSubclass] uint32 Range2InputFrequencyHigh;
  [MappingStrings{"MIF.DMTF|Power Supply|002.19"} : ToSubclass,Read : ToSubclass] uint32 Range2InputFrequencyLow;
  [MappingStrings{"MIF.DMTF|Power Supply|002.12"} : ToSubclass,Read : ToSubclass] uint32 Range2InputVoltageHigh;
  [MappingStrings{"MIF.DMTF|Power Supply|002.11"} : ToSubclass,Read : ToSubclass] uint32 Range2InputVoltageLow;
  [MappingStrings{"MIF.DMTF|Power Supply|002.21"} : ToSubclass,Read : ToSubclass] uint32 TotalOutputPower;
  [read : ToSubclass,ValueMap{"1", "2", "3", "4", "5", "6"} : ToSubclass,MappingStrings{"MIF.DMTF|Power Supply|002.16"} : ToSubclass] uint16 TypeOfRangeSwitching;
};

[Abstract,Locale(1033) : ToInstance,UUID("{8502C548-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class CIM_Battery : CIM_LogicalDevice
{
  [read : ToSubclass,ValueMap{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11"} : ToSubclass,MappingStrings{"MIF.DMTF|Portable Battery|002.14"} : ToSubclass] uint16 BatteryStatus;
  [read : ToSubclass] uint32 TimeOnBattery;
  [read : ToSubclass,MappingStrings{"MIF.DMTF|Portable Battery|002.15"} : ToSubclass] uint32 EstimatedRunTime;
  [read : ToSubclass] uint16 EstimatedChargeRemaining;
  [read : ToSubclass,ValueMap{"1", "2", "3", "4", "5", "6", "7", "8"} : ToSubclass,MappingStrings{"MIF.DMTF|Portable Battery|002.7"} : ToSubclass] uint16 Chemistry;
  [read : ToSubclass,MappingStrings{"MIF.DMTF|Portable Battery|002.8"} : ToSubclass] uint32 DesignCapacity;
  [read : ToSubclass,MappingStrings{"MIF.DMTF|Portable Battery|002.11"} : ToSubclass] uint32 FullChargeCapacity;
  [read : ToSubclass,MappingStrings{"MIF.DMTF|Portable Battery|002.9"} : ToSubclass] uint64 DesignVoltage;
  [read : ToSubclass,MaxLen(64) : ToSubclass,MappingStrings{"MIF.DMTF|Portable Battery|002.10"} : ToSubclass] string SmartBatteryVersion;
  [read : ToSubclass,MappingStrings{"MIF.DMTF|Portable Battery|002.16"} : ToSubclass] uint32 TimeToFullCharge;
  [Read : ToSubclass] uint32 ExpectedLife;
  [Read : ToSubclass] uint32 MaxRechargeTime;
};

[Abstract,Locale(1033) : ToInstance,UUID("{8502C54A-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class CIM_Printer : CIM_LogicalDevice
{
  [read : ToSubclass,ValueMap{"1", "2", "3", "4", "5", "6", "7"} : ToSubclass,MappingStrings{"MIB.IETF|Printer-MIB.hrPrinterStatus"} : ToSubclass] uint16 PrinterStatus;
  [read : ToSubclass,ModelCorrespondence{"CIM_Printer.ErrorInformation"} : ToSubclass,MappingStrings{"MIB.IETF|Printer-MIB.hrPrinterDetectedErrorState"} : ToSubclass] uint16 DetectedErrorState;
  [read : ToSubclass,write : ToSubclass,ModelCorrespondence{"CIM_Printer.DetectedErrorState"} : ToSubclass] string ErrorInformation[];
  [read : ToSubclass] uint16 PaperSizesSupported[];
  [read : ToSubclass,ArrayType("Indexed") : ToSubclass,ModelCorrespondence{"CIM_PrintJob.RequiredPaperType", "CIM_PrintService.PaperTypesAvailable"} : ToSubclass,MappingStrings{"MIB.IETF|Printer-MIB.prtInputMediaName"} : ToSubclass] string PaperTypesAvailable[];
  [read : ToSubclass,ModelCorrespondence{"CIM_Printer.PaperTypesAvailable"} : ToSubclass] string DefaultPaperType;
  [read : ToSubclass,ModelCorrespondence{"CIM_Printer.PaperTypesAvailable"} : ToSubclass] string CurrentPaperType;
  [read : ToSubclass,ValueMap{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50"} : ToSubclass,MappingStrings{"MIB.IETF|Printer-MIB.prtInterpreterLangFamily"} : ToSubclass,ModelCorrespondence{"CIM_Printer.MimeTypesSupported", "CIM_PrintJob.Language", "CIM_PrintService.LanguagesSupported"} : ToSubclass] uint16 LanguagesSupported[];
  [read : ToSubclass,ModelCorrespondence{"CIM_Printer.LanguagesSupported", "CIM_PrintJob.MimeTypes", "CIM_PrintService.MimeTypesSupported"} : ToSubclass] string MimeTypesSupported[];
  [read : ToSubclass,ValueMap{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47"} : ToSubclass,ModelCorrespondence{"CIM_Printer.LanguagesSupported", "CIM_Printer.CurrentMimeType"} : ToSubclass] uint16 CurrentLanguage;
  [read : ToSubclass,ModelCorrespondence{"CIM_Printer.CurrentLanguage"} : ToSubclass] string CurrentMimeType;
  [read : ToSubclass,ValueMap{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47"} : ToSubclass,ModelCorrespondence{"CIM_Printer.LanguagesSupported", "CIM_Printer.DefaultMimeType"} : ToSubclass] uint16 DefaultLanguage;
  [read : ToSubclass,ModelCorrespondence{"CIM_Printer.DefaultLanguage"} : ToSubclass] string DefaultMimeType;
  [read : ToSubclass,Counter] uint32 JobCountSinceLastReset;
  [read : ToSubclass] datetime TimeOfLastReset;
  [read : ToSubclass,ArrayType("Indexed") : ToSubclass,ModelCorrespondence{"CIM_Printer.CapabilityDescriptions", "CIM_PrintJob.Finishing", "CIM_PrintService.Capabilities"} : ToSubclass] uint16 Capabilities[];
  [read : ToSubclass,ArrayType("Indexed") : ToSubclass,ModelCorrespondence{"CIM_Printer.Capabilities"} : ToSubclass] string CapabilityDescriptions[];
  [read : ToSubclass,ModelCorrespondence{"CIM_Printer.Capabilities"} : ToSubclass] uint16 DefaultCapabilities[];
  [read : ToSubclass,ModelCorrespondence{"CIM_Printer.Capabilities"} : ToSubclass] uint16 CurrentCapabilities[];
  [read : ToSubclass,ModelCorrespondence{"CIM_PrintJob.Copies"} : ToSubclass] uint32 MaxCopies;
  [read : ToSubclass] uint32 DefaultCopies;
  [read : ToSubclass,ModelCorrespondence{"CIM_PrintJob.NumberUp"} : ToSubclass] uint32 MaxNumberUp;
  [read : ToSubclass] uint32 DefaultNumberUp;
  [read : ToSubclass,ModelCorrespondence{"CIM_PrintJob.HorizontalResolution"} : ToSubclass] uint32 HorizontalResolution;
  [read : ToSubclass,ModelCorrespondence{"CIM_PrintJob.HorizontalResolution"} : ToSubclass] uint32 VerticalResolution;
  [read : ToSubclass,ArrayType("Indexed") : ToSubclass,ModelCorrespondence{"CIM_PrintJob.CharSet"} : ToSubclass,MappingStrings{"MIB.IETF|Printer-MIB.prtLocalizationCharacterSet"} : ToSubclass] string CharSetsSupported[];
  [read : ToSubclass,ModelCorrespondence{"CIM_Printer.CharSetsSupported"} : ToSubclass] string CurrentCharSet;
  [read : ToSubclass,ArrayType("Indexed") : ToSubclass,MappingStrings{"MIB.IETF|Printer-MIB.prtLocalizationLanguage"} : ToSubclass,ModelCorrespondence{"CIM_PrintJob.NaturalLanguage"} : ToSubclass] string NaturalLanguagesSupported[];
  [read : ToSubclass,ModelCorrespondence{"CIM_Printer.NaturalLanguagesSupported"} : ToSubclass] string CurrentNaturalLanguage;
  [read : ToSubclass,ModelCorrespondence{"CIM_PrintJob.JobSize"} : ToSubclass] uint32 MaxSizeSupported;
  [read : ToSubclass,ModelCorrespondence{"CIM_PrintJob.RequiredJobSheets"} : ToSubclass] string AvailableJobSheets[];
  [read : ToSubclass,ValueMap{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27"} : ToSubclass,MappingStrings{"MIB.IETF|Printer-MIB.prtMarkerMarkTech"} : ToSubclass] uint16 MarkingTechnology;
};

[Abstract,Locale(1033) : ToInstance,UUID("{8502C54B-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class CIM_Processor : CIM_LogicalDevice
{
  [Read : ToSubclass] uint16 AddressWidth;
  [MappingStrings{"MIF.DMTF|Processor|006.6"} : ToSubclass,Read : ToSubclass] uint32 CurrentClockSpeed;
  [Read : ToSubclass] uint16 DataWidth;
  [read : ToSubclass,ValueMap{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "48", "49", "50", "51", "52", "53", "54", "55", "64", "65", "66", "67", "68", "69", "80", "81", "82", "83", "84", "85", "86", "87", "88", "96", "97", "98", "99", "100", "101", "112", "120", "121", "122", "128", "130", "131", "132", "144", "145", "146", "147", "148", "149", "150", "160", "176", "177", "178", "179", "180", "181", "182", "183", "184", "185", "190", "200", "201", "202", "203", "204", "250", "251", "260", "261", "280", "281", "300", "301", "302", "320", "350", "500"} : ToSubclass,MappingStrings{"MIF.DMTF|Processor|014.3"} : ToSubclass,ModelCorrespondence{"CIM_Processor.OtherFamilyDescription"} : ToSubclass] uint16 Family;
  [Read : ToSubclass,MaxLen(64) : ToSubclass,ModelCorrespondence{"CIM_Processor.Family"} : ToSubclass] string OtherFamilyDescription;
  [Read : ToSubclass,MappingStrings{"MIB.IETF|HOST-RESOURCES-MIB.hrProcessorLoad"} : ToSubclass] uint16 LoadPercentage;
  [MappingStrings{"MIF.DMTF|Processor|006.5"} : ToSubclass,Read : ToSubclass] uint32 MaxClockSpeed;
  [Read : ToSubclass] string Role;
  [read : ToSubclass,ValueMap{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18"} : ToSubclass,MappingStrings{"MIF.DMTF|Processor|006.7"} : ToSubclass] uint16 UpgradeMethod;
  [ModelCorrespondence{"CIM_Processor.Family"} : ToSubclass,Read : ToSubclass] string Stepping;
  [Read : ToSubclass] string UniqueId;
};

[Abstract,Locale(1033) : ToInstance,UUID("{8502C54F-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class CIM_UninterruptiblePowerSupply : CIM_PowerSupply
{
  [read : ToSubclass,Override("Range1InputVoltageLow")] uint32 Range1InputVoltageLow;
  [read : ToSubclass,Override("Range1InputVoltageHigh")] uint32 Range1InputVoltageHigh;
  [read : ToSubclass,Override("Range2InputVoltageLow")] uint32 Range2InputVoltageLow;
  [read : ToSubclass,Override("Range2InputVoltageHigh")] uint32 Range2InputVoltageHigh;
  [read : ToSubclass,ValueMap{"1", "2", "3", "4"} : ToSubclass,MappingStrings{"MIF.DMTF|UPS Battery|001.1"} : ToSubclass] uint16 RemainingCapacityStatus;
  [read : ToSubclass,MappingStrings{"MIF.DMTF|UPS Battery|001.2"} : ToSubclass] uint32 TimeOnBackup;
  [read : ToSubclass,MappingStrings{"MIF.DMTF|UPS Battery|001.3"} : ToSubclass] uint32 EstimatedRunTime;
  [read : ToSubclass,MappingStrings{"MIF.DMTF|UPS Battery|001.4"} : ToSubclass] uint16 EstimatedChargeRemaining;
};

[Abstract,Locale(1033) : ToInstance,UUID("{8502C552-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class CIM_ParallelController : CIM_Controller
{
  [read : ToSubclass,ArrayType("Indexed") : ToSubclass,MappingStrings{"MIF.DMTF|Parallel Ports|003.8"} : ToSubclass,ModelCorrespondence{"CIM_ParallelController.CapabilityDescriptions"} : ToSubclass] uint16 Capabilities[];
  [read : ToSubclass,ArrayType("Indexed") : ToSubclass,ModelCorrespondence{"CIM_ParallelController.Capabilities"} : ToSubclass] string CapabilityDescriptions[];
  [read : ToSubclass,MappingStrings{"MIF.DMTF|Parallel Ports|003.7"} : ToSubclass] boolean DMASupport;
};

[Abstract,Locale(1033) : ToInstance,UUID("{8502C553-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class CIM_SCSIController : CIM_Controller
{
  [Read : ToSubclass] uint32 ControllerTimeouts;
  [read : ToSubclass] uint32 MaxDataWidth;
  [read : ToSubclass] uint64 MaxTransferRate;
  [read : ToSubclass,ValueMap{"1", "2", "3", "4", "5", "6"} : ToSubclass,MappingStrings{"MIF.DMTF|Storage Controller|001.3"} : ToSubclass] uint16 ProtectionManagement;
};

[Abstract,Locale(1033) : ToInstance,UUID("{8502C554-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class CIM_SerialController : CIM_Controller
{
  [read : ToSubclass,ArrayType("Indexed") : ToSubclass,ValueMap{"1", "2", "3", "4", "5", "6", "160", "161"} : ToSubclass,MappingStrings{"MIF.DMTF|Serial Ports|004.7"} : ToSubclass,ModelCorrespondence{"CIM_SerialController.CapabilityDescriptions"} : ToSubclass] uint16 Capabilities[];
  [read : ToSubclass,ArrayType("Indexed") : ToSubclass,ModelCorrespondence{"CIM_SerialController.Capabilities"} : ToSubclass] string CapabilityDescriptions[];
  [MappingStrings{"MIF.DMTF|Serial Ports|004.6"} : ToSubclass,read : ToSubclass] uint32 MaxBaudRate;
};

[SupportsDelete,DeleteBy("DeleteInstance"),Abstract,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C559-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class CIM_LogicalFile : CIM_LogicalElement
{
  [read : ToSubclass] uint64 InUseCount;
  [read : ToSubclass,Schema("Win32") : ToInstance] boolean Archive;
  [Propagated("CIM_FileSystem.CSCreationClassName") : ToSubclass,CIM_Key : ToSubclass,read : ToSubclass] string CSCreationClassName;
  [Propagated("CIM_FileSystem.CSName") : ToSubclass,CIM_Key : ToSubclass,Read : ToSubclass] string CSName;
  [Schema("Win32") : ToInstance,read : ToSubclass] boolean Compressed;
  [CIM_Key : ToSubclass,read : ToSubclass] string CreationClassName;
  [read : ToSubclass] datetime CreationDate;
  [Schema("Win32") : ToInstance,read : ToSubclass] boolean Encrypted;
  [Propagated("CIM_FileSystem.CreationClassName") : ToSubclass,CIM_Key : ToSubclass,read : ToSubclass] string FSCreationClassName;
  [Propagated("CIM_FileSystem.Name") : ToSubclass,CIM_Key : ToSubclass,read : ToSubclass] string FSName;
  [read : ToSubclass] datetime LastAccessed;
  [read : ToSubclass] datetime LastModified;
  [read : ToSubclass] boolean Readable;
  [read : ToSubclass] uint64 FileSize;
  [Read : ToSubclass] boolean Writeable;
  [read : ToSubclass,Schema("Win32") : ToInstance] boolean Hidden;
  [read : ToSubclass,Schema("Win32") : ToInstance] boolean System;
  [read : ToSubclass,Schema("Win32") : ToInstance] string FileType;
  [read : ToSubclass,Schema("Win32") : ToInstance] string EightDotThreeFileName;
  [read : ToSubclass] string CompressionMethod;
  [read : ToSubclass] string EncryptionMethod;
  [Override("Name"),Key : ToInstance ToSubclass DisableOverride,read : ToSubclass] string Name;
  [Fixed : ToSubclass,read : ToSubclass,Schema("Win32") : ToInstance] string Drive;
  [Fixed : ToSubclass,read : ToSubclass,Schema("Win32") : ToInstance] string Path;
  [Fixed : ToSubclass,read : ToSubclass,Schema("Win32") : ToInstance] string FileName;
  [Fixed : ToSubclass,read : ToSubclass,Schema("Win32") : ToInstance] string Extension;
  [read : ToSubclass,Schema("Win32") : ToInstance,BitMap{"0", "1", "2", "3", "4", "5", "6", "7", "8", "16", "17", "18", "19", "20"} : ToSubclass] uint32 AccessMask;
  [Implemented,ValueMap{"0", "2", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "21"} : ToSubclass,Schema("Win32") : ToInstance] uint32 TakeOwnerShip();
  [Implemented,ValueMap{"0", "2", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "21"} : ToSubclass,Schema("Win32") : ToInstance] uint32 ChangeSecurityPermissions([In] Win32_SecurityDescriptor SecurityDescriptor,[In,BitMap{"0", "1", "2", "3"} : ToSubclass] uint32 Option);
  [Implemented,ValueMap{"0", "2", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "21"} : ToSubclass,Schema("Win32") : ToInstance] uint32 Copy([In] string FileName);
  [Implemented,ValueMap{"0", "2", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "21"} : ToSubclass,Schema("Win32") : ToInstance] uint32 Rename([In] string FileName);
  [Destructor,Implemented,ValueMap{"0", "2", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "21"} : ToSubclass,Schema("Win32") : ToInstance] uint32 Delete();
  [Implemented,Schema("Win32") : ToInstance,ValueMap{"0", "2", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "21"} : ToSubclass] uint32 Compress();
  [Implemented,ValueMap{"0", "2", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "21"} : ToSubclass,Schema("Win32") : ToInstance] uint32 Uncompress();
  [Implemented,ValueMap{"0", "2", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "21"} : ToSubclass,Schema("Win32") : ToInstance] uint32 TakeOwnerShipEx([Out] string StopFileName,[In,optional] string StartFileName,[In,optional] boolean Recursive);
  [Implemented,ValueMap{"0", "2", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "21"} : ToSubclass,Schema("Win32") : ToInstance] uint32 ChangeSecurityPermissionsEx([in] Win32_SecurityDescriptor SecurityDescriptor,[In,BitMap{"0", "1", "2", "3"} : ToSubclass] uint32 Option,[Out] string StopFileName,[In,optional] string StartFileName,[In,optional] boolean Recursive);
  [Implemented,ValueMap{"0", "2", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "21"} : ToSubclass,Schema("Win32") : ToInstance] uint32 CopyEx([In] string FileName,[Out] string StopFileName,[In,optional] string StartFileName,[In,optional] boolean Recursive);
  [Implemented,ValueMap{"0", "2", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "21"} : ToSubclass,Schema("Win32") : ToInstance] uint32 DeleteEx([Out] string StopFileName,[In,optional] string StartFileName);
  [Implemented,ValueMap{"0", "2", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "21"} : ToSubclass,Schema("Win32") : ToInstance] uint32 CompressEx([Out] string StopFileName,[In,optional] string StartFileName,[In,optional] boolean Recursive);
  [Implemented,ValueMap{"0", "2", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "21"} : ToSubclass,Schema("Win32") : ToInstance] uint32 UncompressEx([Out] string StopFileName,[In,optional] string StartFileName,[In,optional] boolean Recursive);
  [Privileges{"SeSecurityPrivilege"} : ToSubclass,Implemented,Schema("Win32") : ToInstance] boolean GetEffectivePermission([In,BitMap{"0", "1", "2", "3", "4", "5", "6", "7", "8", "16", "17", "18", "19", "20"} : ToSubclass] uint32 Permissions);
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C55A-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class CIM_DataFile : CIM_LogicalFile
{
  [read : ToSubclass,Schema("Win32") : ToInstance] string Version;
  [read : ToSubclass,Schema("Win32") : ToInstance] string Manufacturer;
};

[Privileges{"SeDebugPrivilege"} : ToSubclass,Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C542-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class CIM_ProcessExecutable : CIM_Dependency
{
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride] CIM_DataFile Ref Antecedent;
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride] CIM_Process Ref Dependent;
  [read : ToSubclass,Schema("Win32") : ToInstance] uint32 GlobalProcessCount;
  [read : ToSubclass,Schema("Win32") : ToInstance] uint32 ProcessCount;
  [DEPRECATED : ToSubclass,read : ToSubclass,Schema("Win32") : ToInstance] uint32 ModuleInstance;
  [read : ToSubclass,Schema("Win32") : ToInstance] uint64 BaseAddress;
};

[Abstract,Locale(1033) : ToInstance,UUID("{8502C55F-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class CIM_Directory : CIM_LogicalFile
{
};

[abstract,Locale(1033) : ToInstance,UUID("{8502C561-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class CIM_SoftwareElement : CIM_LogicalElement
{
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,maxlen(256) : ToSubclass,override("Name")] string Name;
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Maxlen(64) : ToSubclass,Mappingstrings{"MIF.DMTF|ComponentID|001.3"} : ToSubclass] string Version;
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride] uint16 SoftwareElementState;
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,maxlen(256) : ToSubclass] string SoftwareElementID;
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Mappingstrings{"MIF.DMTF|Software Component Information|002.5"} : ToSubclass,ModelCorrespondence("CIM_OperatingSystem.OSType") : ToSubclass] uint16 TargetOperatingSystem;
  [read : ToSubclass,Maxlen(64) : ToSubclass,ModelCorrespondence("CIM_OperatingSystem.OtherTypeDescription") : ToSubclass] string OtherTargetOS;
  [read : ToSubclass,Maxlen(256) : ToSubclass,Mappingstrings{"MIF.DMTF|ComponentID|001.1"} : ToSubclass] string Manufacturer;
  [read : ToSubclass,Maxlen(64) : ToSubclass,Mappingstrings{"MIF.DMTF|Software Component Information|002.4"} : ToSubclass] string BuildNumber;
  [read : ToSubclass,Maxlen(64) : ToSubclass,Mappingstrings{"MIF.DMTF|ComponentID|001.4"} : ToSubclass] string SerialNumber;
  [read : ToSubclass,Maxlen(64) : ToSubclass] string CodeSet;
  [read : ToSubclass,Maxlen(64) : ToSubclass,Mappingstrings{"MIF.DMTF|Software Component Information|002.7"} : ToSubclass] string IdentificationCode;
  [read : ToSubclass,Maxlen(32) : ToSubclass,Mappingstrings{"MIF.DMTF|Software Component Information|002.6"} : ToSubclass] string LanguageEdition;
};

[abstract,Locale(1033) : ToInstance,UUID("{8502C562-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class CIM_BIOSElement : CIM_SoftwareElement
{
  [read : ToSubclass,Override("Version"),MappingStrings{"MIF.DMTF|System BIOS|001.3"} : ToSubclass] string Version;
  [read : ToSubclass,Override("Manufacturer"),MappingStrings{"MIF.DMTF|System BIOS|001.2"} : ToSubclass] string Manufacturer;
  [read : ToSubclass,MappingStrings{"MIF.DMTF|System BIOS|001.9"} : ToSubclass] boolean PrimaryBIOS;
};

[Abstract,Locale(1033) : ToInstance,UUID("{8502C564-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class CIM_Job : CIM_LogicalElement
{
  [read : ToSubclass] datetime ElapsedTime;
  [read : ToSubclass] string Notify;
  [read : ToSubclass] string Owner;
  [read : ToSubclass] uint32 Priority;
  [read : ToSubclass] datetime StartTime;
  [read : ToSubclass] string JobStatus;
  [read : ToSubclass] datetime TimeSubmitted;
  [read : ToSubclass] datetime UntilTime;
};

[Abstract,Locale(1033) : ToInstance,UUID("{8502C565-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class CIM_OperatingSystem : CIM_LogicalElement
{
  [Propagated("CIM_ComputerSystem.CreationClassName") : ToSubclass,CIM_Key : ToSubclass,read : ToSubclass,MaxLen(256) : ToSubclass] string CSCreationClassName;
  [Propagated("CIM_ComputerSystem.Name") : ToSubclass,CIM_Key : ToSubclass,read : ToSubclass,MaxLen(256) : ToSubclass] string CSName;
  [CIM_Key : ToSubclass,read : ToSubclass,MaxLen(256) : ToSubclass] string CreationClassName;
  [read : ToSubclass] boolean Distributed;
  [read : ToSubclass] uint64 FreePhysicalMemory;
  [read : ToSubclass] uint64 FreeVirtualMemory;
  [read : ToSubclass] uint64 MaxProcessMemorySize;
  [read : ToSubclass,ModelCorrespondence{"CIM_OperatingSystem.OtherTypeDescription"} : ToSubclass] uint16 OSType;
  [read : ToSubclass,MaxLen(64) : ToSubclass,ModelCorrespondence{"CIM_OperatingSystem.OSType"} : ToSubclass] string OtherTypeDescription;
  [read : ToSubclass,MappingStrings{"MIF.DMTF|Operating System|001.3"} : ToSubclass] string Version;
  [read : ToSubclass,MappingStrings{"MIB.IETF|HOST-RESOURCES-MIB.hrSystemDate", "MIF.DMTF|General Information|001.6"} : ToSubclass] datetime LocalDateTime;
  [read : ToSubclass] sint16 CurrentTimeZone;
  [read : ToSubclass,MappingStrings{"MIF.DMTF|System Memory Settings|001.3"} : ToSubclass] uint64 SizeStoredInPagingFiles;
  [read : ToSubclass,MappingStrings{"MIF.DMTF|System Memory Settings|001.4"} : ToSubclass] uint64 FreeSpaceInPagingFiles;
  [read : ToSubclass] datetime LastBootUpTime;
  [MappingStrings{"MIB.IETF|HOST-RESOURCES-MIB.hrSystemMaxProcesses"} : ToSubclass,read : ToSubclass] uint32 MaxNumberOfProcesses;
  [Override("Name"),read : ToSubclass] string Name;
  [read : ToSubclass] uint32 NumberOfLicensedUsers;
  [MappingStrings{"MIB.IETF|HOST-RESOURCES-MIB.hrSystemProcesses"} : ToSubclass,Read : ToSubclass] uint32 NumberOfProcesses;
  [MappingStrings{"MIB.IETF|HOST-RESOURCES-MIB.hrSystemNumUsers"} : ToSubclass,read : ToSubclass] uint32 NumberOfUsers;
  [read : ToSubclass] uint64 TotalSwapSpaceSize;
  [read : ToSubclass] uint64 TotalVirtualMemorySize;
  [read : ToSubclass] uint64 TotalVisibleMemorySize;
  uint32 Reboot();
  uint32 Shutdown();
};

[Abstract,Locale(1033) : ToInstance,UUID("{8502C566-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class CIM_Process : CIM_LogicalElement
{
  [Propagated("CIM_OperatingSystem.CSCreationClassName") : ToSubclass,CIM_Key : ToSubclass,Read : ToSubclass,MaxLen(256) : ToSubclass] string CSCreationClassName;
  [Propagated("CIM_OperatingSystem.CSName") : ToSubclass,CIM_Key : ToSubclass,read : ToSubclass,MaxLen(256) : ToSubclass] string CSName;
  [CIM_Key : ToSubclass,Read : ToSubclass,MaxLen(256) : ToSubclass] string CreationClassName;
  [Fixed : ToSubclass,read : ToSubclass] datetime CreationDate;
  [Key : ToInstance ToSubclass DisableOverride,Read : ToSubclass,MaxLen(256) : ToSubclass] string Handle;
  [read : ToSubclass] uint64 KernelModeTime;
  [Propagated("CIM_OperatingSystem.CreationClassName") : ToSubclass,CIM_Key : ToSubclass,read : ToSubclass,MaxLen(256) : ToSubclass] string OSCreationClassName;
  [Propagated("CIM_OperatingSystem.Name") : ToSubclass,CIM_Key : ToSubclass,read : ToSubclass,MaxLen(256) : ToSubclass] string OSName;
  [read : ToSubclass] uint32 Priority;
  [read : ToSubclass] uint16 ExecutionState;
  [Read : ToSubclass] datetime TerminationDate;
  [read : ToSubclass] uint64 UserModeTime;
  [read : ToSubclass] uint64 WorkingSetSize;
};

[Abstract,Locale(1033) : ToInstance,UUID("{8502C571-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class CIM_Thread : CIM_LogicalElement
{
  [read : ToSubclass,Propagated("CIM_Process.CSCreationClassName") : ToSubclass,Cim_Key : ToSubclass,MaxLen(256) : ToSubclass] string CSCreationClassName;
  [read : ToSubclass,Propagated("CIM_Process.CSName") : ToSubclass,Cim_Key : ToSubclass,MaxLen(256) : ToSubclass] string CSName;
  [read : ToSubclass,Propagated("CIM_Process.OSCreationClassName") : ToSubclass,Cim_Key : ToSubclass,MaxLen(256) : ToSubclass] string OSCreationClassName;
  [read : ToSubclass,Propagated("CIM_Process.OSName") : ToSubclass,Cim_Key : ToSubclass,MaxLen(256) : ToSubclass] string OSName;
  [read : ToSubclass,Propagated("CIM_Process.CreationClassName") : ToSubclass,Cim_Key : ToSubclass,MaxLen(256) : ToSubclass] string ProcessCreationClassName;
  [read : ToSubclass,Propagated("CIM_Process.Handle") : ToSubclass,Key : ToInstance ToSubclass DisableOverride,MaxLen(256) : ToSubclass] string ProcessHandle;
  [read : ToSubclass,Cim_Key : ToSubclass,MaxLen(256) : ToSubclass] string CreationClassName;
  [read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,MaxLen(256) : ToSubclass] string Handle;
  [read : ToSubclass] uint32 Priority;
  [read : ToSubclass] uint16 ExecutionState;
  [read : ToSubclass] uint64 UserModeTime;
  [read : ToSubclass] uint64 KernelModeTime;
};

[Abstract,Locale(1033) : ToInstance,UUID("{8502C572-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class CIM_Setting
{
  [read : ToSubclass,MaxLen(256) : ToSubclass] string SettingID;
  [read : ToSubclass,MaxLen(64) : ToSubclass] string Caption;
  [read : ToSubclass] string Description;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{1008CCEA-7BFF-11D2-AAD2-006008C78BC7}") : ToInstance] 
class CIM_VideoControllerResolution : CIM_Setting
{
  [Read : ToSubclass,Override("SettingID"),Key : ToInstance ToSubclass DisableOverride,MaxLen(256) : ToSubclass] string SettingID;
  [Read : ToSubclass,ModelCorrespondence{"CIM_VideoController.CurrentHorizontalResolution"} : ToSubclass,MappingStrings{"MIF.DMTF|Monitor Resolutions|002.2"} : ToSubclass] uint32 HorizontalResolution;
  [Read : ToSubclass,ModelCorrespondence{"CIM_VideoController.CurrentVerticalResolution"} : ToSubclass,MappingStrings{"MIF.DMTF|Monitor Resolutions|002.3"} : ToSubclass] uint32 VerticalResolution;
  [Read : ToSubclass,ModelCorrespondence{"CIM_VideoController.CurrentRefreshRate"} : ToSubclass,MappingStrings{"MIF.DMTF|Monitor Resolutions|002.4"} : ToSubclass] uint32 RefreshRate;
  [Read : ToSubclass,ModelCorrespondence{"CIM_VideoController.MinRefreshRate"} : ToSubclass,MappingStrings{"MIF.DMTF|Monitor Resolutions|002.6"} : ToSubclass] uint32 MinRefreshRate;
  [Read : ToSubclass,ModelCorrespondence{"CIM_VideoController.MaxRefreshRate"} : ToSubclass,MappingStrings{"MIF.DMTF|Monitor Resolutions|002.7"} : ToSubclass] uint32 MaxRefreshRate;
  [Read : ToSubclass,ValueMap{"1", "2", "3", "4", "5"} : ToSubclass,ModelCorrespondence{"CIM_VideoController.CurrentScanMode"} : ToSubclass,MappingStrings{"MIF.DMTF|Monitor Resolutions|002.5"} : ToSubclass] uint16 ScanMode;
  [Read : ToSubclass,ModelCorrespondence{"CIM_VideoController.CurrentNumberOfColors"} : ToSubclass] uint64 NumberOfColors;
};

[Association : ToInstance ToSubclass DisableOverride,Abstract,Aggregation : ToSubclass,Locale(1033) : ToInstance,UUID("{8502C573-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class CIM_Component
{
  [Read : ToSubclass,Aggregate : ToSubclass] CIM_ManagedSystemElement Ref GroupComponent;
  [read : ToSubclass] CIM_ManagedSystemElement Ref PartComponent;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{6F9D4740-8324-11d2-AAD9-006008C78BC7}") : ToInstance] 
class CIM_DirectoryContainsFile : CIM_Component
{
  [read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("GroupComponent"),Max(1) : ToSubclass] CIM_Directory Ref GroupComponent;
  [read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("PartComponent")] CIM_DataFile Ref PartComponent;
};

[Abstract,Locale(1033) : ToInstance,UUID("{527BC6CE-BAFE-11d2-85E5-0000F8102E5F}") : ToInstance] 
class CIM_SystemComponent : CIM_Component
{
  [Override("GroupComponent"),read : ToSubclass] CIM_System Ref GroupComponent;
  [Override("PartComponent"),read : ToSubclass] CIM_ManagedSystemElement Ref PartComponent;
};

[Abstract,Locale(1033) : ToInstance,UUID("{4B2C30D7-BAFE-11d2-85E5-0000F8102E5F}") : ToInstance] 
class CIM_SystemDevice : CIM_SystemComponent
{
  [read : ToSubclass,Override("GroupComponent"),Max(1) : ToSubclass,Min(1) : ToSubclass] CIM_System Ref GroupComponent;
  [read : ToSubclass,Override("PartComponent"),Weak : ToSubclass] CIM_LogicalDevice Ref PartComponent;
};

[Abstract,Locale(1033) : ToInstance,UUID("{8502C575-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class CIM_InstalledOS : CIM_SystemComponent
{
  [read : ToSubclass,Override("GroupComponent"),Min(1) : ToSubclass,Max(1) : ToSubclass] CIM_ComputerSystem Ref GroupComponent;
  [read : ToSubclass,Override("PartComponent"),Weak : ToSubclass] CIM_OperatingSystem Ref PartComponent;
  [read : ToSubclass,MappingStrings{"MIF.DMTF|Operating System|001.4"} : ToSubclass] boolean PrimaryOS;
};

[Abstract,Association : ToInstance ToSubclass DisableOverride,Locale(1033) : ToInstance,UUID("{8502C577-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class CIM_ElementSetting
{
  [read : ToSubclass] CIM_ManagedSystemElement Ref Element;
  [read : ToSubclass] CIM_Setting Ref Setting;
};

[Abstract,Locale(1033) : ToInstance,UUID("{1008CCEB-7BFF-11D2-AAD2-006008C78BC7}") : ToInstance] 
class CIM_VideoSetting : CIM_ElementSetting
{
  [Read : ToSubclass,Override("Element")] CIM_VideoController Ref Element;
  [Read : ToSubclass,Override("Setting")] CIM_VideoControllerResolution Ref Setting;
};

[Abstract,Locale(1033) : ToInstance,UUID("{1008CCEC-7BFF-11D2-AAD2-006008C78BC7}") : ToInstance] 
class CIM_MonitorResolution : CIM_Setting
{
  [Read : ToSubclass,Override("SettingID"),Key : ToInstance ToSubclass DisableOverride,MaxLen(256) : ToSubclass] string SettingID;
  [Read : ToSubclass,ModelCorrespondence{"CIM_VideoController.CurrentHorizontalResolution"} : ToSubclass,MappingStrings{"MIF.DMTF|Monitor Resolutions|002.2"} : ToSubclass] uint32 HorizontalResolution;
  [Read : ToSubclass,ModelCorrespondence{"CIM_VideoController.CurrentVerticalResolution"} : ToSubclass,MappingStrings{"MIF.DMTF|Monitor Resolutions|002.3"} : ToSubclass] uint32 VerticalResolution;
  [Read : ToSubclass,ModelCorrespondence{"CIM_VideoController.CurrentRefreshRate"} : ToSubclass,MappingStrings{"MIF.DMTF|Monitor Resolutions|002.4"} : ToSubclass] uint32 RefreshRate;
  [Read : ToSubclass,ModelCorrespondence{"CIM_VideoController.MinRefreshRate"} : ToSubclass,MappingStrings{"MIF.DMTF|Monitor Resolutions|002.6"} : ToSubclass] uint32 MinRefreshRate;
  [Read : ToSubclass,ModelCorrespondence{"CIM_VideoController.MaxRefreshRate"} : ToSubclass,MappingStrings{"MIF.DMTF|Monitor Resolutions|002.7"} : ToSubclass] uint32 MaxRefreshRate;
  [Read : ToSubclass,ValueMap{"1", "2", "3", "4", "5"} : ToSubclass,ModelCorrespondence{"CIM_VideoController.CurrentScanMode"} : ToSubclass,MappingStrings{"MIF.DMTF|Monitor Resolutions|002.5"} : ToSubclass] uint16 ScanMode;
};

[Abstract,Locale(1033) : ToInstance,UUID("{1008CCED-7BFF-11D2-AAD2-006008C78BC7}") : ToInstance] 
class CIM_MonitorSetting : CIM_ElementSetting
{
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("Element")] CIM_DesktopMonitor Ref Element;
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("Setting")] CIM_MonitorResolution Ref Setting;
};

[Abstract,Locale(1033) : ToInstance,UUID("{8502C578-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class CIM_AssociatedBattery : CIM_Dependency
{
  [read : ToSubclass,Override("Antecedent")] CIM_Battery Ref Antecedent;
  [read : ToSubclass,Override("Dependent")] CIM_LogicalDevice Ref Dependent;
};

[Abstract,Locale(1033) : ToInstance,UUID("{8502C579-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class CIM_AllocatedResource : CIM_Dependency
{
  [read : ToSubclass,Override("Antecedent")] CIM_SystemResource Ref Antecedent;
  [read : ToSubclass,Override("Dependent")] CIM_LogicalDevice Ref Dependent;
};

[Abstract,Locale(1033) : ToInstance,UUID("{956597A1-7D80-11D2-AAD3-006008C78BC7}") : ToInstance] 
class CIM_StatisticalInformation
{
  [read : ToSubclass,MaxLen(256) : ToSubclass] string Name;
  [read : ToSubclass] string Description;
  [read : ToSubclass,MaxLen(64) : ToSubclass] string Caption;
};

[Abstract,Association : ToInstance ToSubclass DisableOverride,Locale(1033) : ToInstance,UUID("{956597A3-7D80-11D2-AAD3-006008C78BC7}") : ToInstance] 
class CIM_Statistics
{
  [read : ToSubclass] CIM_StatisticalInformation Ref Stats;
  [read : ToSubclass] CIM_ManagedSystemElement Ref Element;
};

[Abstract,Locale(1033) : ToInstance,UUID("{117FDB8C-D025-11d2-85F5-0000F8102E5F}") : ToInstance] 
class CIM_DeviceErrorCounts : CIM_StatisticalInformation
{
  [Read : ToSubclass,Propagated("CIM_LogicalDevice.SystemCreationClassName") : ToSubclass,CIM_Key : ToSubclass,MaxLen(256) : ToSubclass] string SystemCreationClassName;
  [Read : ToSubclass,Propagated("CIM_LogicalDevice.SystemName") : ToSubclass,CIM_Key : ToSubclass,MaxLen(256) : ToSubclass] string SystemName;
  [Read : ToSubclass,Propagated("CIM_LogicalDevice.CreationClassName") : ToSubclass,Key : ToInstance ToSubclass DisableOverride,MaxLen(256) : ToSubclass] string DeviceCreationClassName;
  [Read : ToSubclass,Propagated("CIM_LogicalDevice.DeviceID") : ToSubclass,Key : ToInstance ToSubclass DisableOverride,MaxLen(64) : ToSubclass] string DeviceID;
  [Read : ToSubclass,Override("Name"),Key : ToInstance ToSubclass DisableOverride,MaxLen(256) : ToSubclass] string Name;
  [Read : ToSubclass] uint64 IndeterminateErrorCount;
  [Read : ToSubclass,MappingStrings{"MIF.DMTF|Operational State|003.7"} : ToSubclass] uint64 CriticalErrorCount;
  [Read : ToSubclass,MappingStrings{"MIF.DMTF|Operational State|003.8"} : ToSubclass] uint64 MajorErrorCount;
  [Read : ToSubclass] uint64 MinorErrorCount;
  [Read : ToSubclass,MappingStrings{"MIF.DMTF|Operational State|003.9"} : ToSubclass] uint64 WarningCount;
  uint32 ResetCounter([IN] uint16 SelectedCounter);
};

[Abstract,Locale(1033) : ToInstance,UUID("{2D79F3A0-D025-11d2-85F5-0000F8102E5F}") : ToInstance] 
class CIM_ErrorCountersForDevice : CIM_Statistics
{
  [Read : ToSubclass,Override("Stats"),Weak : ToSubclass] CIM_DeviceErrorCounts Ref Stats;
  [Read : ToSubclass,Override("Element"),Min(1) : ToSubclass,Max(1) : ToSubclass] CIM_LogicalDevice Ref Element;
};

[Abstract,Association : ToInstance ToSubclass DisableOverride,Locale(1033) : ToInstance,UUID("{956597A4-7D80-11D2-AAD3-006008C78BC7}") : ToInstance] 
class CIM_RelatedStatistics
{
  [read : ToSubclass] CIM_StatisticalInformation Ref Stats;
  [read : ToSubclass] CIM_StatisticalInformation Ref RelatedStats;
};

[Abstract,Locale(1033) : ToInstance,UUID("{FAF76B61-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class CIM_PhysicalElement : CIM_ManagedSystemElement
{
  [CIM_Key : ToSubclass,read : ToSubclass,MaxLen(256) : ToSubclass] string CreationClassName;
  [read : ToSubclass,MaxLen(256) : ToSubclass] string Manufacturer;
  [read : ToSubclass,MaxLen(64) : ToSubclass] string Model;
  [read : ToSubclass,MaxLen(64) : ToSubclass] string SKU;
  [read : ToSubclass,MaxLen(64) : ToSubclass] string SerialNumber;
  [CIM_Key : ToSubclass,read : ToSubclass,MaxLen(256) : ToSubclass] string Tag;
  [read : ToSubclass,MaxLen(64) : ToSubclass] string Version;
  [read : ToSubclass,MaxLen(256) : ToSubclass] string PartNumber;
  [read : ToSubclass] string OtherIdentifyingInfo;
  [read : ToSubclass] boolean PoweredOn;
};

[Abstract,Locale(1033) : ToInstance,UUID("{FAF76B62-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class CIM_Realizes : CIM_Dependency
{
  [Override("Antecedent"),read : ToSubclass] CIM_PhysicalElement Ref Antecedent;
  [Override("Dependent"),read : ToSubclass] CIM_LogicalDevice Ref Dependent;
};

[abstract,Locale(1033) : ToInstance,UUID("{FAF76B63-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class CIM_Product
{
  [read : ToSubclass,MaxLen(64) : ToSubclass] string Caption;
  [read : ToSubclass] string Description;
  [Key : ToInstance ToSubclass DisableOverride,read : ToSubclass,MaxLen(64) : ToSubclass,MappingStrings{"MIF.DMTF|ComponentID|001.4"} : ToSubclass] string IdentifyingNumber;
  [Key : ToInstance ToSubclass DisableOverride,read : ToSubclass,MaxLen(256) : ToSubclass,MappingStrings{"MIF.DMTF|ComponentID|001.2"} : ToSubclass] string Name;
  [read : ToSubclass,MaxLen(64) : ToSubclass] string SKUNumber;
  [CIM_Key : ToSubclass,read : ToSubclass,MaxLen(256) : ToSubclass,MappingStrings{"MIF.DMTF|ComponentID|001.1"} : ToSubclass] string Vendor;
  [Key : ToInstance ToSubclass DisableOverride,read : ToSubclass,MaxLen(64) : ToSubclass,MappingStrings{"MIF.DMTF|ComponentID|001.3"} : ToSubclass] string Version;
};

[Abstract,Locale(1033) : ToInstance,UUID("{FAF76B64-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class CIM_Memory : CIM_StorageExtent
{
  [Override("ErrorMethodology"),MappingStrings{"MIF.DMTF|Physical Memory Array|001.7"} : ToSubclass,read : ToSubclass] string ErrorMethodology;
  [MappingStrings{"MIF.DMTF|Memory Array Mapped Addresses|001.3", "MIF.DMTF|Memory Device Mapped Addresses|001.4"} : ToSubclass,read : ToSubclass] uint64 StartingAddress;
  [MappingStrings{"MIF.DMTF|Memory Array Mapped Addresses|001.4", "MIF.DMTF|Memory Device Mapped Addresses|001.5"} : ToSubclass,read : ToSubclass] uint64 EndingAddress;
  [ValueMap{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14"} : ToSubclass,MappingStrings{"MIF.DMTF|Memory Device|002.12", "MIF.DMTF|Physical Memory Array|001.8"} : ToSubclass,ModelCorrespondence{"CIM_Memory.OtherErrorDescription"} : ToSubclass,read : ToSubclass] uint16 ErrorInfo;
  [ModelCorrespondence{"CIM_Memory.ErrorInfo"} : ToSubclass,read : ToSubclass] string OtherErrorDescription;
  [MappingStrings{"MIF.DMTF|Memory Device|002.12", "MIF.DMTF|Physical Memory Array|001.8"} : ToSubclass,read : ToSubclass] boolean CorrectableError;
  [read : ToSubclass] datetime ErrorTime;
  [ValueMap{"1", "2", "3", "4", "5"} : ToSubclass,MappingStrings{"MIF.DMTF|Memory Device|002.15", "MIF.DMTF|Physical Memory Array|001.10"} : ToSubclass,read : ToSubclass] uint16 ErrorAccess;
  [MappingStrings{"MIF.DMTF|Memory Device|002.16", "MIF.DMTF|Physical Memory Array|001.11"} : ToSubclass,read : ToSubclass] uint32 ErrorTransferSize;
  [ArrayType("Indexed") : ToSubclass,MappingStrings{"MIF.DMTF|Memory Device|002.17", "MIF.DMTF|Physical Memory Array|001.12"} : ToSubclass,read : ToSubclass,MAX(64)] uint8 ErrorData[];
  [read : ToSubclass] uint16 ErrorDataOrder;
  [MappingStrings{"MIF.DMTF|Memory Device|002.19", "MIF.DMTF|Memory Device|002.20", "MIF.DMTF|Physical Memory Array|001.14"} : ToSubclass,read : ToSubclass] uint64 ErrorAddress;
  [read : ToSubclass] boolean SystemLevelAddress;
  [MappingStrings{"MIF.DMTF|Memory Device|002.21", "MIF.DMTF|Physical Memory Array|001.15"} : ToSubclass,read : ToSubclass] uint64 ErrorResolution;
  [MappingStrings{"MIF.DMTF|Memory Device|002.18", "MIF.DMTF|Physical Memory Array|001.13"} : ToSubclass,read : ToSubclass,MAX(64)] uint8 AdditionalErrorData[];
};

[Abstract,Locale(1033) : ToInstance,UUID("{18074AFA-F0FE-11d2-8617-0000F8102E5F}") : ToInstance] 
class CIM_NonVolatileStorage : CIM_Memory
{
  [read : ToSubclass] boolean IsWriteable;
};

[Abstract,Locale(1033) : ToInstance,UUID("{36851DFE-F0FE-11d2-8617-0000F8102E5F}") : ToInstance] 
class CIM_VolatileStorage : CIM_Memory
{
  [read : ToSubclass,MappingStrings{"MIF.DMTF|System Resource Memory Info|001.5"} : ToSubclass] boolean Cacheable;
  [read : ToSubclass,MappingStrings{"MIF.DMTF|System Resource Memory Info|001.6"} : ToSubclass] uint16 CacheType;
};

[abstract,Locale(1033) : ToInstance,UUID("{464FFAB0-946F-11d2-AAE2-006008C78BC7}") : ToInstance] 
class CIM_AssociatedMemory : CIM_Dependency
{
  [Override("Antecedent"),read : ToSubclass] CIM_Memory Ref Antecedent;
  [Override("Dependent"),read : ToSubclass] CIM_LogicalDevice Ref Dependent;
};

[abstract,Locale(1033) : ToInstance,UUID("{464FFAB1-946F-11d2-AAE2-006008C78BC7}") : ToInstance] 
class CIM_AssociatedProcessorMemory : CIM_AssociatedMemory
{
  [Override("Dependent"),read : ToSubclass] CIM_Processor Ref Dependent;
  [read : ToSubclass] uint32 BusSpeed;
};

[abstract,Locale(1033) : ToInstance,UUID("{FAF76B65-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class CIM_CacheMemory : CIM_Memory
{
  [ValueMap{"1", "2", "3", "4", "5", "6"} : ToSubclass,MappingStrings{"MIF.DMTF|System Cache|003.2"} : ToSubclass,read : ToSubclass] uint16 Level;
  [ValueMap{"1", "2", "3", "4", "5", "6"} : ToSubclass,MappingStrings{"MIF.DMTF|System Cache|003.5"} : ToSubclass,read : ToSubclass] uint16 WritePolicy;
  [ValueMap{"1", "2", "3", "4", "5"} : ToSubclass,MappingStrings{"MIF.DMTF|System Cache|003.9"} : ToSubclass,read : ToSubclass] uint16 CacheType;
  [MappingStrings{"MIF.DMTF|System Cache|003.10"} : ToSubclass,read : ToSubclass] uint32 LineSize;
  [ValueMap{"1", "2", "3", "4", "5", "6", "7", "8"} : ToSubclass,MappingStrings{"MIF.DMTF|System Cache|003.12"} : ToSubclass,read : ToSubclass] uint16 ReplacementPolicy;
  [ValueMap{"1", "2", "3", "4", "5", "6"} : ToSubclass,MappingStrings{"MIF.DMTF|System Cache|003.13"} : ToSubclass,read : ToSubclass] uint16 ReadPolicy;
  [MappingStrings{"MIF.DMTF|System Cache|003.14"} : ToSubclass,read : ToSubclass] uint32 FlushTimer;
  [ValueMap{"1", "2", "3", "4", "5", "6", "7", "8"} : ToSubclass,MappingStrings{"MIF.DMTF|System Cache|003.15"} : ToSubclass,read : ToSubclass] uint16 Associativity;
};

[Abstract,Locale(1033) : ToInstance,UUID("{FAF76B66-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class CIM_AlarmDevice : CIM_LogicalDevice
{
  [read : ToSubclass] boolean AudibleAlarm;
  [read : ToSubclass] boolean VisibleAlarm;
  [read : ToSubclass] uint16 Urgency;
  uint32 SetUrgency([IN] uint16 RequestedUrgency);
};

[Abstract,Locale(1033) : ToInstance,UUID("{FAF76B67-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class CIM_Location
{
  [Key : ToInstance ToSubclass DisableOverride,read : ToSubclass,MaxLen(256) : ToSubclass] string Name;
  [Key : ToInstance ToSubclass DisableOverride,read : ToSubclass,MaxLen(256) : ToSubclass] string PhysicalPosition;
  [read : ToSubclass,MaxLen(1024) : ToSubclass] string Address;
};

[Abstract,Association : ToInstance ToSubclass DisableOverride,Locale(1033) : ToInstance,UUID("{FAF76B68-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class CIM_PhysicalElementLocation
{
  [read : ToSubclass] CIM_PhysicalElement Ref Element;
  [Max(1) : ToSubclass,read : ToSubclass] CIM_Location Ref PhysicalLocation;
};

[Abstract,Locale(1033) : ToInstance,UUID("{FAF76B69-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class CIM_PhysicalCapacity
{
  [read : ToSubclass,MaxLen(256) : ToSubclass] string Name;
  [read : ToSubclass,MaxLen(64) : ToSubclass] string Caption;
  [read : ToSubclass] string Description;
};

[Abstract,Association : ToInstance ToSubclass DisableOverride,Locale(1033) : ToInstance,UUID("{FAF76B6A-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class CIM_ElementCapacity
{
  [read : ToSubclass] CIM_PhysicalCapacity Ref Capacity;
  [Min(1) : ToSubclass,read : ToSubclass] CIM_PhysicalElement Ref Element;
};

[Abstract,Locale(1033) : ToInstance,UUID("{FAF76B6B-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class CIM_MemoryCapacity : CIM_PhysicalCapacity
{
  [Override("Name"),Key : ToInstance ToSubclass DisableOverride,read : ToSubclass] string Name;
  [Key : ToInstance ToSubclass DisableOverride,read : ToSubclass,ModelCorrespondence{"CIM_PhysicalMemory.MemoryType"} : ToSubclass] uint16 MemoryType;
  [read : ToSubclass] uint64 MinimumMemoryCapacity;
  [read : ToSubclass] uint64 MaximumMemoryCapacity;
};

[Abstract,Locale(1033) : ToInstance,UUID("{FAF76B6C-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class CIM_ReplacementSet
{
  [Key : ToInstance ToSubclass DisableOverride,read : ToSubclass,MaxLen(256) : ToSubclass] string Name;
  [read : ToSubclass] string Description;
};

[Abstract,Association : ToInstance ToSubclass DisableOverride,Aggregation : ToSubclass,Locale(1033) : ToInstance,UUID("{FAF76B6D-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class CIM_ParticipatesInSet
{
  [Aggregate : ToSubclass,read : ToSubclass] CIM_ReplacementSet Ref Set;
  [read : ToSubclass] CIM_PhysicalElement Ref Element;
};

[abstract,Locale(1033) : ToInstance,UUID("{FAF76B6E-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class CIM_PhysicalPackage : CIM_PhysicalElement
{
  [read : ToSubclass] boolean Removable;
  [read : ToSubclass] boolean Replaceable;
  [read : ToSubclass] boolean HotSwappable;
  [read : ToSubclass] real32 Height;
  [read : ToSubclass] real32 Depth;
  [read : ToSubclass] real32 Width;
  [read : ToSubclass] real32 Weight;
  uint32 IsCompatible([IN] CIM_PhysicalElement Ref ElementToCheck);
};

[Abstract,Locale(1033) : ToInstance,UUID("{FAF76B6F-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class CIM_Container : CIM_Component
{
  [Override("GroupComponent"),read : ToSubclass,Max(1) : ToSubclass] CIM_PhysicalPackage Ref GroupComponent;
  [Override("PartComponent"),read : ToSubclass] CIM_PhysicalElement Ref PartComponent;
  [read : ToSubclass] string LocationWithinContainer;
};

[abstract,Locale(1033) : ToInstance,UUID("{FAF76B70-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class CIM_PhysicalFrame : CIM_PhysicalPackage
{
  [read : ToSubclass] string CableManagementStrategy;
  [ArrayType("Indexed") : ToSubclass,ModelCorrespondence{"CIM_PhysicalFrame.ServiceDescriptions"} : ToSubclass,read : ToSubclass] uint16 ServicePhilosophy[];
  [ArrayType("Indexed") : ToSubclass,ModelCorrespondence{"CIM_PhysicalFrame.ServicePhilosophy"} : ToSubclass,read : ToSubclass] string ServiceDescriptions[];
  [read : ToSubclass] boolean LockPresent;
  [read : ToSubclass] boolean AudibleAlarm;
  [read : ToSubclass] boolean VisibleAlarm;
  [ValueMap{"1", "2", "3", "4", "5"} : ToSubclass,MappingStrings{"MIF.DMTF|Physical Container Global Table|002.12"} : ToSubclass,ModelCorrespondence{"CIM_PhysicalFrame.BreachDescription"} : ToSubclass,read : ToSubclass] uint16 SecurityBreach;
  [ModelCorrespondence{"CIM_PhysicalFrame.SecurityBreach"} : ToSubclass,read : ToSubclass] string BreachDescription;
};

[Abstract,Locale(1033) : ToInstance,UUID("{FAF76B71-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class CIM_Rack : CIM_PhysicalFrame
{
  [Override("Height"),read : ToSubclass] real32 Height;
  [ModelCorrespondence{"CIM_Rack.CountryDesignation"} : ToSubclass,read : ToSubclass] uint16 TypeOfRack;
  [ModelCorrespondence{"CIM_Rack.TypeOfRack"} : ToSubclass,read : ToSubclass] string CountryDesignation;
};

[abstract,Locale(1033) : ToInstance,UUID("{FAF76B72-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class CIM_Chassis : CIM_PhysicalFrame
{
  [read : ToSubclass] uint16 NumberOfPowerCords;
  [read : ToSubclass] sint16 CurrentRequiredOrProduced;
  [read : ToSubclass] uint16 HeatGeneration;
  [ArrayType("Indexed") : ToSubclass,ValueMap{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24"} : ToSubclass,MappingStrings{"MIF.DMTF|Physical Container Global Table|002.1"} : ToSubclass,ModelCorrespondence{"CIM_Chassis.TypeDescriptions"} : ToSubclass,read : ToSubclass] uint16 ChassisTypes[];
  [ArrayType("Indexed") : ToSubclass,ModelCorrespondence{"CIM_Chassis.ChassisTypes"} : ToSubclass,read : ToSubclass] string TypeDescriptions[];
};

[Abstract,Locale(1033) : ToInstance,UUID("{FAF76B73-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class CIM_ChassisInRack : CIM_Container
{
  [Override("GroupComponent"),read : ToSubclass,Max(1) : ToSubclass] CIM_Rack Ref GroupComponent;
  [Override("PartComponent"),read : ToSubclass] CIM_Chassis Ref PartComponent;
  [read : ToSubclass] uint16 BottomU;
};

[Abstract,Locale(1033) : ToInstance,UUID("{FAF76B74-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class CIM_PackageInChassis : CIM_Container
{
  [Override("GroupComponent"),Max(1) : ToSubclass,read : ToSubclass] CIM_Chassis Ref GroupComponent;
  [Override("PartComponent"),read : ToSubclass] CIM_PhysicalPackage Ref PartComponent;
};

[Abstract,MappingStrings{"MIF.DMTF|Dynamic States|001.2"} : ToSubclass,Locale(1033) : ToInstance,UUID("{FAF76B75-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class CIM_Docked : CIM_Dependency
{
  [Override("Antecedent"),read : ToSubclass,Max(1) : ToSubclass] CIM_Chassis Ref Antecedent;
  [Override("Dependent"),read : ToSubclass,Max(1) : ToSubclass] CIM_Chassis Ref Dependent;
};

[abstract,Locale(1033) : ToInstance,UUID("{FAF76B76-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class CIM_Card : CIM_PhysicalPackage
{
  [read : ToSubclass] boolean HostingBoard;
  [read : ToSubclass] string SlotLayout;
  [read : ToSubclass] boolean RequiresDaughterBoard;
  [ModelCorrespondence{"CIM_Card.RequirementsDescription"} : ToSubclass,read : ToSubclass] boolean SpecialRequirements;
  [ModelCorrespondence{"CIM_Card.SpecialRequirements"} : ToSubclass,read : ToSubclass] string RequirementsDescription;
};

[Abstract,Locale(1033) : ToInstance,UUID("{FAF76B77-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class CIM_CardOnCard : CIM_Container
{
  [Override("GroupComponent"),read : ToSubclass,Max(1) : ToSubclass] CIM_Card Ref GroupComponent;
  [Override("PartComponent"),read : ToSubclass] CIM_Card Ref PartComponent;
  [read : ToSubclass] string MountOrSlotDescription;
};

[abstract,Locale(1033) : ToInstance,UUID("{FAF76B78-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class CIM_PhysicalComponent : CIM_PhysicalElement
{
  [read : ToSubclass] boolean Removable;
  [read : ToSubclass] boolean Replaceable;
  [read : ToSubclass] boolean HotSwappable;
};

[Abstract,Locale(1033) : ToInstance,UUID("{FAF76B79-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class CIM_PackagedComponent : CIM_Container
{
  [Override("GroupComponent"),read : ToSubclass,Max(1) : ToSubclass] CIM_PhysicalPackage Ref GroupComponent;
  [Override("PartComponent"),read : ToSubclass] CIM_PhysicalComponent Ref PartComponent;
};

[abstract,Locale(1033) : ToInstance,UUID("{FAF76B7A-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class CIM_Chip : CIM_PhysicalComponent
{
  [read : ToSubclass] uint16 FormFactor;
};

[abstract,Locale(1033) : ToInstance,UUID("{FAF76B7B-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class CIM_PhysicalMemory : CIM_Chip
{
  [read : ToSubclass,Override("FormFactor"),MappingStrings{"MIF.DMTF|Memory Device|002.6"} : ToSubclass] uint16 FormFactor;
  [MappingStrings{"MIF.DMTF|Memory Device|002.9"} : ToSubclass,read : ToSubclass] uint16 MemoryType;
  [MappingStrings{"MIF.DMTF|Memory Device|002.7"} : ToSubclass,read : ToSubclass] uint16 TotalWidth;
  [MappingStrings{"MIF.DMTF|Memory Device|002.8"} : ToSubclass,read : ToSubclass] uint16 DataWidth;
  [read : ToSubclass] uint32 Speed;
  [MappingStrings{"MIF.DMTF|Memory Device|002.5"} : ToSubclass,read : ToSubclass] uint64 Capacity;
  [MaxLen(64) : ToSubclass,MappingStrings{"MIF.DMTF|Memory Device|002.4"} : ToSubclass,read : ToSubclass] string BankLabel;
  [MappingStrings{"MIF.DMTF|Memory Device Mapped Addresses|001.6"} : ToSubclass,read : ToSubclass] uint32 PositionInRow;
  [MappingStrings{"MIF.DMTF|Memory Device Mapped Addresses|001.7"} : ToSubclass,read : ToSubclass] uint32 InterleavePosition;
};

[Abstract,Locale(1033) : ToInstance,UUID("{FAF76B7C-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class CIM_MemoryOnCard : CIM_PackagedComponent
{
  [Override("GroupComponent"),read : ToSubclass,Max(1) : ToSubclass] CIM_Card Ref GroupComponent;
  [Override("PartComponent"),read : ToSubclass] CIM_PhysicalMemory Ref PartComponent;
};

[Abstract,Locale(1033) : ToInstance,UUID("{FAF76B7D-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class CIM_PhysicalMedia : CIM_PhysicalComponent
{
  [read : ToSubclass] uint64 Capacity;
  [ModelCorrespondence{"CIM_PhysicalMedia.MediaDescription"} : ToSubclass,read : ToSubclass] uint16 MediaType;
  [ModelCorrespondence{"CIM_PhysicalMedia.MediaType"} : ToSubclass,read : ToSubclass] string MediaDescription;
  [read : ToSubclass] boolean WriteProtectOn;
  [read : ToSubclass] boolean CleanerMedia;
};

[Abstract,Locale(1033) : ToInstance,UUID("{FAF76B7E-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class CIM_MemoryWithMedia : CIM_Dependency
{
  [Override("Antecedent"),read : ToSubclass] CIM_PhysicalMemory Ref Antecedent;
  [Override("Dependent"),read : ToSubclass] CIM_PhysicalMedia Ref Dependent;
};

[Abstract,Locale(1033) : ToInstance,UUID("{FAF76B7F-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class CIM_RealizesPExtent : CIM_Realizes
{
  [Override("Antecedent"),read : ToSubclass,Max(1) : ToSubclass] CIM_PhysicalMedia Ref Antecedent;
  [Override("Dependent"),read : ToSubclass] CIM_PhysicalExtent Ref Dependent;
  [read : ToSubclass] uint64 StartingAddress;
};

[Abstract,Locale(1033) : ToInstance,UUID("{FAF76B80-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class CIM_RealizesDiskPartition : CIM_Realizes
{
  [Override("Antecedent"),read : ToSubclass,Max(1) : ToSubclass] CIM_PhysicalMedia Ref Antecedent;
  [Override("Dependent"),read : ToSubclass] CIM_DiskPartition Ref Dependent;
  [read : ToSubclass] uint64 StartingAddress;
};

[Abstract,Locale(1033) : ToInstance,UUID("{FAF76B81-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class CIM_RealizesAggregatePExtent : CIM_Realizes
{
  [Override("Antecedent"),read : ToSubclass,Max(1) : ToSubclass] CIM_PhysicalMedia Ref Antecedent;
  [Override("Dependent"),read : ToSubclass] CIM_AggregatePExtent Ref Dependent;
};

[Abstract,Locale(1033) : ToInstance,UUID("{FAF76B82-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class CIM_PhysicalLink : CIM_PhysicalElement
{
  [read : ToSubclass] real64 MaxLength;
  [read : ToSubclass] real64 Length;
  [read : ToSubclass] boolean Wired;
  [read : ToSubclass] uint16 MediaType;
};

[Abstract,Locale(1033) : ToInstance,UUID("{FAF76B83-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class CIM_ElementsLinked : CIM_Dependency
{
  [Override("Antecedent"),read : ToSubclass] CIM_PhysicalLink Ref Antecedent;
  [Override("Dependent"),read : ToSubclass] CIM_PhysicalElement Ref Dependent;
};

[abstract,Locale(1033) : ToInstance,UUID("{FAF76B84-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class CIM_PhysicalConnector : CIM_PhysicalElement
{
  [read : ToSubclass] string ConnectorPinout;
  [read : ToSubclass] uint16 ConnectorType[];
};

[Abstract,Locale(1033) : ToInstance,UUID("{FAF76B85-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class CIM_ConnectedTo : CIM_Dependency
{
  [Override("Antecedent"),read : ToSubclass] CIM_PhysicalConnector Ref Antecedent;
  [Override("Dependent"),read : ToSubclass] CIM_PhysicalConnector Ref Dependent;
};

[abstract,Locale(1033) : ToInstance,UUID("{FAF76B86-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class CIM_Slot : CIM_PhysicalConnector
{
  [Override("ConnectorType"),read : ToSubclass,MappingStrings{"MIF.DMTF|System Slot|004.2"} : ToSubclass] uint16 ConnectorType[];
  [read : ToSubclass] boolean SupportsHotPlug;
  [read : ToSubclass] real32 HeightAllowed;
  [read : ToSubclass] real32 LengthAllowed;
  [MappingStrings{"MIF.DMTF|System Slot|004.3"} : ToSubclass,read : ToSubclass] uint16 MaxDataWidth;
  [MappingStrings{"MIF.DMTF|System Slot|004.9"} : ToSubclass,read : ToSubclass] uint16 VccMixedVoltageSupport[];
  [MappingStrings{"MIF.DMTF|System Slot|004.10"} : ToSubclass,read : ToSubclass] uint16 VppMixedVoltageSupport[];
  [MappingStrings{"MIF.DMTF|System Slot|004.11"} : ToSubclass,read : ToSubclass] uint32 ThermalRating;
  [ModelCorrespondence{"CIM_Slot.PurposeDescription"} : ToSubclass,read : ToSubclass] boolean SpecialPurpose;
  [ModelCorrespondence{"CIM_Slot.SpecialPurpose"} : ToSubclass,read : ToSubclass] string PurposeDescription;
  [read : ToSubclass] uint16 Number;
};

[Abstract,Locale(1033) : ToInstance,UUID("{FAF76B87-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class CIM_SlotInSlot : CIM_ConnectedTo
{
  [Override("Antecedent"),read : ToSubclass] CIM_Slot Ref Antecedent;
  [Override("Dependent"),read : ToSubclass,Max(1) : ToSubclass] CIM_Slot Ref Dependent;
};

[Abstract,Association : ToInstance ToSubclass DisableOverride,Locale(1033) : ToInstance,UUID("{FAF76B88-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class CIM_AdjacentSlots
{
  [read : ToSubclass] CIM_Slot Ref SlotA;
  [read : ToSubclass] CIM_Slot Ref SlotB;
  [read : ToSubclass] real32 DistanceBetweenSlots;
  [read : ToSubclass] boolean SharedSlots;
};

[Abstract,Locale(1033) : ToInstance,UUID("{FAF76B89-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class CIM_PackageInSlot : CIM_Dependency
{
  [Override("Antecedent"),read : ToSubclass] CIM_Slot Ref Antecedent;
  [Override("Dependent"),read : ToSubclass,Max(1) : ToSubclass] CIM_PhysicalPackage Ref Dependent;
};

[Abstract,MappingStrings{"MIF.DMTF|System Slot|004.4"} : ToSubclass,Locale(1033) : ToInstance,UUID("{FAF76B8A-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class CIM_CardInSlot : CIM_PackageInSlot
{
  [Override("Antecedent"),read : ToSubclass] CIM_Slot Ref Antecedent;
  [Override("Dependent"),read : ToSubclass,Max(1) : ToSubclass] CIM_Card Ref Dependent;
};

[Abstract,Locale(1033) : ToInstance,UUID("{FAF76B8B-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class CIM_LinkHasConnector : CIM_Component
{
  [Override("GroupComponent"),read : ToSubclass,Max(1) : ToSubclass] CIM_PhysicalLink Ref GroupComponent;
  [Override("PartComponent"),read : ToSubclass] CIM_PhysicalConnector Ref PartComponent;
};

[Abstract,Locale(1033) : ToInstance,UUID("{FAF76B8C-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class CIM_ConnectorOnPackage : CIM_Container
{
  [Override("GroupComponent"),read : ToSubclass,Max(1) : ToSubclass] CIM_PhysicalPackage Ref GroupComponent;
  [Override("PartComponent"),read : ToSubclass] CIM_PhysicalConnector Ref PartComponent;
};

[Abstract,Locale(1033) : ToInstance,UUID("{FAF76B8D-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class CIM_ComputerSystemPackage : CIM_Dependency
{
  [Override("Antecedent"),read : ToSubclass] CIM_PhysicalPackage Ref Antecedent;
  [Override("Dependent"),read : ToSubclass] CIM_UnitaryComputerSystem Ref Dependent;
};

[Abstract,Locale(1033) : ToInstance,UUID("{FAF76B8E-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class CIM_PackageCooling : CIM_Dependency
{
  [Override("Antecedent"),read : ToSubclass] CIM_CoolingDevice Ref Antecedent;
  [Override("Dependent"),read : ToSubclass] CIM_PhysicalPackage Ref Dependent;
};

[Abstract,Aggregation : ToSubclass,Locale(1033) : ToInstance,UUID("{FAF76B8F-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class CIM_PackageTempSensor : CIM_Dependency
{
  [Override("Antecedent"),read : ToSubclass] CIM_TemperatureSensor Ref Antecedent;
  [Override("Dependent"),read : ToSubclass] CIM_PhysicalPackage Ref Dependent;
};

[Abstract,Aggregation : ToSubclass,Locale(1033) : ToInstance,UUID("{FAF76B90-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class CIM_PackageAlarm : CIM_Dependency
{
  [Override("Antecedent"),read : ToSubclass] CIM_AlarmDevice Ref Antecedent;
  [Override("Dependent"),read : ToSubclass] CIM_PhysicalPackage Ref Dependent;
};

[Abstract,Association : ToInstance ToSubclass DisableOverride,Locale(1033) : ToInstance,UUID("{64C1726E-DB21-11d2-85FC-0000F8102E5F}") : ToInstance] 
class CIM_ActsAsSpare
{
  [Read : ToSubclass] CIM_SpareGroup Ref Group;
  [Read : ToSubclass] BOOLEAN HotStandby;
  [Read : ToSubclass] CIM_ManagedSystemElement Ref Spare;
};

[Abstract,Locale(1033) : ToInstance,UUID("{2F648FBA-DB22-11d2-85FC-0000F8102E5F}") : ToInstance,Association : ToInstance ToSubclass DisableOverride] 
class CIM_CompatibleProduct
{
  [read : ToSubclass] STRING CompatibilityDescription;
  [read : ToSubclass] CIM_Product Ref CompatibleProduct;
  [read : ToSubclass] CIM_Product Ref Product;
};

[Abstract,Locale(1033) : ToInstance,UUID("{A2ABF536-DB35-11d2-85FC-0000F8102E5F}") : ToInstance] 
class CIM_CollectionOfSensors : CIM_Component
{
  [read : ToSubclass,Max(1) : ToSubclass,Override("GroupComponent")] CIM_MultiStateSensor Ref GroupComponent;
  [read : ToSubclass,Min(2) : ToSubclass,Override("PartComponent")] CIM_BinarySensor Ref PartComponent;
};

[Abstract,Locale(1033) : ToInstance,UUID("{4A626026-DB36-11d2-85FC-0000F8102E5F}") : ToInstance] 
class CIM_FileStorage : CIM_Component
{
  [read : ToSubclass,Max(1) : ToSubclass,Min(1) : ToSubclass,Override("GroupComponent")] CIM_FileSystem Ref GroupComponent;
  [read : ToSubclass,Override("PartComponent"),Weak : ToSubclass] CIM_LogicalFile Ref PartComponent;
};

[Abstract,Locale(1033) : ToInstance,UUID("{96B4C734-DB36-11d2-85FC-0000F8102E5F}") : ToInstance] 
class CIM_OperatingSystemSoftwareFeature : CIM_Component
{
  [read : ToSubclass,Override("GroupComponent")] CIM_OperatingSystem Ref GroupComponent;
  [read : ToSubclass,Override("PartComponent")] CIM_SoftwareFeature Ref PartComponent;
};

[Abstract,Locale(1033) : ToInstance,UUID("{A361A7AE-DB36-11d2-85FC-0000F8102E5F}") : ToInstance] 
class CIM_OSProcess : CIM_Component
{
  [read : ToSubclass,Max(1) : ToSubclass,Min(1) : ToSubclass,Override("GroupComponent")] CIM_OperatingSystem Ref GroupComponent;
  [read : ToSubclass,Override("PartComponent"),Weak : ToSubclass] CIM_Process Ref PartComponent;
};

[Abstract,Locale(1033) : ToInstance,UUID("{B7E6042C-DB36-11d2-85FC-0000F8102E5F}") : ToInstance] 
class CIM_ProcessThread : CIM_Component
{
  [read : ToSubclass,Max(1) : ToSubclass,Min(1) : ToSubclass,Override("GroupComponent")] CIM_Process Ref GroupComponent;
  [read : ToSubclass,Override("PartComponent"),Weak : ToSubclass] CIM_Thread Ref PartComponent;
};

[Abstract,Locale(1033) : ToInstance,UUID("{FB9D6E62-DB36-11d2-85FC-0000F8102E5F}") : ToInstance] 
class CIM_RedundancyComponent : CIM_Component
{
  [read : ToSubclass,Override("GroupComponent")] CIM_RedundancyGroup Ref GroupComponent;
  [read : ToSubclass] CIM_ManagedSystemElement Ref PartComponent;
};

[Abstract,Locale(1033) : ToInstance,UUID("{154E66D8-DB35-11d2-85FC-0000F8102E5F}") : ToInstance] 
class CIM_AggregateRedundancyComponent : CIM_RedundancyComponent
{
  [read : ToSubclass,Override("GroupComponent")] CIM_StorageRedundancyGroup Ref GroupComponent;
  [read : ToSubclass,Override("PartComponent")] CIM_AggregatePExtent Ref PartComponent;
};

[Abstract,Locale(1033) : ToInstance,UUID("{AD3C1FA2-DB36-11d2-85FC-0000F8102E5F}") : ToInstance] 
class CIM_PExtentRedundancyComponent : CIM_RedundancyComponent
{
  [read : ToSubclass,Override("GroupComponent")] CIM_StorageRedundancyGroup Ref GroupComponent;
  [read : ToSubclass,Override("PartComponent")] CIM_PhysicalExtent Ref PartComponent;
};

[Abstract,Locale(1033) : ToInstance,UUID("{9B81340A-E3D3-11d2-8601-0000F8102E5F}") : ToInstance] 
class CIM_ComputerSystemResource : CIM_SystemComponent
{
  [read : ToSubclass,Max(1) : ToSubclass,Min(1) : ToSubclass,Override("GroupComponent")] CIM_ComputerSystem Ref GroupComponent;
  [read : ToSubclass,Override("PartComponent")] CIM_SystemResource Ref PartComponent;
};

[Abstract,Locale(1033) : ToInstance,UUID("{9B81340B-E3D3-11d2-8601-0000F8102E5F}") : ToInstance] 
class CIM_ComputerSystemDMA : CIM_ComputerSystemResource
{
  [read : ToSubclass,Override("GroupComponent")] CIM_ComputerSystem Ref GroupComponent;
  [read : ToSubclass,Override("PartComponent"),Weak : ToSubclass] CIM_DMA Ref PartComponent;
};

[Abstract,Locale(1033) : ToInstance,UUID("{A2EFC896-E3D3-11d2-8601-0000F8102E5F}") : ToInstance] 
class CIM_ComputerSystemIRQ : CIM_ComputerSystemResource
{
  [read : ToSubclass] CIM_ComputerSystem Ref GroupComponent;
  [read : ToSubclass,Override("PartComponent"),Weak : ToSubclass] CIM_IRQ Ref PartComponent;
};

[Abstract,Locale(1033) : ToInstance,UUID("{A2EFC897-E3D3-11d2-8601-0000F8102E5F}") : ToInstance] 
class CIM_ComputerSystemMappedIO : CIM_ComputerSystemResource
{
  [read : ToSubclass] CIM_ComputerSystem Ref GroupComponent;
  [read : ToSubclass,Override("PartComponent"),Weak : ToSubclass] CIM_MemoryMappedIO Ref PartComponent;
};

[Abstract,Locale(1033) : ToInstance,UUID("{A2EFC898-E3D3-11d2-8601-0000F8102E5F}") : ToInstance] 
class CIM_HostedFileSystem : CIM_SystemComponent
{
  [read : ToSubclass,Max(1) : ToSubclass,Min(1) : ToSubclass,Override("GroupComponent")] CIM_ComputerSystem Ref GroupComponent;
  [read : ToSubclass,Override("PartComponent"),Weak : ToSubclass] CIM_FileSystem Ref PartComponent;
};

[Abstract,Locale(1033) : ToInstance,UUID("{4C51D7AE-DB22-11d2-85FC-0000F8102E5F}") : ToInstance] 
class CIM_Configuration
{
  [read : ToSubclass,MaxLen(64) : ToSubclass] STRING Caption;
  [read : ToSubclass] STRING Description;
  [read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,MaxLen(256) : ToSubclass] STRING Name;
};

[Abstract,Locale(1033) : ToInstance,UUID("{2280CB02-DB35-11d2-85FC-0000F8102E5F}") : ToInstance] 
class CIM_AssociatedAlarm : CIM_Dependency
{
  [read : ToSubclass,Override("Antecedent")] CIM_AlarmDevice Ref Antecedent;
  [read : ToSubclass,Override("Dependent")] CIM_LogicalDevice Ref Dependent;
};

[Abstract,Locale(1033) : ToInstance,UUID("{306F88F2-DB35-11d2-85FC-0000F8102E5F}") : ToInstance] 
class CIM_AssociatedCooling : CIM_Dependency
{
  [read : ToSubclass,Override("Antecedent")] CIM_CoolingDevice Ref Antecedent;
  [read : ToSubclass,Override("Dependent")] CIM_LogicalDevice Ref Dependent;
};

[Abstract,Locale(1033) : ToInstance,UUID("{29B273F2-E3D3-11d2-8601-0000F8102E5F}") : ToInstance] 
class CIM_AssociatedSupplyCurrentSensor : CIM_AssociatedSensor
{
  [read : ToSubclass,Override("Antecedent")] CIM_CurrentSensor Ref Antecedent;
  [read : ToSubclass,Override("Dependent")] CIM_PowerSupply Ref Dependent;
  [read : ToSubclass] UINT16 MonitoringRange;
};

[Abstract,Locale(1033) : ToInstance,UUID("{327ABD78-E3D3-11d2-8601-0000F8102E5F}") : ToInstance] 
class CIM_AssociatedSupplyVoltageSensor : CIM_AssociatedSensor
{
  [read : ToSubclass,Override("Antecedent")] CIM_VoltageSensor Ref Antecedent;
  [read : ToSubclass,Override("Dependent")] CIM_PowerSupply Ref Dependent;
  [read : ToSubclass] UINT16 MonitoringRange;
};

[Abstract,Locale(1033) : ToInstance,UUID("{3A608798-E3D3-11d2-8601-0000F8102E5F}") : ToInstance] 
class CIM_LogicalDiskBasedOnVolumeSet : CIM_BasedOn
{
  [read : ToSubclass,Max(1) : ToSubclass,Override("Antecedent")] CIM_VolumeSet Ref Antecedent;
  [read : ToSubclass,Override("Dependent")] CIM_LogicalDisk Ref Dependent;
};

[Abstract,Locale(1033) : ToInstance,UUID("{451FE14C-E3D3-11d2-8601-0000F8102E5F}") : ToInstance] 
class CIM_PSExtentBasedOnPExtent : CIM_BasedOn
{
  [read : ToSubclass,Max(1) : ToSubclass,Override("Antecedent")] CIM_PhysicalExtent Ref Antecedent;
  [read : ToSubclass,Override("Dependent")] CIM_ProtectedSpaceExtent Ref Dependent;
};

[Abstract,Locale(1033) : ToInstance,UUID("{524ED194-DB35-11d2-85FC-0000F8102E5F}") : ToInstance] 
class CIM_BIOSLoadedInNV : CIM_Dependency
{
  [read : ToSubclass,Override("Antecedent")] CIM_NonVolatileStorage Ref Antecedent;
  [read : ToSubclass,Override("Dependent")] CIM_BIOSElement Ref Dependent;
  [read : ToSubclass] UINT64 EndingAddress;
  [read : ToSubclass] UINT64 StartingAddress;
};

[Abstract,Locale(1033) : ToInstance,UUID("{5F5B101E-DB35-11d2-85FC-0000F8102E5F}") : ToInstance] 
class CIM_BootOSFromFS : CIM_Dependency
{
  [read : ToSubclass,Override("Antecedent")] CIM_FileSystem Ref Antecedent;
  [read : ToSubclass,Override("Dependent")] CIM_OperatingSystem Ref Dependent;
};

[Abstract,Locale(1033) : ToInstance,UUID("{05D1FFF2-DB36-11d2-85FC-0000F8102E5F}") : ToInstance] 
class CIM_DeviceAccessedByFile : CIM_Dependency
{
  [read : ToSubclass,Override("Antecedent")] CIM_DeviceFile Ref Antecedent;
  [read : ToSubclass,Max(1) : ToSubclass,Override("Dependent")] CIM_LogicalDevice Ref Dependent;
};

[Abstract,Locale(1033) : ToInstance,UUID("{7CE7448E-E3D4-11d2-8601-0000F8102E5F}") : ToInstance] 
class CIM_SCSIInterface : CIM_ControlledBy
{
  [read : ToSubclass,Override("Antecedent")] CIM_SCSIController Ref Antecedent;
  [read : ToSubclass,Override("Dependent")] CIM_LogicalDevice Ref Dependent;
  [read : ToSubclass] UINT32 SCSIRetries;
  [read : ToSubclass] UINT32 SCSITimeouts;
};

[Abstract,Locale(1033) : ToInstance,UUID("{8B309BDA-E3D4-11d2-8601-0000F8102E5F}") : ToInstance] 
class CIM_SerialInterface : CIM_ControlledBy
{
  [read : ToSubclass,Override("Antecedent")] CIM_SerialController Ref Antecedent;
  [read : ToSubclass,Override("Dependent")] CIM_LogicalDevice Ref Dependent;
  [read : ToSubclass] UINT16 FlowControlInfo;
  [read : ToSubclass] UINT16 NumberOfStopBits;
  [read : ToSubclass] UINT16 ParityInfo;
};

[Abstract,Locale(1033) : ToInstance,UUID("{290FC242-DB36-11d2-85FC-0000F8102E5F}") : ToInstance] 
class CIM_DeviceServiceImplementation : CIM_Dependency
{
  [read : ToSubclass,Override("Antecedent")] CIM_LogicalDevice Ref Antecedent;
  [read : ToSubclass,Override("Dependent")] CIM_Service Ref Dependent;
};

[Abstract,Locale(1033) : ToInstance,UUID("{36363AAA-DB36-11d2-85FC-0000F8102E5F}") : ToInstance] 
class CIM_DeviceSoftware : CIM_Dependency
{
  [read : ToSubclass,Override("Antecedent")] CIM_SoftwareElement Ref Antecedent;
  [read : ToSubclass,Override("Dependent")] CIM_LogicalDevice Ref Dependent;
  [read : ToSubclass,ModelCorrespondence{"CIM_DeviceSoftware.PurposeDescription"} : ToSubclass] UINT16 Purpose;
  [read : ToSubclass,ModelCorrespondence{"CIM_DeviceSoftware.Purpose"} : ToSubclass] STRING PurposeDescription;
};

[Abstract,Locale(1033) : ToInstance,UUID("{576C3C56-DB36-11d2-85FC-0000F8102E5F}") : ToInstance] 
class CIM_HostedAccessPoint : CIM_Dependency
{
  [read : ToSubclass,Override("Antecedent"),Max(1) : ToSubclass,Min(1) : ToSubclass] CIM_System Ref Antecedent;
  [read : ToSubclass,Override("Dependent"),Weak : ToSubclass] CIM_ServiceAccessPoint Ref Dependent;
};

[Abstract,Locale(1033) : ToInstance,UUID("{625B4512-DB36-11d2-85FC-0000F8102E5F}") : ToInstance] 
class CIM_HostedBootSAP : CIM_HostedAccessPoint
{
  [read : ToSubclass,Override("Antecedent")] CIM_UnitaryComputerSystem Ref Antecedent;
  [read : ToSubclass,Override("Dependent")] CIM_BootSAP Ref Dependent;
};

[Abstract,Locale(1033) : ToInstance,UUID("{7880DD16-DB36-11d2-85FC-0000F8102E5F}") : ToInstance] 
class CIM_HostedJobDestination : CIM_Dependency
{
  [read : ToSubclass,Max(1) : ToSubclass,Min(1) : ToSubclass,Override("Antecedent")] CIM_System Ref Antecedent;
  [read : ToSubclass,Override("Dependent"),Weak : ToSubclass] CIM_JobDestination Ref Dependent;
};

[Abstract,Locale(1033) : ToInstance,UUID("{83B2A7AA-DB36-11d2-85FC-0000F8102E5F}") : ToInstance] 
class CIM_HostedService : CIM_Dependency
{
  [read : ToSubclass,Max(1) : ToSubclass,Min(1) : ToSubclass,Override("Antecedent")] CIM_System Ref Antecedent;
  [read : ToSubclass,Override("Dependent"),Weak : ToSubclass] CIM_Service Ref Dependent;
};

[Abstract,Locale(1033) : ToInstance,UUID("{6DAE7092-DB36-11d2-85FC-0000F8102E5F}") : ToInstance] 
class CIM_HostedBootService : CIM_HostedService
{
  CIM_System Ref Antecedent;
  [Override("Dependent")] CIM_BootService Ref Dependent;
};

[Abstract,Locale(1033) : ToInstance,UUID("{8D079BEE-DB36-11d2-85FC-0000F8102E5F}") : ToInstance] 
class CIM_JobDestinationJobs : CIM_Dependency
{
  [read : ToSubclass,Max(1) : ToSubclass,Override("Antecedent")] CIM_JobDestination Ref Antecedent;
  [read : ToSubclass,Override("Dependent")] CIM_Job Ref Dependent;
};

[Abstract,Locale(1033) : ToInstance,UUID("{10458E26-DB37-11d2-85FC-0000F8102E5F}") : ToInstance] 
class CIM_ResidesOnExtent : CIM_Dependency
{
  [read : ToSubclass,Override("Antecedent")] CIM_StorageExtent Ref Antecedent;
  [read : ToSubclass,Override("Dependent")] CIM_FileSystem Ref Dependent;
};

[Abstract,Locale(1033) : ToInstance,UUID("{1F2EA300-DB37-11d2-85FC-0000F8102E5F}") : ToInstance] 
class CIM_RunningOS : CIM_Dependency
{
  [read : ToSubclass,Max(1) : ToSubclass,Override("Antecedent")] CIM_OperatingSystem Ref Antecedent;
  [read : ToSubclass,Max(1) : ToSubclass,Min(1) : ToSubclass,Override("Dependent")] CIM_ComputerSystem Ref Dependent;
};

[Abstract,Aggregation : ToSubclass,Association : ToInstance ToSubclass DisableOverride,Locale(1033) : ToInstance,UUID("{A228E208-DB22-11d2-85FC-0000F8102E5F}") : ToInstance] 
class CIM_DependencyContext
{
  [read : ToSubclass,Aggregate : ToSubclass] CIM_Configuration Ref Context;
  [read : ToSubclass] CIM_Dependency Ref Dependency;
};

[Abstract,Locale(1033) : ToInstance,UUID("{BCD64CCE-DB29-11d2-85FC-0000F8102E5F}") : ToInstance,Association : ToInstance ToSubclass DisableOverride] 
class CIM_DirectorySpecificationFile
{
  [read : ToSubclass,Max(1) : ToSubclass,Min(0) : ToSubclass] CIM_DirectorySpecification Ref DirectorySpecification;
  [read : ToSubclass,Min(0) : ToSubclass] CIM_FileSpecification Ref FileSpecification;
};

[Abstract,Locale(1033) : ToInstance,UUID("{FC049DCE-DB29-11d2-85FC-0000F8102E5F}") : ToInstance,Association : ToInstance ToSubclass DisableOverride] 
class CIM_ElementConfiguration
{
  [read : ToSubclass] CIM_Configuration Ref Configuration;
  [read : ToSubclass] CIM_ManagedSystemElement Ref Element;
};

[Abstract,Locale(1033) : ToInstance,UUID("{55D5B446-DB2A-11d2-85FC-0000F8102E5F}") : ToInstance,Association : ToInstance ToSubclass DisableOverride] 
class CIM_FromDirectoryAction
{
  [read : ToSubclass,Min(0) : ToSubclass] CIM_FileAction Ref FileName;
  [read : ToSubclass,Max(1) : ToSubclass,Min(0) : ToSubclass] CIM_DirectoryAction Ref SourceDirectory;
};

[Abstract,Locale(1033) : ToInstance,UUID("{6715375E-DB2A-11d2-85FC-0000F8102E5F}") : ToInstance,Association : ToInstance ToSubclass DisableOverride] 
class CIM_FromDirectorySpecification
{
  [read : ToSubclass,Min(0) : ToSubclass] CIM_FileAction Ref FileName;
  [read : ToSubclass,Max(1) : ToSubclass,Min(0) : ToSubclass] CIM_DirectorySpecification Ref SourceDirectory;
};

[Abstract,Locale(1033) : ToInstance,UUID("{778C74EE-DB2A-11d2-85FC-0000F8102E5F}") : ToInstance] 
class CIM_FRU
{
  [read : ToSubclass,MaxLen(64) : ToSubclass] STRING Caption;
  [read : ToSubclass,MappingStrings{"MIF.DMTF|FRU|002.3"} : ToSubclass] STRING Description;
  [read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,MappingStrings{"MIF.DMTF|FRU|002.6"} : ToSubclass,MaxLen(64) : ToSubclass] STRING FRUNumber;
  [read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,MappingStrings{"MIF.DMTF|FRU|002.7"} : ToSubclass,MaxLen(64) : ToSubclass] STRING IdentifyingNumber;
  [read : ToSubclass,MaxLen(256) : ToSubclass] STRING Name;
  [read : ToSubclass,MappingStrings{"MIF.DMTF|FRU|002.8"} : ToSubclass,MaxLen(64) : ToSubclass] STRING RevisionLevel;
  [read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,MappingStrings{"MIF.DMTF|FRU|002.4"} : ToSubclass,MaxLen(256) : ToSubclass] STRING Vendor;
};

[Abstract,Locale(1033) : ToInstance,UUID("{87FEEDCA-DB2A-11d2-85FC-0000F8102E5F}") : ToInstance,Aggregation : ToSubclass,Association : ToInstance ToSubclass DisableOverride] 
class CIM_FRUIncludesProduct
{
  [read : ToSubclass] CIM_Product Ref Component;
  [read : ToSubclass,Aggregate : ToSubclass,Max(1) : ToSubclass] CIM_FRU Ref FRU;
};

[Abstract,Locale(1033) : ToInstance,UUID("{977E36CA-DB2A-11d2-85FC-0000F8102E5F}") : ToInstance,Aggregation : ToSubclass,Association : ToInstance ToSubclass DisableOverride] 
class CIM_FRUPhysicalElements
{
  [read : ToSubclass] CIM_PhysicalElement Ref Component;
  [read : ToSubclass,Aggregate : ToSubclass,Max(1) : ToSubclass] CIM_FRU Ref FRU;
};

[Abstract,Locale(1033) : ToInstance,UUID("{4DA18760-E3D0-11d2-8601-0000F8102E5F}") : ToInstance] 
class CIM_FileSystem : CIM_LogicalElement
{
  [read : ToSubclass,MappingStrings{"MIF.DMTF|Partition|002.4"} : ToSubclass] UINT64 AvailableSpace;
  [read : ToSubclass] UINT64 BlockSize;
  [read : ToSubclass] BOOLEAN CasePreserved;
  [read : ToSubclass] BOOLEAN CaseSensitive;
  [read : ToSubclass] UINT16 CodeSet[];
  [read : ToSubclass,MappingStrings{"MIF.DMTF|Partition|002.7"} : ToSubclass] STRING CompressionMethod;
  [read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,MaxLen(256) : ToSubclass] STRING CreationClassName;
  [read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,MaxLen(256) : ToSubclass,Propagated("CIM_ComputerSystem.CreationClassName") : ToSubclass] STRING CSCreationClassName;
  [read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,MaxLen(256) : ToSubclass,Propagated("CIM_ComputerSystem.Name") : ToSubclass] STRING CSName;
  [read : ToSubclass,MappingStrings{"MIF.DMTF|Partition|002.8"} : ToSubclass] STRING EncryptionMethod;
  [read : ToSubclass] UINT64 FileSystemSize;
  [read : ToSubclass] UINT32 MaxFileNameLength;
  [read : ToSubclass,MappingStrings{"MIB.IETF|HOST-RESOURCES-MIB.hrFSAccess"} : ToSubclass] BOOLEAN ReadOnly;
  [read : ToSubclass,MappingStrings{"MIB.IETF|HOST-RESOURCES-MIB.hrFSMountPoint"} : ToSubclass] STRING Root;
};

[Abstract,Locale(1033) : ToInstance,UUID("{5B6C820A-E3D0-11d2-8601-0000F8102E5F}") : ToInstance] 
class CIM_LocalFileSystem : CIM_FileSystem
{
};

[Abstract,Locale(1033) : ToInstance,UUID("{673E0A2C-E3D0-11d2-8601-0000F8102E5F}") : ToInstance] 
class CIM_JobDestination : CIM_LogicalElement
{
  [read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,MaxLen(256) : ToSubclass] STRING CreationClassName;
  [read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,MaxLen(256) : ToSubclass,Propagated("CIM_System.CreationClassName") : ToSubclass] STRING SystemCreationClassName;
  [read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,MaxLen(256) : ToSubclass,Propagated("CIM_System.Name") : ToSubclass] STRING SystemName;
};

[Abstract,Locale(1033) : ToInstance,UUID("{7250D62E-E3D0-11d2-8601-0000F8102E5F}") : ToInstance] 
class CIM_ManagementController : CIM_Controller
{
};

[Abstract,Locale(1033) : ToInstance,UUID("{7BB67AE8-E3D0-11d2-8601-0000F8102E5F}") : ToInstance] 
class CIM_PCIController : CIM_Controller
{
};

[Abstract,Locale(1033) : ToInstance,UUID("{F62037D8-E3D0-11d2-8601-0000F8102E5F}") : ToInstance] 
class CIM_MagnetoOpticalDrive : CIM_MediaAccessDevice
{
};

[Abstract,Locale(1033) : ToInstance,UUID("{FFB58B9A-E3D0-11d2-8601-0000F8102E5F}") : ToInstance] 
class CIM_WORMDrive : CIM_MediaAccessDevice
{
};

[Abstract,Locale(1033) : ToInstance,UUID("{07F12A62-E3D1-11d2-8601-0000F8102E5F}") : ToInstance] 
class CIM_Scanner : CIM_LogicalDevice
{
};

[Abstract,Locale(1033) : ToInstance,UUID("{11140D44-E3D1-11d2-8601-0000F8102E5F}") : ToInstance] 
class CIM_BinarySensor : CIM_Sensor
{
  [read : ToSubclass] BOOLEAN CurrentReading;
  [read : ToSubclass] BOOLEAN ExpectedReading;
  [read : ToSubclass,MaxLen(64) : ToSubclass] STRING InterpretationOfFalse;
  [read : ToSubclass,MaxLen(64) : ToSubclass] STRING InterpretationOfTrue;
};

[Abstract,Locale(1033) : ToInstance,UUID("{1BF00330-E3D1-11d2-8601-0000F8102E5F}") : ToInstance] 
class CIM_DiscreteSensor : CIM_Sensor
{
  [read : ToSubclass,MaxLen(64) : ToSubclass] STRING AcceptableValues[];
  [read : ToSubclass,MaxLen(64) : ToSubclass] STRING CurrentReading;
  [read : ToSubclass,MaxLen(64) : ToSubclass] STRING PossibleValues[];
};

[Abstract,Locale(1033) : ToInstance,UUID("{237D964E-E3D1-11d2-8601-0000F8102E5F}") : ToInstance] 
class CIM_MultiStateSensor : CIM_Sensor
{
};

[Abstract,Locale(1033) : ToInstance,UUID("{237D964F-E3D1-11d2-8601-0000F8102E5F}") : ToInstance] 
class CIM_Tachometer : CIM_NumericSensor
{
  [read : ToSubclass,Override("CurrentReading")] sint32 CurrentReading;
  [read : ToSubclass,Override("NominalReading")] sint32 NominalReading;
  [read : ToSubclass,Override("NormalMax")] sint32 NormalMax;
  [read : ToSubclass,Override("NormalMin")] sint32 NormalMin;
  [read : ToSubclass,Override("MaxReadable")] sint32 MaxReadable;
  [read : ToSubclass,Override("MinReadable")] sint32 MinReadable;
  [read : ToSubclass,Override("Resolution")] uint32 Resolution;
  [read : ToSubclass,Override("Tolerance")] sint32 Tolerance;
  [read : ToSubclass,Override("LowerThresholdNonCritical")] sint32 LowerThresholdNonCritical;
  [read : ToSubclass,Override("UpperThresholdNonCritical")] sint32 UpperThresholdNonCritical;
  [read : ToSubclass,Override("LowerThresholdCritical")] sint32 LowerThresholdCritical;
  [read : ToSubclass,Override("UpperThresholdCritical")] sint32 UpperThresholdCritical;
  [read : ToSubclass,Override("LowerThresholdFatal")] sint32 LowerThresholdFatal;
  [read : ToSubclass,Override("UpperThresholdFatal")] sint32 UpperThresholdFatal;
};

[Abstract,Locale(1033) : ToInstance,UUID("{2D0E255C-E3D1-11d2-8601-0000F8102E5F}") : ToInstance] 
class CIM_AggregatePSExtent : CIM_StorageExtent
{
};

[Abstract,Locale(1033) : ToInstance,UUID("{35E25AA4-E3D1-11d2-8601-0000F8102E5F}") : ToInstance] 
class CIM_ProtectedSpaceExtent : CIM_StorageExtent
{
  [read : ToSubclass,MappingStrings{"MIF.DMTF|Protected Space Extent|001.6"} : ToSubclass] UINT64 UserDataStripeDepth;
};

[Abstract,Locale(1033) : ToInstance,UUID("{35E25AA5-E3D1-11d2-8601-0000F8102E5F}") : ToInstance] 
class CIM_VolumeSet : CIM_StorageExtent
{
  [read : ToSubclass,MappingStrings{"MIF.DMTF|Volume Set|001.5"} : ToSubclass] UINT64 PSExtentInterleaveDepth;
  [read : ToSubclass,MappingStrings{"MIF.DMTF|Volume Set|001.4"} : ToSubclass] UINT64 PSExtentStripeLength;
};

[Abstract,Locale(1033) : ToInstance,UUID("{4333BD60-E3D1-11d2-8601-0000F8102E5F}") : ToInstance] 
class CIM_DeviceFile : CIM_LogicalFile
{
};

[Abstract,Locale(1033) : ToInstance,UUID("{4C3A040A-E3D1-11d2-8601-0000F8102E5F}") : ToInstance] 
class CIM_RedundancyGroup : CIM_LogicalElement
{
  [read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,MaxLen(256) : ToSubclass] STRING CreationClassName;
  [read : ToSubclass] UINT16 RedundancyStatus;
};

[Abstract,Locale(1033) : ToInstance,UUID("{570ED2E8-E3D1-11d2-8601-0000F8102E5F}") : ToInstance] 
class CIM_ExtraCapacityGroup : CIM_RedundancyGroup
{
  [read : ToSubclass] UINT32 MinNumberNeeded;
};

[Abstract,Locale(1033) : ToInstance,UUID("{64B86CA6-E3D1-11d2-8601-0000F8102E5F}") : ToInstance] 
class CIM_SpareGroup : CIM_RedundancyGroup
{
};

[Abstract,Locale(1033) : ToInstance,UUID("{6D477DBC-E3D1-11d2-8601-0000F8102E5F}") : ToInstance] 
class CIM_StorageRedundancyGroup : CIM_RedundancyGroup
{
  [read : ToSubclass,MappingStrings{"MIF.DMTF|Redundancy Group|001.2"} : ToSubclass] UINT16 TypeOfAlgorithm;
};

[Abstract,Locale(1033) : ToInstance,UUID("{76148BF6-E3D1-11d2-8601-0000F8102E5F}") : ToInstance] 
class CIM_VideoBIOSElement : CIM_SoftwareElement
{
  [read : ToSubclass,MappingStrings{"MIF.DMTF|Video BIOS|001.5"} : ToSubclass] BOOLEAN IsShadowed;
};

[Abstract,Locale(1033) : ToInstance,UUID("{120BB700-DB2B-11d2-85FC-0000F8102E5F}") : ToInstance] 
class CIM_ApplicationSystem : CIM_System
{
};

[Abstract,Locale(1033) : ToInstance,UUID("{EB98A1B2-DB36-11d2-85FC-0000F8102E5F}") : ToInstance,Association : ToInstance ToSubclass DisableOverride] 
class CIM_ProductFRU
{
  [read : ToSubclass] CIM_FRU Ref FRU;
  [read : ToSubclass,Max(1) : ToSubclass] CIM_Product Ref Product;
};

[Abstract,Locale(1033) : ToInstance,UUID("{3E24D5A6-DB2B-11d2-85FC-0000F8102E5F}") : ToInstance,Aggregation : ToSubclass,Association : ToInstance ToSubclass DisableOverride] 
class CIM_ProductParentChild
{
  [read : ToSubclass] CIM_Product Ref Child;
  [read : ToSubclass,Aggregate : ToSubclass] CIM_Product Ref Parent;
};

[Abstract,Locale(1033) : ToInstance,UUID("{502F00A0-DB2B-11d2-85FC-0000F8102E5F}") : ToInstance,Aggregation : ToSubclass,Association : ToInstance ToSubclass DisableOverride] 
class CIM_ProductPhysicalElements
{
  [read : ToSubclass] CIM_PhysicalElement Ref Component;
  [read : ToSubclass,Aggregate : ToSubclass,Max(1) : ToSubclass] CIM_Product Ref Product;
};

[Abstract,Locale(1033) : ToInstance,UUID("{65878E68-DB2B-11d2-85FC-0000F8102E5F}") : ToInstance,Association : ToInstance ToSubclass DisableOverride] 
class CIM_ProductProductDependency
{
  [read : ToSubclass] CIM_Product Ref DependentProduct;
  [read : ToSubclass] CIM_Product Ref RequiredProduct;
  [read : ToSubclass] UINT16 TypeOfDependency;
};

[Abstract,Locale(1033) : ToInstance,UUID("{8D6D6880-DB2B-11d2-85FC-0000F8102E5F}") : ToInstance,Association : ToInstance ToSubclass DisableOverride] 
class CIM_ProductSupport
{
  [read : ToSubclass] CIM_Product Ref Product;
  [read : ToSubclass] CIM_SupportAccess Ref Support;
};

[Abstract,Locale(1033) : ToInstance,UUID("{F0B752E8-DB30-11d2-85FC-0000F8102E5F}") : ToInstance,Aggregation : ToSubclass,Association : ToInstance ToSubclass DisableOverride] 
class CIM_SettingContext
{
  [read : ToSubclass,Aggregate : ToSubclass] CIM_Configuration Ref Context;
  [read : ToSubclass] CIM_Setting Ref Setting;
};

[Abstract,Locale(1033) : ToInstance,UUID("{5CC70817-DB31-11d2-85FC-0000F8102E5F}") : ToInstance,Aggregation : ToSubclass,Association : ToInstance ToSubclass DisableOverride] 
class CIM_StorageDefect
{
  [read : ToSubclass,Weak : ToSubclass] CIM_StorageError Ref Error;
  [read : ToSubclass,Aggregate : ToSubclass,Max(1) : ToSubclass,Min(1) : ToSubclass] CIM_StorageExtent Ref Extent;
};

[Abstract,Locale(1033) : ToInstance,UUID("{71312AB6-DB31-11d2-85FC-0000F8102E5F}") : ToInstance] 
class CIM_StorageError
{
  [read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,MaxLen(256) : ToSubclass,Propagated("CIM_StorageExtent.CreationClassName") : ToSubclass] STRING DeviceCreationClassName;
  [read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,MaxLen(64) : ToSubclass,Propagated("CIM_StorageExtent.DeviceID") : ToSubclass] STRING DeviceID;
  [read : ToSubclass] UINT64 EndingAddress;
  [read : ToSubclass,Key : ToInstance ToSubclass DisableOverride] UINT64 StartingAddress;
  [read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,MaxLen(256) : ToSubclass,Propagated("CIM_StorageExtent.SystemCreationClassName") : ToSubclass] STRING SystemCreationClassName;
  [read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,MaxLen(256) : ToSubclass,Propagated("CIM_StorageExtent.SystemName") : ToSubclass] STRING SystemName;
};

[Abstract,Locale(1033) : ToInstance,UUID("{80321714-DB31-11d2-85FC-0000F8102E5F}") : ToInstance] 
class CIM_SupportAccess
{
  [read : ToSubclass,MappingStrings{"MIF.DMTF|FRU|002.11", "MIF.DMTF|FRU|002.12"} : ToSubclass] STRING CommunicationInfo;
  [read : ToSubclass,MappingStrings{"MIF.DMTF|Support|001.5"} : ToSubclass,ValueMap{"1", "2", "3", "4", "5", "6", "7", "8"} : ToSubclass] UINT16 CommunicationMode;
  [read : ToSubclass,MappingStrings{"MIF.DMTF|Support|001.3"} : ToSubclass] STRING Description;
  [read : ToSubclass,MappingStrings{"MIF.DMTF|Support|001.2"} : ToSubclass,MaxLen(64) : ToSubclass] STRING Locale;
  [read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,MaxLen(256) : ToSubclass] STRING SupportAccessId;
};

[Abstract,Locale(1033) : ToInstance,UUID("{B58D172E-DB31-11d2-85FC-0000F8102E5F}") : ToInstance,Association : ToInstance ToSubclass DisableOverride] 
class CIM_ToDirectoryAction
{
  [read : ToSubclass,Max(1) : ToSubclass,Min(0) : ToSubclass] CIM_DirectoryAction Ref DestinationDirectory;
  [read : ToSubclass,Min(0) : ToSubclass] CIM_CopyFileAction Ref FileName;
};

[Abstract,Locale(1033) : ToInstance,UUID("{C3E25A3C-DB31-11d2-85FC-0000F8102E5F}") : ToInstance,Association : ToInstance ToSubclass DisableOverride] 
class CIM_ToDirectorySpecification
{
  [read : ToSubclass,Max(1) : ToSubclass,Min(0) : ToSubclass] CIM_DirectorySpecification Ref DestinationDirectory;
  [read : ToSubclass,Min(0) : ToSubclass] CIM_CopyFileAction Ref FileName;
};

[Abstract,Locale(1033) : ToInstance,UUID("{75BCF4F6-DB46-11D2-B4C8-80080C7B6371}") : ToInstance] 
class CIM_Mount : CIM_Dependency
{
  [read : ToSubclass,Max(1) : ToSubclass,Override("Antecedent")] CIM_Directory Ref Antecedent;
  [read : ToSubclass,Override("Dependent")] CIM_NFS Ref Dependent;
};

[Abstract,Association : ToInstance ToSubclass DisableOverride,Locale(1033) : ToInstance,UUID("{75BCF4F8-DB46-11D2-B4C8-80080C7B6371}") : ToInstance] 
class CIM_Export
{
  [Read : ToSubclass] CIM_Directory Ref Directory;
  [Max(1) : ToSubclass,Read : ToSubclass] CIM_LocalFileSystem Ref LocalFS;
  [Read : ToSubclass] STRING ExportedDirectoryName;
};

[Abstract,Locale(1033) : ToInstance,UUID("{75BCF4F9-DB46-11D2-B4C8-80080C7B6371}") : ToInstance] 
class CIM_RemoteFileSystem : CIM_FileSystem
{
};

[Abstract,Locale(1033) : ToInstance,UUID("{75BCF4FB-DB46-11D2-B4C8-80080C7B6371}") : ToInstance] 
class CIM_NFS : CIM_RemoteFileSystem
{
  [Read : ToSubclass] BOOLEAN AttributeCaching;
  [Read : ToSubclass] UINT16 AttributeCachingForDirectoriesMax;
  [Read : ToSubclass] UINT16 AttributeCachingForDirectoriesMin;
  [Read : ToSubclass] UINT16 AttributeCachingForRegularFilesMax;
  [Read : ToSubclass] UINT16 AttributeCachingForRegularFilesMin;
  [Read : ToSubclass] BOOLEAN ForegroundMount;
  [Read : ToSubclass] BOOLEAN HardMount;
  [Read : ToSubclass] BOOLEAN Interrupt;
  [Read : ToSubclass] UINT16 MountFailureRetries;
  [Read : ToSubclass] UINT64 ReadBufferSize;
  [Read : ToSubclass] UINT16 RetransmissionAttempts;
  [Read : ToSubclass] UINT32 RetransmissionTimeout;
  [Read : ToSubclass] UINT32 ServerCommunicationPort;
  [Read : ToSubclass] UINT64 WriteBufferSize;
};

[Abstract,Locale(1033) : ToInstance,UUID("{75BCF4FE-DB46-11D2-B4C8-80080C7B6371}") : ToInstance] 
class CIM_BootService : CIM_Service
{
};

[Locale(1033) : ToInstance,UUID("{E527D7F2-E3D4-11d2-8601-0000F8102E5F}") : ToInstance,abstract] 
class CIM_SoftwareFeature : CIM_LogicalElement
{
  [Propagated("CIM_Product.IdentifyingNumber") : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Maxlen(64) : ToSubclass,Read : ToSubclass,MappingStrings{"DMTF|ComponentID|001.4"} : ToSubclass] string IdentifyingNumber;
  [Propagated("CIM_Product.Name") : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Maxlen(256) : ToSubclass,Read : ToSubclass,MappingStrings{"DMTF|ComponentID|001.2"} : ToSubclass] string ProductName;
  [Propagated("CIM_Product.Vendor") : ToSubclass,CIM_Key : ToSubclass,Read : ToSubclass,Maxlen(256) : ToSubclass,MappingStrings{"DMTF|ComponentID|001.1"} : ToSubclass] string Vendor;
  [Propagated("CIM_Product.Version") : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Maxlen(64) : ToSubclass,MappingStrings{"DMTF|ComponentID|001.3"} : ToSubclass,Read : ToSubclass] string Version;
  [key : ToInstance ToSubclass DisableOverride,override("Name"),Maxlen(256) : ToSubclass,Read : ToSubclass] string Name;
};

[Locale(1033) : ToInstance,UUID("{7A9135CA-DB21-11d2-85FC-0000F8102E5F}") : ToInstance,Abstract] 
class CIM_Check
{
  [Propagated("CIM_SoftwareElement.Name") : ToSubclass,CIM_key : ToSubclass,maxlen(256) : ToSubclass,Read : ToSubclass] string Name;
  [Propagated("CIM_SoftwareElement.Version") : ToSubclass,CIM_key : ToSubclass,Maxlen(64) : ToSubclass,Read : ToSubclass,Mappingstrings{"MIF.DMTF|ComponentID|001.3"} : ToSubclass] string Version;
  [Propagated("CIM_SoftwareElement.SoftwareElementState") : ToSubclass,CIM_key : ToSubclass,Read : ToSubclass] uint16 SoftwareElementState;
  [Propagated("CIM_SoftwareElement.SoftwareElementID") : ToSubclass,CIM_key : ToSubclass,maxlen(256) : ToSubclass,Read : ToSubclass] string SoftwareElementID;
  [Propagated("CIM_SoftwareElement.TargetOperatingSystem") : ToSubclass,CIM_key : ToSubclass,Read : ToSubclass,Mappingstrings{"MIF.DMTF|Software Component Information|002.5"} : ToSubclass] uint16 TargetOperatingSystem;
  [key : ToInstance ToSubclass DisableOverride,maxlen(256) : ToSubclass,Read : ToSubclass] string CheckID;
  [Read : ToSubclass] string Description;
  [Maxlen(64) : ToSubclass,Read : ToSubclass] string Caption;
  [Read : ToSubclass] boolean CheckMode;
  uint32 Invoke();
};

[Locale(1033) : ToInstance,UUID("{A524EE6E-DB29-11d2-85FC-0000F8102E5F}") : ToInstance,abstract] 
class CIM_DirectorySpecification : CIM_Check
{
  [Read : ToSubclass,Mappingstrings{"MIF.DMTF|Location|001.2"} : ToSubclass] uint16 DirectoryType;
  [Maxlen(1024) : ToSubclass,Read : ToSubclass] string DirectoryPath;
};

[Locale(1033) : ToInstance,UUID("{41F377B0-DB2A-11d2-85FC-0000F8102E5F}") : ToInstance,abstract] 
class CIM_FileSpecification : CIM_Check
{
  [Fixed : ToSubclass,maxlen(1024) : ToSubclass,Read : ToSubclass] string Name;
  [Fixed : ToSubclass,Read : ToSubclass] datetime CreateTimeStamp;
  [Read : ToSubclass] uint64 FileSize;
  [Mappingstrings{"MIF.DMTF|Software Signature|002.4"} : ToSubclass,Read : ToSubclass] uint32 CheckSum;
  [Mappingstrings{"MIF.DMTF|Software Signature|002.5"} : ToSubclass,Read : ToSubclass] uint32 CRC1;
  [Mappingstrings{"MIF.DMTF|Software Signature|002.6"} : ToSubclass,Read : ToSubclass] uint32 CRC2;
  [maxlen(16) : ToSubclass,Read : ToSubclass] string MD5Checksum;
};

[Locale(1033) : ToInstance,UUID("{2F156260-DB21-11d2-85FC-0000F8102E5F}") : ToInstance,Abstract] 
class CIM_Action
{
  [Propagated("CIM_SoftwareElement.Name") : ToSubclass,CIM_key : ToSubclass,maxlen(256) : ToSubclass,Read : ToSubclass] string Name;
  [Propagated("CIM_SoftwareElement.Version") : ToSubclass,CIM_key : ToSubclass,Maxlen(64) : ToSubclass,Read : ToSubclass,Mappingstrings{"MIF.DMTF|ComponentID|001.3"} : ToSubclass] string Version;
  [Propagated("CIM_SoftwareElement.SoftwareElementState") : ToSubclass,CIM_key : ToSubclass,Read : ToSubclass] uint16 SoftwareElementState;
  [Propagated("CIM_SoftwareElement.SoftwareElementID") : ToSubclass,CIM_key : ToSubclass,maxlen(256) : ToSubclass,Read : ToSubclass] string SoftwareElementID;
  [Propagated("CIM_SoftwareElement.TargetOperatingSystem") : ToSubclass,CIM_key : ToSubclass,Read : ToSubclass,Mappingstrings{"MIF.DMTF|Software Component Information|002.5"} : ToSubclass] uint16 TargetOperatingSystem;
  [key : ToInstance ToSubclass DisableOverride,maxlen(256) : ToSubclass,Read : ToSubclass] string ActionID;
  [Read : ToSubclass] uint16 Direction;
  [maxlen(64) : ToSubclass,Read : ToSubclass] string Caption;
  [Read : ToSubclass] string Description;
  uint32 Invoke();
};

[Locale(1033) : ToInstance,UUID("{8875A39E-DB29-11d2-85FC-0000F8102E5F}") : ToInstance,Abstract] 
class CIM_DirectoryAction : CIM_Action
{
  [maxlen(1024) : ToSubclass,Read : ToSubclass] string DirectoryName;
};

[Locale(1033) : ToInstance,UUID("{87946AAC-DB22-11d2-85FC-0000F8102E5F}") : ToInstance,abstract] 
class CIM_CreateDirectoryAction : CIM_DirectoryAction
{
};

[Locale(1033) : ToInstance,Abstract,UUID("{B272D2EA-DB22-11d2-85FC-0000F8102E5F}") : ToInstance] 
class CIM_RemoveDirectoryAction : CIM_DirectoryAction
{
  [Read : ToSubclass] boolean MustBeEmpty;
};

[Locale(1033) : ToInstance,UUID("{2B590C72-DB2A-11d2-85FC-0000F8102E5F}") : ToInstance,Abstract] 
class CIM_FileAction : CIM_Action
{
};

[Locale(1033) : ToInstance,UUID("{73553260-DB22-11d2-85FC-0000F8102E5F}") : ToInstance,abstract] 
class CIM_CopyFileAction : CIM_FileAction
{
  [maxlen(1024) : ToSubclass,Read : ToSubclass] string Source;
  [maxlen(1024) : ToSubclass,Read : ToSubclass] string Destination;
  [Read : ToSubclass] boolean DeleteAfterCopy;
};

[Locale(1033) : ToInstance,UUID("{C75D89F8-DB30-11d2-85FC-0000F8102E5F}") : ToInstance,abstract] 
class CIM_RemoveFileAction : CIM_FileAction
{
  [maxlen(1024) : ToSubclass,Read : ToSubclass] string File;
};

[Locale(1033) : ToInstance,UUID("{4B82D255-E3CD-11d2-8601-0000F8102E5F}") : ToInstance,Association : ToInstance ToSubclass DisableOverride,Aggregation : ToSubclass,Abstract] 
class CIM_SoftwareElementActions
{
  [Min(1) : ToSubclass,Max(1) : ToSubclass,Aggregate : ToSubclass,Read : ToSubclass] CIM_SoftwareElement Ref Element;
  [Min(0) : ToSubclass,Max(FALSE) : ToSubclass,Weak : ToSubclass,Read : ToSubclass] CIM_Action Ref Action;
};

[Locale(1033) : ToInstance,UUID("{A91081E2-DB37-11d2-85FC-0000F8102E5F}") : ToInstance,Abstract] 
class CIM_SoftwareFeatureSoftwareElements : CIM_Component
{
  [Min(0) : ToSubclass,Max(FALSE) : ToSubclass,Read : ToSubclass] CIM_SoftwareFeature Ref GroupComponent;
  [Min(1) : ToSubclass,Max(FALSE) : ToSubclass,Read : ToSubclass] CIM_SoftwareElement Ref PartComponent;
};

[Locale(1033) : ToInstance,UUID("{7C39D12A-DB2B-11d2-85FC-0000F8102E5F}") : ToInstance,Association : ToInstance ToSubclass DisableOverride,Aggregation : ToSubclass,Abstract] 
class CIM_ProductSoftwareFeatures
{
  [Min(0) : ToSubclass,Max(FALSE) : ToSubclass,Aggregate : ToSubclass,Read : ToSubclass] CIM_Product Ref Product;
  [Min(1) : ToSubclass,Max(FALSE) : ToSubclass,Weak : ToSubclass,Read : ToSubclass] CIM_SoftwareFeature Ref Component;
};

[Locale(1033) : ToInstance,UUID("{A7B05028-DB2A-11d2-85FC-0000F8102E5F}") : ToInstance,Association : ToInstance ToSubclass DisableOverride,Abstract] 
class CIM_InstalledSoftwareElement
{
  [Min(0) : ToSubclass,Max(FALSE) : ToSubclass,Read : ToSubclass] CIM_SoftwareElement Ref Software;
  [Min(0) : ToSubclass,Max(FALSE) : ToSubclass,Read : ToSubclass] CIM_ComputerSystem Ref System;
};

[Locale(1033) : ToInstance,UUID("{24783E8A-DB31-11d2-85FC-0000F8102E5F}") : ToInstance,Association : ToInstance ToSubclass DisableOverride,Aggregation : ToSubclass,Abstract] 
class CIM_SoftwareElementChecks
{
  [Min(1) : ToSubclass,Max(1) : ToSubclass,Aggregate : ToSubclass,Read : ToSubclass] CIM_SoftwareElement Ref Element;
  [Min(0) : ToSubclass,Max(FALSE) : ToSubclass,Weak : ToSubclass,Read : ToSubclass] CIM_Check Ref Check;
  [Read : ToSubclass] uint16 Phase;
};

[Locale(1033) : ToInstance,UUID("{714C00BA-DB37-11d2-85FC-0000F8102E5F}") : ToInstance,Abstract] 
class CIM_ServiceAccessBySAP : CIM_Dependency
{
  [Override("Antecedent"),Read : ToSubclass] CIM_Service Ref Antecedent;
  [Override("Dependent"),Read : ToSubclass] CIM_ServiceAccessPoint Ref Dependent;
};

[Locale(1033) : ToInstance,UUID("{149ADDEE-DB2A-11d2-85FC-0000F8102E5F}") : ToInstance,Abstract] 
class CIM_ExecuteProgram : CIM_Action
{
  [Read : ToSubclass] STRING CommandLine;
  [maxlen(1024) : ToSubclass,Read : ToSubclass] STRING ProgramPath;
};

[Locale(1033) : ToInstance,UUID("{ECDE0B90-DB2A-11d2-85FC-0000F8102E5F}") : ToInstance,Abstract] 
class CIM_ModifySettingAction : CIM_Action
{
  [Read : ToSubclass] UINT16 ActionType;
  [Maxlen(256) : ToSubclass,Read : ToSubclass] STRING EntryName;
  [Read : ToSubclass] STRING EntryValue;
  [Maxlen(1024) : ToSubclass,Read : ToSubclass] STRING FileName;
  [Maxlen(256) : ToSubclass,Read : ToSubclass] STRING SectionKey;
};

[Locale(1033) : ToInstance,UUID("{AB08D884-DB30-11d2-85FC-0000F8102E5F}") : ToInstance,Abstract] 
class CIM_RebootAction : CIM_Action
{
};

[Abstract,Association : ToInstance ToSubclass DisableOverride,Locale(1033) : ToInstance,UUID("{F127E50E-E3E0-11d2-8601-0000F8102E5F}") : ToInstance] 
class CIM_ActionSequence
{
  [Max(1) : ToSubclass,Min(0) : ToSubclass,Read : ToSubclass] CIM_Action Ref Next;
  [Max(1) : ToSubclass,Min(0) : ToSubclass,Read : ToSubclass] CIM_Action Ref Prior;
};

[Locale(1033) : ToInstance,UUID("{D3B1178A-DB29-11d2-85FC-0000F8102E5F}") : ToInstance,Abstract] 
class CIM_DiskSpaceCheck : CIM_Check
{
  [read : ToSubclass,ModelCorrespondence{"CIM_FileSystem.AvailableSpace "} : ToSubclass] UINT64 AvailableDiskSpace;
};

[Locale(1033) : ToInstance,UUID("{DC0E96FE-DB2A-11d2-85FC-0000F8102E5F}") : ToInstance,Abstract] 
class CIM_MemoryCheck : CIM_Check
{
  [ModelCorrespondence{"CIM_OperatingSystem.FreePhysicalMemory"} : ToSubclass,Read : ToSubclass] UINT64 MemorySize;
};

[Locale(1033) : ToInstance,UUID("{FEE8368A-DB2A-11d2-85FC-0000F8102E5F}") : ToInstance,Abstract] 
class CIM_OSVersionCheck : CIM_Check
{
  [maxlen(64) : ToSubclass,ModelCorrespondence{"CIM_OperatingSystem.Version"} : ToSubclass,Read : ToSubclass] STRING MaximumVersion;
  [maxlen(64) : ToSubclass,ModelCorrespondence{"CIM_OperatingSystem.Version"} : ToSubclass,Read : ToSubclass] STRING MinimumVersion;
};

[Locale(1033) : ToInstance,UUID("{DC1D8140-DB30-11d2-85FC-0000F8102E5F}") : ToInstance,Abstract] 
class CIM_SettingCheck : CIM_Check
{
  [Read : ToSubclass] UINT16 CheckType;
  [Maxlen(256) : ToSubclass,Read : ToSubclass] STRING EntryName;
  [Read : ToSubclass] STRING EntryValue;
  [Maxlen(1024) : ToSubclass,Read : ToSubclass] STRING FileName;
  [Maxlen(256) : ToSubclass,Read : ToSubclass] STRING SectionKey;
};

[Locale(1033) : ToInstance,UUID("{4D23FBD0-DB31-11d2-85FC-0000F8102E5F}") : ToInstance,Abstract] 
class CIM_SoftwareElementVersionCheck : CIM_Check
{
  [maxlen(64) : ToSubclass,ModelCorrespondence{"CIM_SoftwareElement.Version"} : ToSubclass,Read : ToSubclass] STRING LowerSoftwareElementVersion;
  [maxlen(256) : ToSubclass,ModelCorrespondence{"CIM_SoftwareElement.Name"} : ToSubclass,Read : ToSubclass] STRING SoftwareElementName;
  [maxlen(64) : ToSubclass,ModelCorrespondence{"CIM_SoftwareElement.SoftwareElementState"} : ToSubclass,Read : ToSubclass] UINT16 SoftwareElementStateDesired;
  [maxlen(64) : ToSubclass,ModelCorrespondence{"CIM_SoftwareElement.TargetOperatingSystem"} : ToSubclass,Read : ToSubclass] UINT16 TargetOperatingSystemDesired;
  [maxlen(64) : ToSubclass,ModelCorrespondence{"CIM_SoftwareElement.Version"} : ToSubclass,Read : ToSubclass] STRING UpperSoftwareElementVersion;
};

[Locale(1033) : ToInstance,UUID("{A5AE701E-DB31-11d2-85FC-0000F8102E5F}") : ToInstance,Abstract] 
class CIM_SwapSpaceCheck : CIM_Check
{
  [ModelCorrespondence{"CIM_OperatingSystem.TotalSwapSpaceSize"} : ToSubclass,Read : ToSubclass] UINT64 SwapSpaceSize;
};

[Locale(1033) : ToInstance,UUID("{D368CA4A-DB31-11d2-85FC-0000F8102E5F}") : ToInstance,Abstract] 
class CIM_VersionCompatibilityCheck : CIM_Check
{
  [Read : ToSubclass] BOOLEAN AllowDownVersion;
  [Read : ToSubclass] BOOLEAN AllowMultipleVersions;
  [Read : ToSubclass] BOOLEAN Reinstall;
};

[Locale(1033) : ToInstance,UUID("{42B2EC5C-DB35-11d2-85FC-0000F8102E5F}") : ToInstance,Abstract] 
class CIM_BIOSFeatureBIOSElements : CIM_SoftwareFeatureSoftwareElements
{
  [Override("GroupComponent"),Read : ToSubclass] CIM_BIOSFeature Ref GroupComponent;
  [Override("PartComponent"),Read : ToSubclass] CIM_BIOSElement Ref PartComponent;
};

[Locale(1033) : ToInstance,UUID("{B3F86390-DB37-11d2-85FC-0000F8102E5F}") : ToInstance,Abstract] 
class CIM_VideoBIOSFeatureVideoBIOSElements : CIM_SoftwareFeatureSoftwareElements
{
  [Override("GroupComponent"),Read : ToSubclass] CIM_VideoBIOSFeature Ref GroupComponent;
  [Override("PartComponent"),Read : ToSubclass] CIM_VideoBIOSElement Ref PartComponent;
};

[Locale(1033) : ToInstance,UUID("{0E17B9EA-E3D3-11d2-8601-0000F8102E5F}") : ToInstance,Abstract] 
class CIM_ApplicationSystemSoftwareFeature : CIM_SystemComponent
{
  [Min(0) : ToSubclass,Override("GroupComponent"),Read : ToSubclass] CIM_ApplicationSystem Ref GroupComponent;
  [Min(0) : ToSubclass,Override("PartComponent"),Read : ToSubclass] CIM_SoftwareFeature Ref PartComponent;
};

[Locale(1033) : ToInstance,UUID("{1BE949DA-DB36-11d2-85FC-0000F8102E5F}") : ToInstance,Abstract] 
class CIM_DeviceSAPImplementation : CIM_Dependency
{
  [Override("Antecedent"),Read : ToSubclass] CIM_LogicalDevice Ref Antecedent;
  [Override("Dependent"),Read : ToSubclass] CIM_ServiceAccessPoint Ref Dependent;
};

[Locale(1033) : ToInstance,UUID("{7EFCC186-DB37-11d2-85FC-0000F8102E5F}") : ToInstance,Abstract] 
class CIM_SoftwareFeatureSAPImplementation : CIM_Dependency
{
  [Min(0) : ToSubclass,Override("Antecedent"),Read : ToSubclass] CIM_SoftwareFeature Ref Antecedent;
  [Min(0) : ToSubclass,Override("Dependent"),Read : ToSubclass] CIM_ServiceAccessPoint Ref Dependent;
};

[Locale(1033) : ToInstance,UUID("{8AC984F4-DB37-11d2-85FC-0000F8102E5F}") : ToInstance,Abstract] 
class CIM_SoftwareFeatureServiceImplementation : CIM_Dependency
{
  [Min(0) : ToSubclass,Override("Antecedent"),Read : ToSubclass] CIM_SoftwareFeature Ref Antecedent;
  [Min(0) : ToSubclass,Override("Dependent"),Read : ToSubclass] CIM_Service Ref Dependent;
};

[Locale(1033) : ToInstance,UUID("{422D175A-E3D5-11d2-8601-0000F8102E5F}") : ToInstance,Abstract] 
class CIM_SAPSAPDependency : CIM_Dependency
{
  [Override("Antecedent"),Read : ToSubclass] CIM_ServiceAccessPoint Ref Antecedent;
  [Override("Dependent"),Read : ToSubclass] CIM_ServiceAccessPoint Ref Dependent;
};

[Locale(1033) : ToInstance,UUID("{6EDF1DD2-DB35-11d2-85FC-0000F8102E5F}") : ToInstance,Abstract] 
class CIM_BootServiceAccessBySAP : CIM_ServiceAccessBySAP
{
  [Override("Antecedent"),Read : ToSubclass] CIM_BootService Ref Antecedent;
  [Override("Dependent"),Read : ToSubclass] CIM_BootSAP Ref Dependent;
};

[Locale(1033) : ToInstance,UUID("{88F073D8-DB35-11d2-85FC-0000F8102E5F}") : ToInstance,Abstract] 
class CIM_ClusterServiceAccessBySAP : CIM_ServiceAccessBySAP
{
  [Override("Antecedent"),Read : ToSubclass] CIM_ClusteringService Ref Antecedent;
  [Override("Dependent"),Read : ToSubclass] CIM_ClusteringSAP Ref Dependent;
};

[Locale(1033) : ToInstance,UUID("{652E2D58-DB37-11d2-85FC-0000F8102E5F}") : ToInstance,Abstract] 
class CIM_ServiceSAPDependency : CIM_Dependency
{
  [Override("Antecedent"),Read : ToSubclass] CIM_ServiceAccessPoint Ref Antecedent;
  [Override("Dependent"),Read : ToSubclass] CIM_Service Ref Dependent;
};

[Locale(1033) : ToInstance,UUID("{F6FEF20A-E3D2-11d2-8601-0000F8102E5F}") : ToInstance,Abstract] 
class CIM_BootSAP : CIM_ServiceAccessPoint
{
};

[Locale(1033) : ToInstance,UUID("{7D33100E-E3D3-11d2-8601-0000F8102E5F}") : ToInstance,Abstract] 
class CIM_BIOSFeature : CIM_SoftwareFeature
{
  [ArrayType("Indexed") : ToSubclass,MappingStrings{"MIF.DMTF|BIOS Characteristic|003.4"} : ToSubclass,ModelCorrespondence{"CIM_BIOSFeature.Characteristics"} : ToSubclass,Read : ToSubclass] STRING CharacteristicDescriptions[];
  [ArrayType("Indexed") : ToSubclass,MappingStrings{"MIF.DMTF|BIOS Characteristic|003.3"} : ToSubclass,ModelCorrespondence{"CIM_BIOSFeature.CharacteristicDescriptions"} : ToSubclass,ValueMap{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "160"} : ToSubclass,Read : ToSubclass] UINT16 Characteristics[];
};

[Locale(1033) : ToInstance,UUID("{BAE20634-E3D4-11d2-8601-0000F8102E5F}") : ToInstance,Abstract] 
class CIM_VideoBIOSFeature : CIM_SoftwareFeature
{
  [ArrayType("Indexed") : ToSubclass,MappingStrings{"MIF.DMTF|Video BIOS Characteristic|001.4"} : ToSubclass,ModelCorrespondence{"CIM_VideoBIOSFeature.Characteristics"} : ToSubclass,Read : ToSubclass] STRING CharacteristicDescriptions[];
  [ArrayType("Indexed") : ToSubclass,MappingStrings{"MIF.DMTF|Video BIOS Characteristic|001.3"} : ToSubclass,ModelCorrespondence{"CIM_VideoBIOSFeature.CharacteristicDescriptions"} : ToSubclass,ValueMap{"1", "2", "3", "4", "5", "6", "7", "8", "9"} : ToSubclass,Read : ToSubclass] UINT16 Characteristics[];
};

class CIM_USBDevice : CIM_LogicalDevice
{
  uint16 USBVersion;
  uint8 ClassCode;
  uint8 SubclassCode;
  uint8 ProtocolCode;
  uint8 NumberOfConfigs;
  [ModelCorrespondence{"CIM_USBDevice.CurrentAlternateSettings"} : ToSubclass] uint8 CurrentConfigValue;
  [ModelCorrespondence{"CIM_USBDevice.CurrentConfigValue"} : ToSubclass] uint8 CurrentAlternateSettings[];
  uint32 GetDescriptor([IN] uint8 RequestType,[IN] uint16 RequestValue,[IN] uint16 RequestIndex,[IN,OUT] uint16 RequestLength,[OUT] uint8 Buffer[]);
};

class CIM_USBHub : CIM_USBDevice
{
  boolean GangSwitched;
  uint8 NumberOfPorts;
};

class CIM_USBControllerHasHub : CIM_ControlledBy
{
  [Override("Antecedent"),Min(1) : ToSubclass,Max(1) : ToSubclass] CIM_USBController Ref Antecedent;
  [Override("Dependent"),Min(1) : ToSubclass] CIM_USBHub Ref Dependent;
};

[abstract,Locale(1033) : ToInstance] 
class Win32_Perf : CIM_StatisticalInformation
{
  uint64 Frequency_PerfTime;
  uint64 Timestamp_PerfTime;
  uint64 Timestamp_Sys100NS;
  uint64 Frequency_Sys100NS;
  uint64 Frequency_Object;
  uint64 Timestamp_Object;
};

[abstract,Locale(1033) : ToInstance] 
class Win32_PerfRawData : Win32_Perf
{
};

[abstract,Locale(1033) : ToInstance] 
class Win32_PerfFormattedData : Win32_Perf
{
};

[Locale(1033) : ToInstance,UUID("{BE46D060-7A7C-11d2-BC85-00104B2CF71C}") : ToInstance] 
class Win32_PrivilegesStatus : __ExtendedStatus
{
  [read : ToSubclass,MappingStrings{"Win32API|AccessControl|Windows NT Privileges"} : ToSubclass] string PrivilegesNotHeld[];
  [read : ToSubclass,MappingStrings{"Win32API|AccessControl|Windows NT Privileges"} : ToSubclass] string PrivilegesRequired[];
};

[Abstract,Locale(1033) : ToInstance,UUID("{8502C4DA-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_MethodParameterClass
{
};

Instance of __Win32Provider as $PINTERNAL
{
  Name = "WBEMCORE";
  ClsId = "{A83EF168-CA8D-11d2-B33D-00104BCC4B4A}";
  ImpersonationLevel = 1;
  PerUserInitialization = "FALSE";
  HostingModel = "WmiCore";
};

Instance of __InstanceProviderRegistration
{
  Provider = $PINTERNAL;
  SupportsGet = "TRUE";
  SupportsPut = "TRUE";
  SupportsEnumeration = "TRUE";
};

[Singleton : ToInstance ToSubclass,Dynamic,Provider("WBEMCORE") : ToInstance,Locale(1033) : ToInstance,UUID("{A83EF166-CA8D-11d2-B33D-00104BCC4B4A}") : ToInstance] 
class Win32_WMISetting : CIM_Setting
{
  [read : ToSubclass,MappingStrings{"Win32Registry|Software\\Microsoft\\WBEM|Installation Directory"} : ToSubclass] string InstallationDirectory;
  [read : ToSubclass,MappingStrings{"Win32Registry|Software\\Microsoft\\WBEM|Build"} : ToSubclass] string BuildVersion;
  [read : ToSubclass,MappingStrings{"Win32Registry|Software\\Microsoft\\WBEM|MOF Self-Install Directory"} : ToSubclass] string MofSelfInstallDirectory;
  [read : ToSubclass,MappingStrings{"Win32Registry|Software\\Microsoft\\WBEM\\CIMOM|Autorecover MOFs"} : ToSubclass] string AutorecoverMofs[];
  [read : ToSubclass,write : ToSubclass,MappingStrings{"Win32Registry|Software\\Microsoft\\WBEM\\CIMOM|AutostartWin9X"} : ToSubclass] uint32 AutoStartWin9X;
  [read : ToSubclass,write : ToSubclass,MappingStrings{"Win32Registry|Software\\Microsoft\\WBEM\\CIMOM|EnableAnonConnections"} : ToSubclass] boolean EnableAnonWin9xConnections;
  [read : ToSubclass,write : ToSubclass,MappingStrings{"Win32Registry|Software\\Microsoft\\WBEM\\CIMOM|Log File Max Size"} : ToSubclass] uint32 MaxLogFileSize;
  [read : ToSubclass,write : ToSubclass,MappingStrings{"Win32Registry|Software\\Microsoft\\WBEM\\CIMOM|Logging"} : ToSubclass] uint32 LoggingLevel;
  [read : ToSubclass,write : ToSubclass,MappingStrings{"Win32Registry|Software\\Microsoft\\WBEM\\CIMOM|Logging Directory"} : ToSubclass] string LoggingDirectory;
  [read : ToSubclass,MappingStrings{"Win32Registry|Software\\Microsoft\\WBEM\\CIMOM|Repository Directory"} : ToSubclass] string DatabaseDirectory;
  [read : ToSubclass,MappingStrings{"Win32Registry|Software\\Microsoft\\WBEM\\CIMOM|Max DB Size"} : ToSubclass] uint32 DatabaseMaxSize;
  [read : ToSubclass,write : ToSubclass,MappingStrings{"Win32Registry|Software\\Microsoft\\WBEM\\CIMOM|Backup Interval Threshold"} : ToSubclass] uint32 BackupInterval;
  [read : ToSubclass,write : ToSubclass,MappingStrings{"Win32API|Time Functions|GetTimeZoneInformation"} : ToSubclass] datetime BackupLastTime;
  [read : ToSubclass,write : ToSubclass,MappingStrings{"Win32Registry|Software\\Microsoft\\WBEM\\scripting|Enable for ASP"} : ToSubclass] boolean ASPScriptEnabled;
  [read : ToSubclass,write : ToSubclass,MappingStrings{"Win32Registry|Software\\Microsoft\\WBEM\\scripting|Default Namespace"} : ToSubclass] string ASPScriptDefaultNamespace = "\\\\root\\cimv2";
  [read : ToSubclass,write : ToSubclass,MappingStrings{"Win32Registry|Software\\Microsoft\\WBEM\\CIMOM|EnableEvents"} : ToSubclass] boolean EnableEvents;
  [read : ToSubclass,write : ToSubclass,MappingStrings{"Win32Registry|Software\\Microsoft\\WBEM\\CIMOM|High Threshold On Client Objects"} : ToSubclass] uint32 HighThresholdOnClientObjects;
  [read : ToSubclass,write : ToSubclass,MappingStrings{"Win32Registry|Software\\Microsoft\\WBEM\\CIMOM|Low Threshold On Client Objects"} : ToSubclass] uint32 LowThresholdOnClientObjects;
  [read : ToSubclass,write : ToSubclass,MappingStrings{"Win32Registry|Software\\Microsoft\\WBEM\\CIMOM|Max Wait On Events"} : ToSubclass] uint32 MaxWaitOnClientObjects;
  [read : ToSubclass,write : ToSubclass,MappingStrings{"Win32Registry|Software\\Microsoft\\WBEM\\CIMOM|High Threshold On Events"} : ToSubclass] uint32 HighThresholdOnEvents;
  [read : ToSubclass,write : ToSubclass,MappingStrings{"Win32Registry|Software\\Microsoft\\WBEM\\CIMOM|Low Threshold On Events"} : ToSubclass] uint32 LowThresholdOnEvents;
  [read : ToSubclass,write : ToSubclass,MappingStrings{"Win32Registry|Software\\Microsoft\\WBEM\\CIMOM|Max Wait On Events"} : ToSubclass] uint32 MaxWaitOnEvents;
  [read : ToSubclass,write : ToSubclass,MappingStrings{"Win32Registry|Software\\Microsoft\\WBEM\\CIMOM|EnableStartupHeapPreallocation"} : ToSubclass] boolean EnableStartupHeapPreallocation;
  [read : ToSubclass,MappingStrings{"Win32Registry|Software\\Microsoft\\WBEM\\CIMOM|LastStartupHeapPreallocation"} : ToSubclass] uint32 LastStartupHeapPreallocation;
};

[Dynamic,Provider("WBEMCORE") : ToInstance,Locale(1033) : ToInstance,UUID("{A83EF167-CA8D-11d2-B33D-00104BCC4B4A}") : ToInstance] 
class Win32_WMIElementSetting : CIM_ElementSetting
{
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("Element") : ToSubclass,MappingStrings{"WMI|Win32_Service"} : ToSubclass] Win32_Service Ref Element;
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("Setting") : ToSubclass,MappingStrings{"WMI|Win32_WMISetting"} : ToSubclass] Win32_WMISetting Ref Setting;
};

[Dynamic,Provider("CIMWin32") : ToInstance,SupportsUpdate,Locale(1033) : ToInstance,UUID("{8502C4B0-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_ComputerSystem : CIM_UnitaryComputerSystem
{
  [Read : ToSubclass,Write : ToSubclass,MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\CrashControl|AutoReboot"} : ToSubclass] boolean AutomaticResetBootOption;
  [Read : ToSubclass,Write : ToSubclass,MappingStrings{"WMI"} : ToSubclass] boolean AutomaticManagedPagefile;
  [Read : ToSubclass,MappingStrings{"WMI"} : ToSubclass] boolean AutomaticResetCapability;
  [Read : ToSubclass,MappingStrings{"WMI"} : ToSubclass] boolean BootROMSupported;
  [Read : ToSubclass,MappingStrings{"Win32API|GetSystemMetrics|SM_CLEANBOOT"} : ToSubclass] string BootupState;
  [Read : ToSubclass,Write : ToSubclass,MappingStrings{"Win32API|Time Structures|TIME_ZONE_INFORMATION|Bias"} : ToSubclass] sint16 CurrentTimeZone;
  [Read : ToSubclass,MappingStrings{"Win32API|GetComputerNameEx|ComputerNameDnsHostname"} : ToSubclass] string DNSHostName;
  [Read : ToSubclass,MappingStrings{"Win32API|Network Management Structures|WKSTA_INFO_100|wki100_langroup"} : ToSubclass] string Domain;
  [Read : ToSubclass,MappingStrings{"WMI"} : ToSubclass] boolean InfraredSupported;
  [Read : ToSubclass,MappingStrings{"SMBIOS|Type 1|System Information|Manufacturer"} : ToSubclass] string Manufacturer;
  [Read : ToSubclass,MappingStrings{"SMBIOS|Type 1|System Information|Product Name"} : ToSubclass] string Model;
  [Read : ToSubclass,MappingStrings{"Win32API|Network Management Structures|SERVER_INFO_101|sv101_type|SV_TYPE_SERVER"} : ToSubclass] boolean NetworkServerModeEnabled;
  [Read : ToSubclass,MappingStrings{"WMI"} : ToSubclass] uint8 OEMLogoBitmap[];
  [Read : ToSubclass,MappingStrings{"Win32API|GetPrivateProfileString|Support Information"} : ToSubclass] string SupportContactDescription[];
  [DEPRECATED : ToSubclass,Read : ToSubclass,write : ToSubclass,Privileges{"SeSystemEnvironmentPrivilege"} : ToSubclass,MappingStrings{"Win32API|GetPrivateProfileInt|Boot Loader|timeout"} : ToSubclass] uint16 SystemStartupDelay;
  [DEPRECATED : ToSubclass,Read : ToSubclass,Write : ToSubclass,Privileges{"SeSystemEnvironmentPrivilege"} : ToSubclass,MappingStrings{"Win32API|GetPrivateProfileSection|Operating Systems"} : ToSubclass] string SystemStartupOptions[];
  [DEPRECATED : ToSubclass,Read : ToSubclass,write : ToSubclass,Privileges{"SeSystemEnvironmentPrivilege"} : ToSubclass,MappingStrings{"WMI"} : ToSubclass] uint8 SystemStartupSetting;
  [Read : ToSubclass,MappingStrings{"Win32API|System Information Structures|SYSTEM_INFO|wProcessorArchitecture"} : ToSubclass,ValueMap{"X86-based PC", "MIPS-based PC", "Alpha-based PC", "Power PC", "SH-x PC", "StrongARM PC", "64-bit Intel PC", "x64-based PC", "Unknown", "X86-Nec98 PC"} : ToSubclass] string SystemType;
  [Read : ToSubclass,MappingStrings{"Win32API|System Information Functions|GetUserName"} : ToSubclass] string UserName;
  [Read : ToSubclass,MappingStrings{"Win32API|Directory Service (Ds) Structures| DSROLE_PRIMARY_DOMAIN_INFO_BASIC|DSROLE_MACHINE_ROLE| MachineRole"} : ToSubclass] uint16 DomainRole;
  [Read : ToSubclass,MappingStrings{"SMBIOS|Type 1|System Information|Wake-up Type"} : ToSubclass] uint16 WakeUpType;
  [Read : ToSubclass,MappingStrings{"SMBIOS|Type 11|OEM Strings"} : ToSubclass] string OEMStringArray[];
  [Read : ToSubclass,MappingStrings{"SMBIOS|Type 23|Capabilites|Boot Option on Limit"} : ToSubclass] uint16 BootOptionOnLimit;
  [Read : ToSubclass,MappingStrings{"SMBIOS|Type 23|Capabilities|Boot Option"} : ToSubclass] uint16 BootOptionOnWatchDog;
  [Read : ToSubclass,MappingStrings{"SMBIOS|Type 23|System Reset|Reset Count"} : ToSubclass] sint16 ResetCount;
  [Read : ToSubclass,MappingStrings{"SMBIOS|Type 23|System Reset| Reset Limit"} : ToSubclass] sint16 ResetLimit;
  [Read : ToSubclass,MappingStrings{"SMBIOS|Type 23|Timeout"} : ToSubclass] sint64 PauseAfterReset;
  [Read : ToSubclass,MappingStrings{"SMBIOS|Type 24|Hardware Security Settings|PowerOnPasswordStatus"} : ToSubclass] uint16 PowerOnPasswordStatus;
  [Read : ToSubclass,MappingStrings{"SMBIOS|Type 24|Hardware Security Settings|KeyboardPasswordStatus"} : ToSubclass] uint16 KeyboardPasswordStatus;
  [Read : ToSubclass,MappingStrings{"SMBIOS|Type 24|Hardware Security Settings|AdminPasswordStatus"} : ToSubclass] uint16 AdminPasswordStatus;
  [Read : ToSubclass,MappingStrings{"SMBIOS|Type 24|Hardware Security Settings|FrontPanelResetStatus"} : ToSubclass] uint16 FrontPanelResetStatus;
  [Read : ToSubclass,MappingStrings{"SMBIOS|Type 3|Bootup State"} : ToSubclass,ValueMap{"1", "2", "3", "4", "5", "6"} : ToSubclass] uint16 ChassisBootupState;
  [Read : ToSubclass,MappingStrings{"SMBIOS|Type 3|System Enclosure or Chassis|Power Supply State"} : ToSubclass,ValueMap{"1", "2", "3", "4", "5", "6"} : ToSubclass] uint16 PowerSupplyState;
  [Read : ToSubclass,MappingStrings{"SMBIOS|Type 3|System Enclosure or Chassis|Thermal State"} : ToSubclass,ValueMap{"1", "2", "3", "4", "5", "6"} : ToSubclass] uint16 ThermalState;
  [Read : ToSubclass,MappingStrings{"Win32API|Time Functions|GetTimeZoneInformation"} : ToSubclass] boolean DaylightInEffect;
  [Write : ToSubclass] boolean EnableDaylightSavingsTime;
  [Read : ToSubclass,MappingStrings{"Win32API|System Information Structures|SYSTEM_INFO|dwNumberOfProcessors"} : ToSubclass] uint32 NumberOfProcessors;
  [Read : ToSubclass,MappingStrings{"WMI"} : ToSubclass] uint32 NumberOfLogicalProcessors;
  [Read : ToSubclass,MappingStrings{"Win32API|Memory Management Structures|MEMORYSTATUS|dwTotalPhys"} : ToSubclass] uint64 TotalPhysicalMemory;
  [Read : ToSubclass,MappingStrings{""} : ToSubclass] boolean PartOfDomain;
  [Read : ToSubclass,MappingStrings{""} : ToSubclass,ValueMap{"0", "1", "2", "3", "4", "5", "6", "7", "8"} : ToSubclass] uint16 PCSystemType;
  [Read : ToSubclass,Write : ToSubclass,MappingStrings{""} : ToSubclass] string Workgroup;
  [Implemented,ValueMap{"0", ".."} : ToSubclass] uint32 Rename([In] string Name,[In] string Password,[In] string UserName);
  [Implemented,ValueMap{"0", ".."} : ToSubclass] uint32 JoinDomainOrWorkgroup([In] string Name,[In] string Password,[In] string UserName,[In] string AccountOU,[In,BitMap{"0", "1", "2", "4", "5", "6", "7", "8", "18"} : ToSubclass] uint32 FJoinOptions = 0);
  [Implemented,ValueMap{"0", ".."} : ToSubclass] uint32 UnjoinDomainOrWorkgroup([In] string Password,[In] string UserName,[In,BitMap{"2"} : ToSubclass] uint32 FUnjoinOptions = 0);
};

[Abstract,Locale(1033) : ToInstance,UUID("{86E30E86-7DB2-11d2-90CB-0060081A46FD}") : ToInstance] 
class Win32_ProgramGroupOrItem : CIM_LogicalElement
{
};

[Dynamic,Provider("CIMWin32") : ToInstance,Privileges{"SeRestorePrivilege"} : ToSubclass,Locale(1033) : ToInstance,UUID("{D52706F2-8045-11d2-90CE-0060081A46FD}") : ToInstance] 
class Win32_LogicalProgramGroup : Win32_ProgramGroupOrItem
{
  [read : ToSubclass,MappingStrings{"Win32API|CWbemProviderGlue Class Methods|GetAllInstances"} : ToSubclass] string GroupName;
  [read : ToSubclass,Override("Name") : ToSubclass,key : ToInstance ToSubclass DisableOverride,MaxLen(256) : ToSubclass,MappingStrings{"Win32API|CWbemProviderGlue Class Methods|GetAllInstances"} : ToSubclass] string Name;
  [read : ToSubclass,MappingStrings{"Win32API|CWbemProviderGlue Class Methods|GetAllInstances"} : ToSubclass] string UserName;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Privileges{"SeRestorePrivilege"} : ToSubclass,Locale(1033) : ToInstance,UUID("{86E30E82-7DB2-11d2-90CB-0060081A46FD}") : ToInstance] 
class Win32_LogicalProgramGroupItem : Win32_ProgramGroupOrItem
{
  [Override("Name") : ToSubclass,Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,MappingStrings{"Win32API|CWbemProviderGlue Class Methods|GetAllInstances"} : ToSubclass] string Name;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C4BB-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_Processor : CIM_Processor
{
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("DeviceId") : ToSubclass,MappingStrings{"Win32API|System Information Structures|SYSTEM_INFO|dwNumberOfProcessors"} : ToSubclass] string DeviceID;
  [read : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string Version;
  [read : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string Manufacturer;
  [read : ToSubclass,MappingStrings{"WMI"} : ToSubclass] uint32 L2CacheSize;
  [read : ToSubclass,MappingStrings{"WMI"} : ToSubclass] uint32 L2CacheSpeed;
  [read : ToSubclass,MappingStrings{"WMI"} : ToSubclass] uint32 L3CacheSize;
  [read : ToSubclass,MappingStrings{"WMI"} : ToSubclass] uint32 L3CacheSpeed;
  [read : ToSubclass,MappingStrings{"WMI"} : ToSubclass,ValueMap{"0", "1", "2", "3", "6", "9"} : ToSubclass] uint16 Architecture;
  [read : ToSubclass,MappingStrings{"WMI"} : ToSubclass] uint16 Level;
  [read : ToSubclass,MappingStrings{"WMI"} : ToSubclass] uint16 Revision;
  [read : ToSubclass,MappingStrings{"SMBIOS|Type 4|Processor Information|Status"} : ToSubclass] uint16 CpuStatus;
  [read : ToSubclass,MappingStrings{"SMBIOS|Type 4|Processor Information|Voltage"} : ToSubclass] uint16 CurrentVoltage;
  [read : ToSubclass,MappingStrings{"SMBIOS|Type 4|Processor Information|External Clock"} : ToSubclass] uint32 ExtClock;
  [read : ToSubclass,MappingStrings{"SMBIOS|Type 4|Processor Information|Processor ID"} : ToSubclass] string ProcessorId;
  [read : ToSubclass,MappingStrings{"SMBIOS|Type 4|Processor Information|Processor Type"} : ToSubclass,ValueMap{"1", "2", "3", "4", "5", "6"} : ToSubclass] uint16 ProcessorType;
  [read : ToSubclass,MappingStrings{"WMI"} : ToSubclass] uint32 NumberOfLogicalProcessors;
  [Read : ToSubclass,MappingStrings{"WMI"} : ToSubclass] uint32 NumberOfCores;
  [read : ToSubclass,MappingStrings{"SMBIOS|Type 4|Processor Information|Socket Designation"} : ToSubclass] string SocketDesignation;
  [read : ToSubclass,MappingStrings{"SMBIOS|Type 4|Processor Information|Voltage"} : ToSubclass] uint32 VoltageCaps;
  [Override("LoadPercentage") : ToSubclass,Read : ToSubclass,MappingStrings{"Win32API|Performance Data"} : ToSubclass] uint16 LoadPercentage;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{F25FE466-783E-11d2-90BF-0060081A46FD}") : ToInstance] 
class Win32_ShortcutFile : CIM_DataFile
{
  [read : ToSubclass,MappingStrings{"Win32API|_beginthreadex"} : ToSubclass] string Target;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C4C3-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_CodecFile : CIM_DataFile
{
  [read : ToSubclass,MappingStrings{"Win32Registry|SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\drivers.desc"} : ToSubclass] string Group;
  [read : ToSubclass,MappingStrings{"Win32Registry|System\\CurrentControlSet\\control\\MediaResources\\icm|Description"} : ToSubclass] string Description;
};

[SupportsCreate,CreateBy("Create"),SupportsDelete,DeleteBy("DeleteInstance"),Abstract,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C4C4-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_BaseService : CIM_Service
{
  [read : ToSubclass,MappingStrings{"Win32API|Service Structures|SERVICE_STATUS|dwControlsAccepted|SERVICE_ACCEPT_PAUSE_CONTINUE"} : ToSubclass] boolean AcceptPause;
  [read : ToSubclass,MappingStrings{"Win32API|Service Structures|SERVICE_STATUS|dwControlsAccepted|SERVICE_ACCEPT_STOP"} : ToSubclass] boolean AcceptStop;
  [read : ToSubclass,MappingStrings{"Win32API|Service Structures|QUERY_SERVICE_CONFIG|dwServiceType|SERVICE_INTERACTIVE_PROCESS"} : ToSubclass] boolean DesktopInteract;
  [read : ToSubclass,MappingStrings{"Win32API|Service Structures|QUERY_SERVICE_CONFIG|lpDisplayName"} : ToSubclass] string DisplayName;
  [read : ToSubclass,MappingStrings{"Win32API|Service Structures|QUERY_SERVICE_CONFIG|dwErrorControl"} : ToSubclass,ValueMap{"Ignore", "Normal", "Severe", "Critical", "Unknown"} : ToSubclass] string ErrorControl;
  [read : ToSubclass,MappingStrings{"Win32API|Service Structures|QUERY_SERVICE_CONFIG|lpBinaryPathName"} : ToSubclass] string PathName;
  [read : ToSubclass,MappingStrings{"Win32API|Service Structures|QUERY_SERVICE_CONFIG|dwServiceType"} : ToSubclass,ValueMap{"Kernel Driver", "File System Driver", "Adapter", "Recognizer Driver", "Own Process", "Share Process", "Interactive Process"} : ToSubclass] string ServiceType;
  [read : ToSubclass,MappingStrings{"Win32API|Service Structures|QUERY_SERVICE_CONFIG|lpServiceStartName"} : ToSubclass] string StartName;
  [read : ToSubclass,Override("StartMode") : ToSubclass,ValueMap{"Boot", "System", "Auto", "Manual", "Disabled"} : ToSubclass] string StartMode;
  [read : ToSubclass,write : ToSubclass,MappingStrings{"Win32API|Service Structures|SERVICE_STATUS|dwCurrentState "} : ToSubclass,ValueMap{"Stopped", "Start Pending", "Stop Pending", "Running", "Continue Pending", "Pause Pending", "Paused", "Unknown"} : ToSubclass] string State;
  [read : ToSubclass,MappingStrings{"Win32API|Service Structures|QUERY_SERVICE_CONFIG|dwTagId"} : ToSubclass] uint32 TagId;
  [Override("StartService") : ToSubclass,Implemented,ValueMap{"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", ".."} : ToSubclass,MappingStrings{"Win32API|Service Functions|StartService"} : ToSubclass] uint32 StartService();
  [Override("StopService") : ToSubclass,Implemented,ValueMap{"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", ".."} : ToSubclass,MappingStrings{"Win32API|Service Functions|ControlService|dwControl|SERVICE_CONTROL_STOP"} : ToSubclass] uint32 StopService();
  [Implemented,ValueMap{"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", ".."} : ToSubclass,MappingStrings{"Win32API|Service Functions|ControlService|dwControl|SERVICE_CONTROL_PAUSE"} : ToSubclass] uint32 PauseService();
  [Implemented,ValueMap{"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", ".."} : ToSubclass,MappingStrings{"Win32API|Service Functions|ControlService|dwControl|SERVICE_CONTROL_CONTINUE"} : ToSubclass] uint32 ResumeService();
  [Implemented,ValueMap{"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", ".."} : ToSubclass,MappingStrings{"Win32API|Service Functions|ControlService|dwControl|SERVICE_CONTROL_INTERROGATE"} : ToSubclass] uint32 InterrogateService();
  [Implemented,ValueMap{"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", ".."} : ToSubclass,MappingStrings{"Win32API|Service Functions|CreateService|dwDesiredAccess|SERVICE_USER_DEFINED_CONTROL"} : ToSubclass] uint32 UserControlService([In : ToSubclass,MappingStrings{"Win32API|Service Functions|ControlService|dwControl"} : ToSubclass] uint8 ControlCode);
  [read : ToSubclass,MappingStrings{"Win32API|Service Structures|SERVICE_STATUS|dwWin32ExitCode"} : ToSubclass] uint32 ExitCode;
  [read : ToSubclass,MappingStrings{"Win32API|Service Structures|SERVICE_STATUS|dwServiceSpecificExitCode"} : ToSubclass] uint32 ServiceSpecificExitCode;
  [Constructor,Implemented,Static : ToSubclass,ValueMap{"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", ".."} : ToSubclass,MappingStrings{"Win32API|Service Functions|CreateService"} : ToSubclass] uint32 Create([In : ToSubclass,MappingStrings{"Win32API|Service Functions|CreateServicelpServiceName"} : ToSubclass] string Name,[In : ToSubclass,MappingStrings{"Win32API|Service Functions|CreateServicelpDisplayName"} : ToSubclass] string DisplayName,[In : ToSubclass,MappingStrings{"Win32API|Service Structures|QUERY_SERVICE_CONFIG|lpBinaryPathName "} : ToSubclass] string PathName,[In : ToSubclass,MappingStrings{"Win32API|Service Structures|QUERY_SERVICE_CONFIG|dwServiceType"} : ToSubclass,BitMap{"0", "1", "2", "3", "4", "5", "8"} : ToSubclass] uint8 ServiceType,[In : ToSubclass,MappingStrings{"Win32API|Service Structures|QUERY_SERVICE_CONFIG|dwErrorControl"} : ToSubclass] uint8 ErrorControl,[In : ToSubclass,MappingStrings{"Win32API|Service Structures|QUERY_SERVICE_CONFIG|dwStartType"} : ToSubclass,ValueMap{"Boot", "System", "Automatic", "Manual", "Disabled"} : ToSubclass] string StartMode,[In : ToSubclass,MappingStrings{"Win32API|Service Structures|QUERY_SERVICE_CONFIG|dwServiceType|SERVICE_INTERACTIVE_PROCESS"} : ToSubclass] boolean DesktopInteract,[In : ToSubclass,MappingStrings{"Win32API|Service Structures|QUERY_SERVICE_CONFIG|lpServiceStartName"} : ToSubclass] string StartName,[In : ToSubclass,MappingStrings{"Win32API|Service Functions|CreateService|lpPassword"} : ToSubclass] string StartPassword,[In : ToSubclass,MappingStrings{"Win32API|Service Structures|QUERY_SERVICE_CONFIG|lpLoadOrderGroup"} : ToSubclass] string LoadOrderGroup,[In : ToSubclass,MappingStrings{"Win32API|Service Structures|QUERY_SERVICE_CONFIG|lpDependencies"} : ToSubclass] string LoadOrderGroupDependencies[],[In : ToSubclass,MappingStrings{"Win32API|Service Structures|QUERY_SERVICE_CONFIG|lpDependencies"} : ToSubclass] string ServiceDependencies[]);
  [Implemented,ValueMap{"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", ".."} : ToSubclass,MappingStrings{"Win32API|Service Functions|ChangeServiceConfig"} : ToSubclass] uint32 Change([In : ToSubclass,MappingStrings{"Win32API|Service Structures|QUERY_SERVICE_CONFIG|lpDisplayName"} : ToSubclass] string DisplayName,[In : ToSubclass,MappingStrings{"Win32API|Service Structures|QUERY_SERVICE_CONFIG|lpBinaryPathName"} : ToSubclass] string PathName,[In : ToSubclass,MappingStrings{"Win32API|Service Structures|QUERY_SERVICE_CONFIG|dwServiceType"} : ToSubclass,BitMap{"0", "1", "2", "3", "4", "5", "8"} : ToSubclass] uint8 ServiceType,[In : ToSubclass,MappingStrings{"Win32API|Service Structures|QUERY_SERVICE_CONFIG|dwErrorControl"} : ToSubclass] uint8 ErrorControl,[In : ToSubclass,MappingStrings{"Win32API|Service Structures|QUERY_SERVICE_CONFIG|dwStartType"} : ToSubclass,ValueMap{"Boot", "System", "Automatic", "Manual", "Disabled"} : ToSubclass] string StartMode,[In : ToSubclass,MappingStrings{"Win32API|Service Structures|QUERY_SERVICE_CONFIG|dwServiceType|SERVICE_INTERACTIVE_PROCESS"} : ToSubclass] boolean DesktopInteract,[In : ToSubclass,MappingStrings{"Win32API|Service Structures|QUERY_SERVICE_CONFIG|lpServiceStartName"} : ToSubclass] string StartName,[In : ToSubclass,MappingStrings{"Win32API|Service Functions|CreateService|lpPassword"} : ToSubclass] string StartPassword,[In : ToSubclass,MappingStrings{"Win32API|Service Structures|QUERY_SERVICE_CONFIG|lpLoadOrderGroup"} : ToSubclass] string LoadOrderGroup,[In : ToSubclass,MappingStrings{"Win32API|Service Structures|QUERY_SERVICE_CONFIG|lpDependencies"} : ToSubclass] string LoadOrderGroupDependencies[],[In : ToSubclass,MappingStrings{"Win32API|Service Structures|QUERY_SERVICE_CONFIG|lpDependencies"} : ToSubclass] string ServiceDependencies[]);
  [Implemented,ValueMap{"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", ".."} : ToSubclass,MappingStrings{"Service Functions|ChangeServiceConfig|dwStartType"} : ToSubclass] uint32 ChangeStartMode([In : ToSubclass,MappingStrings{"Win32API|Service Structures|QUERY_SERVICE_CONFIG|dwStartType"} : ToSubclass,ValueMap{"Boot", "System", "Automatic", "Manual", "Disabled"} : ToSubclass] string StartMode = "Automatic");
  [Destructor,Implemented,ValueMap{"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", ".."} : ToSubclass,MappingStrings{"Win32API|Service Functions|ChangeServiceConfig|DeleteService"} : ToSubclass] uint32 Delete();
};

[Dynamic,Provider("CIMWin32") : ToInstance,SupportsUpdate,Locale(1033) : ToInstance,UUID("{8502C4C5-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_SystemDriver : Win32_BaseService
{
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C4C7-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_Directory : CIM_Directory
{
};

[DEPRECATED : ToSubclass,Dynamic,Provider("CIMWin32") : ToInstance,Privileges{"SeCreatePagefilePrivilege"} : ToSubclass,Locale(1033) : ToInstance,UUID("{8502C4C6-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance,SupportsCreate,CreateBy("PutInstance"),SupportsDelete,DeleteBy("DeleteInstance"),SupportsUpdate] 
class Win32_PageFile : CIM_DataFile
{
  [DEPRECATED : ToSubclass,read : ToSubclass,Override("Name") : ToSubclass,MappingStrings{"Win32DLL|NTDLL.DLL|NtQuerySystemInformation|SystemPageFileInformation|PageFileName"} : ToSubclass] string Name;
  [DEPRECATED : ToSubclass,read : ToSubclass,MappingStrings{"Win32API|Memory Management Structures|MEMORYSTATUS|dwAvailPageFile"} : ToSubclass] uint32 FreeSpace;
  [DEPRECATED : ToSubclass,read : ToSubclass,MappingStrings{"Win32Regstry|System\\CurrentControlSet\\Control\\Session Manager\\Memory Management|PagingFiles"} : ToSubclass] uint32 InitialSize;
  [DEPRECATED : ToSubclass,read : ToSubclass,MappingStrings{"Win32API|Memory Management Structures|MEMORYSTATUS|dwTotalPageFile"} : ToSubclass] uint32 MaximumSize;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Privileges{"SeCreatePagefilePrivilege"} : ToSubclass,Locale(1033) : ToInstance,UUID("{9B3AC16A-EEE5-11d2-B13B-00105A1F77A1}") : ToInstance] 
class Win32_PageFileUsage : CIM_LogicalElement
{
  [read : ToSubclass,MappingStrings{"Win32API|MEMORYSTATUS|dwTotalPageFile"} : ToSubclass] uint32 AllocatedBaseSize;
  [read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("Name") : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string Name;
  [read : ToSubclass,MappingStrings{"Win32API|MEMORYSTATUS"} : ToSubclass] uint32 CurrentUsage;
  [read : ToSubclass,MappingStrings{"WMI"} : ToSubclass] uint32 PeakUsage;
  [read : ToSubclass,MappingStrings{"Win32Registry|System\\CurrentControlSet\\Control\\Session Manager\\Memory Management|TempPageFile"} : ToSubclass] boolean TempPageFile;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Privileges{"SeCreatePagefilePrivilege"} : ToSubclass,Locale(1033) : ToInstance,UUID("{514A9270-C856-11D2-B364-00105A1f77A1}") : ToInstance,SupportsCreate,CreateBy("PutInstance"),SupportsDelete,DeleteBy("DeleteInstance"),SupportsUpdate] 
class Win32_PageFileSetting : CIM_Setting
{
  [Read : ToSubclass,Write : ToSubclass,Key : ToInstance ToSubclass DisableOverride,MappingStrings{"WMI"} : ToSubclass] string Name;
  [Read : ToSubclass,Write : ToSubclass,MappingStrings{"Win32Registry|System\\CurrentControlSet\\Control\\Session Manager\\Memory Management|PagingFiles"} : ToSubclass] uint32 InitialSize;
  [Read : ToSubclass,Write : ToSubclass,MappingStrings{"Win32Registry|System\\CurrentControlSet\\Control\\Session Manager\\Memory Management|PagingFiles"} : ToSubclass] uint32 MaximumSize;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8E7F70E8-C856-11D2-B364-00105A1F77A1}") : ToInstance] 
class Win32_PageFileElementSetting : CIM_ElementSetting
{
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("Element") : ToSubclass,MappingStrings{"WMI|Win32_PageFileUsage"} : ToSubclass] Win32_PageFileUsage Ref Element;
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("Setting") : ToSubclass,MappingStrings{"WMI|Win32_PageFileSetting"} : ToSubclass] Win32_PageFileSetting Ref Setting;
};

[Dynamic,Provider("CIMWin32") : ToInstance,SupportsUpdate,Locale(1033) : ToInstance,UUID("{8502C4D7-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_Registry : CIM_LogicalElement
{
  [read : ToSubclass,MappingStrings{"Win32API|NTDLL.DLL|NtQuerySystemInformation|SystemRegistryQuotaInformation"} : ToSubclass] uint32 CurrentSize;
  [read : ToSubclass,write : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control|RegistrySizeLimit"} : ToSubclass] uint32 ProposedSize;
  [read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control|RegistrySizeLimit"} : ToSubclass] uint32 MaximumSize;
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("Name") : ToSubclass,MappingStrings{"Win32Registry"} : ToSubclass] string Name;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C4E0-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance,SupportsCreate,CreateBy("Create"),SupportsDelete,DeleteBy("Delete")] 
class Win32_ScheduledJob : CIM_Job
{
  [read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,MappingStrings{"Win32API|Network Management Structures|AT_ENUM|JobId"} : ToSubclass] uint32 JobId;
  [read : ToSubclass,MappingStrings{"Win32API|Network Management Structures|AT_INFO|Command"} : ToSubclass] string Command;
  [read : ToSubclass,Override("StartTime") : ToSubclass,MappingStrings{"Win32API|Network Management Structures|AT_ENUM|JobTime"} : ToSubclass] datetime StartTime;
  [read : ToSubclass,MappingStrings{"Win32API|Network Management Structures|AT_INFO|Flags|JOB_RUN_PERIODICALLY"} : ToSubclass] boolean RunRepeatedly;
  [read : ToSubclass,MappingStrings{"Win32API|Network Management Structures|AT_INFO|Flags|JOB_NONINTERACTIVE"} : ToSubclass] boolean InteractWithDesktop;
  [read : ToSubclass,MappingStrings{"Win32API|Network Management Structures|AT_INFO|DaysOfWeek"} : ToSubclass] uint32 DaysOfWeek;
  [read : ToSubclass,MappingStrings{"Win32API|Network Management Structures|AT_INFO|DaysOfMonth"} : ToSubclass] uint32 DaysOfMonth;
  [read : ToSubclass,Override("JobStatus") : ToSubclass,MappingStrings{"Win32API|Network Management Structures|AT_ENUM|Flags|JOB_EXEC_ERROR"} : ToSubclass] string JobStatus;
  [Constructor,Static : ToSubclass,Implemented,ValueMap{"0", "1", "2", "8", "9", "21", "22", ".."} : ToSubclass,MappingStrings{"Win32API|Network Management Functions|NetScheduleJobAdd"} : ToSubclass] uint32 Create([In : ToSubclass,MappingStrings{"Win32API|Network Management Structures|AT_INFO|Command"} : ToSubclass] string Command,[In : ToSubclass,MappingStrings{"Win32API|Network Management Structures|AT_ENUM|JobTime"} : ToSubclass] datetime StartTime,[In : ToSubclass,Optional : ToSubclass,MappingStrings{"Win32API|Network Management Structures|AT_INFO|Flags|JOB_RUN_PERIODICALLY"} : ToSubclass] boolean RunRepeatedly,[In : ToSubclass,Optional : ToSubclass,MappingStrings{"Win32API|Network Management Structures|AT_INFO|DaysOfWeek"} : ToSubclass] uint32 DaysOfWeek,[In : ToSubclass,Optional : ToSubclass,MappingStrings{"Win32API|Network Management Structures|AT_INFO|DaysOfMonth"} : ToSubclass] uint32 DaysOfMonth,[In : ToSubclass,Optional : ToSubclass,MappingStrings{"Win32API|Network Management Structures|AT_INFO|Flags|JOB_NONINTERACTIVE"} : ToSubclass] boolean InteractWithDesktop,[Out : ToSubclass,MappingStrings{"Win32API|Network Management Structures|AT_ENUM|JobId"} : ToSubclass] uint32 JobId);
  [Destructor,Implemented,ValueMap{"0", "1", "2", "8", "9", "21", "22", ".."} : ToSubclass,MappingStrings{"Win32API|Network Management Functions|NetScheduleJobDel"} : ToSubclass] uint32 Delete();
};

[Dynamic,Provider("CIMWin32") : ToInstance,SupportsUpdate,Locale(1033) : ToInstance,UUID("{8502C4D9-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_Service : Win32_BaseService
{
  [read : ToSubclass,MappingStrings{"Win32API|Service Structures|SERVICE_STATUS|dwCheckPoint"} : ToSubclass] uint32 CheckPoint;
  [read : ToSubclass,MappingStrings{"Win32API|Service Structures|SERVICE_STATUS|dwWaitHint"} : ToSubclass] uint32 WaitHint;
  [read : ToSubclass,MappingStrings{"Win32API|Service Structures|SERVICE_STATUS_PROCESS|dwProcessId"} : ToSubclass] uint32 ProcessId;
  [implemented,ValueMap{"0", "2", "8", "9", "21", ".."} : ToSubclass,Privileges{"SeSecurityPrivilege"} : ToSubclass] uint32 GetSecurityDescriptor([out] Win32_SecurityDescriptor Descriptor);
  [implemented,ValueMap{"0", "2", "8", "9", "21", ".."} : ToSubclass,Privileges{"SeSecurityPrivilege"} : ToSubclass] uint32 SetSecurityDescriptor([in] Win32_SecurityDescriptor Descriptor);
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C4D6-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance,SupportsCreate,CreateBy("Create"),SupportsDelete,DeleteBy("DeleteInstance")] 
class Win32_Share : CIM_LogicalElement
{
  [read : ToSubclass,MappingStrings{"Win32API|Network Management Structures|SHARE_INFO_502|shi502_max_uses"} : ToSubclass] boolean AllowMaximum;
  [read : ToSubclass,MappingStrings{"Win32API|Network Management Structures|SHARE_INFO_502|shi502_max_uses"} : ToSubclass] uint32 MaximumAllowed;
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("Name") : ToSubclass,MappingStrings{"Win32API|Network Management Structures|SHARE_INFO_1|shi1_netname"} : ToSubclass] string Name;
  [read : ToSubclass,MappingStrings{"Win32API|Network Management Structures|SHARE_INFO_502|shi502_path"} : ToSubclass] string Path;
  [read : ToSubclass,MappingStrings{"Win32API|Network Management Structures|SHARE_INFO_502|shi502_type"} : ToSubclass,ValueMap{"0", "1", "2", "3", "2147483648", "2147483649", "2147483650", "2147483651"} : ToSubclass] uint32 Type;
  [read : ToSubclass,DEPRECATED : ToSubclass] uint32 AccessMask;
  [Constructor,Static,Implemented,MappingStrings{"Win32API|Network Management Functions|NetShareAdd"} : ToSubclass] uint32 Create([In : ToSubclass,MappingStrings{"Win32API|Network Management Structures|SHARE_INFO_502|shi502_path"} : ToSubclass] string Path,[In : ToSubclass,MappingStrings{"Win32API|Network Management Structures|SHARE_INFO_1|shi1_netname"} : ToSubclass] string Name,[In : ToSubclass,MappingStrings{"Win32API|Network Management Structures|SHARE_INFO_502|shi502_type"} : ToSubclass] uint32 Type,[In : ToSubclass,Optional : ToSubclass,MappingStrings{"Win32API|Network Management Structures|SHARE_INFO_502|shi502_max_uses"} : ToSubclass] uint32 MaximumAllowed,[In : ToSubclass,Optional : ToSubclass,MappingStrings{"Win32API|Network Management Structures|SHARE_INFO_1|shi1_remark"} : ToSubclass] string Description,[In : ToSubclass,Optional : ToSubclass,MappingStrings{"Win32API|Network Management Structures|SHARE_INFO_502|shi502_passwd"} : ToSubclass] string Password,[In : ToSubclass,Optional : ToSubclass,MappingStrings{"WMI|Win32_SecurityDescriptor"} : ToSubclass] Win32_SecurityDescriptor Access);
  [Implemented,MappingStrings{"Win32API|Network Management Functions|NetShareSetInfo"} : ToSubclass] uint32 SetShareInfo([In : ToSubclass,Optional : ToSubclass,MappingStrings{"Win32API|Network Management Structures|SHARE_INFO_502|shi502_max_uses"} : ToSubclass] uint32 MaximumAllowed,[In : ToSubclass,Optional : ToSubclass,MappingStrings{"Win32API|Network Management Structures|SHARE_INFO_1|shi1_remark"} : ToSubclass] string Description,[In : ToSubclass,Optional : ToSubclass,MappingStrings{"WMI|Win32_SecurityDescriptor"} : ToSubclass] Win32_SecurityDescriptor Access);
  [Implemented,MappingStrings{"Win32API|Access Control Functions|GetEffectiveRightsFromAcl"} : ToSubclass] uint32 GetAccessMask();
  [Destructor,Implemented,MappingStrings{"Win32API|Network Management Functions|NetShareDel"} : ToSubclass] uint32 Delete();
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C4D6-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance,SupportsCreate,CreateBy("Create"),SupportsDelete,DeleteBy("DeleteInstance")] 
class Win32_ClusterShare : Win32_Share
{
  [read : ToSubclass,Override("ServerName") : ToSubclass,MappingStrings{"Win32API|Network Management Structures|SHARE_INFO_503|shi503_servername"} : ToSubclass] string ServerName;
  [Constructor,Static,Implemented,MappingStrings{"Win32API|Network Management Functions|NetShareAdd"} : ToSubclass] uint32 Create([In : ToSubclass,MappingStrings{"Win32API|Network Management Structures|SHARE_INFO_502|shi502_path"} : ToSubclass] string Path,[In : ToSubclass,MappingStrings{"Win32API|Network Management Structures|SHARE_INFO_1|shi1_netname"} : ToSubclass] string Name,[In : ToSubclass,MappingStrings{"Win32API|Network Management Structures|SHARE_INFO_502|shi502_type"} : ToSubclass] uint32 Type,[In : ToSubclass,Optional : ToSubclass,MappingStrings{"Win32API|Network Management Structures|SHARE_INFO_502|shi502_max_uses"} : ToSubclass] uint32 MaximumAllowed,[In : ToSubclass,Optional : ToSubclass,MappingStrings{"Win32API|Network Management Structures|SHARE_INFO_1|shi1_remark"} : ToSubclass] string Description,[In : ToSubclass,Optional : ToSubclass,MappingStrings{"Win32API|Network Management Structures|SHARE_INFO_502|shi502_passwd"} : ToSubclass] string Password,[In : ToSubclass,Optional : ToSubclass,MappingStrings{"WMI|Win32_SecurityDescriptor"} : ToSubclass] Win32_SecurityDescriptor Access);
  [Implemented,MappingStrings{"Win32API|Network Management Functions|NetShareSetInfo"} : ToSubclass] uint32 SetShareInfo([In : ToSubclass,Optional : ToSubclass,MappingStrings{"Win32API|Network Management Structures|SHARE_INFO_502|shi502_max_uses"} : ToSubclass] uint32 MaximumAllowed,[In : ToSubclass,Optional : ToSubclass,MappingStrings{"Win32API|Network Management Structures|SHARE_INFO_1|shi1_remark"} : ToSubclass] string Description,[In : ToSubclass,Optional : ToSubclass,MappingStrings{"WMI|Win32_SecurityDescriptor"} : ToSubclass] Win32_SecurityDescriptor Access);
  [Implemented,MappingStrings{"Win32API|Access Control Functions|GetEffectiveRightsFromAcl"} : ToSubclass] uint32 GetAccessMask();
  [Destructor,Implemented,MappingStrings{"Win32API|Network Management Functions|NetShareDel"} : ToSubclass] uint32 Delete();
};

[Association : ToInstance ToSubclass DisableOverride,Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C511-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_ShareToDirectory
{
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,MappingStrings{"WMI|Win32_Share"} : ToSubclass] Win32_Share Ref Share;
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,MappingStrings{"CIM|CIM_Directory"} : ToSubclass] CIM_Directory Ref SharedElement;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{074737F0-ACBC-11d2-ABF6-00805F538618}") : ToInstance] 
class Win32_AssociatedProcessorMemory : CIM_AssociatedProcessorMemory
{
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("Antecedent") : ToSubclass,MappingStrings{"WMI|Win32_CacheMemory"} : ToSubclass] Win32_CacheMemory Ref Antecedent;
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("Dependent") : ToSubclass,MappingStrings{"WMI|Win32_Processor"} : ToSubclass] Win32_Processor Ref Dependent;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{FAF76B95-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class Win32_BaseBoard : CIM_Card
{
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,MaxLen(256) : ToSubclass,Override("Tag") : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string Tag;
  [Read : ToSubclass,MappingStrings{"SMBIOS|Type 2|Product"} : ToSubclass] string Product;
  [Read : ToSubclass,MappingStrings{"SMBIOS|Type 12|Configuration Options Strings"} : ToSubclass] string ConfigOptions[];
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C4E1-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_BIOS : CIM_BIOSElement
{
  [read : ToSubclass] datetime ReleaseDate;
  [read : ToSubclass,Override("Version") : ToSubclass,Mappingstrings{"Win32Registry|HARDWARE\\Description\\System|SystemBiosVersion"} : ToSubclass] string Version;
  [Read : ToSubclass,MappingStrings{"SMBIOS|Type 0|BIOS Characteristics"} : ToSubclass] uint16 BiosCharacteristics[];
  [read : ToSubclass,MappingStrings{"SMBIOS|Type 13|Installable Languages"} : ToSubclass] uint16 InstallableLanguages;
  [read : ToSubclass,MappingStrings{"SMBIOS|Type 13|Language Strings"} : ToSubclass] string ListOfLanguages[];
  [read : ToSubclass,MappingStrings{"SMBIOS|Type 13|Current Language"} : ToSubclass] string CurrentLanguage;
  [read : ToSubclass,MappingStrings{"SMBIOS|CSMBios|Init"} : ToSubclass] boolean SMBIOSPresent;
  [read : ToSubclass,MappingStrings{"SMBIOS|CSMBios|GetVersion"} : ToSubclass] uint16 SMBIOSMajorVersion;
  [read : ToSubclass,MappingStrings{"SMBIOS|CSMBios|GetVersion"} : ToSubclass] uint16 SMBIOSMinorVersion;
  [read : ToSubclass,MappingStrings{"SMBIOS|Type 0|BIOS Version"} : ToSubclass] string SMBIOSBIOSVersion;
  [read : ToSubclass] string BIOSVersion[];
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C4E2-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_BootConfiguration : CIM_Setting
{
  [read : ToSubclass,MappingStrings{"Win32API|Process and Thread Functions|GetEnvironmentVariable|WinBootDir"} : ToSubclass] string BootDirectory;
  [read : ToSubclass,MappingStrings{"Win32API|Process and Thread Functions|GetEnvironmentVariable|WinBootDir"} : ToSubclass] string ConfigurationPath;
  [read : ToSubclass,MappingStrings{"Win32API|File Functions|GetDriveType"} : ToSubclass] string LastDrive;
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,MaxLen(256) : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string Name;
  [read : ToSubclass,MappingStrings{"Win32API|File Functions|GetTempPath"} : ToSubclass] string ScratchDirectory;
  [read : ToSubclass,MappingStrings{"Win32API|File Functions|GetTempPath"} : ToSubclass] string TempDirectory;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Privileges{"SeRestorePrivilege"} : ToSubclass,Locale(1033) : ToInstance,UUID("{8502C4E3-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_Desktop : CIM_Setting
{
  [read : ToSubclass,MappingStrings{"Win32Registry|.DEFAULT\\Control Panel\\Desktop\\WindowMetrics|BorderWidth"} : ToSubclass] uint32 BorderWidth;
  [read : ToSubclass,MappingStrings{"Win32Registry|Control Panel\\Desktop|CoolSwitch"} : ToSubclass] boolean CoolSwitch;
  [read : ToSubclass,MappingStrings{"Win32Registry|Control Panel\\Desktop|CursorBlinkRate"} : ToSubclass] uint32 CursorBlinkRate;
  [read : ToSubclass,MappingStrings{"Win32Registry|Control Panel\\Desktop|DragFullWindows"} : ToSubclass] boolean DragFullWindows;
  [read : ToSubclass,MappingStrings{"Win32Registry|Control Panel\\Desktop|GridGranularity"} : ToSubclass] uint32 GridGranularity;
  [read : ToSubclass,MappingStrings{"Win32Registry|.DEFAULT\\Control Panel\\Desktop\\WindowMetrics|IconSpacing"} : ToSubclass] uint32 IconSpacing;
  [read : ToSubclass,MappingStrings{"Win32Registry|.DEFAULT\\Control Panel\\Desktop\\WindowMetrics|IconFont"} : ToSubclass] string IconTitleFaceName;
  [read : ToSubclass,MappingStrings{"Win32API|Font and Text Structures|LOGFONTW|lfHeight"} : ToSubclass] uint32 IconTitleSize;
  [read : ToSubclass,MappingStrings{"Win32Registry|.DEFAULT\\Control Panel\\Desktop\\WindowMetrics|IconTitleWrap"} : ToSubclass] boolean IconTitleWrap;
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,MappingStrings{"WMI"} : ToSubclass] string Name;
  [read : ToSubclass,MappingStrings{"Win32Registry|.DEFAULT\\Control Panel\\Desktop|Pattern"} : ToSubclass] string Pattern;
  [read : ToSubclass,MappingStrings{"Win32Registry|.DEFAULT\\Control Panel\\Desktop|ScreenSaveActive"} : ToSubclass] boolean ScreenSaverActive;
  [read : ToSubclass,MappingStrings{"Win32Registry|.DEFAULT\\Control Panel\\Desktop|SCRNSAVE.EXE"} : ToSubclass] string ScreenSaverExecutable;
  [read : ToSubclass,MappingStrings{"Win32Registry|.DEFAULT\\Control Panel\\Desktop|ScreenSaverIsSecure"} : ToSubclass] boolean ScreenSaverSecure;
  [read : ToSubclass,MappingStrings{"Win32Registry|.DEFAULT\\Control Panel\\Desktop|ScreenSaveTimeOut"} : ToSubclass] uint32 ScreenSaverTimeout;
  [read : ToSubclass,MappingStrings{"Win32Registry|.DEFAULT\\Control Panel\\Desktop|Wallpaper"} : ToSubclass] string Wallpaper;
  [read : ToSubclass,MappingStrings{"Win32Registry|.DEFAULT\\Control Panel\\Desktop|TileWallpaper"} : ToSubclass] boolean WallpaperTiled;
  [read : ToSubclass,MappingStrings{"Win32Registry|.DEFAULT\\Control Panel\\Desktop|WallpaperStyle"} : ToSubclass] boolean WallpaperStretched;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C4F4-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_SystemDevices : CIM_SystemDevice
{
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("GroupComponent") : ToSubclass,MappingStrings{"WMI|Win32_ComputerSystem"} : ToSubclass] Win32_ComputerSystem Ref GroupComponent;
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("PartComponent") : ToSubclass,MappingStrings{"CIM|CIM_LogicalDevice"} : ToSubclass] CIM_LogicalDevice Ref PartComponent;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{719A6839-C124-11d2-85E8-0000F8102E5F}") : ToInstance] 
class Win32_ComputerSystemProcessor : Win32_SystemDevices
{
  [Override("GroupComponent") : ToSubclass,MappingStrings{"WMI|Win32_ComputerSystem"} : ToSubclass] Win32_ComputerSystem Ref GroupComponent;
  [Override("PartComponent") : ToSubclass,MappingStrings{"WMI|Win32_Processor"} : ToSubclass] Win32_Processor Ref PartComponent;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{FAF76B96-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class Win32_ComputerSystemProduct : CIM_Product
{
  [read : ToSubclass,MappingStrings{"SMBIOS|Type 1|UUID"} : ToSubclass] String UUID;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C4FA-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_DependentService : CIM_ServiceServiceDependency
{
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("Dependent") : ToSubclass,MappingStrings{"WMI|Win32_BaseService"} : ToSubclass] Win32_BaseService Ref Dependent;
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("Antecedent") : ToSubclass,MappingStrings{"WMI|Win32_BaseService"} : ToSubclass] Win32_BaseService Ref Antecedent;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C4D1-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_DMAChannel : CIM_DMA
{
  [read : ToSubclass,MappingStrings{"Win32API|System Structures|CM_PARTIAL_RESOURCE_DESCRIPTOR|Dma|Port"} : ToSubclass] uint32 Port;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Privileges{"SeRestorePrivilege"} : ToSubclass,Locale(1033) : ToInstance,UUID("{8502C4D2-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance,SupportsCreate,CreateBy("PutInstance"),SupportsDelete,DeleteBy("DeleteInstance"),SupportsUpdate] 
class Win32_Environment : CIM_SystemResource
{
  [read : ToSubclass,write : ToSubclass,Override("Name") : ToSubclass,key : ToInstance ToSubclass DisableOverride,MappingStrings{"Win32Registry|System\\CurrentControlSet\\Control\\Session Manager\\Environment"} : ToSubclass] string Name;
  [read : ToSubclass,MappingStrings{"Win32Registry|System\\CurrentControlSet\\Control\\Session Manager\\Environment"} : ToSubclass] boolean SystemVariable;
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,MaxLen(260) : ToSubclass,MappingStrings{"Win32Registry|System\\CurrentControlSet\\Control\\Session Manager\\Environment"} : ToSubclass] string UserName;
  [read : ToSubclass,write : ToSubclass,MappingStrings{"Win32Registry|System\\CurrentControlSet\\Control\\Session Manager\\Environment"} : ToSubclass] string VariableValue;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C4D3-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_IRQResource : CIM_IRQ
{
  [read : ToSubclass,MappingStrings{"Win32API|System Structures|CM_PARTIAL_RESOURCE_DESCRIPTOR|Interrupt|Level"} : ToSubclass] uint32 Vector;
  [read : ToSubclass,MappingStrings{"Win32API|System Structures|RESOURCE_DESCRIPTOR|InterfaceType"} : ToSubclass] boolean Hardware;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C4D4-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_LoadOrderGroup : CIM_LogicalElement
{
  [read : ToSubclass,MappingStrings{"Win32Registry|System\\CurrentControlSet\\Control\\GroupOrderList"} : ToSubclass] uint32 GroupOrder;
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("Name") : ToSubclass,MappingStrings{"Win32Registry|System\\CurrentControlSet\\Control\\GroupOrderList"} : ToSubclass] string Name;
  [read : ToSubclass,MappingStrings{"Win32Registry|System\\CurrentControlSet\\Control\\GroupOrderList"} : ToSubclass] boolean DriverEnabled;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C4EF-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_LoadOrderGroupServiceMembers : CIM_Component
{
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("GroupComponent") : ToSubclass,MappingStrings{"WMI|Win32_LoadOrderGroup"} : ToSubclass] Win32_LoadOrderGroup Ref GroupComponent;
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("PartComponent") : ToSubclass,MappingStrings{"WMI|Win32_BaseService"} : ToSubclass] Win32_BaseService Ref PartComponent;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C4FC-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_LoadOrderGroupServiceDependencies : CIM_Dependency
{
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("Antecedent") : ToSubclass,MappingStrings{"WMI|Win32_LoadOrderGroup"} : ToSubclass] Win32_LoadOrderGroup Ref Antecedent;
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("Dependent") : ToSubclass,MappingStrings{"WMI|Win32_BaseService"} : ToSubclass] Win32_BaseService Ref Dependent;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{F25FE468-783E-11d2-90BF-0060081A46FD}") : ToInstance] 
class Win32_LogicalDiskRootDirectory : CIM_Component
{
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("GroupComponent") : ToSubclass,MappingStrings{"WMI|Win32_LogicalDisk"} : ToSubclass] Win32_LogicalDisk Ref GroupComponent;
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("PartComponent") : ToSubclass,MappingStrings{"WMI|Win32_Directory"} : ToSubclass] Win32_Directory Ref PartComponent;
};

[Singleton : ToInstance ToSubclass,Dynamic,Provider("CIMWin32") : ToInstance,SupportsUpdate,Locale(1033) : ToInstance,UUID("{8502C4DE-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_OperatingSystem : CIM_OperatingSystem
{
  [read : ToSubclass,MappingStrings{"Win32API|DRIVE_MAP_INFO|btInt13Unit"} : ToSubclass] string BootDevice;
  [read : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string MUILanguages[];
  [read : ToSubclass,MappingStrings{"Win32API|System Information Structures|OSVERSIONINFOEX|dwBuildNumber"} : ToSubclass] string BuildNumber;
  [read : ToSubclass] string OSArchitecture;
  [read : ToSubclass,MappingStrings{"Win32Registry|Software\\Microsoft\\Windows\\CurrentVersion|CurrentType"} : ToSubclass] string BuildType;
  [read : ToSubclass,MaxLen(6) : ToSubclass,MappingStrings{"Win32API|National Language Support Functions|GetLocaleInfo|LOCALE_IDEFAULTANSICODEPAGE"} : ToSubclass] string CodeSet;
  [read : ToSubclass,MappingStrings{"Win32API|National Language Support Functions|GetLocaleInfo|LOCALE_ICOUNTRY"} : ToSubclass] string CountryCode;
  [read : ToSubclass,MappingStrings{"Win32API|System Information Structures|OSVERSIONINFOEX|szCSDVersion"} : ToSubclass] string CSDVersion;
  [read : ToSubclass,MappingStrings{"WMI"} : ToSubclass] boolean DataExecutionPrevention_Available;
  [read : ToSubclass,MappingStrings{"WMI"} : ToSubclass] boolean DataExecutionPrevention_32BitApplications;
  [read : ToSubclass,MappingStrings{"WMI"} : ToSubclass] boolean DataExecutionPrevention_Drivers;
  [read : ToSubclass,ValueMap{"0", "1", "2", "3"} : ToSubclass,MappingStrings{"WMI"} : ToSubclass] uint8 DataExecutionPrevention_SupportPolicy;
  [read : ToSubclass,MappingStrings{"Win32API|GetSystemMetrics|SM_DEBUG"} : ToSubclass] boolean Debug;
  [read : ToSubclass,write : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\PriorityControl|Win32PrioritySeparation"} : ToSubclass] uint8 ForegroundApplicationBoost;
  [read : ToSubclass,MappingStrings{"Win32API|National Language Support Functions|GetLocaleInfo|LOCALE_ILANGUAGE"} : ToSubclass] string Locale;
  [read : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string Manufacturer;
  [read : ToSubclass,MappingStrings{"Win32Registry|Software\\Microsoft\\Windows\\CurrentVersion|RegisteredOrganization"} : ToSubclass] string Organization;
  [read : ToSubclass,MappingStrings{"Win32Registry|DEFAULT\\Control Panel\\International|Locale"} : ToSubclass] uint32 OSLanguage;
  [read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\ProductOptions|ProductSuite"} : ToSubclass] uint32 OSProductSuite;
  [read : ToSubclass,ValueMap{"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26"} : ToSubclass,MappingStrings{"WMI"} : ToSubclass] uint32 OperatingSystemSKU;
  [read : ToSubclass,MappingStrings{"Win32Registry|Software\\Microsoft\\Windows NT\\CurrentVersion|Plus! ProductId"} : ToSubclass] string PlusProductID;
  [read : ToSubclass,MappingStrings{"Win32Registry|Software\\Microsoft\\Windows NT\\CurrentVersion|Plus! VersionNumber"} : ToSubclass] string PlusVersionNumber;
  [read : ToSubclass,MappingStrings{"WMI"} : ToSubclass] boolean Primary;
  [read : ToSubclass,MappingStrings{"Win32Registry|Software\\Microsoft\\Windows NT\\CurrentVersion|RegisteredOwner"} : ToSubclass] string RegisteredUser;
  [read : ToSubclass,MappingStrings{"Win32Registry|Software\\Microsoft\\Windows NT\\CurrentVersion|ProductId"} : ToSubclass] string SerialNumber;
  [read : ToSubclass,MappingStrings{"Win32API|System Information Structures|OSVERSIONINFOEX|wServicePackMajor"} : ToSubclass] uint16 ServicePackMajorVersion;
  [read : ToSubclass,MappingStrings{"Win32API|System Information Structures|OSVERSIONINFOEX|wServicePackMinor"} : ToSubclass] uint16 ServicePackMinorVersion;
  [read : ToSubclass,MappingStrings{"Win32API|Registry Functions|GetPrivateProfileString|Paths|TargetDevice"} : ToSubclass] string SystemDevice;
  [read : ToSubclass,MappingStrings{"Win32API|System Information Functions|GetSystemDirectory"} : ToSubclass] string SystemDirectory;
  [Read : ToSubclass] string SystemDrive;
  [read : ToSubclass,Override("Version") : ToSubclass,MappingStrings{"Win32API|System Information Structures|OSVERSIONINFOEX|dwMajorVersion, dwMinorVersion"} : ToSubclass] string Version;
  [read : ToSubclass,MappingStrings{"Win32API|System Information Functions|GetWindowsDirectory"} : ToSubclass] string WindowsDirectory;
  [read : ToSubclass,Write : ToSubclass,Override("Description") : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string Description;
  [Read : ToSubclass] uint32 EncryptionLevel;
  [Read : ToSubclass,DEPRECATED : ToSubclass,ValueMap{"0", "1"} : ToSubclass] uint32 LargeSystemCache;
  [Read : ToSubclass,BitMap{"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10"} : ToSubclass] uint32 SuiteMask;
  [Read : ToSubclass,ValueMap{"1", "2", "3"} : ToSubclass] uint32 ProductType;
  [Read : ToSubclass] boolean PAEEnabled;
  [Implemented,Override("Reboot") : ToSubclass,Privileges{"SeShutdownPrivilege"} : ToSubclass,ValueMap{"0", ".."} : ToSubclass,MappingStrings{"Win32API|System Shutdown Functions|ExitWindowsEx|EWX_REBOOT"} : ToSubclass] uint32 Reboot();
  [Implemented,Override("Shutdown") : ToSubclass,Privileges{"SeShutdownPrivilege"} : ToSubclass,ValueMap{"0", ".."} : ToSubclass,MappingStrings{"Win32API|System Shutdown Functions|ExitWindowsEx|EWX_SHUTDOWN"} : ToSubclass] uint32 Shutdown();
  [Implemented,Privileges{"SeShutdownPrivilege"} : ToSubclass,ValueMap{"0", ".."} : ToSubclass,MappingStrings{"Win32API|System Shutdown Functions|ExitWindowsEx"} : ToSubclass] uint32 Win32Shutdown([in : ToSubclass,MappingStrings{"Win32API|System Shutdown Functions|ExitWindowsEx"} : ToSubclass] sint32 Flags,[in : ToSubclass,MappingStrings{"Win32API|System Shutdown Functions|ExitWindowsEx"} : ToSubclass] sint32 Reserved = 0);
  [Implemented,Privileges{"SeShutdownPrivilege"} : ToSubclass,ValueMap{"0", ".."} : ToSubclass,MappingStrings{"Win32API|System Shutdown Functions|ExitWindowsEx"} : ToSubclass] uint32 Win32ShutdownTracker([in : ToSubclass] uint32 Timeout,[in : ToSubclass,MappingStrings{"Win32API|System Shutdown Functions|InitiateSystemShutdownEx"} : ToSubclass] string Comment,[in : ToSubclass,MappingStrings{"Win32API|System Shutdown Functions|InitiateSystemShutdownEx"} : ToSubclass] uint32 ReasonCode,[in : ToSubclass,MappingStrings{"Win32API|System Shutdown Functions|ExitWindowsEx"} : ToSubclass] sint32 Flags);
  [Implemented,Privileges{"SeSystemTimePrivilege"} : ToSubclass,ValueMap{"0", ".."} : ToSubclass] uint32 SetDateTime([in : ToSubclass] DateTime LocalDateTime);
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{2CB2C452-C516-11D2-B364-00105A1F77A1}") : ToInstance] 
class Win32_OperatingSystemQFE : CIM_Dependency
{
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("Antecedent") : ToSubclass,MappingStrings{"WMI|Win32_OperatingSystem"} : ToSubclass] Win32_OperatingSystem Ref Antecedent;
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Weak : ToSubclass,Override("Dependent") : ToSubclass,MappingStrings{"WMI|Win32_QuickFixEngineering"} : ToSubclass] Win32_QuickFixEngineering Ref Dependent;
};

[Dynamic,Provider("CIMWin32") : ToInstance,SupportsUpdate,Locale(1033) : ToInstance,UUID("{8502C4E8-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_OSRecoveryConfiguration : CIM_Setting
{
  [read : ToSubclass,write : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\CrashControl|AutoReboot"} : ToSubclass] boolean AutoReboot;
  [read : ToSubclass,write : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\CrashControl|DumpFile"} : ToSubclass] string DebugFilePath;
  [read : ToSubclass,write : ToSubclass] string ExpandedDebugFilePath;
  [read : ToSubclass,write : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\CrashControl|MiniDumpDir"} : ToSubclass] string MiniDumpDirectory;
  [read : ToSubclass,write : ToSubclass] string ExpandedMiniDumpDirectory;
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,MaxLen(256) : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string Name;
  [read : ToSubclass,write : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\CrashControl|Overwrite"} : ToSubclass] boolean OverwriteExistingDebugFile;
  [read : ToSubclass,write : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\CrashControl|SendAlert"} : ToSubclass] boolean SendAdminAlert;
  [read : ToSubclass,write : ToSubclass,DEPRECATED : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\CrashControl|CrashDumpEnabled"} : ToSubclass] boolean WriteDebugInfo;
  [read : ToSubclass,write : ToSubclass,ValueMap{"0", "1", "2", "3"} : ToSubclass] uint32 DebugInfoType;
  [read : ToSubclass,write : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\CrashControl|LogEvent"} : ToSubclass] boolean WriteToSystemLog;
  [read : ToSubclass,write : ToSubclass,DEPRECATED : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\CrashControl|KernelDumpOnly"} : ToSubclass] boolean KernelDumpOnly;
};

[Abstract,Locale(1033) : ToInstance,UUID("{8502C4CE-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_SystemMemoryResource : CIM_MemoryMappedIO
{
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C4CF-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_DeviceMemoryAddress : Win32_SystemMemoryResource
{
  [Override("StartingAddress"),read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,MappingStrings{"MIF.DMTF|Memory Mapped I/O|001.1"} : ToSubclass] uint64 StartingAddress;
  [read : ToSubclass,ValueMap{"ReadWrite", "ReadOnly", "WriteOnly", "Prefetchable", "CombinedWrite", "Type24", "Cacheable", "WindowDecode", "Bar"} : ToSubclass,MappingStrings{"Win32API|SystemStructures|CM_PARTIAL_RESOURCE_DESCRIPTOR|Flags"} : ToSubclass] string MemoryType;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C4D0-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_PortResource : Win32_SystemMemoryResource
{
  [Override("StartingAddress"),read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,MappingStrings{"MIF.DMTF|Memory Mapped I/O|001.1"} : ToSubclass] uint64 StartingAddress;
  [read : ToSubclass,MappingStrings{"Win32API|Configuration Manager Structures|IO_INFO"} : ToSubclass] boolean Alias;
};

[Abstract,Locale(1033) : ToInstance,UUID("{8502C4DB-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_ProcessStartup : Win32_MethodParameterClass
{
  [Write : ToSubclass,MappingStrings{"Win32API|Process and Thread Functions|CreateProcess|dwCreationFlags"} : ToSubclass,BitMap{"0", "1", "2", "3", "4", "9", "10", "26"} : ToSubclass] uint32 CreateFlags;
  [Write : ToSubclass,MappingStrings{"Win32API|Process and Thread Structures|JOBOBJECT_BASIC_LIMIT_INFORMATION|PriorityClass"} : ToSubclass,ValueMap{"32", "64", "128", "256", "16384", "32768"} : ToSubclass] uint32 PriorityClass;
  [Write : ToSubclass,MappingStrings{"Win32Registry|HKEY_CURRENT_USER\\Environment"} : ToSubclass] string EnvironmentVariables[];
  [Write : ToSubclass,MappingStrings{"Win32API|Process and Thread Structures|STARTUPINFO|lpDesktop"} : ToSubclass] string WinstationDesktop;
  [Write : ToSubclass,MappingStrings{"Win32API|Process and Thread Structures|STARTUPINFO|lpTitle"} : ToSubclass] string Title;
  [Write : ToSubclass,MappingStrings{"Win32API|Process and Thread Structures|STARTUPINFO|dwX"} : ToSubclass] uint32 X;
  [Write : ToSubclass,MappingStrings{"Win32API|Process and Thread Structures|STARTUPINFO|dwY"} : ToSubclass] uint32 Y;
  [Write : ToSubclass,MappingStrings{"Win32API|Process and Thread Structures|STARTUPINFO|dwXSize"} : ToSubclass] uint32 XSize;
  [Write : ToSubclass,MappingStrings{"Win32API|Process and Thread Structures|STARTUPINFO|dwYSize"} : ToSubclass] uint32 YSize;
  [Write : ToSubclass,MappingStrings{"Win32API|Process and Thread Structures|STARTUPINFO|XCountChars"} : ToSubclass] uint32 XCountChars;
  [Write : ToSubclass,MappingStrings{"Win32API|Process and Thread Structures|STARTUPINFO|YCountChars"} : ToSubclass] uint32 YCountChars;
  [Write : ToSubclass,MappingStrings{"Win32API|Process and Thread Structures|STARTUPINFO|dwFillAttribute"} : ToSubclass] uint32 FillAttribute;
  [Write : ToSubclass,MappingStrings{"Win32API|Process and Thread Structures|STARTUPINFO|wShowWindow"} : ToSubclass] uint16 ShowWindow;
  [Write : ToSubclass,MappingStrings{"Win32API|Error Functions|SetErrorMode"} : ToSubclass] uint16 ErrorMode = "0";
};

[Dynamic,Provider("CIMWin32") : ToInstance,SupportsCreate,CreateBy("Create"),SupportsDelete,DeleteBy("DeleteInstance"),Locale(1033) : ToInstance,UUID("{8502C4DC-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_Process : CIM_Process
{
  [Read : ToSubclass,Privileges{"SeDebugPrivilege"} : ToSubclass,MappingStrings{"Win32API|Tool Help Structures|MODULEENTRY32|szExePath"} : ToSubclass] string ExecutablePath;
  [Read : ToSubclass,Privileges{"SeDebugPrivilege"} : ToSubclass,MappingStrings{"Win32|WINNT.H|QUOTA_LIMITS|MaximumWorkingSetSize"} : ToSubclass] uint32 MaximumWorkingSetSize;
  [Read : ToSubclass,Privileges{"SeDebugPrivilege"} : ToSubclass,MappingStrings{"Win32|WINNT.H|QUOTA_LIMITS|MinimumWorkingSetSize"} : ToSubclass] uint32 MinimumWorkingSetSize;
  [Read : ToSubclass,MappingStrings{"Win32API|Process Status|SYSTEM_PROCESS_INFORMATION|PageFaultCount"} : ToSubclass] uint32 PageFaults;
  [Read : ToSubclass,MappingStrings{"Win32API|Process Status|SYSTEM_PROCESS_INFORMATION|PagefileUsage"} : ToSubclass] uint32 PageFileUsage;
  [Read : ToSubclass,MappingStrings{"Win32API|Process Status|SYSTEM_PROCESS_INFORMATION|PeakPagefileUsage"} : ToSubclass] uint32 PeakPageFileUsage;
  [Read : ToSubclass,MappingStrings{"Win32API|Process Status|SYSTEM_PROCESS_INFORMATION|PeakWorkingSetSize"} : ToSubclass] uint32 PeakWorkingSetSize;
  [Read : ToSubclass,MappingStrings{"Win32API|Process and Thread Structures|PROCESS_INFORMATION|dwProcessId "} : ToSubclass] uint32 ProcessId;
  [Read : ToSubclass,MappingStrings{"Win32API|Process Status|SYSTEM_PROCESS_INFORMATION|QuotaNonPagedPoolUsage"} : ToSubclass] uint32 QuotaNonPagedPoolUsage;
  [Read : ToSubclass,MappingStrings{"Win32API|Process Status|SYSTEM_PROCESS_INFORMATION|QuotaPagedPoolUsage"} : ToSubclass] uint32 QuotaPagedPoolUsage;
  [Read : ToSubclass,MappingStrings{"Win32API|Process Status|SYSTEM_PROCESS_INFORMATION|QuotaPeakNonPagedPoolUsage"} : ToSubclass] uint32 QuotaPeakNonPagedPoolUsage;
  [Read : ToSubclass,MappingStrings{"Win32API|Process Status|SYSTEM_PROCESS_INFORMATION|QuotaPeakPagedPoolUsage"} : ToSubclass] uint32 QuotaPeakPagedPoolUsage;
  [Read : ToSubclass,MappingStrings{"Win32API|Process and Thread Functions|GetProcessVersion"} : ToSubclass] string WindowsVersion;
  [Read : ToSubclass,Override("Priority") : ToSubclass,MappingStrings{"Win32API|Process Status|SYSTEM_PROCESS_INFORMATION|BasePriority"} : ToSubclass] uint32 Priority;
  [Read : ToSubclass,MappingStrings{"Win32API|Process Status|SYSTEM_PROCESS_INFORMATION|NumberOfThreads"} : ToSubclass] uint32 ThreadCount;
  [Read : ToSubclass,MappingStrings{"Win32API|Process Status|SYSTEM_PROCESS_INFORMATION|HandleCount"} : ToSubclass] uint32 HandleCount;
  [Read : ToSubclass,MappingStrings{"Win32API|Process Status|SYSTEM_PROCESS_INFORMATION|InheritedFromUniqueProcessId"} : ToSubclass] uint32 ParentProcessId;
  [Read : ToSubclass,MappingStrings{"Win32API|Process Status|SYSTEM_PROCESS_INFORMATION|SessionId"} : ToSubclass] uint32 SessionId;
  [Read : ToSubclass,MappingStrings{"Win32API|Process Status|SYSTEM_PROCESS_INFORMATION|PrivatePageCount"} : ToSubclass] uint64 PrivatePageCount;
  [Read : ToSubclass,MappingStrings{"Win32API|Process Status|SYSTEM_PROCESS_INFORMATION|PeakVirtualSize"} : ToSubclass] uint64 PeakVirtualSize;
  [Read : ToSubclass,MappingStrings{"Win32API|Process Status|SYSTEM_PROCESS_INFORMATION|VirtualSize"} : ToSubclass] uint64 VirtualSize;
  [Read : ToSubclass,MappingStrings{"Win32API|Process and Thread Structures|SYSTEM_PROCESS_INFORMATION|ReadOperationCount"} : ToSubclass] uint64 ReadOperationCount;
  [Read : ToSubclass,MappingStrings{"Win32API|Process and Thread Structures|SYSTEM_PROCESS_INFORMATION|WriteOperationCount"} : ToSubclass] uint64 WriteOperationCount;
  [Read : ToSubclass,MappingStrings{"Win32API|Process and Thread Structures|SYSTEM_PROCESS_INFORMATION|OtherOperationCount"} : ToSubclass] uint64 OtherOperationCount;
  [Read : ToSubclass,MappingStrings{"Win32API|Process and Thread Structures|SYSTEM_PROCESS_INFORMATION|ReadTransferCount"} : ToSubclass] uint64 ReadTransferCount;
  [Read : ToSubclass,MappingStrings{"Win32API|Process and Thread Structures|SYSTEM_PROCESS_INFORMATION|WriteTransferCount"} : ToSubclass] uint64 WriteTransferCount;
  [Read : ToSubclass,MappingStrings{"Win32API|Process and Thread Structures|SYSTEM_PROCESS_INFORMATION|OtherTransferCount"} : ToSubclass] uint64 OtherTransferCount;
  [Read : ToSubclass] string CommandLine;
  [Override("KernelModeTime")] uint64 KernelModeTime;
  [Override("UserModeTime")] uint64 UserModeTime;
  [Constructor,Static,Implemented,Privileges{"SeAssignPrimaryTokenPrivilege", "SeIncreaseQuotaPrivilege", "SeRestorePrivilege"} : ToSubclass,ValueMap{"0", "2", "3", "8", "9", "21", ".."} : ToSubclass,MappingStrings{"Win32API|Process and Thread Functions|CreateProcess"} : ToSubclass] uint32 Create([In : ToSubclass,MappingStrings{"Win32API|Process and Thread Functions|lpCommandLine "} : ToSubclass] string CommandLine,[In : ToSubclass,MappingStrings{"Win32API|Process and Thread Functions|CreateProcess|lpCurrentDirectory "} : ToSubclass] string CurrentDirectory,[In : ToSubclass,MappingStrings{"WMI|Win32_ProcessStartup"} : ToSubclass] Win32_ProcessStartup ProcessStartupInformation,[Out : ToSubclass,MappingStrings{"Win32API|Process and Thread Functions|CreateProcess|lpProcessInformation|dwProcessId"} : ToSubclass] uint32 ProcessId);
  [Destructor,Implemented,Privileges{"SeDebugPrivilege"} : ToSubclass,ValueMap{"0", "2", "3", "8", "9", "21", ".."} : ToSubclass,MappingStrings{"Win32API|Process and Thread Functions|TerminateProcess"} : ToSubclass] uint32 Terminate([In : ToSubclass,MappingStrings{"Win32API|Process and Thread Functions|TerminateProcess|uExitCode "} : ToSubclass] uint32 Reason);
  [Implemented,ValueMap{"0", "2", "3", "8", "9", "21", ".."} : ToSubclass,MappingStrings{"WMI"} : ToSubclass] uint32 GetOwner([Out : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string User,[Out : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string Domain);
  [Implemented,ValueMap{"0", "2", "3", "8", "9", "21", ".."} : ToSubclass,MappingStrings{"WMI"} : ToSubclass] uint32 GetOwnerSid([Out : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string Sid);
  [Implemented,ValueMap{"0", "2", "3", "8", "9", "21", ".."} : ToSubclass,MappingStrings{"Win32API|Process and Thread Functions|SetPriorityClass"} : ToSubclass] uint32 SetPriority([in,MappingStrings{"Win32API|Process and Thread Functions|SetPriorityClass|dwPriorityClass"} : ToSubclass,ValueMap{"0x00000040", "0x00004000", "0x00000020", "0x00008000", "0x00000080", "0x00000100"} : ToSubclass] sint32 Priority);
  [ValueMap{"0", "2", "3", "8", "9", "21", ".."} : ToSubclass,Implemented] uint32 AttachDebugger();
};

[Dynamic,Provider("CIMWin32") : ToInstance,Privileges{"SeRestorePrivilege"} : ToSubclass,Locale(1033) : ToInstance,UUID("{8502C50A-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_StartupCommand : CIM_Setting
{
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,MappingStrings{"WMI"} : ToSubclass] string User;
  [read : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string UserSID;
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,MappingStrings{"Win32API|File Structures|WIN32_FIND_DATA|cFileName"} : ToSubclass] string Name;
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,ValueMap{"Startup", "Common Startup", "HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", "HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunServices"} : ToSubclass,MappingStrings{"Win32Registry|\\SOFTWARE\\MICROSOFT\\WINDOWS\\CURRENTVERSION\\Windows"} : ToSubclass] string Location;
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,MappingStrings{"Win32Registry|SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run"} : ToSubclass] string Command;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{F25FE469-783E-11d2-90BF-0060081A46FD}") : ToInstance] 
class Win32_SubDirectory : CIM_Component
{
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("GroupComponent") : ToSubclass,MappingStrings{"WMI|Win32_Directory"} : ToSubclass] Win32_Directory Ref GroupComponent;
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("PartComponent") : ToSubclass,MappingStrings{"WMI|Win32_Directory"} : ToSubclass] Win32_Directory Ref PartComponent;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C4EE-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_SystemBIOS : CIM_SystemComponent
{
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("GroupComponent") : ToSubclass,MappingStrings{"WMI|Win32_ComputerSystem"} : ToSubclass] Win32_ComputerSystem Ref GroupComponent;
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("PartComponent") : ToSubclass,MappingStrings{"WMI|Win32_BIOS"} : ToSubclass] Win32_BIOS Ref PartComponent;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C4F0-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance ToSubclass] 
class Win32_SystemOperatingSystem : CIM_InstalledOS
{
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("GroupComponent") : ToSubclass,MappingStrings{"WMI|Win32_ComputerSystem"} : ToSubclass] Win32_ComputerSystem Ref GroupComponent;
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("PartComponent") : ToSubclass,MappingStrings{"WMI|Win32_OperatingSystem"} : ToSubclass] Win32_OperatingSystem Ref PartComponent;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C4F1-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_SystemSystemDriver : CIM_SystemComponent
{
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("GroupComponent") : ToSubclass,MappingStrings{"WMI|Win32_ComputerSystem"} : ToSubclass] Win32_ComputerSystem Ref GroupComponent;
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("PartComponent") : ToSubclass,MappingStrings{"WMI|Win32_SystemDriver"} : ToSubclass] Win32_SystemDriver Ref PartComponent;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C4F2-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_SystemUsers : CIM_SystemComponent
{
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("GroupComponent") : ToSubclass,MappingStrings{"WMI|Win32_ComputerSystem"} : ToSubclass] Win32_ComputerSystem Ref GroupComponent;
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("PartComponent") : ToSubclass,MappingStrings{"WMI|Win32_UserAccount"} : ToSubclass] Win32_UserAccount Ref PartComponent;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C4F3-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_SystemProcesses : CIM_SystemComponent
{
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("GroupComponent") : ToSubclass,MappingStrings{"WMI|Win32_ComputerSystem"} : ToSubclass] Win32_ComputerSystem Ref GroupComponent;
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("PartComponent") : ToSubclass,MappingStrings{"WMI|Win32_Process"} : ToSubclass] Win32_Process Ref PartComponent;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C4F5-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_SystemPartitions : Win32_SystemDevices
{
  [read : ToSubclass,Override("GroupComponent") : ToSubclass,MappingStrings{"WMI|Win32_ComputerSystem"} : ToSubclass] Win32_ComputerSystem Ref GroupComponent;
  [read : ToSubclass,Override("PartComponent") : ToSubclass,MappingStrings{"WMI|Win32_DiskPartition"} : ToSubclass] Win32_DiskPartition Ref PartComponent;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C4F6-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_SystemServices : CIM_SystemComponent
{
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("GroupComponent") : ToSubclass,MappingStrings{"WMI|Win32_ComputerSystem"} : ToSubclass] Win32_ComputerSystem Ref GroupComponent;
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("PartComponent") : ToSubclass,MappingStrings{"WMI|Win32_Service"} : ToSubclass] Win32_Service Ref PartComponent;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C4F7-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_SystemNetworkConnections : CIM_SystemComponent
{
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("GroupComponent") : ToSubclass,MappingStrings{"WMI|Win32_ComputerSystem"} : ToSubclass] Win32_ComputerSystem Ref GroupComponent;
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("PartComponent") : ToSubclass,MappingStrings{"WMI|Win32_NetworkConnection"} : ToSubclass] Win32_NetworkConnection Ref PartComponent;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C4F8-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_SystemResources : CIM_ComputerSystemResource
{
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("GroupComponent") : ToSubclass,MappingStrings{"WMI|Win32_ComputerSystem"} : ToSubclass] Win32_ComputerSystem Ref GroupComponent;
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("PartComponent") : ToSubclass,MappingStrings{"CIM|CIM_SystemResource"} : ToSubclass] CIM_SystemResource Ref PartComponent;
};

[Abstract,Locale(1033) : ToInstance,UUID("{8502C501-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_SystemSetting : CIM_ElementSetting
{
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("Element") : ToSubclass,MappingStrings{"WMI|Win32_ComputerSystem"} : ToSubclass] Win32_ComputerSystem Ref Element;
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("Setting") : ToSubclass,MappingStrings{"CIM|CIM_Setting"} : ToSubclass] CIM_Setting Ref Setting;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C506-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_SystemDesktop : Win32_SystemSetting
{
  [read : ToSubclass,Override("Element") : ToSubclass,MappingStrings{"WMI|Win32_ComputerSystem"} : ToSubclass] Win32_ComputerSystem Ref Element;
  [read : ToSubclass,Override("Setting") : ToSubclass,MappingStrings{"WMI|Win32_Desktop"} : ToSubclass] Win32_Desktop Ref Setting;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C507-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_SystemBootConfiguration : Win32_SystemSetting
{
  [read : ToSubclass,Override("Element") : ToSubclass,MappingStrings{"WMI|Win32_ComputerSystem"} : ToSubclass] Win32_ComputerSystem Ref Element;
  [read : ToSubclass,Override("Setting") : ToSubclass,MappingStrings{"WMI|Win32_BootConfiguration"} : ToSubclass] Win32_BootConfiguration Ref Setting;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{FAF76B94-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class Win32_SystemEnclosure : CIM_Chassis
{
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,MaxLen(256) : ToSubclass,Override("Tag") : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string Tag;
  [read : ToSubclass,MappingStrings{"SMBIOS|Type 3|Asset Tag"} : ToSubclass] string SMBIOSAssetTag;
  [read : ToSubclass,ValueMap{"1", "2", "3", "4", "5"} : ToSubclass,MappingStrings{"SMBIOS|Type 3|Security Status"} : ToSubclass] uint16 SecurityStatus;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C503-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_SystemLoadOrderGroups : CIM_SystemComponent
{
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("GroupComponent") : ToSubclass,MappingStrings{"WMI|Win32_ComputerSystem"} : ToSubclass] Win32_ComputerSystem Ref GroupComponent;
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("PartComponent") : ToSubclass,MappingStrings{"WMI|Win32_LoadOrderGroup"} : ToSubclass] Win32_LoadOrderGroup Ref PartComponent;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C504-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_SystemTimeZone : Win32_SystemSetting
{
  [read : ToSubclass,Override("Element") : ToSubclass,MappingStrings{"WMI|Win32_ComputerSystem"} : ToSubclass] Win32_ComputerSystem Ref Element;
  [read : ToSubclass,Override("Setting") : ToSubclass,MappingStrings{"WMI|Win32_TimeZone"} : ToSubclass] Win32_TimeZone Ref Setting;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C505-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_SystemProgramGroups : Win32_SystemSetting
{
  [read : ToSubclass,Override("Element") : ToSubclass,MappingStrings{"WMI|Win32_ComputerSystem"} : ToSubclass] Win32_ComputerSystem Ref Element;
  [read : ToSubclass,Override("Setting") : ToSubclass,MappingStrings{"WMI|Win32_LogicalProgramGroup"} : ToSubclass] Win32_LogicalProgramGroup Ref Setting;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{FAF76B91-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class Win32_SystemSlot : CIM_Slot
{
  [read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,MaxLen(256) : ToSubclass,Override("Tag") : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string Tag;
  [read : ToSubclass,MappingStrings{"SMBIOS|Type 9|Slot Designation"} : ToSubclass] string SlotDesignation;
  [read : ToSubclass,Override("ConnectorType") : ToSubclass,MappingStrings{"SMBIOS|Type 9|Slot Type"} : ToSubclass] uint16 ConnectorType[];
  [read : ToSubclass,MappingStrings{"SMBIOS|Type 9|Current Usage"} : ToSubclass] uint16 CurrentUsage;
  [read : ToSubclass,MappingStrings{"SMBIOS|Type 9|Slot Characteristics 2"} : ToSubclass] boolean PMESignal;
  [read : ToSubclass,MappingStrings{"SMBIOS|Type 9|Slot Characteristics 1"} : ToSubclass] boolean Shared;
  [Override("MaxDataWidth") : ToSubclass,ValueMap{"0", "1", "2", "3", "4"} : ToSubclass,MappingStrings{"MIF.DMTF|System Slot|004.3"} : ToSubclass,read : ToSubclass] uint16 MaxDataWidth;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C4DD-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_Thread : CIM_Thread
{
  [Read : ToSubclass,MaxLen(256) : ToSubclass,Override("ProcessHandle") : ToSubclass,Propagated("CIM_Process.Handle") : ToSubclass,MappingStrings{"Win32API|Tool Help Structures|THREADENTRY32|th32OwnerProcessID"} : ToSubclass] string ProcessHandle;
  [Read : ToSubclass,MaxLen(256) : ToSubclass,Override("Handle") : ToSubclass,MappingStrings{"Win32API|Tool Help Structures|THREADENTRY32|th32ThreadID"} : ToSubclass] string Handle;
  [Read : ToSubclass,MappingStrings{"Win32API|Performance Data Structures|PERF_OBJECT_TYPE|PerfTime"} : ToSubclass] uint64 ElapsedTime;
  [Read : ToSubclass,MappingStrings{"Win32API|Performance Data Structures|PERF_OBJECT_TYPE|PerfPriorityBase"} : ToSubclass] uint32 PriorityBase;
  [Override("Priority") : ToSubclass,read : ToSubclass,MappingStrings{"Win32API|Tool Help Structures|THREADENTRY32|tpDeltaPri"} : ToSubclass] uint32 Priority;
  [Read : ToSubclass,MappingStrings{"WIn32API|Thread Object|LPTHREAD_START_ROUTINE|lpStartAddress"} : ToSubclass] uint32 StartAddress;
  [Read : ToSubclass,MappingStrings{"Win32API|Thread State"} : ToSubclass] uint32 ThreadState;
  [Read : ToSubclass,MappingStrings{"Win32API|Thread Wait Reason"} : ToSubclass] uint32 ThreadWaitReason;
  [Override("KernelModeTime"),MappingStrings{"Win32API|Performance Data Structures|PERF_OBJECT_TYPE|PrivilegedTime"} : ToSubclass] uint64 KernelModeTime;
  [Override("UserModeTime"),MappingStrings{"Win32API|Performance Data Structures|PERF_OBJECT_TYPE|UserTime"} : ToSubclass] uint64 UserModeTime;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C4EC-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_TimeZone : CIM_Setting
{
  [read : ToSubclass,MappingStrings{"Win32API|Time Structures|TIME_ZONE_INFORMATION|Bias"} : ToSubclass] sint32 Bias;
  [read : ToSubclass,MappingStrings{"Win32API|Time Structures|TIME_ZONE_INFORMATION|DaylightBias"} : ToSubclass] sint32 DaylightBias;
  [read : ToSubclass,MappingStrings{"Win32API|Time Structures|TIME_ZONE_INFORMATION|DaylightDate|wDay"} : ToSubclass] uint32 DaylightDay;
  [read : ToSubclass,MappingStrings{"Win32API|Time Structures|TIME_ZONE_INFORMATION|DaylightDate|wDayOfWeek"} : ToSubclass] uint8 DaylightDayOfWeek;
  [read : ToSubclass,MappingStrings{"Win32API|Time Structures|TIME_ZONE_INFORMATION|DaylightDate|wHour"} : ToSubclass] uint32 DaylightHour;
  [read : ToSubclass,MappingStrings{"Win32API|Time Structures|TIME_ZONE_INFORMATION|DaylightDate|wMilliseconds"} : ToSubclass] uint32 DaylightMillisecond;
  [read : ToSubclass,MappingStrings{"Win32API|Time Structures|TIME_ZONE_INFORMATION|DaylightDate|wMinute"} : ToSubclass] uint32 DaylightMinute;
  [read : ToSubclass,MappingStrings{"Win32API|Time Structures|TIME_ZONE_INFORMATION|DaylightDate|wMonth"} : ToSubclass,ValueMap{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"} : ToSubclass] uint32 DaylightMonth;
  [read : ToSubclass,MaxLen(256) : ToSubclass,MappingStrings{"Win32API|Time Structures|TIME_ZONE_INFORMATION|DaylightName"} : ToSubclass] string DaylightName;
  [read : ToSubclass,MappingStrings{"Win32API|Time Structures|TIME_ZONE_INFORMATION|DaylightDate|wSecond"} : ToSubclass] uint32 DaylightSecond;
  [read : ToSubclass,MappingStrings{"Win32API|Time Structures|TIME_ZONE_INFORMATION|DaylightDate|wYear"} : ToSubclass] uint32 DaylightYear;
  [read : ToSubclass,MappingStrings{"Win32API|Time Structures|TIME_ZONE_INFORMATION|StandardBias"} : ToSubclass] uint32 StandardBias;
  [read : ToSubclass,MappingStrings{"Win32API|Time Structures|TIME_ZONE_INFORMATION|StandardDate|wDay"} : ToSubclass] uint32 StandardDay;
  [read : ToSubclass,MappingStrings{"Win32API|Time Structures|TIME_ZONE_INFORMATION|StandardDate|wDayOfWeek"} : ToSubclass] uint8 StandardDayOfWeek;
  [read : ToSubclass,MappingStrings{"Win32API|Time Structures|TIME_ZONE_INFORMATION|StandardDate|wHour"} : ToSubclass] uint32 StandardHour;
  [read : ToSubclass,MappingStrings{"Win32API|Time Structures|TIME_ZONE_INFORMATION|StandardDate|wMilliseconds"} : ToSubclass] uint32 StandardMillisecond;
  [read : ToSubclass,MappingStrings{"Win32API|Time Structures|TIME_ZONE_INFORMATION|StandardDate|wMinute"} : ToSubclass] uint32 StandardMinute;
  [read : ToSubclass,MappingStrings{"Win32API|Time Structures|TIME_ZONE_INFORMATION|StandardDate|wMonth"} : ToSubclass,ValueMap{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"} : ToSubclass] uint32 StandardMonth;
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,MaxLen(256) : ToSubclass,MappingStrings{"Win32API|Time Structures|TIME_ZONE_INFORMATION|StandardName"} : ToSubclass] string StandardName;
  [read : ToSubclass,MappingStrings{"Win32API|Time Structures|TIME_ZONE_INFORMATION|StandardDate|wSecond"} : ToSubclass] uint32 StandardSecond;
  [read : ToSubclass,MappingStrings{"Win32API|Time Structures|TIME_ZONE_INFORMATION|StandardDate|wYear"} : ToSubclass] uint32 StandardYear;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C4FF-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_UserDesktop : CIM_ElementSetting
{
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("Element") : ToSubclass,MappingStrings{"WMI|Win32_UserAccount"} : ToSubclass] Win32_UserAccount Ref Element;
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("Setting") : ToSubclass,MappingStrings{"WMI|Win32_Desktop"} : ToSubclass] Win32_Desktop Ref Setting;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{0827250D-BA3E-11d2-B361-00105A1F77A1}") : ToInstance] 
class Win32_QuickFixEngineering : CIM_LogicalElement
{
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,MaxLen(260) : ToSubclass,MappingStrings{"Win32Registry|SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Hotfix"} : ToSubclass] string HotFixID;
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,MaxLen(260) : ToSubclass,MappingStrings{"Win32Registry|SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Hotfix"} : ToSubclass] string ServicePackInEffect;
  [read : ToSubclass,CIM_Key : ToSubclass,MaxLen(256) : ToSubclass,Propagated("CIM_ComputerSystem.Name") : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string CSName;
  [read : ToSubclass,MappingStrings{"Win32Registry|SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Hotfix"} : ToSubclass] string FixComments;
  [read : ToSubclass,MappingStrings{"Win32Registry|SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Hotfix"} : ToSubclass] string InstalledBy;
  [read : ToSubclass,MappingStrings{"Win32Registry|SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Hotfix"} : ToSubclass] string InstalledOn;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{0827250D-BA3E-11d2-B361-00105A1F77A2}") : ToInstance] 
class Win32_OptionalFeature : CIM_LogicalElement
{
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,MaxLen(260) : ToSubclass] string Name;
  [read : ToSubclass,MaxLen(260) : ToSubclass] string Caption;
  [read : ToSubclass,ValueMap{"1", "2", "3", "4"} : ToSubclass] uint32 InstallState;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Privileges{"SeRestorePrivilege"} : ToSubclass,Locale(1033) : ToInstance,UUID("{F25FE467-783E-11d2-90BF-0060081A46FD}") : ToInstance] 
class Win32_LogicalProgramGroupDirectory : CIM_Dependency
{
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("Antecedent") : ToSubclass,MappingStrings{"WMI|Win32_LogicalProgramGroup"} : ToSubclass] Win32_LogicalProgramGroup Ref Antecedent;
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("Dependent") : ToSubclass,MappingStrings{"WMI|Win32_Directory"} : ToSubclass] Win32_Directory Ref Dependent;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Privileges{"SeRestorePrivilege"} : ToSubclass,Locale(1033) : ToInstance,UUID("{08FFAD62-8050-11d2-90CE-0060081A46FD}") : ToInstance] 
class Win32_LogicalProgramGroupItemDataFile : CIM_Dependency
{
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("Antecedent") : ToSubclass,MappingStrings{"WMI|Win32_LogicalProgramGroupItem"} : ToSubclass] Win32_LogicalProgramGroupItem Ref Antecedent;
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("Dependent") : ToSubclass,MappingStrings{"CIM|CIM_DataFile"} : ToSubclass] CIM_DataFile Ref Dependent;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{86E30E83-7DB2-11d2-90CB-0060081A46FD}") : ToInstance] 
class Win32_ProgramGroupContents : CIM_Component
{
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("PartComponent") : ToSubclass,MappingStrings{"WMI|Win32_ProgramGroupOrItem"} : ToSubclass] Win32_ProgramGroupOrItem Ref PartComponent;
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("GroupComponent") : ToSubclass,MappingStrings{"WMI|Win32_LogicalProgramGroup"} : ToSubclass] Win32_LogicalProgramGroup Ref GroupComponent;
};

[Dynamic,provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{FB1F3A64-BBAC-11d2-85E5-0000F8102E5F}") : ToInstance] 
class Win32_FloppyDrive : CIM_DisketteDrive
{
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("DeviceId") : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string DeviceID;
  [Read : ToSubclass,MappingStrings{"Win32Registry"} : ToSubclass] string Manufacturer;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C4B1-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_TapeDrive : CIM_TapeDrive
{
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("DeviceId") : ToSubclass,MappingStrings{"Win32API|File Functions|CreateFile"} : ToSubclass] string DeviceID;
  [Read : ToSubclass,MappingStrings{"Win32API|Tape Backup Structures|TAPE_GET_DRIVE_PARAMETERS|Compression"} : ToSubclass] uint32 Compression;
  [Read : ToSubclass,MappingStrings{"Win32API|Tape Backup Structures|TAPE_GET_DRIVE_PARAMETERS|ECC"} : ToSubclass] uint32 ECC;
  [Read : ToSubclass,MappingStrings{"Win32API|Tape Backup Structures|TAPE_GET_DRIVE_PARAMETERS|FeaturesHigh"} : ToSubclass] uint32 FeaturesHigh;
  [Read : ToSubclass,MappingStrings{"Win32API|Tape Backup Structures|TAPE_GET_DRIVE_PARAMETERS|FeaturesLow"} : ToSubclass] uint32 FeaturesLow;
  [Read : ToSubclass,MappingStrings{"Win32_TapeDrive|MediaType|Tape Drive"} : ToSubclass] string MediaType;
  [Read : ToSubclass,MappingStrings{"Win32API|Tape Backup Structures|TAPE_GET_DRIVE_PARAMETERS|ReportSetmarks"} : ToSubclass] uint32 ReportSetMarks;
  [read : ToSubclass,MappingStrings{"Win32API|File Functions"} : ToSubclass] string Id;
  [read : ToSubclass,MappingStrings{"Win32Registry"} : ToSubclass] string Manufacturer;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C4B2-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_DiskDrive : CIM_DiskDrive
{
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("DeviceId") : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string DeviceID;
  [read : ToSubclass,MappingStrings{"Win32API|Device Input and Output Structures|DISK_GEOMETRY|BytesPerSector"} : ToSubclass] uint32 BytesPerSector;
  [read : ToSubclass,MappingStrings{"Win32API|Device Input and Output Functions|DeviceIoControl"} : ToSubclass] string InterfaceType;
  [read : ToSubclass,MappingStrings{"Win32API|Device Input and Output Structures|PARTITION_INFORMATION|RecognizedPartition"} : ToSubclass] uint32 Partitions;
  [read : ToSubclass,MappingStrings{"Win32API|Device Input and Output Structures|DISK_GEOMETRY|SectorsPerTrack"} : ToSubclass] uint32 SectorsPerTrack;
  [read : ToSubclass,MappingStrings{"Win32API|Device Input and Output Structures|DISK_GEOMETRY|Cylinders"} : ToSubclass] uint64 TotalCylinders;
  [read : ToSubclass,MappingStrings{"Win32API|Device Input and Output Structures|DISK_GEOMETRY|TracksPerCylinder"} : ToSubclass] uint32 TotalHeads;
  [read : ToSubclass,MappingStrings{"Win32API|Device Input and Output Structures|DISK_GEOMETRY|SectorsPerTrack"} : ToSubclass] uint64 TotalSectors;
  [read : ToSubclass,MappingStrings{"Win32API|Device Input and Output Structures|DISK_GEOMETRY|TracksPerCylinder"} : ToSubclass] uint64 TotalTracks;
  [read : ToSubclass,MappingStrings{"Win32API|Device Input and Output Structures|DISK_GEOMETRY|TracksPerCylinder"} : ToSubclass] uint32 TracksPerCylinder;
  [read : ToSubclass,MappingStrings{"Win32API|Windows 95/98 Functions|DRIVE_MAP_INFObtInt13Unit"} : ToSubclass] uint32 Index;
  [read : ToSubclass,MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\HARDWARE\\DEVICEMAP\\Scsi\\Scsi Port\\Scsi Bus\\Target Id\\Logical Unit Id\\Identifier", "Win32Registry|Manufacturer"} : ToSubclass] string Manufacturer;
  [read : ToSubclass,MappingStrings{"Win32API|Device Input and Output Structures|DISK_GEOMETRY|MediaType|FixedMedia"} : ToSubclass] boolean MediaLoaded;
  [Read : ToSubclass,MappingStrings{"Win32API|Device Input and Output Structures|DISK_GEOMETRY|MediaType"} : ToSubclass,ValueMap{"Removable media other than floppy", "Fixed hard disk media", "Format is unknown"} : ToSubclass] string MediaType;
  [read : ToSubclass,MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\HARDWARE\\DEVICEMAP\\Scsi\\Scsi Port\\Scsi Bus\\Target Id\\Logical Unit Id\\Identifier", "Win32Registry|ProductId"} : ToSubclass] string Model;
  [read : ToSubclass,MappingStrings{"Win32API|Device Input and Output Structures|SCSI_ADDRESS|PathId"} : ToSubclass] uint32 SCSIBus;
  [read : ToSubclass,MappingStrings{"Win32API|Device Input and Output Structures|SCSI_ADDRESS|Lun"} : ToSubclass] uint16 SCSILogicalUnit;
  [read : ToSubclass,MappingStrings{"Win32API|Device Input and Output Structures|SCSI_ADDRESS|PortNumber"} : ToSubclass] uint16 SCSIPort;
  [read : ToSubclass,MappingStrings{"Win32API|Device Input and Output Structures|SCSI_ADDRESS|TargetId"} : ToSubclass] uint16 SCSITargetId;
  [read : ToSubclass,MappingStrings{"Win32API|Device Input and Output Structures|DISK_GEOMETRY"} : ToSubclass] uint64 Size;
  [read : ToSubclass,MappingStrings{"Win32API|Device Input and Output Structures|DRIVE_LAYOUT_INFORMATION|Signature"} : ToSubclass] uint32 Signature;
  [read : ToSubclass,MappingStrings{"Win32API|Device Input and Output Structures|STORAGE_DEVICE_DESCRIPTOR|SerialNumberOffset"} : ToSubclass] string SerialNumber;
  [read : ToSubclass,MappingStrings{"Win32API|Device Input and Output Structures|STORAGE_DEVICE_DESCRIPTOR|ProductRevisionOffset"} : ToSubclass] string FirmwareRevision;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C4B3-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_CDROMDrive : CIM_CDROMDrive
{
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("DeviceId") : ToSubclass,MappingStrings{"Win32API|File Functions|GetLogicalDriveStrings"} : ToSubclass] string DeviceID;
  [read : ToSubclass,MappingStrings{"Win32API|File Functions|GetDriveType"} : ToSubclass] string Drive;
  [read : ToSubclass,DEPRECATED : ToSubclass,MappingStrings{"Win32API|File System Functions|GetVolumeInformation"} : ToSubclass] uint16 FileSystemFlags;
  [read : ToSubclass,MappingStrings{"Win32API|File System Functions|GetVolumeInformation"} : ToSubclass,BitMap{"0", "1", "2", "3", "4", "5", "6", "7", "8", "14", "15", "16", "17", "18"} : ToSubclass] uint32 FileSystemFlagsEx;
  [read : ToSubclass,MappingStrings{"Win32API|File Functions|GetDriveType"} : ToSubclass] string Id;
  [read : ToSubclass,MappingStrings{"Win32Registry"} : ToSubclass] string Manufacturer;
  [read : ToSubclass,MappingStrings{"Win32API|File System Functions|GetVolumeInformation"} : ToSubclass] uint32 MaximumComponentLength;
  [read : ToSubclass,MappingStrings{"Win32API|GetDriveType"} : ToSubclass] string MediaType;
  [read : ToSubclass,MappingStrings{"Win32Registry|RevisionLevel"} : ToSubclass] string RevisionLevel;
  [Read : ToSubclass,MappingStrings{"Win2000DDK|KernelModeDrivers|STORAGE_DEVICE_DESCRIPTOR|ProductRevisionOffset"} : ToSubclass] string MfrAssignedRevisionLevel;
  [read : ToSubclass,MappingStrings{"Win32API|DeviceIoControl|IOCTL_SCSI_GET_ADDRESS"} : ToSubclass] uint16 SCSITargetId;
  [read : ToSubclass,MappingStrings{"Win32API|File System Functions|GetVolumeInformation"} : ToSubclass] string VolumeName;
  [read : ToSubclass,MappingStrings{"Win32API|File System Functions|GetVolumeInformation"} : ToSubclass] string VolumeSerialNumber;
  [read : ToSubclass,MappingStrings{"Win32API|File Reference and Time Reference"} : ToSubclass] Real64 TransferRate;
  [read : ToSubclass,MappingStrings{"WMI"} : ToSubclass] boolean DriveIntegrity;
  [read : ToSubclass,MappingStrings{"Win32API|File System Functions|GetVolumeInformation"} : ToSubclass] boolean MediaLoaded;
  [read : ToSubclass,MappingStrings{"Win32API|SCSI Structures|SCSI_REQUEST_BLOCK|PathId"} : ToSubclass] uint32 SCSIBus;
  [read : ToSubclass,MappingStrings{"Win32API|SCSI Structures|SCSI_REQUEST_BLOCK|Lun"} : ToSubclass] uint16 SCSILogicalUnit;
  [read : ToSubclass,MappingStrings{"Win32API|SCSI Structures|SCSI_REQUEST_BLOCK|ScsiStatus"} : ToSubclass] uint16 SCSIPort;
  [read : ToSubclass,MappingStrings{"Win32API|File Functions|GetDiskFreeSpace"} : ToSubclass] uint64 Size;
  [read : ToSubclass,MappingStrings{"Win32API|Device Input and Output Structures|STORAGE_DEVICE_DESCRIPTOR|SerialNumberOffset"} : ToSubclass] string SerialNumber;
};

[dynamic,provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{2A7DC003-BAEF-11d2-85E5-0000F8102E5F}") : ToInstance] 
class Win32_FloppyController : CIM_Controller
{
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("DeviceId") : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string DeviceID;
  [read : ToSubclass,MappingStrings{"Win32Registry"} : ToSubclass] string Manufacturer;
};

[Dynamic,Provider("CIMWin32") : ToInstance,SupportsUpdate,Locale(1033) : ToInstance,UUID("{8502C4B7-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_LogicalDisk : CIM_LogicalDisk
{
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("DeviceId") : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string DeviceID;
  [read : ToSubclass,MappingStrings{"Win32API|File System Functions|GetVolumeInformation|FS_VOL_IS_COMPRESSED"} : ToSubclass] boolean Compressed;
  [read : ToSubclass,MappingStrings{"Win32API|FileFunctions|GetDriveType"} : ToSubclass] uint32 DriveType;
  [read : ToSubclass,MappingStrings{"Win32API|File System Functions|GetVolumeInformation"} : ToSubclass] string FileSystem;
  [read : ToSubclass,MappingStrings{"Win32API|File System Functions|GetVolumeInformation"} : ToSubclass] uint32 MaximumComponentLength;
  [read : ToSubclass,MappingStrings{"Win32API|Windows Networking Functions|WNetGetConnection"} : ToSubclass] string ProviderName;
  [read : ToSubclass,MappingStrings{"Win32API|File System Functions|GetVolumeInformation|FS_FILE_COMPRESSION"} : ToSubclass] boolean SupportsFileBasedCompression;
  [read : ToSubclass,write : ToSubclass,MappingStrings{"Win32API|File System Functions|GetVolumeInformation"} : ToSubclass] string VolumeName;
  [read : ToSubclass,MappingStrings{"Win32API|File System Functions|GetVolumeInformation"} : ToSubclass] string VolumeSerialNumber;
  [read : ToSubclass,MappingStrings{"Win32API|Device Input and Output Functions|DeviceIoControl"} : ToSubclass] uint32 MediaType;
  [read : ToSubclass] boolean SupportsDiskQuotas;
  [read : ToSubclass] boolean QuotasDisabled;
  [read : ToSubclass] boolean QuotasIncomplete;
  [read : ToSubclass] boolean QuotasRebuilding;
  [Implemented,MappingStrings{"Fmifs.dll | Method ChkDskExRoutine"} : ToSubclass] uint32 Chkdsk([in] boolean FixErrors = FALSE,[in] boolean VigorousIndexCheck = TRUE,[in] boolean SkipFolderCycle = TRUE,[in] boolean ForceDismount = FALSE,[in] boolean RecoverBadSectors = FALSE,[in] boolean OkToRunAtBootUp = FALSE);
  [Read : ToSubclass,MappingStrings{"FSCTL_IS_VOLUME_DIRTY"} : ToSubclass] boolean VolumeDirty;
  [Static,Implemented,MappingStrings{"Chkntfs.exe"} : ToSubclass] uint32 ScheduleAutoChk([in] string LogicalDisk[]);
  [Static,Implemented,MappingStrings{"Chkntfs.exe"} : ToSubclass] uint32 ExcludeFromAutochk([in] string LogicalDisk[]);
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C4B8-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_DiskPartition : CIM_DiskPartition
{
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("DeviceId") : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string DeviceID;
  [read : ToSubclass,MappingStrings{"Win32API|File Functions|ReadFile"} : ToSubclass] boolean BootPartition;
  [read : ToSubclass,MappingStrings{"Win32API|File Functions|ReadFile"} : ToSubclass] uint32 DiskIndex;
  [read : ToSubclass,MappingStrings{"Win32API"} : ToSubclass] uint32 HiddenSectors;
  [read : ToSubclass,MappingStrings{"WMI"} : ToSubclass] uint32 Index;
  [read : ToSubclass,MappingStrings{"Win32API|Device Input and Output Structures|PARTITION_INFORMATION|RewritePartition"} : ToSubclass] boolean RewritePartition;
  [read : ToSubclass,MappingStrings{"Win32API|File Functions|ReadFile"} : ToSubclass] uint64 Size;
  [read : ToSubclass,MappingStrings{"Win32API|File Functions|ReadFile"} : ToSubclass] uint64 StartingOffset;
  [read : ToSubclass,MappingStrings{"Win32API|PartitionRecord|dwPartitionType"} : ToSubclass] string Type;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C4F9-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_DiskDriveToDiskPartition : CIM_MediaPresent
{
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("Antecedent") : ToSubclass,MappingStrings{"WMI|Win32_DiskDrive"} : ToSubclass] Win32_DiskDrive Ref Antecedent;
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("Dependent") : ToSubclass,MappingStrings{"WMI|Win32_DiskPartition"} : ToSubclass] Win32_DiskPartition Ref Dependent;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C4FB-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_LogicalDiskToPartition : CIM_LogicalDiskBasedOnPartition
{
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("Dependent") : ToSubclass,MappingStrings{"WMI|Win32_LogicalDisk"} : ToSubclass] Win32_LogicalDisk Ref Dependent;
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("Antecedent") : ToSubclass,MappingStrings{"WMI|Win32_DiskPartition"} : ToSubclass] Win32_DiskPartition Ref Antecedent;
};

[Dynamic,Provider("CIMWin32") : ToInstance,SupportsUpdate,Locale(1033) : ToInstance] 
class Win32_AutochkSetting : CIM_Setting
{
  [Override("SettingId"),Key : ToInstance ToSubclass DisableOverride] string SettingID;
  [Read : ToSubclass,Write : ToSubclass,MappingStrings{"Win32Registry | HKLM\\CurrentControlSet\\Control\\Session Manager | AutoChkTimeOut"} : ToSubclass] uint32 UserInputDelay;
};

[Dynamic,Provider("CIMWin32a") : ToInstance,Locale(1033) : ToInstance] 
class Win32_OperatingSystemAutochkSetting : CIM_ElementSetting
{
  [Override("Element"),key : ToInstance ToSubclass DisableOverride] Win32_OperatingSystem Ref Element;
  [Override("Setting"),key : ToInstance ToSubclass DisableOverride] Win32_AutochkSetting Ref Setting;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{BCF02FFE-5560-4de2-B419-272918693426}") : ToInstance] 
class Win32_MappedLogicalDisk : CIM_LogicalDisk
{
  [Key : ToInstance ToSubclass DisableOverride,Read : ToSubclass,Override("DeviceId"),MappingStrings{"WMI"} : ToSubclass] string DeviceID;
  [Key : ToInstance ToSubclass DisableOverride] string SessionID;
  [read : ToSubclass,MappingStrings{"Win32API|File System Functions|GetVolumeInformation|FS_VOL_IS_COMPRESSED"} : ToSubclass] boolean Compressed;
  [read : ToSubclass,MappingStrings{"Win32API|File System Functions|GetVolumeInformation"} : ToSubclass] string FileSystem;
  [read : ToSubclass,MappingStrings{"Win32API|File System Functions|GetVolumeInformation"} : ToSubclass] uint32 MaximumComponentLength;
  [read : ToSubclass,MappingStrings{"Win32API|File System Functions|GetVolumeInformation|FS_FILE_COMPRESSION"} : ToSubclass] boolean SupportsFileBasedCompression;
  [read : ToSubclass,write : ToSubclass,MappingStrings{"Win32API|File System Functions|GetVolumeInformation"} : ToSubclass] string VolumeName;
  [read : ToSubclass,MappingStrings{"Win32API|File System Functions|GetVolumeInformation"} : ToSubclass] string VolumeSerialNumber;
  [read : ToSubclass] boolean SupportsDiskQuotas;
  [read : ToSubclass] boolean QuotasDisabled;
  [read : ToSubclass] boolean QuotasIncomplete;
  [read : ToSubclass] boolean QuotasRebuilding;
  [MappingStrings{"Win32API|Windows Networking Functions|WNetGetConnection"} : ToSubclass] string ProviderName;
};

[Dynamic,Provider("CIMWin32a") : ToInstance,Locale(1033) : ToInstance] 
class Win32_LogonSessionMappedDisk : CIM_Dependency
{
  [Override("Antecedent"),Key : ToInstance ToSubclass DisableOverride] Win32_LogonSession Ref Antecedent;
  [Override("Dependent"),Key : ToInstance ToSubclass DisableOverride] Win32_MappedLogicalDisk Ref Dependent;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{1008CCF0-7BFF-11D2-AAD2-006008C78BC7}") : ToInstance] 
class Win32_DesktopMonitor : CIM_DesktopMonitor
{
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("DeviceId") : ToSubclass,MappingStrings{"Win32API|Windows GDI|HMONITOR"} : ToSubclass] string DeviceID;
  [Read : ToSubclass,MappingStrings{"Win32Registry"} : ToSubclass] string MonitorManufacturer;
  [Read : ToSubclass,MappingStrings{"Win32Registry"} : ToSubclass] string MonitorType;
  [Read : ToSubclass,MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps"} : ToSubclass] uint32 PixelsPerXLogicalInch;
  [Read : ToSubclass,MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps"} : ToSubclass] uint32 PixelsPerYLogicalInch;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C4B4-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_PointingDevice : CIM_PointingDevice
{
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("DeviceId") : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string DeviceID;
  [read : ToSubclass,MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet001\\Control\\Class|DriverDesc"} : ToSubclass] string HardwareType;
  [read : ToSubclass,MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Class|InfPath"} : ToSubclass] string InfFileName;
  [read : ToSubclass,MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Class|InfSection"} : ToSubclass] string InfSection;
  [read : ToSubclass,MappingStrings{"Win32Registry|SampleRate"} : ToSubclass] uint32 SampleRate;
  [read : ToSubclass,MappingStrings{"Win32Registry|MouseSynchIn100ns"} : ToSubclass] uint32 Synch;
  [read : ToSubclass,MappingStrings{"Win32API|System Information Functions|SystemParametersInfo"} : ToSubclass] uint32 DoubleSpeedThreshold;
  [read : ToSubclass,MappingStrings{"Win32API|System Information Functions|SystemParametersInfo"} : ToSubclass] uint32 QuadSpeedThreshold;
  [read : ToSubclass,MappingStrings{"SMBIOS|Type 21|Interface"} : ToSubclass,ValueMap{"1", "2", "3", "4", "5", "6", "7", "8", "160", "161", "162"} : ToSubclass] uint16 DeviceInterface;
  [read : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string Manufacturer;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C4B5-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_Keyboard : CIM_Keyboard
{
  [Override("DeviceId"),Key : ToInstance ToSubclass DisableOverride,Read : ToSubclass] string DeviceID;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{1008CCF1-7BFF-11D2-AAD2-006008C78BC7}") : ToInstance] 
class Win32_VideoController : CIM_PCVideoController
{
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("DeviceId") : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string DeviceID;
  [Read : ToSubclass,MappingStrings{"Win32Registry"} : ToSubclass] string AdapterCompatibility;
  [Read : ToSubclass,MappingStrings{"Win32Registry|HardwareInformation.DACType"} : ToSubclass] string AdapterDACType;
  [Read : ToSubclass,MappingStrings{"Win32Registry|HardwareInformation.MemorySize"} : ToSubclass] uint32 AdapterRAM;
  [Read : ToSubclass,Override("CurrentRefreshRate") : ToSubclass,MappingStrings{"Win32Registry|HardwareInformation."} : ToSubclass] uint32 CurrentRefreshRate;
  [Read : ToSubclass,MappingStrings{"WMI"} : ToSubclass] boolean Monochrome;
  [Read : ToSubclass,MappingStrings{"Win32API|Device Context Functions|EnumDisplaySettings"} : ToSubclass,ValueMap{"1", "2", "3", "4", "5"} : ToSubclass] uint32 DitherType;
  [Read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class\\{4D36E968-E325-11CE-BFC1-08002BE10318}\\0000"} : ToSubclass] string InfFilename;
  [Read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class\\{4D36E968-E325-11CE-BFC1-08002BE10318}\\0000"} : ToSubclass] string InfSection;
  [Read : ToSubclass,MappingStrings{"Win32Registry|System\\CurrentControlSet\\Services\\Class\\"} : ToSubclass] string InstalledDisplayDrivers;
  [Read : ToSubclass,MappingStrings{"Win32Registry|System\\CurrentControlSet\\Services\\Class\\"} : ToSubclass] datetime DriverDate;
  [Read : ToSubclass,MappingStrings{"Win32API|File Installation Library Functions|GetFileVersionInfo"} : ToSubclass] string DriverVersion;
  [Read : ToSubclass,MappingStrings{"Win32API|Printing and Print Spooler Structures|DevMode|dmICMIntent"} : ToSubclass,ValueMap{"1", "2", "3"} : ToSubclass] uint32 ICMIntent;
  [Read : ToSubclass,MappingStrings{"Win32API|Printing and Print Spooler Structures|DevMode|dmICMMethod"} : ToSubclass,ValueMap{"1", "2", "3", "4"} : ToSubclass] uint32 ICMMethod;
  [Read : ToSubclass,MappingStrings{"Win32API|Printing and Print Spooler Structures|DevMode|dmSpecVersion"} : ToSubclass] uint32 SpecificationVersion;
  [Read : ToSubclass,MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps"} : ToSubclass] uint32 ColorTableEntries;
  [Read : ToSubclass,MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps"} : ToSubclass] uint32 DeviceSpecificPens;
  [Read : ToSubclass,MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps"} : ToSubclass] uint32 ReservedSystemPaletteEntries;
  [Read : ToSubclass,MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps"} : ToSubclass] uint32 SystemPaletteEntries;
  [Read : ToSubclass,MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps"} : ToSubclass] string VideoModeDescription;
};

[DEPRECATED : ToSubclass,Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C4E4-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_DisplayConfiguration : CIM_Setting
{
  [DEPRECATED : ToSubclass,read : ToSubclass,MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps|BITSPIXEL"} : ToSubclass] uint32 BitsPerPel;
  [DEPRECATED : ToSubclass,read : ToSubclass,key : ToInstance ToSubclass DisableOverride,MaxLen(260) : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string DeviceName;
  [DEPRECATED : ToSubclass,read : ToSubclass,MappingStrings{"Win32API|Printing and Print Spooler Structures|DEVMODE|dmDisplayFlags "} : ToSubclass] uint32 DisplayFlags;
  [DEPRECATED : ToSubclass,read : ToSubclass,MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps|VREFRESH"} : ToSubclass] uint32 DisplayFrequency;
  [DEPRECATED : ToSubclass,read : ToSubclass,MappingStrings{"Win32API|Printing and Print Spooler Structures|DEVMODE|dmDitherType"} : ToSubclass,ValueMap{"1", "2", "3", "4", "5"} : ToSubclass] uint32 DitherType;
  [DEPRECATED : ToSubclass,read : ToSubclass,MappingStrings{"Win32Registry|System\\CurrentControlSet\\Services\\Class|Ver"} : ToSubclass] string DriverVersion;
  [DEPRECATED : ToSubclass,read : ToSubclass,MappingStrings{"Win32API|Printing and Print Spooler Structures|DEVMODE|dmICMIntent"} : ToSubclass,ValueMap{"1", "2", "3"} : ToSubclass] uint32 ICMIntent;
  [DEPRECATED : ToSubclass,read : ToSubclass,MappingStrings{"Win32API|Printing and Print Spooler Structures|DEVMODE|dmICMMethod "} : ToSubclass,ValueMap{"1", "2", "3", "4"} : ToSubclass] uint32 ICMMethod;
  [DEPRECATED : ToSubclass,read : ToSubclass,MappingStrings{"Win32API|Printing and Print Spooler Structures|DEVMODE|dmLogPixels"} : ToSubclass] uint32 LogPixels;
  [DEPRECATED : ToSubclass,read : ToSubclass,MappingStrings{"Win32API|Printing and Print Spooler Structures|DEVMODE|dmPelsHeight "} : ToSubclass] uint32 PelsHeight;
  [DEPRECATED : ToSubclass,read : ToSubclass,MappingStrings{"Win32API|Printing and Print Spooler Structures|DEVMODE|dmPelsWidth "} : ToSubclass] uint32 PelsWidth;
  [DEPRECATED : ToSubclass,read : ToSubclass,MappingStrings{"Win32API|Printing and Print Spooler Structures|DEVMODE|dmSpecVersion"} : ToSubclass] uint32 SpecificationVersion;
};

[DEPRECATED : ToSubclass,Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C4E5-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_DisplayControllerConfiguration : CIM_Setting
{
  [DEPRECATED : ToSubclass,read : ToSubclass,MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps|BITSPIXEL"} : ToSubclass] uint32 BitsPerPixel;
  [DEPRECATED : ToSubclass,read : ToSubclass,MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps|PLANES"} : ToSubclass] uint32 ColorPlanes;
  [DEPRECATED : ToSubclass,read : ToSubclass,MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps|NUMCOLORS"} : ToSubclass] uint32 DeviceEntriesInAColorTable;
  [DEPRECATED : ToSubclass,read : ToSubclass,MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps|NUMPENS"} : ToSubclass] uint32 DeviceSpecificPens;
  [DEPRECATED : ToSubclass,read : ToSubclass,MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps|HORZRES"} : ToSubclass] uint32 HorizontalResolution;
  [DEPRECATED : ToSubclass,read : ToSubclass,key : ToInstance ToSubclass DisableOverride,MappingStrings{"WMI"} : ToSubclass] string Name;
  [DEPRECATED : ToSubclass,read : ToSubclass,MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps|HORZRESVREFRESH"} : ToSubclass] sint32 RefreshRate;
  [DEPRECATED : ToSubclass,read : ToSubclass,MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps|NUMRESERVED"} : ToSubclass] uint32 ReservedSystemPaletteEntries;
  [DEPRECATED : ToSubclass,read : ToSubclass,MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps|NUMRESERVED"} : ToSubclass] uint32 SystemPaletteEntries;
  [DEPRECATED : ToSubclass,read : ToSubclass,MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps|VERTRES"} : ToSubclass] uint32 VerticalResolution;
  [DEPRECATED : ToSubclass,read : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string VideoMode;
};

[DEPRECATED : ToSubclass,Locale(1033) : ToInstance,UUID("{8502C4ED-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_VideoConfiguration : CIM_Setting
{
  [DEPRECATED : ToSubclass,read : ToSubclass,MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps|COLORRES"} : ToSubclass] uint32 ActualColorResolution;
  [DEPRECATED : ToSubclass,read : ToSubclass,MappingStrings{"Win32Registry|System\\CurrentControlSet\\Services\\Class\\Info|ChipType"} : ToSubclass] string AdapterChipType;
  [DEPRECATED : ToSubclass,read : ToSubclass,key : ToInstance ToSubclass DisableOverride,MaxLen(256) : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string AdapterCompatibility;
  [DEPRECATED : ToSubclass,read : ToSubclass,MappingStrings{"Win32Registry|System\\CurrentControlSet\\Services\\Class\\Info|DACType"} : ToSubclass] string AdapterDACType;
  [DEPRECATED : ToSubclass,read : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string AdapterDescription;
  [DEPRECATED : ToSubclass,read : ToSubclass,MappingStrings{"Win32Registry|System\\CurrentControlSet\\Services\\Class\\Info|VideoMemory"} : ToSubclass] uint32 AdapterRAM;
  [DEPRECATED : ToSubclass,read : ToSubclass,MappingStrings{"Win32Registry|HARDWARE\\Description\\System\\DisplayController\\0\\Identifier"} : ToSubclass] string AdapterType;
  [DEPRECATED : ToSubclass,read : ToSubclass,MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps|BITSPIXEL"} : ToSubclass] uint32 BitsPerPixel;
  [DEPRECATED : ToSubclass,read : ToSubclass,MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps|PLANES"} : ToSubclass] uint32 ColorPlanes;
  [DEPRECATED : ToSubclass,read : ToSubclass,MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps|NUMCOLORS"} : ToSubclass] uint32 ColorTableEntries;
  [DEPRECATED : ToSubclass,read : ToSubclass,MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps|NUMPENS"} : ToSubclass] uint32 DeviceSpecificPens;
  [DEPRECATED : ToSubclass,read : ToSubclass,MappingStrings{"Win32Registry|System\\CurrentControlSet\\Services\\Class\\AdapterDescription|DriverDate"} : ToSubclass] datetime DriverDate;
  [DEPRECATED : ToSubclass,read : ToSubclass,MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps|HORZRES"} : ToSubclass] uint32 HorizontalResolution;
  [DEPRECATED : ToSubclass,read : ToSubclass,MappingStrings{"Win32Registry|System\\CurrentControlSet\\Services\\Class|InfPath"} : ToSubclass] string InfFilename;
  [DEPRECATED : ToSubclass,read : ToSubclass,MappingStrings{"Win32Registry|System\\CurrentControlSet\\Services\\Class|InfSection"} : ToSubclass] string InfSection;
  [DEPRECATED : ToSubclass,read : ToSubclass,MappingStrings{"Win32Registry|System\\CurrentControlSet\\Services\\Class\\Defaule|drv"} : ToSubclass] string InstalledDisplayDrivers;
  [DEPRECATED : ToSubclass,read : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string MonitorManufacturer;
  [DEPRECATED : ToSubclass,read : ToSubclass,MappingStrings{"Win32Registry|HARDWARE\\Description\\System\\MonitorPeripheral\\0|Identifier"} : ToSubclass] string MonitorType;
  [DEPRECATED : ToSubclass,read : ToSubclass,key : ToInstance ToSubclass DisableOverride,MaxLen(256) : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string Name;
  [DEPRECATED : ToSubclass,read : ToSubclass,MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps|LOGPIXELSX"} : ToSubclass] uint32 PixelsPerXLogicalInch;
  [DEPRECATED : ToSubclass,read : ToSubclass,MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps|LOGPIXELSY"} : ToSubclass] uint32 PixelsPerYLogicalInch;
  [DEPRECATED : ToSubclass,read : ToSubclass,MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps|VREFRESH"} : ToSubclass] uint32 RefreshRate;
  [DEPRECATED : ToSubclass,read : ToSubclass,MappingStrings{"Win32Registry|System\\CurrentControlSet\\Services|Device0|DefaultSettings.Interlaced"} : ToSubclass] string ScanMode;
  [DEPRECATED : ToSubclass,read : ToSubclass,MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps|VERTSIZE"} : ToSubclass] uint32 ScreenHeight;
  [DEPRECATED : ToSubclass,read : ToSubclass,MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps|HORZSIZE"} : ToSubclass] uint32 ScreenWidth;
  [DEPRECATED : ToSubclass,read : ToSubclass,MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps|SIZEPALETTE"} : ToSubclass] uint32 SystemPaletteEntries;
  [DEPRECATED : ToSubclass,read : ToSubclass,MappingStrings{"Win32API|Device Context Functions|GetDeviceCaps|VERTRES"} : ToSubclass] uint32 VerticalResolution;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{1008CCEE-7BFF-11D2-AAD2-006008C78BC7}") : ToInstance] 
class Win32_VideoSettings : CIM_VideoSetting
{
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("Element") : ToSubclass,MappingStrings{"WMI|Win32_VideoController"} : ToSubclass] Win32_VideoController Ref Element;
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("Setting") : ToSubclass,MappingStrings{"CIM|CIM_VideoControllerResolution"} : ToSubclass] CIM_VideoControllerResolution Ref Setting;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C50C-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_SoundDevice : CIM_LogicalDevice
{
  [Read : ToSubclass,Override("DeviceId"),Key : ToInstance ToSubclass DisableOverride,MaxLen(260) : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\control\\MediaResources\\wave|DeviceID"} : ToSubclass] string DeviceID;
  [read : ToSubclass,MappingStrings{"WMI"} : ToSubclass] uint16 DMABufferSize;
  [read : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string Manufacturer;
  [read : ToSubclass,MappingStrings{"WMI"} : ToSubclass] uint32 MPU401Address;
  [read : ToSubclass,MappingStrings{"Win32API|Multimedia Structures|WAVEOUTCAPS|szPname"} : ToSubclass] string ProductName;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C4B9-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_Battery : CIM_Battery
{
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("DeviceId") : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string DeviceID;
  [read : ToSubclass,DEPRECATED : ToSubclass,MappingStrings{"HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services|BatteryLife"} : ToSubclass] uint32 ExpectedBatteryLife;
  [read : ToSubclass,DEPRECATED : ToSubclass,MappingStrings{"HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services|RechargeRate"} : ToSubclass] uint32 BatteryRechargeTime;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{FAF76B9E-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class Win32_PortableBattery : CIM_Battery
{
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("DeviceId") : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string DeviceID;
  [read : ToSubclass,MappingStrings{"SMBIOS|Type 22|Location"} : ToSubclass] string Location;
  [read : ToSubclass,MappingStrings{"SMBIOS|Type 22|Manufacture Date"} : ToSubclass] string ManufactureDate;
  [read : ToSubclass,MappingStrings{"SMBIOS|Type 22|Manufacturer"} : ToSubclass] string Manufacturer;
  [read : ToSubclass,MappingStrings{"SMBIOS|Type 22|Maximum Error in Battery Data"} : ToSubclass] uint16 MaxBatteryError;
  [read : ToSubclass,MappingStrings{"SMBIOS|Type 22|Design Capacity Multiplier"} : ToSubclass] uint16 CapacityMultiplier;
};

[Locale(1033) : ToInstance,UUID("{86460B6B-E709-11d2-B139-00105A1F77A1}") : ToInstance] 
class Win32_PowerManagementEvent : __ExtrinsicEvent
{
  [read : ToSubclass,MappingStrings{"Win32API|Power Management Events"} : ToSubclass,ValueMap{"4", "7", "10", "11", "18"} : ToSubclass] uint16 EventType;
  [read : ToSubclass,MappingStrings{"Win32API|Power Management Events"} : ToSubclass] uint16 OEMEventCode;
};

Instance of __Win32Provider as $PowerEvent
{
  Name = "MS_Power_Management_Event_Provider";
  ClsId = "{3DD82D10-E6F1-11d2-B139-00105A1F77A1}";
  HostingModel = "LocalSystemHost";
};

Instance of __EventProviderRegistration
{
  Provider = $PowerEvent;
  EventQueryList = {"select * from Win32_PowerManagementEvent"};
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{98C7E2C6-D592-11d2-B355-00105A0A323A}") : ToInstance] 
class Win32_PCMCIAController : CIM_PCMCIAController
{
  [Read : ToSubclass,Override("DeviceId") : ToSubclass,Key : ToInstance ToSubclass DisableOverride,MappingStrings{"WMI"} : ToSubclass] string DeviceID;
};

[dynamic,provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{2A7DC003-BAEF-11d2-85E5-0000F8102E5F}") : ToInstance] 
class Win32_1394Controller : CIM_Controller
{
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("DeviceId") : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string DeviceID;
  [read : ToSubclass,MappingStrings{"Win32Registry"} : ToSubclass] string Manufacturer;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C4BA-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_MotherboardDevice : CIM_LogicalDevice
{
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("DeviceId") : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string DeviceID;
  [read : ToSubclass,MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\HARDWARE\\DESCRIPTION\\System\\MultifunctionAdapter|Identifier"} : ToSubclass] string PrimaryBusType;
  [read : ToSubclass,MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\HARDWARE\\DESCRIPTION\\System"} : ToSubclass] string RevisionNumber;
  [read : ToSubclass,MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\HARDWARE\\DESCRIPTION\\System\\MultifunctionAdapter|Identifier"} : ToSubclass] string SecondaryBusType;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8835CFC9-BAEF-11d2-85E5-0000F8102E5F}") : ToInstance] 
class Win32_1394ControllerDevice : CIM_ControlledBy
{
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("Dependent") : ToSubclass,MappingStrings{"CIM|CIM_LogicalDevice"} : ToSubclass] CIM_LogicalDevice Ref Dependent;
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("Antecedent") : ToSubclass,MappingStrings{"WMI|Win32_1394Controller"} : ToSubclass] Win32_1394Controller Ref Antecedent;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{9ABA5122-C7A1-11d2-911D-0060081A46FD}") : ToInstance] 
class Win32_IDEController : CIM_Controller
{
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("DeviceId") : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string DeviceID;
  [read : ToSubclass,MappingStrings{"Win32Registry"} : ToSubclass] string Manufacturer;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{5BC42B62-C7A1-11d2-911D-0060081A46FD}") : ToInstance] 
class Win32_IDEControllerDevice : CIM_ControlledBy
{
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("Dependent") : ToSubclass,MappingStrings{"CIM|CIM_LogicalDevice"} : ToSubclass] CIM_LogicalDevice Ref Dependent;
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("Antecedent") : ToSubclass,MappingStrings{"CIM|Win32_IDEController"} : ToSubclass] Win32_IDEController Ref Antecedent;
};

[Abstract,Locale(1033) : ToInstance,UUID("{8502C4FD-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_DeviceSettings : CIM_ElementSetting
{
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("Element") : ToSubclass,MappingStrings{"CIM|CIM_LogicalDevice"} : ToSubclass] CIM_LogicalDevice Ref Element;
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("Setting") : ToSubclass,MappingStrings{"CIM|CIM_Setting"} : ToSubclass] CIM_Setting Ref Setting;
};

[DEPRECATED : ToSubclass,Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C50D-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_AllocatedResource : CIM_Dependency
{
  [Key : ToInstance ToSubclass DisableOverride,Override("Antecedent") : ToSubclass,MappingStrings{"CIM|CIM_SystemResource"} : ToSubclass] CIM_SystemResource Ref Antecedent;
  [Key : ToInstance ToSubclass DisableOverride,Override("Dependent") : ToSubclass,MappingStrings{"CIM|CIM_LogicalDevice"} : ToSubclass] CIM_LogicalDevice Ref Dependent;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("970C0998-41FE-4275-B7D9-7DABAD3FBC4D") : ToInstance] 
class Win32_PNPAllocatedResource : CIM_AllocatedResource
{
  [Key : ToInstance ToSubclass DisableOverride,Override("Antecedent") : ToSubclass,MappingStrings{"CIM|CIM_SystemResource"} : ToSubclass] CIM_SystemResource Ref Antecedent;
  [Key : ToInstance ToSubclass DisableOverride,Override("Dependent") : ToSubclass,MappingStrings{"CIM|CIM_LogicalDevice"} : ToSubclass] Win32_PNPEntity Ref Dependent;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C50E-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_Bus : CIM_LogicalDevice
{
  [Key : ToInstance ToSubclass DisableOverride,Read : ToSubclass,Override("DeviceId"),MappingStrings{"WMI"} : ToSubclass] string DeviceID;
  [read : ToSubclass,MappingStrings{"WMI"} : ToSubclass] uint32 BusNum;
  [read : ToSubclass,MappingStrings{"Win32API|cHwRes|INTERFACE_TYPE"} : ToSubclass,ValueMap{"-1", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16"} : ToSubclass] uint32 BusType;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C50F-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance ToSubclass] 
class Win32_DeviceBus : CIM_Dependency
{
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("Antecedent") : ToSubclass,MappingStrings{"WMI|Win32_Bus"} : ToSubclass] Win32_Bus Ref Antecedent;
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("Dependent") : ToSubclass,MappingStrings{"CIM|CIM_LogicalDevice"} : ToSubclass] CIM_LogicalDevice Ref Dependent;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C510-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_CIMLogicalDeviceCIMDataFile : CIM_Dependency
{
  [read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("Antecedent") : ToSubclass,MappingStrings{"CIM|CIM_LogicalDevice"} : ToSubclass] CIM_LogicalDevice Ref Antecedent;
  [read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("Dependent") : ToSubclass,MappingStrings{"CIM|CIM_DataFile"} : ToSubclass] CIM_DataFile Ref Dependent;
  [Read : ToSubclass,MappingStrings{"CIM"} : ToSubclass] uint16 Purpose;
  [Read : ToSubclass,MappingStrings{"CIM"} : ToSubclass] string PurposeDescription;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{AEECF151-D0EA-11d2-ABFC-00805F538618}") : ToInstance] 
class Win32_OnBoardDevice : CIM_PhysicalComponent
{
  [read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,MaxLen(256) : ToSubclass,Override("Tag") : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string Tag;
  [read : ToSubclass,MappingStrings{"SMBIOS|Type 10|Device Type n"} : ToSubclass,ValueMap{"1", "2", "3", "4", "5", "6", "7"} : ToSubclass] uint16 DeviceType;
  [read : ToSubclass,MappingStrings{"SMBIOS|Type 10|Device Status n"} : ToSubclass] boolean Enabled;
  [read : ToSubclass,Override("Description") : ToSubclass,MappingStrings{"SMBIOS|Type 10|Description"} : ToSubclass] string Description;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{464FFAB8-946F-11d2-AAE2-006008C78BC7}") : ToInstance] 
class Win32_VoltageProbe : CIM_VoltageSensor
{
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("DeviceId") : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string DeviceID;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{464FFABA-946F-11d2-AAE2-006008C78BC7}") : ToInstance] 
class Win32_CurrentProbe : CIM_CurrentSensor
{
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("DeviceId") : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string DeviceID;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{464FFABB-946F-11d2-AAE2-006008C78BC7}") : ToInstance] 
class Win32_TemperatureProbe : CIM_TemperatureSensor
{
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("DeviceId") : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string DeviceID;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{464FFAB5-946F-11d2-AAE2-006008C78BC7}") : ToInstance] 
class Win32_Fan : CIM_Fan
{
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("DeviceId") : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string DeviceID;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{464FFAB6-946F-11d2-AAE2-006008C78BC7}") : ToInstance] 
class Win32_Refrigeration : CIM_Refrigeration
{
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("DeviceId") : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string DeviceID;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{464FFAB7-946F-11d2-AAE2-006008C78BC7}") : ToInstance] 
class Win32_HeatPipe : CIM_HeatPipe
{
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("DeviceId") : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string DeviceID;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{FE28FD98-C875-11d2-B352-00104BC97924}") : ToInstance] 
class Win32_PnPEntity : CIM_LogicalDevice
{
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("DeviceId") : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string DeviceID;
  [read : ToSubclass] string HardwareID[];
  [read : ToSubclass] string CompatibleID[];
  [read : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string Manufacturer;
  [read : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string Service;
  [read : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string ClassGuid;
};

[Association : ToInstance ToSubclass DisableOverride,Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{FE28FD96-C875-11d2-B352-00104BC97924}") : ToInstance] 
class Win32_PnPDevice
{
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,MappingStrings{"WMI|Win32_PnPEntity"} : ToSubclass] Win32_PnPEntity Ref SystemElement;
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,MappingStrings{"CIM|CIM_LogicalDevice"} : ToSubclass] CIM_LogicalDevice Ref SameElement;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{0800F074-CB98-11d2-B35D-00104BC97924}") : ToInstance] 
class Win32_SystemDriverPNPEntity : CIM_Dependency
{
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("Dependent") : ToSubclass,MappingStrings{"WMI|Win32_SystemDriver"} : ToSubclass] Win32_SystemDriver Ref Dependent;
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("Antecedent") : ToSubclass,MappingStrings{"WMI|Win32_PNPEntity"} : ToSubclass] Win32_PNPEntity Ref Antecedent;
};

[Locale(1033) : ToInstance,UUID("0DE6AAF8-49F1-4868-B3D4-61CB69BA4322") : ToInstance] 
class Win32_DeviceChangeEvent : __ExtrinsicEvent
{
  [Read : ToSubclass,MappingStrings{"Win32APIDevice Management Messages|WM_DEVICECHANGE|wParam", "Win32APIDevice Management Messages|WM_SETTINGCHANGE"} : ToSubclass,ValueMap{"1", "2", "3", "4"} : ToSubclass] uint16 EventType;
};

Instance of __Win32Provider as $VolumeChangeEvent
{
  Name = "VolumeChangeEvents";
  ClsId = "{E2CBCB87-9C07-4523-A78F-061499C83987}";
  HostingModel = "LocalSystemHost";
};

[Locale(1033) : ToInstance,UUID("455CE053-2552-4051-A3E4-C4200DC31B7") : ToInstance] 
class Win32_VolumeChangeEvent : Win32_DeviceChangeEvent
{
  [Read : ToSubclass] string DriveName;
};

Instance of __EventProviderRegistration
{
  Provider = $VolumeChangeEvent;
  EventQueryList = {"select * from Win32_VolumeChangeEvent"};
};

Instance of __Win32Provider as $SystemConfigurationChangeEvent
{
  Name = "SystemConfigurationChangeEvents";
  ClsId = "{D31B6A3F-9350-40de-A3FC-A7EDEB9B7C63}";
  HostingModel = "LocalSystemHost";
};

[Locale(1033) : ToInstance,UUID("76746942-D94B-47E2-BBA4-AFD2FDBA61") : ToInstance] 
class Win32_SystemConfigurationChangeEvent : Win32_DeviceChangeEvent
{
};

Instance of __EventProviderRegistration
{
  Provider = $SystemConfigurationChangeEvent;
  EventQueryList = {"select * from Win32_SystemConfigurationChangeEvent"};
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C4BE-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_POTSModem : CIM_PotsModem
{
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("DeviceId") : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string DeviceID;
  [read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|AttachedTo"} : ToSubclass] string AttachedTo;
  [read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|BlindOff"} : ToSubclass] string BlindOff;
  [read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|BlindOn"} : ToSubclass] string BlindOn;
  [read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|CompatibilityFlags"} : ToSubclass] string CompatibilityFlags;
  [read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|Compression_Off"} : ToSubclass] string CompressionOff;
  [read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|Compression_On"} : ToSubclass] string CompressionOn;
  [read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|ConfigDialog"} : ToSubclass] string ConfigurationDialog;
  [read : ToSubclass,MappingStrings{"Win32API|Communication Structures|DCB"} : ToSubclass] uint8 DCB[];
  [read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|Default"} : ToSubclass] uint8 Default[];
  [read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|DevLoader"} : ToSubclass] string DeviceLoader;
  [read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|DeviceType"} : ToSubclass,ValueMap{"Null Modem", "Internal Modem", "External Modem", "PCMCIA Modem", "Unknown"} : ToSubclass] string DeviceType;
  [read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|DriverDate"} : ToSubclass] datetime DriverDate;
  [read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|ErrorControl_Forced"} : ToSubclass] string ErrorControlForced;
  [read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|ErrorControl_Off"} : ToSubclass] string ErrorControlOff;
  [read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|ErrorControl_On"} : ToSubclass] string ErrorControlOn;
  [read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|FlowControl_Hard"} : ToSubclass] string FlowControlHard;
  [read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|FlowControl_Soft"} : ToSubclass] string FlowControlSoft;
  [read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|FlowControl_Off"} : ToSubclass] string FlowControlOff;
  [read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|InactivityScale"} : ToSubclass] string InactivityScale;
  [read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|Index"} : ToSubclass] uint32 Index;
  [read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|Model"} : ToSubclass] string Model;
  [read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|InfPath"} : ToSubclass] string ModemInfPath;
  [read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|InfSection"} : ToSubclass] string ModemInfSection;
  [read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|Modulation_Bell"} : ToSubclass] string ModulationBell;
  [read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|Modulation_CCITT"} : ToSubclass] string ModulationCCITT;
  [read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|PortSubClass"} : ToSubclass,Value{"Parallel Port", "Serial Port", "Modem"} : ToSubclass,ValueMap{"00", "01", "02"} : ToSubclass] string PortSubClass;
  [read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|Prefix"} : ToSubclass] string Prefix;
  [read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|Properties"} : ToSubclass] uint8 Properties[];
  [read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|ProviderName"} : ToSubclass] string ProviderName;
  [read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|Pulse"} : ToSubclass] string Pulse;
  [read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|Reset"} : ToSubclass] string Reset;
  [read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|ResponsesKeyName"} : ToSubclass] string ResponsesKeyName;
  [read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|SpeakerModeDial"} : ToSubclass] string SpeakerModeDial;
  [read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|SpeakerModeOff"} : ToSubclass] string SpeakerModeOff;
  [read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|SpeakerModeOn"} : ToSubclass] string SpeakerModeOn;
  [read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|SpeakerModeSetup"} : ToSubclass] string SpeakerModeSetup;
  [read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|SpeakerVolume_High"} : ToSubclass] string SpeakerVolumeHigh;
  [read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|SpeakerVolume_Low"} : ToSubclass] string SpeakerVolumeLow;
  [read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|SpeakerVolume_Med"} : ToSubclass] string SpeakerVolumeMed;
  [read : ToSubclass,MappingStrings{"Win32_API|Line Device Structures|LINEDEVCAPS|dwStringFormat"} : ToSubclass] string StringFormat;
  [read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|Terminator"} : ToSubclass] string Terminator;
  [read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|Tone"} : ToSubclass] string Tone;
  [read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class|VoiceSwitchFeature"} : ToSubclass] string VoiceSwitchFeature;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C4B6-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_POTSModemToSerialPort : CIM_ControlledBy
{
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("Antecedent") : ToSubclass,MappingStrings{"WMI|Win32_SerialPort"} : ToSubclass] Win32_SerialPort Ref Antecedent;
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("Dependent") : ToSubclass,MappingStrings{"WMI|Win32_POTSModem"} : ToSubclass] Win32_POTSModem Ref Dependent;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C4C0-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_NetworkAdapter : CIM_NetworkAdapter
{
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("DeviceId") : ToSubclass,MappingStrings{"Win32Registry|System\\CurrentControlSet\\Control\\Class\\{4D36E972-E325-11CE-BFC1-08002BE10318}"} : ToSubclass] string DeviceID;
  [read : ToSubclass,MappingStrings{"Win32Registry|Software\\Microsoft\\Windows NT\\CurrentVersion\\NetworkCards|ServiceName"} : ToSubclass] string ProductName;
  [read : ToSubclass,MappingStrings{"DeviceIoControl::OID_GEN_MEDIA_IN_USE"} : ToSubclass,ValueMap{"Ethernet 802.3", "Token Ring 802.5", "Fiber Distributed Data Interface (FDDI)", "Wide Area Network (WAN)", "LocalTalk", "Ethernet using DIX header format", "ARCNET", "ARCNET (878.2)", "ATM", "Wireless", "Infrared Wireless", "Bpc", "CoWan", "1394"} : ToSubclass] string AdapterType;
  [read : ToSubclass,MappingStrings{"DeviceIoControl::OID_GEN_MEDIA_IN_USE"} : ToSubclass] uint16 AdapterTypeId;
  [read : ToSubclass,MappingStrings{"Win32API|Device Input and Output Functions|DeviceIoControl"} : ToSubclass] string MACAddress;
  [read : ToSubclass,MappingStrings{"Win32Registry|Software\\Microsoft\\Windows NT\\CurrentVersion\\NetworkCards|ProductName"} : ToSubclass] string ServiceName;
  [read : ToSubclass,MappingStrings{"Win32Registry|Software\\Microsoft\\Windows NT\\CurrentVersion\\NetworkCards|Manufacturer"} : ToSubclass] string Manufacturer;
  [DEPRECATED : ToSubclass,read : ToSubclass,MappingStrings{"Win32Registry|Software\\Microsoft\\Windows NT\\CurrentVersion\\NetworkCards|DriverDate"} : ToSubclass] boolean Installed;
  [read : ToSubclass,MappingStrings{"Win32Registry|System\\CurrentControlSet\\Control\\Class\\{4D36E972-E325-11CE-BFC1-08002BE10318}"} : ToSubclass] uint32 Index;
  [read : ToSubclass] uint32 InterfaceIndex;
  [read : ToSubclass,MappingStrings{"MIF.DMTF|Bus Port|001.9|Maximum Number of Attachments"} : ToSubclass] uint32 MaxNumberControlled;
  [read : ToSubclass,MappingStrings{"SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Perflib\\009|System Up Time"} : ToSubclass] datetime TimeOfLastReset;
  [read : ToSubclass,write : ToSubclass] string NetConnectionID;
  [Read : ToSubclass,ValueMap{"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", ".."} : ToSubclass] uint16 NetConnectionStatus;
  [read : ToSubclass] boolean NetEnabled;
  [read : ToSubclass] string GUID;
  [read : ToSubclass] boolean PhysicalAdapter;
  [Implemented,MappingStrings{"WMI"} : ToSubclass] uint32 Enable();
  [Implemented,MappingStrings{"WMI"} : ToSubclass] uint32 Disable();
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C4CD-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_NetworkConnection : CIM_LogicalElement
{
  [read : ToSubclass,MappingStrings{"Win32API|Windows Networking Structures|NETRESOURCE|lpComment"} : ToSubclass] string Comment;
  [read : ToSubclass,MappingStrings{"Win32API|Windows Networking Structures|NETRESOURCE|dwScope"} : ToSubclass,ValueMap{"Current Connection", "Persistent Connection"} : ToSubclass] string ConnectionType;
  [read : ToSubclass,MaxLen(20) : ToSubclass,ValueMap{"Connected", "Error", "Paused", "Disconnected", "Connecting", "Reconnecting"} : ToSubclass,MappingStrings{"Win32API|Network Management Structures|USE_INFO_1|ui1_status"} : ToSubclass] string ConnectionState;
  [read : ToSubclass,MappingStrings{"Win32API|Windows Networking Structures|NETRESOURCE|dwDisplayType"} : ToSubclass,ValueMap{"Domain", "Generic", "Server", "Share"} : ToSubclass] string DisplayType;
  [read : ToSubclass,MappingStrings{"Win32API|Windows Networking Structures|NETRESOURCE|lpLocalName"} : ToSubclass] string LocalName;
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("Name") : ToSubclass,MappingStrings{"Win32API|Windows Networking Structures|NETRESOURCE"} : ToSubclass] string Name;
  [read : ToSubclass,MappingStrings{"Win32API|Windows Networking Functions|WNetEnumResource"} : ToSubclass] boolean Persistent;
  [read : ToSubclass,MappingStrings{"Win32API|Windows Networking Structures|NETRESOURCE|lpProvider"} : ToSubclass] string ProviderName;
  [read : ToSubclass,MappingStrings{"Win32API|Windows Networking Structures|NETRESOURCE|lpRemoteName"} : ToSubclass] string RemoteName;
  [read : ToSubclass,MappingStrings{"Win32API|Windows Networking Structures|NETRESOURCE|lpRemoteName"} : ToSubclass] string RemotePath;
  [read : ToSubclass,MappingStrings{"Win32API|Windows Networking Structures|NETRESOURCE|dwType"} : ToSubclass,ValueMap{"Disk", "Print", "Any"} : ToSubclass] string ResourceType;
  [read : ToSubclass,MappingStrings{"Win32API|Windows Networking Functions|WNetGetUser"} : ToSubclass] string UserName;
  [read : ToSubclass,Schema("Win32") : ToInstance,BitMap{"0", "1", "2", "3", "4", "5", "6", "7", "8", "16", "17", "18", "19", "20"} : ToSubclass] uint32 AccessMask;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C4D5-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_NetworkClient : CIM_LogicalElement
{
  [read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\LanmanWorkstation\\NetworkProvider|Mfg"} : ToSubclass] string Manufacturer;
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("Name") : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\LanmanWorkstation\\NetworkProvider|Name"} : ToSubclass] string Name;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C4D8-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_NetworkProtocol : CIM_LogicalElement
{
  [read : ToSubclass,MappingStrings{"Win32_API|Windows Sockets Structures|PROTOCOL_INFO|dwServiceFlags|XP1_CONNECTIONLESS"} : ToSubclass] boolean ConnectionlessService;
  [read : ToSubclass,MappingStrings{"Win32_API|Windows Sockets Structures|PROTOCOL_INFO|dwServiceFlags|XP_GUARANTEED_DELIVERY"} : ToSubclass] boolean GuaranteesDelivery;
  [read : ToSubclass,MappingStrings{"Win32_API|Windows Sockets Structures|PROTOCOL_INFO|dwServiceFlags|XP_GUARANTEED_ORDER"} : ToSubclass] boolean GuaranteesSequencing;
  [read : ToSubclass,MappingStrings{"Win32_API|Windows Sockets Structures|PROTOCOL_INFO|iMaxSockAddr"} : ToSubclass] uint32 MaximumAddressSize;
  [read : ToSubclass,MappingStrings{"Win32_API|Windows Sockets Structures|PROTOCOL_INFO|dwMessageSize"} : ToSubclass] uint32 MaximumMessageSize;
  [read : ToSubclass,MappingStrings{"Win32_API|Windows Sockets Structures|PROTOCOL_INFO|dwServiceFlags|XP_MESSAGE_ORIENTED"} : ToSubclass] boolean MessageOriented;
  [read : ToSubclass,MappingStrings{"Win32_API|Windows Sockets Structures|PROTOCOL_INFO|iMinSockAddr "} : ToSubclass] uint32 MinimumAddressSize;
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("Name") : ToSubclass,MappingStrings{"Win32_API|Windows Sockets Structures|PROTOCOL_INFO|lpProtocol"} : ToSubclass] string Name;
  [read : ToSubclass,MappingStrings{"Win32_API|Windows Sockets Structures|PROTOCOL_INFO|dwServiceFlags|XP_PSEUDO_STREAM"} : ToSubclass] boolean PseudoStreamOriented;
  [read : ToSubclass,MappingStrings{"Win32_API|Windows Sockets Structures|PROTOCOL_INFO|dwServiceFlags|XP_SUPPORTS_BROADCAST"} : ToSubclass] boolean SupportsBroadcasting;
  [read : ToSubclass,MappingStrings{"Win32_API|Windows Sockets Structures|PROTOCOL_INFO|dwServiceFlags|XP_CONNECT_DATA"} : ToSubclass] boolean SupportsConnectData;
  [read : ToSubclass,MappingStrings{"Win32_API|Windows Sockets Structures|PROTOCOL_INFO|dwServiceFlags|XP_DISCONNECT_DATA"} : ToSubclass] boolean SupportsDisconnectData;
  [read : ToSubclass,MappingStrings{"Win32_API|Windows Sockets Structures|PROTOCOL_INFO|dwServiceFlags|XP_ENCRYPTS"} : ToSubclass] boolean SupportsEncryption;
  [read : ToSubclass,MappingStrings{"Win32_API|Windows Sockets Structures|PROTOCOL_INFO|dwServiceFlags|XP_EXPEDITED_DATA"} : ToSubclass] boolean SupportsExpeditedData;
  [read : ToSubclass,MappingStrings{"Win32_API|Windows Sockets Structures|PROTOCOL_INFO|dwServiceFlags|XP_FRAGMENTATION"} : ToSubclass] boolean SupportsFragmentation;
  [read : ToSubclass,MappingStrings{"Win32_API|Windows Sockets Structures|PROTOCOL_INFO|dwServiceFlags|XP_GRACEFUL_CLOSE"} : ToSubclass] boolean SupportsGracefulClosing;
  [read : ToSubclass,MappingStrings{"Win32_API|Windows Sockets Structures|PROTOCOL_INFO|dwServiceFlags|XP_BANDWIDTH_ALLOCATION"} : ToSubclass] boolean SupportsGuaranteedBandwidth;
  [read : ToSubclass,MappingStrings{"Win32_API|Windows Sockets Structures|PROTOCOL_INFO|dwServiceFlags|XP_SUPPORTS_MULTICAST"} : ToSubclass] boolean SupportsMulticasting;
  [read : ToSubclass,MappingStrings{"Win32_API|Windows Sockets Structures|WSAPROTOCOL_INFO|dwServiceFlags1|XP1_QOS_SUPPORTED"} : ToSubclass] boolean SupportsQualityofService;
};

[Dynamic,Association : ToInstance ToSubclass DisableOverride,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C509-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_ProtocolBinding
{
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,MappingStrings{"WMI|Win32_NetworkProtocol"} : ToSubclass] Win32_NetworkProtocol Ref Antecedent;
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,MappingStrings{"WMI|Win32_NetworkAdapter"} : ToSubclass] Win32_NetworkAdapter Ref Device;
  [read : ToSubclass,MappingStrings{"WMI|Win32_SystemDriver"} : ToSubclass] Win32_SystemDriver Ref Dependent;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C515-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_NetworkAdapterConfiguration : CIM_Setting
{
  [read : ToSubclass] uint16 GatewayCostMetric[];
  [Read : ToSubclass,MappingStrings{"Win32Registry|System\\CurrentControlSet\\Services|Parameters|DefaultGateway"} : ToSubclass] string DefaultIPGateway[];
  [Read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services|EnableDHCP"} : ToSubclass] boolean DHCPEnabled;
  [Read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services|LeaseTerminatesTime"} : ToSubclass] datetime DHCPLeaseExpires;
  [Read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services|LeaseObtainedTime"} : ToSubclass] datetime DHCPLeaseObtained;
  [Read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services|DhcpServer"} : ToSubclass] string DHCPServer;
  [Read : ToSubclass,key : ToInstance ToSubclass DisableOverride,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Control\\Class\\{4D36E972-E325-11CE-BFC1-08002BE10318}"} : ToSubclass] uint32 Index;
  [read : ToSubclass] uint32 InterfaceIndex;
  [Read : ToSubclass,MappingStrings{"Win32Registry|System\\CurrentControlSet\\Services|Parameters\\Tcpip|IPAddress"} : ToSubclass] string IPAddress[];
  [Read : ToSubclass,MappingStrings{"Win32Registry|System\\CurrentControlSet\\Services|Parameters|SubnetMask"} : ToSubclass] string IPSubnet[];
  [DEPRECATED : ToSubclass,Read : ToSubclass,MappingStrings{"Win32API|Windows Sockets Version 2|getsockopt|IPX_ADDRESS"} : ToSubclass] string IPXAddress;
  [Read : ToSubclass,MappingStrings{"Win32API|Device Input and Output Functions|DeviceIoControl"} : ToSubclass] string MACAddress;
  [Read : ToSubclass,MappingStrings{"Win32Registry|Software\\Microsoft\\Windows NT\\CurrentVersion\\NetworkCards|ServiceName"} : ToSubclass] string ServiceName;
  [Read : ToSubclass,MappingStrings{"Win32Registry|System\\CurrentControlSet\\Services|Parameters\\Tcpip"} : ToSubclass] boolean IPEnabled;
  [DEPRECATED : ToSubclass,Read : ToSubclass,MappingStrings{"WMI"} : ToSubclass] boolean IPXEnabled;
  [Read : ToSubclass] boolean FullDNSRegistrationEnabled;
  [Read : ToSubclass] boolean DomainDNSRegistrationEnabled;
  [Read : ToSubclass] uint32 IPConnectionMetric;
  [Read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|DatabasePath"} : ToSubclass] string DatabasePath;
  [Read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|UseZeroBroadcast"} : ToSubclass] boolean IPUseZeroBroadcast;
  [Read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|ArpAlwaysSourceRoute"} : ToSubclass] boolean ArpAlwaysSourceRoute;
  [Read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|ArpUseEtherSNAP"} : ToSubclass] boolean ArpUseEtherSNAP;
  [Read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|DefaultTOS"} : ToSubclass] uint8 DefaultTOS;
  [Read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|DefaultTTL"} : ToSubclass] uint8 DefaultTTL;
  [Read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|EnableDeadGWDetect"} : ToSubclass] boolean DeadGWDetectEnabled;
  [Read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|EnablePMTUBHDetect"} : ToSubclass] boolean PMTUBHDetectEnabled;
  [Read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|EnablePMTUDiscovery"} : ToSubclass] boolean PMTUDiscoveryEnabled;
  [Read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|ForwardBufferMemory"} : ToSubclass] uint32 ForwardBufferMemory;
  [Read : ToSubclass,ValueMap{"0", "1", "2"} : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|IGMPLevel"} : ToSubclass] uint8 IGMPLevel;
  [Read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|KeepAliveInterval"} : ToSubclass] uint32 KeepAliveInterval;
  [Read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|KeepAliveInterval"} : ToSubclass] uint32 KeepAliveTime;
  [Read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|MTU"} : ToSubclass] uint32 MTU;
  [Read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|NumForwardPackets"} : ToSubclass] uint32 NumForwardPackets;
  [Read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|TcpMaxConnectRetransmissions"} : ToSubclass] uint32 TcpMaxConnectRetransmissions;
  [Read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|TcpMaxDataRetransmissions"} : ToSubclass] uint32 TcpMaxDataRetransmissions;
  [Read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|TcpNumConnections"} : ToSubclass] uint32 TcpNumConnections;
  [Read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|TcpUseRFC1122UrgentPointer"} : ToSubclass] boolean TcpUseRFC1122UrgentPointer;
  [Read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|TcpWindowSize"} : ToSubclass] uint16 TcpWindowSize;
  [DEPRECATED : ToSubclass,read : ToSubclass,MappingStrings{"WMI|Win32_NetworkAdapterConfiguration|IPFilterSecurityEnabled"} : ToSubclass] boolean IPPortSecurityEnabled;
  [Read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|IPFilterSecurityEnabled"} : ToSubclass] boolean IPFilterSecurityEnabled;
  [Read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|TCPAllowedPorts"} : ToSubclass] string IPSecPermitTCPPorts[];
  [Read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|UDPAllowedPorts"} : ToSubclass] string IPSecPermitUDPPorts[];
  [Read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|RawIPAllowedProtocols"} : ToSubclass] string IPSecPermitIPProtocols[];
  [Read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|Hostname"} : ToSubclass] string DNSHostName;
  [Read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|Domain"} : ToSubclass] string DNSDomain;
  [Read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|NameServer"} : ToSubclass] string DNSServerSearchOrder[];
  [Read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|SearchList"} : ToSubclass] string DNSDomainSuffixSearchOrder[];
  [Read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|EnableDNS"} : ToSubclass] boolean DNSEnabledForWINSResolution;
  [Read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|EnableLMHOSTS"} : ToSubclass] boolean WINSEnableLMHostsLookup;
  [Read : ToSubclass,MappingStrings{"Win32API|Device Input and Output Functions|DeviceIoControl"} : ToSubclass] string WINSPrimaryServer;
  [Read : ToSubclass,MappingStrings{"Win32API|Device Input and Output Functions|DeviceIoControl"} : ToSubclass] string WINSSecondaryServer;
  [Read : ToSubclass,MappingStrings{"Win32API|System Information Functions|GetSystemDirectory|\\drivers\\etc\\lmhosts"} : ToSubclass] string WINSHostLookupFile;
  [Read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|ScopeID"} : ToSubclass] string WINSScopeID;
  [read : ToSubclass] uint32 TcpipNetbiosOptions;
  [DEPRECATED : ToSubclass,Read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\nwlnkipx\\Parameters|VirtualNetworkNumber"} : ToSubclass] string IPXVirtualNetNumber;
  [DEPRECATED : ToSubclass,Read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\nwlnkipx\\Parameters|NetworkNumber"} : ToSubclass] string IPXNetworkNumber[];
  [DEPRECATED : ToSubclass,Read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\nwlnkipx\\Parameters|PktType"} : ToSubclass,ValueMap{"0", "1", "2", "3", "255"} : ToSubclass] uint32 IPXFrameType[];
  [DEPRECATED : ToSubclass,Read : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\nwlnkipx\\Parameters|MediaType"} : ToSubclass,ValueMap{"1", "2", "3", "8"} : ToSubclass] uint32 IPXMediaType;
  [Implemented,ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."} : ToSubclass,MappingStrings{"WMI"} : ToSubclass] uint32 EnableDHCP();
  [Implemented,ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."} : ToSubclass,MappingStrings{"WMI"} : ToSubclass] uint32 RenewDHCPLease();
  [Implemented,Static : ToSubclass,ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."} : ToSubclass,MappingStrings{"WMI"} : ToSubclass] uint32 RenewDHCPLeaseAll();
  [Implemented,ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."} : ToSubclass,MappingStrings{"WMI"} : ToSubclass] uint32 ReleaseDHCPLease();
  [Implemented,Static : ToSubclass,ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."} : ToSubclass,MappingStrings{"WMI"} : ToSubclass] uint32 ReleaseDHCPLeaseAll();
  [Implemented,ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."} : ToSubclass,MappingStrings{"WMI"} : ToSubclass] uint32 EnableStatic([In : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string IPAddress[],[In : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string SubnetMask[]);
  [Implemented,ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."} : ToSubclass,MappingStrings{"WMI"} : ToSubclass] uint32 SetGateways([In : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters\\Interfaces\\"} : ToSubclass] string DefaultIPGateway[],[In : ToSubclass,Optional : ToSubclass,MappingStrings{"WMI"} : ToSubclass] uint16 GatewayCostMetric[]);
  [Implemented,Static : ToSubclass,ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."} : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters"} : ToSubclass] uint32 EnableDNS([In : ToSubclass,Optional : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|Hostname"} : ToSubclass] string DNSHostName,[In : ToSubclass,Optional : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|Domain"} : ToSubclass] string DNSDomain,[In : ToSubclass,Optional : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|NameServer"} : ToSubclass] string DNSServerSearchOrder[],[In : ToSubclass,Optional : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|SearchList"} : ToSubclass] string DNSDomainSuffixSearchOrder[]);
  [Implemented,ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."} : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters"} : ToSubclass] uint32 SetDNSDomain([In : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|Domain"} : ToSubclass] string DNSDomain);
  [Implemented,ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."} : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters"} : ToSubclass] uint32 SetDNSServerSearchOrder([In : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|NameServer"} : ToSubclass] string DNSServerSearchOrder[]);
  [Implemented,Static,ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."} : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters"} : ToSubclass] uint32 SetDNSSuffixSearchOrder([In : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|NameServer"} : ToSubclass] string DNSDomainSuffixSearchOrder[]);
  [Implemented,ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."} : ToSubclass] uint32 SetDynamicDNSRegistration([In : ToSubclass] boolean FullDNSRegistrationEnabled,[In : ToSubclass,Optional : ToSubclass] boolean DomainDNSRegistrationEnabled);
  [Implemented,ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."} : ToSubclass] uint32 SetIPConnectionMetric([In : ToSubclass] uint32 IPConnectionMetric);
  [Implemented,ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."} : ToSubclass,MappingStrings{"Win32API|Device Input and Output Functions|DeviceIoControl"} : ToSubclass] uint32 SetWINSServer([In : ToSubclass,MappingStrings{"Win32API|Device Input and Output Functions|DeviceIoControl"} : ToSubclass] string WINSPrimaryServer,[In : ToSubclass,MappingStrings{"Win32API|Device Input and Output Functions|DeviceIoControl"} : ToSubclass] string WINSSecondaryServer);
  [Implemented,Static : ToSubclass,ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."} : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services"} : ToSubclass] uint32 EnableWINS([In : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Netbt\\Parameters|EnableDNS"} : ToSubclass] boolean DNSEnabledForWINSResolution,[In : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Netbt\\Parameters|EnableLMHOSTS"} : ToSubclass] boolean WINSEnableLMHostsLookup,[In : ToSubclass,optional : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|DatabasePath"} : ToSubclass] string WINSHostLookupFile,[In : ToSubclass,optional : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Netbt\\Parameters|ScopeID"} : ToSubclass] string WINSScopeID);
  [Implemented,ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."} : ToSubclass] uint32 SetTcpipNetbios([In : ToSubclass] uint32 TcpipNetbiosOptions);
  [Implemented,ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."} : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services|Tcpip\\Parameters\\Interfaces"} : ToSubclass] uint32 EnableIPSec([In : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services|Tcpip\\Parameters\\Interfaces|TCPAllowedPorts"} : ToSubclass] string IPSecPermitTCPPorts[],[In : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services|Tcpip\\Parameters\\Interfaces|UDPAllowedPorts"} : ToSubclass] string IPSecPermitUDPPorts[],[In : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services|Tcpip\\Parameters\\Interfaces|RawIPAllowedProtocols"} : ToSubclass] string IPSecPermitIPProtocols[]);
  [Implemented,ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."} : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services|Tcpip\\Parameters\\Interfaces"} : ToSubclass] uint32 DisableIPSec();
  [DEPRECATED : ToSubclass,Implemented,Static : ToSubclass,ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."} : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\nwlnkipx\\Parameters"} : ToSubclass] uint32 SetIPXVirtualNetworkNumber([In : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\nwlnkipx\\Parameters|VirtualNetworkNumber"} : ToSubclass] string IPXVirtualNetNumber);
  [DEPRECATED : ToSubclass,Implemented,ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."} : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\nwlnkipx\\Parameters\\Adapters"} : ToSubclass] uint32 SetIPXFrameTypeNetworkPairs([In : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\nwlnkipx\\Parameters\\Adapters|NetworkNumber"} : ToSubclass] string IPXNetworkNumber[],[In : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\nwlnkipx\\Parameters\\Adapters|PktType"} : ToSubclass,ValueMap{"0", "1", "2", "3", "255"} : ToSubclass] uint32 IPXFrameType[]);
  [Implemented,Static : ToSubclass,ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."} : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters"} : ToSubclass] uint32 SetDatabasePath([In : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|DatabasePath"} : ToSubclass] string DatabasePath);
  [Implemented,Static : ToSubclass,ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."} : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters"} : ToSubclass] uint32 SetIPUseZeroBroadcast([In : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|UseZeroBroadcast"} : ToSubclass] boolean IPUseZeroBroadcast);
  [Implemented,Static : ToSubclass,ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."} : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters"} : ToSubclass] uint32 SetArpAlwaysSourceRoute([In : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|ArpAlwaysSourceRoute"} : ToSubclass] boolean ArpAlwaysSourceRoute);
  [Implemented,Static : ToSubclass,ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."} : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters"} : ToSubclass] uint32 SetArpUseEtherSNAP([In : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|ArpUseEtherSNAP"} : ToSubclass] boolean ArpUseEtherSNAP);
  [Implemented,Static : ToSubclass,ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."} : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters"} : ToSubclass] uint32 SetDefaultTOS([In : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|DefaultTOS"} : ToSubclass] uint8 DefaultTOS);
  [Implemented,Static : ToSubclass,ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."} : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters"} : ToSubclass] uint32 SetDefaultTTL([In : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|DefaultTTL"} : ToSubclass] uint8 DefaultTTL);
  [Implemented,Static : ToSubclass,ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."} : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters"} : ToSubclass] uint32 SetDeadGWDetect([In : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|EnableDeadGWDetect"} : ToSubclass] boolean DeadGWDetectEnabled);
  [Implemented,Static : ToSubclass,ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."} : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters"} : ToSubclass] uint32 SetPMTUBHDetect([In : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|EnablePMTUBHDetect"} : ToSubclass] boolean PMTUBHDetectEnabled);
  [Implemented,Static : ToSubclass,ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."} : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters"} : ToSubclass] uint32 SetPMTUDiscovery([In : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|EnablePMTUDiscovery"} : ToSubclass] boolean PMTUDiscoveryEnabled);
  [Implemented,Static : ToSubclass,ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."} : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters"} : ToSubclass] uint32 SetForwardBufferMemory([In : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|ForwardBufferMemory"} : ToSubclass] uint32 ForwardBufferMemory);
  [Implemented,Static : ToSubclass,ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."} : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters"} : ToSubclass] uint32 SetIGMPLevel([In : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|IGMPLevel"} : ToSubclass] uint8 IGMPLevel);
  [Implemented,Static : ToSubclass,ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."} : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters"} : ToSubclass] uint32 SetKeepAliveInterval([In : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|KeepAliveInterval"} : ToSubclass] uint32 KeepAliveInterval);
  [Implemented,Static : ToSubclass,ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."} : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters"} : ToSubclass] uint32 SetKeepAliveTime([In : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|KeepAliveInterval"} : ToSubclass] uint32 KeepAliveTime);
  [DEPRECATED : ToSubclass,Implemented,Static : ToSubclass,ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."} : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters"} : ToSubclass] uint32 SetMTU([In : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|MTU"} : ToSubclass] uint32 MTU);
  [Implemented,Static : ToSubclass,ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."} : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters"} : ToSubclass] uint32 SetNumForwardPackets([In : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|NumForwardPackets"} : ToSubclass] uint32 NumForwardPackets);
  [Implemented,Static : ToSubclass,ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."} : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|TcpMaxConnectRetransmissions"} : ToSubclass] uint32 SetTcpMaxConnectRetransmissions([In : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|TcpMaxConnectRetransmissions"} : ToSubclass] uint32 TcpMaxConnectRetransmissions);
  [Implemented,Static : ToSubclass,ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."} : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters"} : ToSubclass] uint32 SetTcpMaxDataRetransmissions([In : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|TcpMaxDataRetransmissions"} : ToSubclass] uint32 TcpMaxDataRetransmissions);
  [Implemented,Static : ToSubclass,ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."} : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters"} : ToSubclass] uint32 SetTcpNumConnections([In : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|TcpNumConnections"} : ToSubclass] uint32 TcpNumConnections);
  [Implemented,Static : ToSubclass,ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."} : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters"} : ToSubclass] uint32 SetTcpUseRFC1122UrgentPointer([In : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|TcpUseRFC1122UrgentPointer"} : ToSubclass] boolean TcpUseRFC1122UrgentPointer);
  [Implemented,Static : ToSubclass,ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."} : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters"} : ToSubclass] uint32 SetTcpWindowSize([In : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|TcpWindowSize"} : ToSubclass] uint16 TcpWindowSize);
  [Implemented,Static : ToSubclass,ValueMap{"0", "1", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "100", ".."} : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters"} : ToSubclass] uint32 EnableIPFilterSec([In : ToSubclass,MappingStrings{"Win32Registry|SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters|IPFilterSecurityEnabled"} : ToSubclass] boolean IPFilterSecurityEnabled);
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C50A-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_NetworkAdapterSetting : Win32_DeviceSettings
{
  [read : ToSubclass,Override("Element") : ToSubclass,MappingStrings{"WMI|Win32_NetworkAdapter"} : ToSubclass] Win32_NetworkAdapter Ref Element;
  [read : ToSubclass,Override("Setting") : ToSubclass,MappingStrings{"WMI|Win32_NetworkAdapterConfiguration"} : ToSubclass] Win32_NetworkAdapterConfiguration Ref Setting;
};

[Dynamic,provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{98C7E2C7-D592-11d2-B355-00105A0A323A}") : ToInstance] 
class Win32_USBController : CIM_USBController
{
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("DeviceId") : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string DeviceID;
};

[Abstract,Locale(1033) : ToInstance,UUID("{EDCE42F9-0991-11d3-910A-00105AA630BE}") : ToInstance] 
class CIM_InfraredController : CIM_Controller
{
};

[dynamic,provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{67F74295-BA42-11d2-85E5-0000F8102E5F}") : ToInstance] 
class Win32_InfraredDevice : CIM_InfraredController
{
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("DeviceId") : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string DeviceID;
  [read : ToSubclass,MappingStrings{"Win32Registry"} : ToSubclass] string Manufacturer;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C4BF-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_SerialPort : CIM_SerialController
{
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("DeviceId") : ToSubclass,MappingStrings{"Win32Registry|Hardware\\DeviceMap\\SerialComm"} : ToSubclass] string DeviceID;
  [read : ToSubclass,MappingStrings{"Win32API|Communication Structures|DCB|fBinary"} : ToSubclass] boolean Binary;
  [read : ToSubclass,MappingStrings{"Win32API|Communication Structures|COMMPROP|dwMaxRxQueue"} : ToSubclass] uint32 MaximumInputBufferSize;
  [read : ToSubclass,MappingStrings{"Win32API|Communication Structures|COMMPROP|dwMaxTxQueue"} : ToSubclass] uint32 MaximumOutputBufferSize;
  [read : ToSubclass,MappingStrings{"Win32API|Communication Structures|COMMPROP|dwProvSubType"} : ToSubclass] string ProviderType;
  [read : ToSubclass,MappingStrings{"Win32API|Communication Structures|COMMPROP|dwSettableParams|SP_BAUD"} : ToSubclass] boolean SettableBaudRate;
  [read : ToSubclass,MappingStrings{"Win32API|Communication Structures|COMMPROP|dwSettableParams|SP_DATABITS"} : ToSubclass] boolean SettableDataBits;
  [read : ToSubclass,MappingStrings{"Win32API|Communication Structures|COMMPROP|dwSettableParams|SP_HANDSHAKING"} : ToSubclass] boolean SettableFlowControl;
  [read : ToSubclass,MappingStrings{"Win32API|Communication Structures|COMMPROP|dwSettableParams|SP_PARITY"} : ToSubclass] boolean SettableParity;
  [read : ToSubclass,MappingStrings{"Win32API|Communication Structures|COMMPROP|dwSettableParams|SP_PARITY_CHECK"} : ToSubclass] boolean SettableParityCheck;
  [read : ToSubclass,MappingStrings{"Win32API|Communication Structures|COMMPROP|dwSettableParams|SP_RLSD"} : ToSubclass] boolean SettableRLSD;
  [read : ToSubclass,MappingStrings{"Win32API|Communication Structures|COMMPROP|dwSettableParams|SP_STOPBITS"} : ToSubclass] boolean SettableStopBits;
  [read : ToSubclass,MappingStrings{"Win32API|Communication Structures|COMMPROP|dwProvCapabilities|PCF_16BITMODE"} : ToSubclass] boolean Supports16BitMode;
  [read : ToSubclass,MappingStrings{"Win32API|Communication Structures|COMMPROP|dwProvCapabilities|PCF_DTRDSR"} : ToSubclass] boolean SupportsDTRDSR;
  [read : ToSubclass,MappingStrings{"Win32API|Communication Structures|COMMPROP|dwProvCapabilities|PCF_TOTALTIMEOUTS"} : ToSubclass] boolean SupportsElapsedTimeouts;
  [read : ToSubclass,MappingStrings{"Win32API|Communication Structures|COMMPROP|dwProvCapabilities|PCF_INTTIMEOUTS"} : ToSubclass] boolean SupportsIntTimeouts;
  [read : ToSubclass,MappingStrings{"Win32API|Communication Structures|COMMPROP|dwProvCapabilities|PCF_PARITY_CHECK"} : ToSubclass] boolean SupportsParityCheck;
  [read : ToSubclass,MappingStrings{"Win32API|Communication Structures|COMMPROP|dwProvCapabilities|PCF_RLSD"} : ToSubclass] boolean SupportsRLSD;
  [read : ToSubclass,MappingStrings{"Win32API|Communication Structures|COMMPROP|dwProvCapabilities|PCF_RTSCTS"} : ToSubclass] boolean SupportsRTSCTS;
  [read : ToSubclass,MappingStrings{"Win32API|Communication Structures|COMMPROP|dwProvCapabilities|PCF_SPECIALCHARS"} : ToSubclass] boolean SupportsSpecialCharacters;
  [read : ToSubclass,MappingStrings{"Win32API|Communication Structures|COMMPROP|dwProvCapabilities|PCF_XONXOFF"} : ToSubclass] boolean SupportsXOnXOff;
  [read : ToSubclass,MappingStrings{"Win32API|Communication Structures|COMMPROP|dwProvCapabilities|PCF_SETXCHAR"} : ToSubclass] boolean SupportsXOnXOffSet;
  [read : ToSubclass,MappingStrings{"Win32Registry|HARDWARE\\DESCRIPTION\\SYSTEM\\MultifunctionAdapter"} : ToSubclass] boolean OSAutoDiscovered;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C4C1-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_SCSIController : CIM_SCSIController
{
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("DeviceId") : ToSubclass,MappingStrings{"Win32Registry|Hardware\\DeviceMap\\Scsi"} : ToSubclass] string DeviceID;
  [read : ToSubclass,MappingStrings{"Win32Registry|Hardware\\DeviceMap\\Scsi|ScsiPort"} : ToSubclass] uint32 Index;
  [read : ToSubclass,MappingStrings{"Win32Registry|System\\CurrentControlSet\\Services\\Class|PortDriver"} : ToSubclass] string DriverName;
  [DEPRECATED : ToSubclass,read : ToSubclass,MappingStrings{"Win32Registry|Hardware\\DeviceMap\\Scsi|ScsiPort"} : ToSubclass] string DeviceMap;
  [read : ToSubclass,MappingStrings{"Win32Registry|System\\CurrentControlSet\\Enum\\Root|HWRevision"} : ToSubclass] string HardwareVersion;
  [read : ToSubclass,MappingStrings{"Win32Registry|System\\CurrentControlSet\\Enum\\Root|Mfg"} : ToSubclass] string Manufacturer;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{DE57D792-A032-11D2-90F0-0060081A46FD}") : ToInstance] 
class Win32_USBControllerDevice : CIM_ControlledBy
{
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("Dependent") : ToSubclass,MappingStrings{"CIM|CIM_LogicalDevice"} : ToSubclass] CIM_LogicalDevice Ref Dependent;
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("Antecedent") : ToSubclass,MappingStrings{"CIM|CIM_USBController"} : ToSubclass] CIM_USBController Ref Antecedent;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{CC0F48D2-C847-11d2-911E-0060081A46FD}") : ToInstance] 
class Win32_SCSIControllerDevice : CIM_ControlledBy
{
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("Dependent") : ToSubclass,MappingStrings{"CIM|CIM_LogicalDevice"} : ToSubclass] CIM_LogicalDevice Ref Dependent;
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("Antecedent") : ToSubclass,MappingStrings{"CIM|Win32_SCSIController"} : ToSubclass] Win32_SCSIController Ref Antecedent;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C4C2-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_ParallelPort : CIM_ParallelController
{
  [Key : ToInstance ToSubclass DisableOverride,Read : ToSubclass,Override("DeviceId") : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string DeviceID;
  [read : ToSubclass,MappingStrings{"WMI"} : ToSubclass] boolean OSAutoDiscovered;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C4EB-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_SerialPortConfiguration : CIM_Setting
{
  [read : ToSubclass,MappingStrings{"Win32API|Communication Structures|DCB|fAbortOnError"} : ToSubclass] boolean AbortReadWriteOnError;
  [read : ToSubclass,MappingStrings{"Win32API|Communication Structures|DCB|BaudRate"} : ToSubclass] uint32 BaudRate;
  [read : ToSubclass,MappingStrings{"Win32API|Communication Structures|DCB|fBinary"} : ToSubclass] boolean BinaryModeEnabled;
  [read : ToSubclass,MappingStrings{"Win32API|Communication Structures|DCB|ByteSize"} : ToSubclass] uint32 BitsPerByte;
  [read : ToSubclass,MappingStrings{"Win32API|Communication Structures|DCB|fTXContinueOnXoff"} : ToSubclass] boolean ContinueXMitOnXOff;
  [read : ToSubclass,MappingStrings{"Win32API|Communication Structures|DCB|fOutxCtsFlow"} : ToSubclass] boolean CTSOutflowControl;
  [read : ToSubclass,MappingStrings{"Win32API|Communication Structures|DCB|fNull"} : ToSubclass] boolean DiscardNULLBytes;
  [read : ToSubclass,MappingStrings{"Win32API|Communication Structures|DCB|fOutxDsrFlow"} : ToSubclass] boolean DSROutflowControl;
  [read : ToSubclass,MappingStrings{"Win32API|Communication Structures|DCB|fDsrSensitivity"} : ToSubclass] boolean DSRSensitivity;
  [read : ToSubclass,ValueMap{"Enable", "Disable", "Handshake"} : ToSubclass,MappingStrings{"Win32API|Communication Structures|DCB|fDtrControl"} : ToSubclass] string DTRFlowControlType;
  [read : ToSubclass,MappingStrings{"Win32API|Communication Structures|DCB|EofChar"} : ToSubclass] uint32 EOFCharacter;
  [read : ToSubclass,MappingStrings{"Win32API|Communication Structures|DCB|ErrorChar"} : ToSubclass] uint32 ErrorReplaceCharacter;
  [read : ToSubclass,MappingStrings{"Win32API|Communication Structures|DCB|fErrorChar"} : ToSubclass] boolean ErrorReplacementEnabled;
  [read : ToSubclass,MappingStrings{"Win32API|Communication Structures|DCB|EvtChar"} : ToSubclass] uint32 EventCharacter;
  [read : ToSubclass,MappingStrings{"Win32API|File Functions|CreateFile"} : ToSubclass] boolean IsBusy;
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,MaxLen(256) : ToSubclass,MappingStrings{"Win32Registry|Hardware\\DeviceMap\\SerialComm"} : ToSubclass] string Name;
  [read : ToSubclass,MappingStrings{"Win32API|Communication Structures|DCB|Parity"} : ToSubclass,ValueMap{"None", "Odd", "Even", "Mark", "Space"} : ToSubclass] string Parity;
  [read : ToSubclass,MappingStrings{"Win32API|Communication Structures|DCB|fParity"} : ToSubclass] boolean ParityCheckEnabled;
  [read : ToSubclass,ValueMap{"Enable", "Disable", "Handshake", "Toggle"} : ToSubclass] string RTSFlowControlType;
  [read : ToSubclass,MappingStrings{"Win32API|Communication Structures|DCB|StopBits"} : ToSubclass,ValueMap{"1", "1.5", "2"} : ToSubclass] string StopBits;
  [read : ToSubclass,MappingStrings{"Win32API|Communication Structures|DCB|XoffChar"} : ToSubclass] uint32 XOffCharacter;
  [read : ToSubclass,MappingStrings{"Win32API|Communication Structures|DCB|XoffLim"} : ToSubclass] uint32 XOffXMitThreshold;
  [read : ToSubclass,MappingStrings{"Win32API|Communication Structures|DCB|XonChar"} : ToSubclass] uint32 XOnCharacter;
  [read : ToSubclass,MappingStrings{"Win32API|Communication Structures|DCB|XonLim"} : ToSubclass] uint32 XOnXMitThreshold;
  [read : ToSubclass,MappingStrings{"Win32API|Communication Structures|DCB|fInX"} : ToSubclass] uint32 XOnXOffInFlowControl;
  [read : ToSubclass,MappingStrings{"Win32API|Communication Structures|DCB|fOutX"} : ToSubclass] uint32 XOnXOffOutFlowControl;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C4FE-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_SerialPortSetting : Win32_DeviceSettings
{
  [read : ToSubclass,Override("Element") : ToSubclass,MappingStrings{"WMI|Win32_SerialPort"} : ToSubclass] Win32_SerialPort Ref Element;
  [read : ToSubclass,Override("Setting") : ToSubclass,MappingStrings{"WMI|Win32_SerialPortConfiguration"} : ToSubclass] Win32_SerialPortConfiguration Ref Setting;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{FAF76B92-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class Win32_PortConnector : CIM_PhysicalConnector
{
  [read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,MaxLen(256) : ToSubclass,Override("Tag") : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string Tag;
  [read : ToSubclass,MappingStrings{"SMBIOS|Type 8|Internal Reference Designator"} : ToSubclass] string InternalReferenceDesignator;
  [read : ToSubclass,MappingStrings{"SMBIOS|Type 8|External Reference Designator"} : ToSubclass] string ExternalReferenceDesignator;
  [read : ToSubclass,Override("ConnectorType") : ToSubclass,MappingStrings{"SMBIOS|Type 8|Internal/External Connector Type"} : ToSubclass] uint16 ConnectorType[];
  [read : ToSubclass,MappingStrings{"SMBIOS|Type 8|Port Type"} : ToSubclass] uint16 PortType;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{FAF76B93-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class Win32_PhysicalMemory : CIM_PhysicalMemory
{
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,MaxLen(256) : ToSubclass,Override("Tag") : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string Tag;
  [read : ToSubclass,MappingStrings{"SMBIOS|Type 17|Device Locator"} : ToSubclass] string DeviceLocator;
  [read : ToSubclass,MappingStrings{"SMBIOS|Type 17|Type Detail"} : ToSubclass] uint16 TypeDetail;
  [read : ToSubclass,MappingStrings{"SMBIOS|Type 20|Interleaved Data Depth"} : ToSubclass] uint16 InterleaveDataDepth;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{FAF76B97-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class Win32_CacheMemory : CIM_CacheMemory
{
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("DeviceId") : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string DeviceID;
  [read : ToSubclass,MappingStrings{"SMBIOS|Type 7|Location"} : ToSubclass] uint16 Location;
  [read : ToSubclass,MappingStrings{"SMBIOS|Type 7|Maximum Cache Size"} : ToSubclass] uint32 MaxCacheSize;
  [read : ToSubclass,MappingStrings{"SMBIOS|Type 7|Installed Size"} : ToSubclass] uint32 InstalledSize;
  [read : ToSubclass,MappingStrings{"SMBIOS|Type 7|Supported SRAM Type"} : ToSubclass] uint16 SupportedSRAM[];
  [read : ToSubclass,MappingStrings{"SMBIOS|Type 7|Current SRAM Type"} : ToSubclass] uint16 CurrentSRAM[];
  [read : ToSubclass,MappingStrings{"SMBIOS|Type 7|Error Correction Type"} : ToSubclass] uint16 ErrorCorrectType;
  [read : ToSubclass,MappingStrings{"SMBIOS|Type 7|Cache Speed"} : ToSubclass] uint32 CacheSpeed;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{FAF76B99-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class Win32_PhysicalMemoryArray : CIM_PhysicalPackage
{
  [read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,MaxLen(256) : ToSubclass,Override("Tag") : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string Tag;
  [read : ToSubclass,MappingStrings{"SMBIOS|Type 16|Location"} : ToSubclass] uint16 Location;
  [read : ToSubclass,MappingStrings{"SMBIOS|Type 16|Use"} : ToSubclass] uint16 Use;
  [read : ToSubclass,MappingStrings{"SMBIOS|Type 16|Memory Error Correction"} : ToSubclass] uint16 MemoryErrorCorrection;
  [read : ToSubclass,MappingStrings{"SMBIOS|Type 16|Maximum Capacity"} : ToSubclass] uint32 MaxCapacity;
  [read : ToSubclass,MappingStrings{"SMBIOS|Type 16|Number of Memory Devices"} : ToSubclass] uint16 MemoryDevices;
};

[Abstract,Locale(1033) : ToInstance,UUID("{FECB095B-F0FA-11d2-8617-0000F8102E5F}") : ToInstance] 
class Win32_SMBIOSMemory : CIM_StorageExtent
{
  [read : ToSubclass,Override("ErrorMethodology") : ToSubclass,MappingStrings{"SMBIOS|Type 16|Physical Memory Array|Memory Error Correction"} : ToSubclass,ValueMap{"Other", "Unknown", "None", "Parity", "Single-bit ECC", "Multi-bit ECC", "CRC"} : ToSubclass] string ErrorMethodology;
  [read : ToSubclass,MappingStrings{"SMBIOS|Type 19|Memory Device Mapped Addresses|Starting Address"} : ToSubclass] uint64 StartingAddress;
  [read : ToSubclass,MappingStrings{"SMBIOS|Type 19|Memory Device Mapped Addresses|Ending Address"} : ToSubclass] uint64 EndingAddress;
  [read : ToSubclass,ModelCorrespondence{"CIM_Memory.OtherErrorDescription"} : ToSubclass,MappingStrings{"SMBIOS|Type 18|32-bit Memory Error Information|Error Type"} : ToSubclass,ValueMap{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14"} : ToSubclass] uint16 ErrorInfo;
  [read : ToSubclass,ModelCorrespondence{"CIM_Memory.ErrorInfo"} : ToSubclass,MappingStrings{"SMBIOS"} : ToSubclass] string OtherErrorDescription;
  [read : ToSubclass,MappingStrings{"SMBIOS|Type 18|32-bit Memory Error Information|Error Type"} : ToSubclass] boolean CorrectableError;
  [read : ToSubclass,MappingStrings{"WMI"} : ToSubclass] datetime ErrorTime;
  [read : ToSubclass,MappingStrings{"SMBIOS|Type 18|32-bit Memory Error Information|Error Operation"} : ToSubclass,ValueMap{"1", "2", "3", "4", "5"} : ToSubclass] uint16 ErrorAccess;
  [read : ToSubclass,MappingStrings{"SMBIOS"} : ToSubclass] uint32 ErrorTransferSize;
  [read : ToSubclass,ArrayType("Indexed") : ToSubclass,MappingStrings{"SMBIOS"} : ToSubclass,MAX(64)] uint8 ErrorData[];
  [read : ToSubclass,MappingStrings{"WMI"} : ToSubclass] uint16 ErrorDataOrder;
  [read : ToSubclass,MappingStrings{"SMBIOS|Type 18|32-bit Memory Error Information|Error Address"} : ToSubclass] uint64 ErrorAddress;
  [read : ToSubclass,MappingStrings{"SMBIOS|Type 18|32-bit Memory Error Information|Error Address"} : ToSubclass] boolean SystemLevelAddress;
  [read : ToSubclass,MappingStrings{"SMBIOS|Type 18|32-bit Memory Error Information|Error Resolution"} : ToSubclass] uint64 ErrorResolution;
  [read : ToSubclass,MappingStrings{"SMBIOS|Type 18|32-bit Memory Error Information|Vendor Syndrome"} : ToSubclass,MAX(64)] uint8 AdditionalErrorData[];
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{FAF76B9A-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class Win32_MemoryArray : Win32_SMBIOSMemory
{
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("DeviceId") : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string DeviceID;
  [read : ToSubclass,MappingStrings{"SMBIOS|Type 18|Error Granularity"} : ToSubclass,ValueMap{"Other", "Unknown", "Device level", "Memory partition level"} : ToSubclass] uint16 ErrorGranularity;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{FAF76B9B-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class Win32_MemoryDevice : Win32_SMBIOSMemory
{
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("DeviceId") : ToSubclass,MappingStrings{"WMI"} : ToSubclass] string DeviceID;
  [read : ToSubclass,MappingStrings{"SMBIOS|Type 18|Error Granularity"} : ToSubclass,ValueMap{"1", "2", "3", "4"} : ToSubclass] uint16 ErrorGranularity;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{FAF76B9C-798C-11D2-AAD1-006008C78BC7}") : ToInstance] 
class Win32_MemoryDeviceLocation : CIM_Realizes
{
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("Antecedent") : ToSubclass,Max(1) : ToSubclass,MappingStrings{"WMI|Win32_PhysicalMemory"} : ToSubclass] Win32_PhysicalMemory Ref Antecedent;
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("Dependent") : ToSubclass,MappingStrings{"WMI|Win32_MemoryDevice"} : ToSubclass] Win32_MemoryDevice Ref Dependent;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{B24EF561-BBBE-11d2-ABFB-00805F538618}") : ToInstance] 
class Win32_MemoryArrayLocation : CIM_Realizes
{
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("Antecedent") : ToSubclass,MappingStrings{"WMI|Win32_PhysicalMemoryArray"} : ToSubclass] Win32_PhysicalMemoryArray Ref Antecedent;
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("Dependent") : ToSubclass,MappingStrings{"WMI|Win32_MemoryArray"} : ToSubclass] Win32_MemoryArray Ref Dependent;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{B24EF562-BBBE-11d2-ABFB-00805F538618}") : ToInstance] 
class Win32_PhysicalMemoryLocation : CIM_PackagedComponent
{
  [read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("GroupComponent") : ToSubclass,MappingStrings{"WMI|Win32_PhysicalMemoryArray"} : ToSubclass] Win32_PhysicalMemoryArray Ref GroupComponent;
  [read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("PartComponent") : ToSubclass,MappingStrings{"WMI|Win32_PhysicalMemory"} : ToSubclass] Win32_PhysicalMemory Ref PartComponent;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{B24EF563-BBBE-11d2-ABFB-00805F538618}") : ToInstance] 
class Win32_MemoryDeviceArray : CIM_Component
{
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("PartComponent") : ToSubclass,MappingStrings{"WMI|Win32_MemoryDevice"} : ToSubclass] Win32_MemoryDevice Ref PartComponent;
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("GroupComponent") : ToSubclass,MappingStrings{"WMI|Win32_MemoryArray"} : ToSubclass] Win32_MemoryArray Ref GroupComponent;
};

[abstract,Locale(1033) : ToInstance,UUID("{0F73ED4F-8ED9-11d2-B340-00105A1F8569}") : ToInstance] 
class Win32_COMApplication : CIM_LogicalElement
{
};

[abstract,Locale(1033) : ToInstance,UUID("{0F73ED50-8ED9-11d2-B340-00105A1F8569}") : ToInstance] 
class Win32_COMClass : CIM_LogicalElement
{
};

[abstract,Locale(1033) : ToInstance,UUID("{E5D8A560-F6C0-11d2-B35E-00105A1F8569}") : ToInstance] 
class Win32_COMSetting : CIM_Setting
{
};

[abstract,Locale(1033) : ToInstance,UUID("{0F73ED51-8ED9-11d2-B340-00105A1F8569}") : ToInstance] 
class Win32_COMApplicationClasses : CIM_Component
{
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("GroupComponent") : ToSubclass,MappingStrings{"WMI|Win32_COMApplication"} : ToSubclass] Win32_COMApplication Ref GroupComponent;
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("PartComponent") : ToSubclass,MappingStrings{"WMI|Win32_COMClass"} : ToSubclass] Win32_COMClass Ref PartComponent;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{0F73ED52-8ED9-11d2-B340-00105A1F8569}") : ToInstance] 
class Win32_DCOMApplication : Win32_COMApplication
{
  [read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\AppID\\{GUID}[Default]"} : ToSubclass] string AppID;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{E5D8A561-F6C0-11d2-B35E-00105A1F8569}") : ToInstance] 
class Win32_DCOMApplicationSetting : Win32_COMSetting
{
  [read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\AppID\\{GUID}[Default]"} : ToSubclass] string AppID;
  [read : ToSubclass,write : ToSubclass,MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\AppID\\{GUID}[AuthenticationLevel]"} : ToSubclass,ValueMap{"1", "2", "3", "4", "5", "6"} : ToSubclass] uint32 AuthenticationLevel;
  [read : ToSubclass,write : ToSubclass,MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\AppID\\{GUID}[RemoteServerName]"} : ToSubclass] string RemoteServerName;
  [read : ToSubclass,MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\AppID\\{GUID}[RunAs]"} : ToSubclass] string RunAsUser;
  [read : ToSubclass,MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\AppID\\{GUID}[ActivateAtStorage]"} : ToSubclass] boolean EnableAtStorageActivation;
  [read : ToSubclass,write : ToSubclass,MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\AppID\\{GUID}[DllSurrogate]"} : ToSubclass] boolean UseSurrogate;
  [read : ToSubclass,MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\AppID\\{GUID}[DllSurrogate]"} : ToSubclass] string CustomSurrogate;
  [read : ToSubclass,MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\AppID\\{GUID}[LocalService]"} : ToSubclass] string LocalService;
  [read : ToSubclass,MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\AppID\\{GUID}[ServiceParameters]"} : ToSubclass] string ServiceParameters;
  [implemented,ValueMap{"0", ".."} : ToSubclass,Privileges{"SeSecurityPrivilege", "SeRestorePrivilege"} : ToSubclass] uint32 GetLaunchSecurityDescriptor([out] Win32_SecurityDescriptor Descriptor);
  [implemented,ValueMap{"0", ".."} : ToSubclass,Privileges{"SeSecurityPrivilege", "SeRestorePrivilege"} : ToSubclass] uint32 SetLaunchSecurityDescriptor([in] Win32_SecurityDescriptor Descriptor);
  [implemented,ValueMap{"0", ".."} : ToSubclass,Privileges{"SeSecurityPrivilege", "SeRestorePrivilege"} : ToSubclass] uint32 GetAccessSecurityDescriptor([out] Win32_SecurityDescriptor Descriptor);
  [implemented,ValueMap{"0", ".."} : ToSubclass,Privileges{"SeSecurityPrivilege", "SeRestorePrivilege"} : ToSubclass] uint32 SetAccessSecurityDescriptor([in] Win32_SecurityDescriptor Descriptor);
  [implemented,ValueMap{"0", ".."} : ToSubclass,Privileges{"SeSecurityPrivilege", "SeRestorePrivilege"} : ToSubclass] uint32 GetConfigurationSecurityDescriptor([out] Win32_SecurityDescriptor Descriptor);
  [implemented,ValueMap{"0", ".."} : ToSubclass,Privileges{"SeSecurityPrivilege", "SeRestorePrivilege"} : ToSubclass] uint32 SetConfigurationSecurityDescriptor([in] Win32_SecurityDescriptor Descriptor);
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{0F73ED53-8ED9-11d2-B340-00105A1F8569}") : ToInstance] 
class Win32_ClassicCOMClass : Win32_COMClass
{
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\{GUID}[Default]"} : ToSubclass] string ComponentId;
  [Fixed : ToSubclass,read : ToSubclass,Override("Name") : ToSubclass,MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\{GUID}[Default]"} : ToSubclass] string Name;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{E5D8A562-F6C0-11d2-B35E-00105A1F8569}") : ToInstance] 
class Win32_ClassicCOMClassSetting : Win32_COMSetting
{
  [read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\{GUID}[Default]"} : ToSubclass] string ComponentId;
  [read : ToSubclass,MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\{GUID}\\ProgID[Default]"} : ToSubclass] string ProgId;
  [read : ToSubclass,MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\{GUID}[AppID]"} : ToSubclass] string AppID;
  [read : ToSubclass,ValueMap{"Apartment", "Free", "Both"} : ToSubclass,MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\{GUID}\\InprocServer32[ThreadingModel]"} : ToSubclass] string ThreadingModel;
  [read : ToSubclass,MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\{GUID}\\Version[Default]"} : ToSubclass] string Version;
  [read : ToSubclass,MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\{GUID}\\Insertable"} : ToSubclass] boolean Insertable;
  [read : ToSubclass,MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\{GUID}\\Control"} : ToSubclass] boolean Control;
  [read : ToSubclass,MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\{GUID}\\TypeLib[Default]"} : ToSubclass] string TypeLibraryId;
  [read : ToSubclass,MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\{GUID}\\InprocServer32[JavaClass]"} : ToSubclass] boolean JavaClass;
  [read : ToSubclass,MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\{GUID}\\TreatAs[Default]"} : ToSubclass] string TreatAsClsid;
  [read : ToSubclass,MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\{GUID}\\InprocServer[Default]"} : ToSubclass] string InprocServer;
  [read : ToSubclass,MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\{GUID}\\InprocServer32[Default]"} : ToSubclass] string InprocServer32;
  [read : ToSubclass,MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\{GUID}\\LocalServer[Default]"} : ToSubclass] string LocalServer;
  [read : ToSubclass,MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\{GUID}\\LocalServer32[Default]"} : ToSubclass] string LocalServer32;
  [read : ToSubclass,MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\{GUID}\\InprocHandler[Default]"} : ToSubclass] string InprocHandler;
  [read : ToSubclass,MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\{GUID}\\InprocHandler32[Default]"} : ToSubclass] string InprocHandler32;
  [read : ToSubclass,MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\{GUID}\\AutoConvertTo[Default]"} : ToSubclass] string AutoConvertToClsid;
  [read : ToSubclass,MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\{GUID}\\AutoTreatAs[Default]"} : ToSubclass] string AutoTreatAsClsid;
  [read : ToSubclass,MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\{GUID}\\DefaultIcon[Default]"} : ToSubclass] string DefaultIcon;
  [read : ToSubclass,MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\{GUID}\\VersionIndependentProgId[Default]"} : ToSubclass] string VersionIndependentProgId;
  [read : ToSubclass,MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\{GUID}\\AuxUserType\\2[Default]"} : ToSubclass] string ShortDisplayName;
  [read : ToSubclass,MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\{GUID}\\AuxUserType\\3[Default]"} : ToSubclass] string LongDisplayName;
  [read : ToSubclass,MappingStrings{"Win32Registry|HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\{GUID}\\ToolBoxBitmap32[Default]"} : ToSubclass] string ToolBoxBitmap32;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{0F73ED54-8ED9-11d2-B340-00105A1F8569}") : ToInstance] 
class Win32_ClassicCOMApplicationClasses : Win32_COMApplicationClasses
{
  [Read : ToSubclass,Override("GroupComponent") : ToSubclass,MappingStrings{"WMI|Win32_DCOMApplication"} : ToSubclass] Win32_DCOMApplication Ref GroupComponent;
  [Read : ToSubclass,Override("PartComponent") : ToSubclass,MappingStrings{"WMI|Win32_ClassicCOMClass"} : ToSubclass] Win32_ClassicCOMClass Ref PartComponent;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{E5D8A563-F6C0-11d2-B35E-00105A1F8569}") : ToInstance] 
class Win32_COMApplicationSettings : CIM_ElementSetting
{
  [read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("Element") : ToSubclass,MappingStrings{"WMI|Win32_DCOMApplication"} : ToSubclass] Win32_DCOMApplication Ref Element;
  [read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("Setting") : ToSubclass,MappingStrings{"WMI|Win32_DCOMApplicationSetting"} : ToSubclass] Win32_DCOMApplicationSetting Ref Setting;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{E5D8A564-F6C0-11d2-B35E-00105A1F8569}") : ToInstance] 
class Win32_ClassicCOMClassSettings : CIM_ElementSetting
{
  [read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("Element") : ToSubclass,MappingStrings{"WMI|Win32_ClassicCOMClass"} : ToSubclass] Win32_ClassicCOMClass Ref Element;
  [read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,Override("Setting") : ToSubclass,MappingStrings{"WMI|Win32_ClassicCOMClassSetting"} : ToSubclass] Win32_ClassicCOMClassSetting Ref Setting;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{0F73ED5A-8ED9-11d2-B340-00105A1F8569}") : ToInstance] 
class Win32_ComponentCategory : CIM_LogicalElement
{
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,MaxLen(16) : ToSubclass,MappingStrings{"Win32API|Component Categories|CATEGORYINFO|catid"} : ToSubclass] string CategoryId;
  [read : ToSubclass,Override("Name") : ToSubclass,MappingStrings{"Win32API|Component Categories|CATEGORYINFO|szDescription"} : ToSubclass] string Name;
};

[Association : ToInstance ToSubclass DisableOverride,Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{0F73ED5B-8ED9-11d2-B340-00105A1F8569}") : ToInstance] 
class Win32_ImplementedCategory
{
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,MappingStrings{"WMI|Win32_ComponentCategory"} : ToSubclass] Win32_ComponentCategory Ref Category;
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,MappingStrings{"WMI|Win32_ClassicCOMClass"} : ToSubclass] Win32_ClassicCOMClass Ref Component;
};

[Association : ToInstance ToSubclass DisableOverride,Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{0F73ED5C-8ED9-11d2-B340-00105A1F8569}") : ToInstance] 
class Win32_ComClassEmulator
{
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,MappingStrings{"WMI|Win32_ClassicCOMClass"} : ToSubclass] Win32_ClassicCOMClass Ref OldVersion;
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,MappingStrings{"WMI|Win32_ClassicCOMClass"} : ToSubclass] Win32_ClassicCOMClass Ref NewVersion;
};

[Association : ToInstance ToSubclass DisableOverride,Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{0F73ED5D-8ED9-11d2-B340-00105A1F8569}") : ToInstance] 
class Win32_ComClassAutoEmulator
{
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,MappingStrings{"WMI|Win32_ClassicCOMClass"} : ToSubclass] Win32_ClassicCOMClass Ref OldVersion;
  [Read : ToSubclass,Key : ToInstance ToSubclass DisableOverride,MappingStrings{"WMI|Win32_ClassicCOMClass"} : ToSubclass] Win32_ClassicCOMClass Ref NewVersion;
};

[Association : ToInstance ToSubclass DisableOverride,Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{0F73ED5E-8ED9-11d2-B340-00105A1F8569}") : ToInstance] 
class Win32_ClientApplicationSetting
{
  [Read : ToSubclass,key : ToInstance ToSubclass DisableOverride,MappingStrings{"CIM|CIM_DataFile"} : ToSubclass] CIM_DataFile Ref Client;
  [Read : ToSubclass,key : ToInstance ToSubclass DisableOverride,MappingStrings{"WMI|Win32_DCOMApplication"} : ToSubclass] Win32_DCOMApplication Ref Application;
};

[Abstract,Locale(1033) : ToInstance,UUID("{8502C4C9-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_Account : CIM_LogicalElement
{
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,MappingStrings{"Win32API|Network Management Functions|Domain"} : ToSubclass] string Domain;
  [Fixed : ToSubclass,read : ToSubclass,MappingStrings{"Win32API|Security Identifiers (SIDs)"} : ToSubclass] string SID;
  [Fixed : ToSubclass,read : ToSubclass,MappingStrings{"Win32API|Access Control Enumeration Types|SID_NAME_USE"} : ToSubclass,ValueMap{"1", "2", "3", "4", "5", "6", "7", "8", "9"} : ToSubclass] uint8 SIDType;
  [read : ToSubclass,Override("Name") : ToSubclass,key : ToInstance ToSubclass DisableOverride,MappingStrings{"Win32API|Network Management Structures|name"} : ToSubclass] string Name;
  [Fixed : ToSubclass] Boolean LocalAccount;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C4CA-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_SystemAccount : Win32_Account
{
  [read : ToSubclass,Override("Domain") : ToSubclass,MappingStrings{"Win32API|Network Management Functions|domainname"} : ToSubclass] string Domain;
  [read : ToSubclass,Override("Name") : ToSubclass,MappingStrings{"Win32API|Network Management Structures|name"} : ToSubclass] string Name;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C4CB-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_Group : Win32_Account
{
  [read : ToSubclass,Override("Domain") : ToSubclass,MappingStrings{"Win32API|Network Management Functions|domainname"} : ToSubclass] string Domain;
  [read : ToSubclass,Override("Name") : ToSubclass,MappingStrings{"Win32API|Network Management Structures|name"} : ToSubclass] string Name;
  [Implemented,MappingStrings{"WMI"} : ToSubclass] uint32 Rename([In : ToSubclass,MappingStrings{"Win32API|Network Management Structures|name"} : ToSubclass] string Name);
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C4CC-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_UserAccount : Win32_Account
{
  [read : ToSubclass,MappingStrings{"Win32API|Network Management Structures|USER_INFO_2|usri2_flags"} : ToSubclass,BitMap{"8", "9", "11", "12", "13"} : ToSubclass] uint32 AccountType;
  [Write : ToSubclass,read : ToSubclass,MappingStrings{"Win32API|Network Management Structures|USER_INFO|UF_ACCOUNTDISABLE"} : ToSubclass] boolean Disabled;
  [read : ToSubclass,Override("Domain") : ToSubclass,MappingStrings{"Win32API|Network Management Functions|domainname"} : ToSubclass] string Domain;
  [Write : ToSubclass,read : ToSubclass,MappingStrings{"Win32API|Network Management Structures|USER_INFO_2|usri2_full_name"} : ToSubclass] string FullName;
  [Write : ToSubclass,read : ToSubclass,MappingStrings{"Win32API|Network Management Structures|USER_INFO_2|UF_LOCKOUT"} : ToSubclass] boolean Lockout;
  [read : ToSubclass,Override("Name") : ToSubclass,MappingStrings{"Win32API|Network Management Structures|name"} : ToSubclass] string Name;
  [Write : ToSubclass,read : ToSubclass,MappingStrings{"Win32API|Network Management Structures|USER_INFO_2|UF_PASSWD_CANT_CHANGE"} : ToSubclass] boolean PasswordChangeable;
  [Write : ToSubclass,read : ToSubclass,MappingStrings{"Win32API|Network Management Structures|USER_INFO_2|UF_DONT_EXPIRE_PASSWD"} : ToSubclass] boolean PasswordExpires;
  [Write : ToSubclass,read : ToSubclass,MappingStrings{"Win32API|Network Management Structures|USER_INFO_2|UF_PASSWD_NOTREQD"} : ToSubclass] boolean PasswordRequired;
  [Implemented,MappingStrings{"WMI"} : ToSubclass] uint32 Rename([In : ToSubclass,MappingStrings{"Win32API|Network Management Structures|name"} : ToSubclass] string Name);
};

[Dynamic,Provider("CIMWin32") : ToInstance,Privileges{"SeRestorePrivilege"} : ToSubclass,Locale(1033) : ToInstance,UUID("{8502C4E7-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_NetworkLoginProfile : CIM_Setting
{
  [read : ToSubclass,MappingStrings{"Win32API|Network Management Structures|USER_INFO_3|usri3_acct_expires"} : ToSubclass] datetime AccountExpires;
  [read : ToSubclass,MappingStrings{"Win32API|Network Management Structures|USER_INFO_3|usri3_auth_flags"} : ToSubclass] uint32 AuthorizationFlags;
  [read : ToSubclass,MappingStrings{"Win32API|Network Management Functions|NetUserEnum"} : ToSubclass] uint32 BadPasswordCount;
  [read : ToSubclass,MappingStrings{"Win32API|Network Management Structures|USER_INFO_3|usri3_code_page"} : ToSubclass] uint32 CodePage;
  [read : ToSubclass,MappingStrings{"Win32API|Network Management Structures|USER_INFO_3|usri3_comment"} : ToSubclass] string Comment;
  [read : ToSubclass,MappingStrings{"Win32API|Network Management Structures|USER_INFO_3|usri3_country_code"} : ToSubclass] uint32 CountryCode;
  [read : ToSubclass,MappingStrings{"Win32API|Network Management Structures|USER_INFO_3|usri3_flags"} : ToSubclass,BitMap{"0", "1", "3", "4", "5", "6", "7", "8", "9", "11", "12", "13", "16", "17", "18", "19", "20", "21", "22", "23"} : ToSubclass] uint32 Flags;
  [read : ToSubclass,MappingStrings{"Win32API|Network Management Structures|USER_INFO_3|usri3_full_name"} : ToSubclass] string FullName;
  [read : ToSubclass,MappingStrings{"Win32API|Network Management Structures|USER_INFO_3|usri3_home_dir"} : ToSubclass] string HomeDirectory;
  [read : ToSubclass,MappingStrings{"Win32API|Network Management Structures|USER_INFO_3|usri3_home_dir_drive"} : ToSubclass] string HomeDirectoryDrive;
  [read : ToSubclass,MappingStrings{"Win32API|Network Management Structures|USER_INFO_3|usri3_last_logoff"} : ToSubclass] datetime LastLogoff;
  [read : ToSubclass,MappingStrings{"Win32API|Network Management Structures|USER_INFO_3|usri3_last_logon"} : ToSubclass] datetime LastLogon;
  [read : ToSubclass,MaxLen(147) : ToSubclass,MappingStrings{"Win32API|Network Management Structures|USER_INFO_3|usri3_logon_hours"} : ToSubclass] string LogonHours;
  [read : ToSubclass,MappingStrings{"Win32API|Network Management Structures|USER_INFO_3|usri3_logon_server"} : ToSubclass] string LogonServer;
  [read : ToSubclass,MappingStrings{"Win32API|Network Management Structures|USER_INFO_3|usri3_max_storage"} : ToSubclass] uint64 MaximumStorage;
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,MaxLen(256) : ToSubclass,MappingStrings{"Win32API|Network Management Structures|USER_INFO_3|usri3_name"} : ToSubclass] string Name;
  [read : ToSubclass,MappingStrings{"Win32API|Network Management Structures|USER_INFO_3|usri3_num_logons"} : ToSubclass] uint32 NumberOfLogons;
  [read : ToSubclass,MappingStrings{"Win32API|Network Management Structures|USER_INFO_3|usri3_parms"} : ToSubclass] string Parameters;
  [read : ToSubclass,MappingStrings{"Win32API|Network Management Structures|USER_INFO_3|usri3_password_age"} : ToSubclass] datetime PasswordAge;
  [read : ToSubclass,MappingStrings{"Win32API|Network Management Structures|USER_MODALS_INFO_0|usrmod0_max_passwd_age"} : ToSubclass] datetime PasswordExpires;
  [read : ToSubclass,MappingStrings{"Win32API|Network Management Structures|USER_INFO_3|usri3_primary_group_id"} : ToSubclass] uint32 PrimaryGroupId;
  [read : ToSubclass,MappingStrings{"Win32API|Network Management Structures|USER_INFO_3|usri3_priv"} : ToSubclass] uint32 Privileges;
  [read : ToSubclass,MappingStrings{"Win32API|Network Management Structures|USER_INFO_3|usri3_profile"} : ToSubclass] string Profile;
  [read : ToSubclass,MappingStrings{"Win32API|Network Management Structures|USER_INFO_3|usri3_script_path"} : ToSubclass] string ScriptPath;
  [read : ToSubclass,MappingStrings{"Win32API|Network Management Structures|USER_INFO_3|usri3_units_per_week"} : ToSubclass] uint32 UnitsPerWeek;
  [read : ToSubclass,MappingStrings{"Win32API|Network Management Structures|USER_INFO_3|usri3_usr_comment"} : ToSubclass] string UserComment;
  [read : ToSubclass,MappingStrings{"Win32API|Network Management Structures|USER_INFO_3|usri3_user_id"} : ToSubclass] uint32 UserId;
  [read : ToSubclass,MappingStrings{"Win32API|Network Management Structures|USER_INFO_3|usri3_flags"} : ToSubclass,ValueMap{"Normal Account", "Duplicate Account", "Workstation Trust Account", "Server Trust Account", "Interdomain Trust Account", "Unknown"} : ToSubclass] string UserType;
  [read : ToSubclass,MappingStrings{"Win32API|Network Management Structures|USER_INFO_3|usri3_workstations"} : ToSubclass] string Workstations;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8502C508-5FBB-11D2-AAC1-006008C78BC7}") : ToInstance] 
class Win32_GroupUser : CIM_Component
{
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("GroupComponent") : ToSubclass,MappingStrings{"WMI|Win32_Group"} : ToSubclass] Win32_Group Ref GroupComponent;
  [read : ToSubclass,key : ToInstance ToSubclass DisableOverride,Override("PartComponent") : ToSubclass,MappingStrings{"WMI|Win32_Account"} : ToSubclass] Win32_Account Ref PartComponent;
};

[Abstract,Locale(1033) : ToInstance] 
class Win32_Session : CIM_logicalElement
{
  DateTime StartTime;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{9083C21E-7D58-4e0e-BC30-0BC8922AFB8B}") : ToInstance] 
class Win32_LogonSession : Win32_Session
{
  [key : ToInstance ToSubclass DisableOverride] String LogonId;
  String AuthenticationPackage;
  [ValueMap{"2", "3", "4", "5", "7", "8", "9"} : ToSubclass] uint32 LogonType;
};

[Abstract,Locale(1033) : ToInstance] 
class Win32_SubSession : CIM_Dependency
{
  Win32_Session Ref Antecedent;
  Win32_Session Ref Dependent;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("{8BB5B3EC-E1F7-4b39-942A-605D5F55789A}") : ToInstance] 
class Win32_LoggedOnUser : CIM_Dependency
{
  [key : ToInstance ToSubclass DisableOverride] Win32_Account Ref Antecedent;
  [key : ToInstance ToSubclass DisableOverride] Win32_LogonSession Ref Dependent;
};

[Abstract,Locale(1033) : ToInstance] 
class Win32_SessionResource : CIM_Dependency
{
  [Override("Antecedent")] Win32_LogicalElement Ref Antecedent;
  [Override("Dependent")] Win32_Session Ref Dependent;
};

[Dynamic,Provider("CIMWin32") : ToInstance,Locale(1033) : ToInstance,UUID("9CD8E1CE-0D27-4a41-AADE-F8D200230FF4") : ToInstance] 
class Win32_SessionProcess : Win32_SessionResource
{
  [Override("Dependent"),Key : ToInstance ToSubclass DisableOverride] Win32_Process Ref Dependent;
  [Override("Antecedent"),Key : ToInstance ToSubclass DisableOverride] Win32_LogonSession Ref Antecedent;
};
#pragma autorecover
#pragma classflags(64)
#pragma namespace("\\\\.\\Root\\CIMV2")
instance of __namespace{ name="ms_409";};
#pragma namespace("\\\\.\\Root\\CIMV2\\ms_409")

[DisplayName("Managed System Elements (CIM)") : Amended,Description("The CIM_ManagedSystemElement class is the base class for the system element hierarchy. Membership criteria: Any distinguishable component of a system is a candidate for inclusion in this class.\nExamples: software components, such as files; and devices, such as disk drives and controllers, and physical components such as chips and cards.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_ManagedSystemElement
{
  [DisplayName("Caption") : Amended,Description("The Caption property is a short textual description (one-line string) of the object.") : Amended ToSubclass] string Caption;
  [DisplayName("Description") : Amended,Description("The Description property provides a textual description of the object. ") : Amended ToSubclass] string Description;
  [DisplayName("Install Date") : Amended,Description("The InstallDate property is datetime value indicating when the object was installed. A lack of a value does not indicate that the object is not installed.") : Amended ToSubclass] datetime InstallDate;
  [DisplayName("Name") : Amended,Description("The Name property defines the label by which the object is known. When subclassed, the Name property can be overridden to be a Key property.") : Amended ToSubclass] string Name;
  [DisplayName("Status") : Amended,Description("The Status property is a string indicating the current status of the object. Various operational and non-operational statuses can be defined. Operational statuses are \"OK\", \"Degraded\" and \"Pred Fail\". \"Pred Fail\" indicates that an element may be functioning properly but predicting a failure in the near future. An example is a SMART-enabled hard drive. Non-operational statuses can also be specified. These are \"Error\", \"Starting\", \"Stopping\" and \"Service\". The latter, \"Service\", could apply during mirror-resilvering of a disk, reload of a user permissions list, or other administrative work. Not all such work is on-line, yet the managed element is neither \"OK\" nor in one of the other states.") : Amended ToSubclass,Values{"OK", "Error", "Degraded", "Unknown", "Pred Fail", "Starting", "Stopping", "Service", "Stressed", "NonRecover", "No Contact", "Lost Comm"} : Amended ToSubclass] string Status;
};

[DisplayName("Logical Elements (CIM)") : Amended,Description("The CIM_LogicalElement class is the base class for all the components of the system that represent abstract system components.\nExample: profiles, processes, or system capabilities in the form of logical devices.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_LogicalElement : CIM_ManagedSystemElement
{
};

[Description("The CIM_SystemResource class is an entity managed by BIOS and/or an operating system which is available for use by software and/or logical devices. Examples of Resources in the x86 environment are IRQs, DMA channels and memory mapped I/O.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_SystemResource : CIM_LogicalElement
{
};

[Description("The CIM_IRQ class represents an Intel architecture IRQ") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_IRQ : CIM_SystemResource
{
  [Description("CSCreationClassName contains the scoping computer system's creation class name.") : Amended ToSubclass] string CSCreationClassName;
  [Description("CSName contains the scoping computer system's name.") : Amended ToSubclass] string CSName;
  [Description("CreationClassName indicates the name of the class or the subclass used in the creation of an instance. When used with the other key properties of this class, this property allows all instances of this class and its subclasses to be uniquely identified.") : Amended ToSubclass] string CreationClassName;
  [Description("A part of the object's key value, IRQ Number.") : Amended ToSubclass,key : ToInstance ToSubclass DisableOverride] uint32 IRQNumber;
  [Description("Availability of the IRQ.") : Amended ToSubclass,Values{"Other", "Unknown", "Available", "In Use/Not Available", "In Use and Available/Shareable"} : Amended ToSubclass] uint16 Availability;
  [Description("IRQ trigger type indicating whether edge (value=4) or level triggered (value=3) interrupts occur. Also, \"Other\" (1) and \"Unknown\" (2) may be defined.") : Amended ToSubclass,Values{"Other", "Unknown", "Level", "Edge"} : Amended ToSubclass] uint16 TriggerType;
  [Description("IRQ trigger level indicating whether the interrupt is triggered by the hardware signal going high (value=4) or low (value=3).  Also, \"Other\" (1) and \"Unknown\" (2) may be defined.") : Amended ToSubclass,Values{"Other", "Unknown", "Active Low", "Active High"} : Amended ToSubclass] uint16 TriggerLevel;
  [Description("Boolean indicating whether the IRQ can be shared.") : Amended ToSubclass] boolean Shareable;
};

[Description("Personal Computer architecture Memory Mapped I/O. This class addresses both memory and port I/O resources. The property, MappedResource, defines whether memory or I/O is mapped (and for I/O whether the mapping is to a memory or a port space.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_MemoryMappedIO : CIM_SystemResource
{
  [Description("The scoping computer system's creation class name property.") : Amended ToSubclass] string CSCreationClassName;
  [Description("The scoping computer system's name.") : Amended ToSubclass] string CSName;
  [Description("CreationClassName indicates the name of the class or the subclass used in the creation of an instance. When used with the other key properties of this class, this property allows all instances of this class and its subclasses to be uniquely identified.") : Amended ToSubclass] string CreationClassName;
  [Description("The StartingAddress property contains the starting address of memory mapped I/O. The hardware resource identifier property should be set to this value to construct the mapped I/O resource key.") : Amended ToSubclass] uint64 StartingAddress;
  [Description("The EndingAddress property contains the ending address of memory mapped I/O") : Amended ToSubclass] uint64 EndingAddress;
};

[Description("Personal computer architecture DMA.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_DMA : CIM_SystemResource
{
  [Description("The scoping computer system's creation class name.") : Amended ToSubclass] string CSCreationClassName;
  [Description("The scoping computer system's name.") : Amended ToSubclass] string CSName;
  [Description("CreationClassName indicates the name of the class or the subclass used in the creation of an instance. When used with the other key properties of this class, this property allows all instances of this class and its subclasses to be uniquely identified.") : Amended ToSubclass] string CreationClassName;
  [Key : ToInstance ToSubclass DisableOverride,Description("A part of the object's key value, the DMA channel number.") : Amended ToSubclass] uint32 DMAChannel;
  [Description("The Availability property indicates the availability of the DMA.") : Amended ToSubclass,Values{"Other", "Unknown", "Available", "In Use/Not Available", "In Use and Available/Shareable"} : Amended ToSubclass] uint16 Availability;
  [Description("Indicate whether the DMA channel supports burst mode") : Amended ToSubclass] boolean BurstMode;
  [Description("An array indicating all the transfer widths (in bits) supported by this DMA Channel. Permissible values are 8, 16, 32, 64 or 128 bits.  If unknown, enter 0.") : Amended ToSubclass,Units("bits") : Amended ToSubclass] uint16 TransferWidths[];
  [Description("An integer indicating the DMA channel address size in bits. Permissible values are 8, 16, 32 or 64 bits. If unknown, enter 0.") : Amended ToSubclass,Units("bits") : Amended ToSubclass] uint16 AddressSize;
  [Description("The maximum number of bytes that can be transferred by this DMA channel.  If unknown, enter 0.") : Amended ToSubclass,Units("bytes") : Amended ToSubclass] uint32 MaxTransferSize;
  [Description("Indicates whether DMA may execute in 'count by byte' mode (value=4) or not (value=3).  Also, \"Other\" (1) and \"Unknown\" (2) may be defined.") : Amended ToSubclass,Values{"Other", "Unknown", "Not execute in 'count by byte' mode", "Execute in 'count by byte' mode"} : Amended ToSubclass] uint16 ByteMode;
  [Description("Indicates whether DMA may execute in 'count by word' mode (value=4) or not (value=3).  Also, \"Other\" (1) and \"Unknown\" (2) may be defined.") : Amended ToSubclass,Values{"Other", "Unknown", "Not execute in 'count by word' mode", "Execute in 'count by word' mode"} : Amended ToSubclass] uint16 WordMode;
  [Description("DMA channel timing.  For example, \"Type A\" (value =4) or \"Type F\" (6) could be specified.") : Amended ToSubclass,Values{"Other", "Unknown", "ISA Compatible", "Type A", "Type B", "Type F"} : Amended ToSubclass] uint16 ChannelTiming;
  [Description("Indicates whether C type (burst) timing is supported (value=5) or not (value=4). Also, \"Other\" (1), \"Unknown\" (2) and \"ISA Compatible\" (3) are defined.") : Amended ToSubclass,Values{"Other", "Unknown", "ISA Compatible", "Not Supported", "Supported"} : Amended ToSubclass] uint16 TypeCTiming;
};

[Description("A CIM_System is a LogicalElement that aggregates an enumerable set of Managed System Elements. The aggregation operates as a functional whole. Within any particular subclass of System, there is a well-defined list of Managed System Element classes whose instances must be aggregated.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_System : CIM_LogicalElement
{
  [Description("The CreationClassName property indicates the name of the class or the subclass used in the creation of an instance. When used with the other key properties of this class, this property allows all instances of this class and its subclasses to be uniquely identified.") : Amended ToSubclass] string CreationClassName;
  [Description("The Name property defines the label by which the object is known. When subclassed, the Name property can be overridden to be a Key property.") : Amended ToSubclass,Key : ToInstance ToSubclass DisableOverride] string Name;
  [Description("The CIM_System object and its derivatives are top level objects of CIM. They provide the scope for numerous components. Having unique system keys is required. A heuristic can be defined in individual system subclasses to attempt to always generate the same system name key. The NameFormat property identifies how the system name was generated, using the subclass' heuristic.") : Amended ToSubclass] string NameFormat;
  [Description("A string that provides information on how the primary system owner can be reached (e.g. phone number, email address, ...).") : Amended ToSubclass] string PrimaryOwnerContact;
  [Description("The name of the primary system owner.") : Amended ToSubclass] string PrimaryOwnerName;
  [Description("An array (bag) of strings that specify the roles this System plays in the IT-environment. Subclasses of System may override this property to define explicit Roles values. Alternately, a Working Group may describe the heuristics, conventions and guidelines for specifying Roles. For example, for an instance of a networking system, the Roles property might contain the string, 'Switch' or 'Bridge'.") : Amended ToSubclass] string Roles[];
};

[Description("A class derived from CIM_System that is a special collection of CIM_ManagedSystemElement instances. This collection provides compute capabilities and serves as aggregation point to associate one or more of the following elements: file system, operating system, processor and memory (volatile and/or non-volatile storage).") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_ComputerSystem : CIM_System
{
  [Description("The CIM_ComputerSystem object and its derivatives are Top Level Objects of CIM. They provide the scope for numerous components. Having unique CIM_System keys is required. A heuristic is defined to create the CIM_ComputerSystem name to attempt to always generate the same name, independent of discovery protocol. This prevents inventory and management problems where the same asset or entity is discovered multiple times, but can not be resolved to a single object. Use of the heuristic is optional, but recommended. \n\n The NameFormat property identifies how the computer system name is generated, using a heuristic. The heuristic is outlined, in detail, in the CIM V2 Common Model specification. It assumes that the documented rules are traversed in order, to determine and assign a name. The NameFormat values list defines the precedence order for assigning the computer system name. Several rules do map to the same Value. \n\n Note that the CIM_ComputerSystem Name calculated using the heuristic is the system's key value. Other names can be assigned and used for the CIM_ComputerSystem that better suit the business, using Aliases.") : Amended ToSubclass,Values{"IP", "Dial", "HID", "NWA", "HWA", "X25", "ISDN", "IPX", "DCC", "ICD", "E.164", "SNA", "OID/OSI", "Other"} : Amended ToSubclass] string NameFormat;
};

[Description("A class derived from CIM_ComputerSystem that represents a desktop, mobile, network PC, server or other type of a single node computer system.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_UnitaryComputerSystem : CIM_ComputerSystem
{
  [Description("This object contains the data needed to find either the initial load device (its key) or the boot service to request the operating system to start up. In addition, the load parameters (ie, a pathname and parameters) may also be specified.") : Amended ToSubclass] string InitialLoadInfo[];
  [Description("This object contains the data identifying either the initial load device (its key) or the boot service that requested the last operating system load. In addition, the load parameters (ie, a pathname and parameters) may also be specified.") : Amended ToSubclass] string LastLoadInfo;
  [Description("Boolean indicating that the ComputerSystem, with its running OperatingSystem, supports power management. This boolean does not indicate that power management features are currently enabled, or if enabled, what features are supported. Refer to the PowerManagementCapabilities array for this information. If this boolean is false, the integer value 1 for the string, \"Not Supported\", should be the only entry in the PowerManagementCapabilities array.") : Amended ToSubclass] boolean PowerManagementSupported;
  [Description("Indicates the specific power-related capabilities of a computer system and its associated running operating system. The values, 0=\"Unknown\", 1=\"Not Supported\", and 2=\"Disabled\" are self-explanatory. The value, 3=\"Enabled\" indicates that the power management features are currently enabled but the exact feature set is unknown or the information is unavailable. \"Power Saving Modes Entered Automatically\" (4) describes that a system can change its power state based on usage or other criteria. \"Power State Settable\" (5) indicates that the SetPowerState method is supported. \"Power Cycling Supported\" (6) indicates that the SetPowerState method can be invoked with the PowerState parameter set to 5 (\"Power Cycle\"). \"Timed Power On Supported\" (7) indicates that the SetPowerState method can be invoked with the PowerState parameter set to 5 (\"Power Cycle\") and the Time parameter set to a specific date and time, or interval, for power-on.") : Amended ToSubclass,Values{"Unknown", "Not Supported", "Disabled", "Enabled", "Power Saving Modes Entered Automatically", "Power State Settable", "Power Cycling Supported", "Timed Power On Supported"} : Amended ToSubclass] uint16 PowerManagementCapabilities[];
  [Description("Indicates the current power state of the computer system and its associated operating system. Regarding the power saving states, these are defined as follows: Value 4 (Unknown) indicates that the system is known to be in a power save mode, but its exact status in this mode is unknown; 2 (Low Power Mode) indicates that the system is in a power save state but still functioning, and may exhibit degraded performance; 3 (Standby) describes that the system is not functioning but could be brought to full power 'quickly'; and value 7 (Warning) indicates that the computerSystem is in a warning state, though also in a power save mode.") : Amended ToSubclass,Values{"Unknown", "Full Power", "Power Save - Low Power Mode", "Power Save - Standby", "Power Save - Unknown", "Power Cycle", "Power Off", "Power Save - Warning", "Power Save - Hibernate", "Power Save - Soft Off"} : Amended ToSubclass] uint16 PowerState;
  [Description("If enabled (value = 4), the unitary computer system can be reset via hardware (e.g. the power and reset buttons). If disabled (value = 3), hardware reset is not allowed. In addition to Enabled and Disabled, other values for the property are also defined - \"Not Implemented\" (5), \"Other\" (1) and \"Unknown\" (2).") : Amended ToSubclass,Values{"Other", "Unknown", "Disabled", "Enabled", "Not Implemented"} : Amended ToSubclass] uint16 ResetCapability;
  [Description("SetPowerState method defines the desired power state of a computer system and its running operating system, and when the system should be put into that state. The PowerState parameter is specified as one of the valid integer values defined for the property, PowerState. The Time parameter (for all state changes but 5, \"Power Cycle\") indicates when the power state should be set, either as a regular date-time value or as an interval value (where the interval begins when the method invocation is received). When the PowerState parameter is equal to 5, \"Power Cycle\", the Time parameter indicates when the system should power on again. power off is immediate. SetPowerState should return 0 if successful, 1 if the specified power state and time requests are not supported, and some other value if any other error occurred.") : Amended ToSubclass] uint32 SetPowerState([IN,Values{"Full Power", "Power Save - Low Power Mode", "Power Save - Standby", "Power Save - Other", "Power Cycle", "Power Off", "Hibernate", "Soft Off"} : Amended ToSubclass] uint16 PowerState,[IN] datetime Time);
};

[DisplayName("Services (CIM)") : Amended,Description("A CIM_Service is a Logical Element that contains the information necessary to represent and manage the functionality provided by a Device and/or SoftwareFeature. A Service is a general-purpose object to configure and manage the implementation of functionality.  It is not the functionality itself.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_Service : CIM_LogicalElement
{
  [DisplayName("Class Name") : Amended,Description("CreationClassName indicates the name of the class or the subclass used in the creation of an instance. When used with the other key properties of this class, this property allows all instances of this class and its subclasses to be uniquely identified.") : Amended ToSubclass] string CreationClassName;
  [Key : ToInstance ToSubclass DisableOverride,Description("The Name property uniquely identifies the service and provides an indication of the functionality that is managed. This functionality is described in more detail in the object's Description property. ") : Amended ToSubclass] string Name;
  [DisplayName("Start Mode") : Amended,Description("StartMode is a string value indicating whether the Service is automatically started by a System, Operating System, etc. or only started upon request.") : Amended ToSubclass,Values{"Automatic", "Manual"} : Amended ToSubclass] string StartMode;
  [DisplayName("Started") : Amended,Description("Started is a boolean indicating whether the service has been started (TRUE), or stopped (FALSE).") : Amended ToSubclass] boolean Started;
  [DisplayName("System Class Name") : Amended,Description("The scoping System's CreationClassName. ") : Amended ToSubclass] string SystemCreationClassName;
  [DisplayName("System Name") : Amended,Description("The name of the system that hosts this service") : Amended ToSubclass] string SystemName;
  [Description("The StartService method places the Service in the started state. It returns an integer value of 0 if the Service was successfully started, 1 if the request is not supported and any other number to indicate an error. In a subclass, the set of possible return codes could be specified, using a ValueMap qualifier on the method. The strings to which the ValueMap contents are 'translated' may also be specified in the subclass as a Values array qualifier.") : Amended ToSubclass] uint32 StartService();
  [Description("The StopService method places the service in the stopped state. It returns an integer value of 0 if the service was successfully stopped, 1 if the request is not supported and any other number to indicate an error.") : Amended ToSubclass] uint32 StopService();
};

[Description("The CIM_ClusteringService class represents the functionality provided by a cluster. For example, failover functionality may be modeled as a service of a failover cluster.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_ClusteringService : CIM_Service
{
  [Description("AddNode brings a new computer system into a cluster. The node to be added is specified as a parameter to the method. The return value should be 0 if the computer system is successfully added, 1 if the method is not supported and any other number if an error occurred.") : Amended ToSubclass] uint32 AddNode([IN] CIM_ComputerSystem Ref CS);
  [Description("EvictNode removes a computer system from a cluster. The node to be evicted is specified as a parameter to the method. The return value should be 0 if the computer system is successfully evicted, 1 if the method is not supported and any other number if an error occurred.") : Amended ToSubclass] uint32 EvictNode([IN] CIM_ComputerSystem Ref CS);
};

[Description("CIM_ServiceAccessPoint represents the ability to utilize or invoke a service.  Access points represent that a service is made available to other entities for use.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_ServiceAccessPoint : CIM_LogicalElement
{
  [Description("CreationClassName indicates the name of the class or the subclass used in the creation of an instance. When used with the other key properties of this class, this property allows all instances of this class and its subclasses to be uniquely identified.") : Amended ToSubclass] string CreationClassName;
  [Key : ToInstance ToSubclass DisableOverride,Description("The Name property uniquely identifies the service access point and provides an indication of the functionality that is managed.  This functionality is described in more detail in the object's Description property.") : Amended ToSubclass] string Name;
  [Description("The scoping system's creation class name.") : Amended ToSubclass] string SystemCreationClassName;
  [Description("The scoping system's name.") : Amended ToSubclass] string SystemName;
  [Description("The Type property indicates the type of SAP such as 'attached' or 'Redirected'.") : Amended ToSubclass,BitValues{"Write", "Read", "Redirected", "Net_Attached", "unknown"} : Amended ToSubclass] uint32 Type;
};

[Description("A representation of the access points of a clustering service.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_ClusteringSAP : CIM_ServiceAccessPoint
{
};

[Description("An abstraction or emulation of a hardware entity, that may or may not be realized in physical hardware. Any characteristics of logical devices that are used to manage its operation or configuration are contained in, or associated with, the CIM_LogicalDevice object. Examples of the operational properties for a printer would be paper sizes supported, or detected errors. Examples of the configuration properties of a sensor device would be threshold settings. Various configurations could exist for a logical device. These configurations could be contained in CIM_Setting objects and associated with the logical device.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_LogicalDevice : CIM_LogicalElement
{
  [Description("The availability and status of the device.  For example, the Availability property indicates that the device is running and has full power (value=3), or is in a warning (4), test (5), degraded (10) or power save state (values 13-15 and 17). Regarding the power saving states, these are defined as follows: Value 13 (\"Power Save - Unknown\") indicates that the device is known to be in a power save mode, but its exact status in this mode is unknown; 14 (\"Power Save - Low Power Mode\") indicates that the device is in a power save state but still functioning, and may exhibit degraded performance; 15 (\"Power Save - Standby\") describes that the device is not functioning but could be brought to full power 'quickly'; and value 17 (\"Power Save - Warning\") indicates that the device is in a warning state, though also in a power save mode.") : Amended ToSubclass,Values{"Other", "Unknown", "Running/Full Power", "Warning", "In Test", "Not Applicable", "Power Off", "Off Line", "Off Duty", "Degraded", "Not Installed", "Install Error", "Power Save - Unknown", "Power Save - Low Power Mode", "Power Save - Standby", "Power Cycle", "Power Save - Warning", "Paused", "Not Ready", "Not Configured", "Quiesced"} : Amended ToSubclass] uint16 Availability;
  [Description("CreationClassName indicates the name of the class or the subclass used in the creation of an instance. When used with the other key properties of this class, this property allows all instances of this class and its subclasses to be uniquely identified.") : Amended ToSubclass] string CreationClassName;
  [Description("Indicates the Win32 Configuration Manager error code.  The following values may be returned: \n0      This device is working properly. \n1      This device is not configured correctly. \n2      Windows cannot load the driver for this device. \n3      The driver for this device might be corrupted, or your system may be running low on memory or other resources. \n4      This device is not working properly. One of its drivers or your registry might be corrupted. \n5      The driver for this device needs a resource that Windows cannot manage. \n6      The boot configuration for this device conflicts with other devices. \n7      Cannot filter. \n8      The driver loader for the device is missing. \n9      This device is not working properly because the controlling firmware is reporting the resources for the device incorrectly. \n10     This device cannot start. \n11     This device failed. \n12     This device cannot find enough free resources that it can use. \n13     Windows cannot verify this device's resources. \n14     This device cannot work properly until you restart your computer. \n15     This device is not working properly because there is probably a re-enumeration problem. \n16     Windows cannot identify all the resources this device uses. \n17     This device is asking for an unknown resource type. \n18     Reinstall the drivers for this device. \n19     Your registry might be corrupted. \n20     Failure using the VxD loader. \n21     System failure: Try changing the driver for this device. If that does not work, see your hardware documentation. Windows is removing this device. \n22     This device is disabled. \n23     System failure: Try changing the driver for this device. If that doesn't work, see your hardware documentation. \n24     This device is not present, is not working properly, or does not have all its drivers installed. \n25     Windows is still setting up this device. \n26     Windows is still setting up this device. \n27     This device does not have valid log configuration. \n28     The drivers for this device are not installed. \n29     This device is disabled because the firmware of the device did not give it the required resources. \n30     This device is using an Interrupt Request (IRQ) resource that another device is using. \n31     This device is not working properly because Windows cannot load the drivers required for this device.") : Amended ToSubclass,Values{"This device is working properly.", "This device is not configured correctly.", "Windows cannot load the driver for this device.", "The driver for this device might be corrupted, or your system may be running low on memory or other resources.", "This device is not working properly. One of its drivers or your registry might be corrupted.", "The driver for this device needs a resource that Windows cannot manage.", "The boot configuration for this device conflicts with other devices.", "Cannot filter.", "The driver loader for the device is missing.", "This device is not working properly because the controlling firmware is reporting the resources for the device incorrectly.", "This device cannot start.", "This device failed.", "This device cannot find enough free resources that it can use.", "Windows cannot verify this device's resources.", "This device cannot work properly until you restart your computer.", "This device is not working properly because there is probably a re-enumeration problem.", "Windows cannot identify all the resources this device uses.", "This device is asking for an unknown resource type.", "Reinstall the drivers for this device.", "Failure using the VxD loader.", "Your registry might be corrupted.", "System failure: Try changing the driver for this device. If that does not work, see your hardware documentation. Windows is removing this device.", "This device is disabled.", "System failure: Try changing the driver for this device. If that doesn't work, see your hardware documentation.", "This device is not present, is not working properly, or does not have all its drivers installed.", "Windows is still setting up this device.", "Windows is still setting up this device.", "This device does not have valid log configuration.", "The drivers for this device are not installed.", "This device is disabled because the firmware of the device did not give it the required resources.", "This device is using an Interrupt Request (IRQ) resource that another device is using.", "This device is not working properly because Windows cannot load the drivers required for this device."} : Amended ToSubclass] uint32 ConfigManagerErrorCode;
  [Description("Indicates whether the device is using a user-defined configuration.") : Amended ToSubclass] boolean ConfigManagerUserConfig;
  [Description("DeviceID is an address or other identifying information to uniquely name the logical device.") : Amended ToSubclass] string DeviceID;
  [Description("Indicates the specific power-related capabilities of the logical device. The array values, 0=\"Unknown\", 1=\"Not Supported\" and 2=\"Disabled\" are self-explanatory. The value, 3=\"Enabled\" indicates that the power management features are currently enabled but the exact feature set is unknown or the information is unavailable. \"Power Saving Modes Entered Automatically\" (4) describes that a device can change its power state based on usage or other criteria. \"Power State Settable\" (5) indicates that the SetPowerState method is supported. \"Power Cycling Supported\" (6) indicates that the SetPowerState method can be invoked with the PowerState input variable set to 5 (\"Power Cycle\"). \"Timed Power On Supported\" (7) indicates that the SetPowerState method can be invoked with the PowerState input variable set to 5 (\"Power Cycle\") and the Time parameter set to a specific date and time, or interval, for power-on.") : Amended ToSubclass,Values{"Unknown", "Not Supported", "Disabled", "Enabled", "Power Saving Modes Entered Automatically", "Power State Settable", "Power Cycling Supported", "Timed Power On Supported"} : Amended ToSubclass] uint16 PowerManagementCapabilities[];
  [Description("Indicates the Win32 Plug and Play device ID of the logical device.  Example: *PNP030b") : Amended ToSubclass] string PNPDeviceID;
  [Description("Boolean indicating that the Device can be power managed - ie, put into a power save state. This boolean does not indicate that power management features are currently enabled, or if enabled, what features are supported. Refer to the PowerManagementCapabilities array for this information. If this boolean is false, the integer value 1, for the string, \"Not Supported\", should be the only entry in the PowerManagementCapabilities array.") : Amended ToSubclass] boolean PowerManagementSupported;
  [Description("StatusInfo is a string indicating whether the logical device is in an enabled (value = 3), disabled (value = 4) or some other (1) or unknown (2) state. If this property does not apply to the logical device, the value, 5 (\"Not Applicable\"), should be used.") : Amended ToSubclass,Values{"Other", "Unknown", "Enabled", "Disabled", "Not Applicable"} : Amended ToSubclass] uint16 StatusInfo;
  [Description("The scoping System's CreationClassName.") : Amended ToSubclass] string SystemCreationClassName;
  [Description("The scoping System's Name.") : Amended ToSubclass] string SystemName;
  [Description("SetPowerState defines the desired power state for a logical device and when a device should be put into that state. The desired power state is specified by setting the PowerState parameter to one of the following integer values: 1=\"Full Power\", 2=\"Power Save - Low Power Mode\", 3=\"Power Save - Standby\", 4=\"Power Save - Other\", 5=\"Power Cycle\" or 6=\"Power Off\". The Time parameter (for all state changes, except 5, \"Power Cycle\") indicates when the power state should be set, either as a regular date-time value or as an interval value (where the interval begins when the method invocation is received). When the PowerState parameter is equal to 5, \"Power Cycle\", the Time parameter indicates when the device should power on again. Power off is immediate. SetPowerState should return 0 if successful, 1 if the specified PowerState and Time request is not supported, and some other value if any other error occurred. In a subclass, the set of possible return codes could be specified, using a ValueMap qualifier on the method. The strings to which the ValueMap contents are 'translated' may also be specified in the subclass as a Values array qualifier.") : Amended ToSubclass] uint32 SetPowerState([IN,Values{"Full Power", "Power Save - Low Power Mode", "Power Save - Standby", "Power Save - Other", "Power Cycle", "Power Off"} : Amended ToSubclass] uint16 PowerState,[IN] datetime Time);
  [Description("Requests a reset of the logical device. The return value should be 0 if the request was successfully executed, 1 if the request is not supported and some other value if an error occurred.") : Amended ToSubclass] uint32 Reset();
  [Description("LastErrorCode captures the last error code reported by the logical device.") : Amended ToSubclass] uint32 LastErrorCode;
  [Description("ErrorDescription is a free-form string supplying more information about the error recorded in LastErrorCode property, and information on any corrective actions that may be taken.") : Amended ToSubclass] string ErrorDescription;
  [Description("ErrorCleared is a boolean property indicating that the error reported in LastErrorCode property is now cleared.") : Amended ToSubclass] boolean ErrorCleared;
};

[Description("CIM_MediaAccessDevice represents the ability to access one or more media and use this media to store and retrieve data.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_MediaAccessDevice : CIM_LogicalDevice
{
  [Description("Capabilities of the media access device.  For example, the device may support \"Random Access\", removable media and \"Automatic Cleaning\".  In this case, the values 3, 7 and 9 would be written to the array. \nSeveral of the enumerated values require some explanation: 1) Value 11, Supports Dual Sided Media, distinguishes a Device that can access both sides of dual sided Media, from a Device that reads only a single side and requires the Media to be flipped; and, 2) Value 12, Predismount Eject Not Required, indicates that Media does not have to be explicitly ejected from the Device before being accessed by a PickerElement.") : Amended ToSubclass,Values{"Unknown", "Other", "Sequential Access", "Random Access", "Supports Writing", "Encryption", "Compression", "Supports Removeable Media", "Manual Cleaning", "Automatic Cleaning", "SMART Notification", "Supports Dual Sided Media", "Predismount Eject Not Required"} : Amended ToSubclass] uint16 Capabilities[];
  [Description("An array of free-form strings providing more detailed explanations for any of the access device features indicated in the Capabilities array. Note, each entry of this array is related to the entry in the Capabilities array that is located at the same index.") : Amended ToSubclass] string CapabilityDescriptions[];
  [Description("A free form string indicating the algorithm or tool used by the device to support compression. If it is not possible or not desired to describe the compression scheme (perhaps because it is not known), recommend using the following words: \"Unknown\" to represent that it is not known whether the device supports compression capabilities or not, \"Compressed\" to represent that the device supports compression capabilities but either its compression scheme is not known or not disclosed, and \"Not Compressed\" to represent that the devices does not support compression capabilities.") : Amended ToSubclass] string CompressionMethod;
  [Description("ErrorMethodology is a free-form string describing the type(s) of error detection and correction supported by this device.") : Amended ToSubclass] string ErrorMethodology;
  [Description("Maximum size, in Kbytes, of media supported by this device. KBytes is interpreted as the number of bytes multiplied by 1000 (NOT the number of bytes multiplied by 1024).") : Amended ToSubclass,Units("kilobytes") : Amended ToSubclass] uint64 MaxMediaSize;
  [Description("Default block size, in bytes, for this device.") : Amended ToSubclass,Units("bytes") : Amended ToSubclass] uint64 DefaultBlockSize;
  [Description("Maximum block size, in bytes, for media accessed by this device.") : Amended ToSubclass,Units("bytes") : Amended ToSubclass] uint64 MaxBlockSize;
  [Description("Minimum block size, in bytes, for media accessed by this device.") : Amended ToSubclass,Units("bytes") : Amended ToSubclass] uint64 MinBlockSize;
  [Description("When the media access device supports multiple individual media, this property defines the maximum number which can be supported or inserted.") : Amended ToSubclass] uint32 NumberOfMediaSupported;
  [Description("Boolean indicating that the media access device needs cleaning. Whether manual or automatic cleaning is possible is indicated in the Capabilities array property. ") : Amended ToSubclass] boolean NeedsCleaning;
};

[Description("Capabilities and management of a diskette drive, a subtype of CIM_MediaAccessDevice.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_DisketteDrive : CIM_MediaAccessDevice
{
};

[Description("Capabilities and management of cooling devices.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_CoolingDevice : CIM_LogicalDevice
{
  [Description("ActiveCooling is a boolean indicating that the cooling device provides active (as opposed to passive) cooling.") : Amended ToSubclass] boolean ActiveCooling;
};

[Description("Capabilities and management of a refrigeration cooling device.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_Refrigeration : CIM_CoolingDevice
{
};

[Description("Capabilities and management of a heat pipe cooling device.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_HeatPipe : CIM_CoolingDevice
{
};

[Description("Capabilities and management of a fan cooling device.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_Fan : CIM_CoolingDevice
{
  [Description("Indication of whether the fan supports variable speeds.") : Amended ToSubclass] boolean VariableSpeed;
  [Description("DesiredSpeed is the currently requested fan speed, defined in revolutions per minute, when a variable speed fan is supported (VariableSpeed boolean = TRUE). The current speed is determined via a sensor (CIM_Tachometer) that is associated with the fan using the CIM_AssociatedSensor relationship.") : Amended ToSubclass,Units("revolutions per minute") : Amended ToSubclass] uint64 DesiredSpeed;
  [Description("Requests that the fan speed be set to the value specified in the method's input parameter. The return value should be 0 if the request was successfully executed, 1 if the request is not supported and some other value if an error occurred. ") : Amended ToSubclass] uint32 SetSpeed([IN] uint64 DesiredSpeed);
};

[Description("The CIM_Sensor class represents a hardware device capable of measuring the characteristics of some physical property - for example, the temperature or voltage characteristics of a unitary computersystem.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_Sensor : CIM_LogicalDevice
{
};

[Description("A numeric sensor is capable of returning numeric readings and optionally supports thresholds settings.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_NumericSensor : CIM_Sensor
{
  [Description("The current value indicated by the sensor.") : Amended ToSubclass] sint32 CurrentReading;
  [Description("NominalReading indicates the 'normal' or expected value for the numeric sensor.") : Amended ToSubclass] sint32 NominalReading;
  [Description("NormalMax provides guidance for the user as to the normal maximum range for the numeric sensor.") : Amended ToSubclass] sint32 NormalMax;
  [Description("NormalMin provides guidance for the user as to the normal minimum range for the numeric sensor.") : Amended ToSubclass] sint32 NormalMin;
  [Description("MaxReadable indicates the largest value of the measured property that can be read by the numeric sensor.") : Amended ToSubclass] sint32 MaxReadable;
  [Description("MinReadable indicates the smallest value of the measured property that can be read by the numeric sensor.") : Amended ToSubclass] sint32 MinReadable;
  [Description("Resolution indicates the ability of the sensor to resolve differences in the measured property.  This value may vary depending on whether the device is linear over its dynamic range.") : Amended ToSubclass] uint32 Resolution;
  [Description("Indicates the tolerance of the sensor for the measured property. Tolerance, along with resolution and accuracy, is used to calculate the actual value of the measured physical property.  Tolerance may vary depending on whether the device is linear over its dynamic range.") : Amended ToSubclass] sint32 Tolerance;
  [Description("Indicates the accuracy of the sensor for the measured property. Its value is recorded as plus/minus hundredths of a percent. Accuracy, along with resolution and tolerance, is used to calculate the actual value of the measured physical property. Accuracy may vary depending on whether the device is linear over its dynamic range.") : Amended ToSubclass,Units("hundredths of percent") : Amended ToSubclass] sint32 Accuracy;
  [Description("Indicates that the sensor is linear over its dynamic range.") : Amended ToSubclass] boolean IsLinear;
  [Description("The sensor's threshold values specify the ranges (min and max values) for determining whether the Sensor is operating under Normal, NonCritical, Critical or Fatal conditions. If CurrentReading is between LowerThresholdNonCritical and UpperThresholdNonCritical, then the Sensor is reporting a normal value. If CurrentReading is between LowerThresholdNonCritical and LowerThresholdCritical, then the CurrentState is NonCritical.") : Amended ToSubclass] sint32 LowerThresholdNonCritical;
  [Description("The sensor's threshold values specify the ranges (min and max values) for determining whether the Sensor is operating under Normal, NonCritical, Critical or Fatal conditions. If the CurrentReading is between LowerThresholdNonCritical and UpperThresholdNonCritical, then the Sensor is reporting a normal value. If the CurrentReading is between UpperThresholdNonCritical and UpperThresholdCritical, then the CurrentState is NonCritical.") : Amended ToSubclass] sint32 UpperThresholdNonCritical;
  [Description("The Sensor's threshold values specify the ranges (min and max values) for determining whether the Sensor is operating under Normal, NonCritical, Critical or Fatal conditions. If the CurrentReading is between LowerThresholdCritical and LowerThresholdFatal, then the CurrentState is Critical.") : Amended ToSubclass] sint32 LowerThresholdCritical;
  [Description("The sensor's threshold values specify the ranges (min and max values) for determining whether the Sensor is operating under Normal, NonCritical, Critical or Fatal conditions. If the CurrentReading is between UpperThresholdCritical and UpperThresholdFatal, then the CurrentState is Critical.") : Amended ToSubclass] sint32 UpperThresholdCritical;
  [Description("The sensor's threshold values specify the ranges (min and max values) for determining whether the Sensor is operating under Normal, NonCritical, Critical or Fatal conditions. If the CurrentReading is below LowerThresholdFatal, then the CurrentState is Fatal.") : Amended ToSubclass] sint32 LowerThresholdFatal;
  [Description("The sensor's threshold values specify the ranges (min and max values) for determining whether the Sensor is operating under Normal, NonCritical, Critical or Fatal conditions. If the CurrentReading is above UpperThresholdFatal, then the CurrentState is Fatal.") : Amended ToSubclass] sint32 UpperThresholdFatal;
};

[Description("This class exists for backward compatibility to earlier CIM Schema definitions. With additions to Sensor and NumericSensor in V2.2, it is no longer necessary. A TempertatureSensor can be defined by setting the SensorType property, inherited from Sensor, to 2 (\"Temperature\"). Other properties of this class are hard-coded to constant values to correspond to definitions in the sensor hierarchy.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_TemperatureSensor : CIM_NumericSensor
{
  [Units("tenths of degrees centigrade") : Amended ToSubclass] sint32 CurrentReading;
  [Units("tenths of degrees centigrade") : Amended ToSubclass] sint32 NominalReading;
  [Units("tenths of degrees centigrade") : Amended ToSubclass] sint32 NormalMax;
  [Units("tenths of degrees centigrade") : Amended ToSubclass] sint32 NormalMin;
  [Units("tenths of degrees centigrade") : Amended ToSubclass] sint32 MaxReadable;
  [Units("tenths of degrees centigrade") : Amended ToSubclass] sint32 MinReadable;
  [Units("hundredths of degrees centigrade") : Amended ToSubclass] uint32 Resolution;
  [Units("tenths of degrees centigrade") : Amended ToSubclass] sint32 Tolerance;
  [Units("tenths of degrees centigrade") : Amended ToSubclass] sint32 LowerThresholdNonCritical;
  [Units("tenths of degrees centigrade") : Amended ToSubclass] sint32 UpperThresholdNonCritical;
  [Units("tenths of degrees centigrade") : Amended ToSubclass] sint32 LowerThresholdCritical;
  [Units("tenths of degrees centigrade") : Amended ToSubclass] sint32 UpperThresholdCritical;
  [Units("tenths of degrees centigrade") : Amended ToSubclass] sint32 LowerThresholdFatal;
  [Units("tenths of degrees centigrade") : Amended ToSubclass] sint32 UpperThresholdFatal;
};

[Description("This class exists for backward compatibility to earlier CIM Schema definitions. With additions to Sensor and NumericSensor in V2.2, it is no longer necessary. A CurrentSensor can be defined by setting the SensorType property, inherited from Sensor, to 4 (\"Current\"). Other properties of this class are hard-coded to constant values to correspond to definitions in the sensor hierarchy.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_CurrentSensor : CIM_NumericSensor
{
  [Units("milliamps") : Amended ToSubclass] sint32 CurrentReading;
  [Units("milliamps") : Amended ToSubclass] sint32 NominalReading;
  [Units("milliamps") : Amended ToSubclass] sint32 NormalMax;
  [Units("milliamps") : Amended ToSubclass] sint32 NormalMin;
  [Units("milliamps") : Amended ToSubclass] sint32 MaxReadable;
  [Units("milliamps") : Amended ToSubclass] sint32 MinReadable;
  [Units("tenths of milliamps") : Amended ToSubclass] uint32 Resolution;
  [Units("milliamps") : Amended ToSubclass] sint32 Tolerance;
  [Units("milliamps") : Amended ToSubclass] sint32 LowerThresholdNonCritical;
  [Units("milliamps") : Amended ToSubclass] sint32 UpperThresholdNonCritical;
  [Units("milliamps") : Amended ToSubclass] sint32 LowerThresholdCritical;
  [Units("milliamps") : Amended ToSubclass] sint32 UpperThresholdCritical;
  [Units("milliamps") : Amended ToSubclass] sint32 LowerThresholdFatal;
  [Units("milliamps") : Amended ToSubclass] sint32 UpperThresholdFatal;
};

[Description("This class exists for backward compatibility to earlier CIM Schema definitions. With additions to Sensor and NumericSensor in V2.2, it is no longer necessary. A VoltageSensor can be defined by setting the SensorType property, inherited from Sensor, to 3 (\"Voltage\"). Other properties of this class are hard-coded to constant values to correspond to definitions in the sensor hierarchy.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_VoltageSensor : CIM_NumericSensor
{
  [Units("millivolts") : Amended ToSubclass] sint32 CurrentReading;
  [Units("millivolts") : Amended ToSubclass] sint32 NominalReading;
  [Units("millivolts") : Amended ToSubclass] sint32 NormalMax;
  [Units("millivolts") : Amended ToSubclass] sint32 NormalMin;
  [Units("millivolts") : Amended ToSubclass] sint32 MaxReadable;
  [Units("millivolts") : Amended ToSubclass] sint32 MinReadable;
  [Units("tenths of millivolts") : Amended ToSubclass] uint32 Resolution;
  [Units("millivolts") : Amended ToSubclass] sint32 Tolerance;
  [Units("millivolts") : Amended ToSubclass] sint32 LowerThresholdNonCritical;
  [Units("millivolts") : Amended ToSubclass] sint32 UpperThresholdNonCritical;
  [Units("millivolts") : Amended ToSubclass] sint32 LowerThresholdCritical;
  [Units("millivolts") : Amended ToSubclass] sint32 UpperThresholdCritical;
  [Units("millivolts") : Amended ToSubclass] sint32 LowerThresholdFatal;
  [Units("millivolts") : Amended ToSubclass] sint32 UpperThresholdFatal;
};

[Description("The CIM_CDROMDrive class represents a CD-ROM drive on the system.\n<B>Note:</B> The name of the drive does not correspond to the logical drive letter assigned to device, which is the name of the logical storage device dependent on this drive.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_CDROMDrive : CIM_MediaAccessDevice
{
};

[Description("The CIM_DiskDrive class represents a physical disk drive as seen by the operating system. The features of the drive seen through this object correspond to the logical and management characteristics of the drive and, in some cases may not reflect the actual physical characteristics of the device. Any interface to a physical drive is a member of this class. Any object based on another logical device would not be a member of this class.\nExample: IDE Fixed Disk.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_DiskDrive : CIM_MediaAccessDevice
{
};

[Description("The CIM_TapeDrive class represents a tape drive on the system. Tape drives are primarily distinguished by the fact that they can only be accessed sequentially.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_TapeDrive : CIM_MediaAccessDevice
{
  [Description("EOTWarningZoneSize indicates the size, in bytes, of the area designated as 'end of tape'. Access in this area generates an 'end of tape' warning.") : Amended ToSubclass,Units("bytes") : Amended ToSubclass] uint32 EOTWarningZoneSize;
  [Description("The MaxPartitionCount property indicates the maximum part count for the tape drive.") : Amended ToSubclass] uint32 MaxPartitionCount;
  [Description("Padding indicates the number of bytes inserted between blocks on a tape Media.") : Amended ToSubclass,Units("bytes") : Amended ToSubclass] uint32 Padding;
};

[Description("Controller is a superclass for grouping the miscellaneous control-related Devices that exist. Examples of Controllers are SCSIControllers, USBControllers, SerialControllers, ... The Controller class is an abstraction for Devices with a single protocol stack, which exist primarily for communication to, and control or reset of downstream (ControlledBy) Devices.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_Controller : CIM_LogicalDevice
{
  [Description("Maximum number of directly addressable entities supported by this Controller.  A value of 0 should be used if the number is unknown or unlimited.") : Amended ToSubclass] uint32 MaxNumberControlled;
  [Description("The protocol used by the controller to access 'controlled' devices.") : Amended ToSubclass,Values{"Other", "Unknown", "EISA", "ISA", "PCI", "ATA/ATAPI", "Flexible Diskette", "1496", "SCSI Parallel Interface", "SCSI Fibre Channel Protocol", "SCSI Serial Bus Protocol", "SCSI Serial Bus Protocol-2 (1394)", "SCSI Serial Storage Architecture", "VESA", "PCMCIA", "Universal Serial Bus", "Parallel Protocol", "ESCON", "Diagnostic", "I2C", "Power", "HIPPI", "MultiBus", "VME", "IPI", "IEEE-488", "RS232", "IEEE 802.3 10BASE5", "IEEE 802.3 10BASE2", "IEEE 802.3 1BASE5", "IEEE 802.3 10BROAD36", "IEEE 802.3 100BASEVG", "IEEE 802.5 Token-Ring", "ANSI X3T9.5 FDDI", "MCA", "ESDI", "IDE", "CMD", "ST506", "DSSI", "QIC2", "Enhanced ATA/IDE", "AGP", "TWIRP (two-way infrared)", "FIR (fast infrared)", "SIR (serial infrared)", "IrBus"} : Amended ToSubclass] uint16 ProtocolSupported;
  [Description("The TimeOfLastReset property indicates the date and time this controller was last reset.  This could mean the controller was powered down, or reinitialized.") : Amended ToSubclass] datetime TimeOfLastReset;
};

[Description("Capabilities and management of the video controller.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_VideoController : CIM_Controller
{
  [Description("A free-form string describing the video processor/Controller.") : Amended ToSubclass] string VideoProcessor;
  [Description("An integer enumeration indicating the type of video memory.") : Amended ToSubclass,Values{"Other", "Unknown", "VRAM", "DRAM", "SRAM", "WRAM", "EDO RAM", "Burst Synchronous DRAM", "Pipelined Burst SRAM", "CDRAM", "3DRAM", "SDRAM", "SGRAM"} : Amended ToSubclass] uint16 VideoMemoryType;
  [Description("Number of video pages supported given the current resolutions and available memory.") : Amended ToSubclass] uint32 NumberOfVideoPages;
  [Description("Maximum amount of memory supported in bytes.") : Amended ToSubclass,Units("bytes") : Amended ToSubclass] uint32 MaxMemorySupported;
  [Description("An array of integers indicating the graphics and 3D capabilities of the video controller.") : Amended ToSubclass,Values{"Unknown", "Other", "Graphics Accelerator", "3D Accelerator"} : Amended ToSubclass] uint16 AcceleratorCapabilities[];
  [Description("An array of free-form strings providing more detailed explanations for any of the video accelerator features indicated in the Capabilities array. Note, each entry of this array is related to the entry in the Capabilities array that is located at the same index.") : Amended ToSubclass] string CapabilityDescriptions[];
  [Description("The number of bits used to display each pixel.") : Amended ToSubclass,Units("bits") : Amended ToSubclass] uint32 CurrentBitsPerPixel;
  [Description("Current number of horizontal pixels.") : Amended ToSubclass,Units("pixels") : Amended ToSubclass] uint32 CurrentHorizontalResolution;
  [Description("Current number of vertical pixels.") : Amended ToSubclass,Units("pixels") : Amended ToSubclass] uint32 CurrentVerticalResolution;
  [Description("Maximum refresh rate of the video controller in hertz.") : Amended ToSubclass,Units("hertz") : Amended ToSubclass] uint32 MaxRefreshRate;
  [Description("Minimum refresh rate of the video controller in hertz.") : Amended ToSubclass,Units("hertz") : Amended ToSubclass] uint32 MinRefreshRate;
  [Description("Current refresh rate in hertz.") : Amended ToSubclass,Units("hertz") : Amended ToSubclass] uint32 CurrentRefreshRate;
  [Description("Current scan mode. \"Interlaced\" (value=3) or \"Non Interlaced\" (4) can be defined using this property.") : Amended ToSubclass,Values{"Other", "Unknown", "Interlaced", "Non Interlaced"} : Amended ToSubclass] uint16 CurrentScanMode;
  [Description("Number of colors supported at the current resolutions.") : Amended ToSubclass] uint64 CurrentNumberOfColors;
  [Description("If in character mode, number of rows for this video controller. Otherwise, enter 0.") : Amended ToSubclass] uint32 CurrentNumberOfRows;
  [Description("If in character mode, number of columns for this video controller. Otherwise, enter 0.") : Amended ToSubclass] uint32 CurrentNumberOfColumns;
};

[Description("Capabilities and management of a PC video controller, a subtype of video controller.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_PCVideoController : CIM_VideoController
{
  [Description("The video architecture.  For example, VGA (value=5) or PC-98 (160) may be specified.") : Amended ToSubclass,Values{"Other", "Unknown", "CGA", "EGA", "VGA", "SVGA", "MDA", "HGC", "MCGA", "8514A", "XGA", "Linear Frame Buffer", "PC-98"} : Amended ToSubclass] uint16 VideoArchitecture;
  [Description("Current video mode.") : Amended ToSubclass] uint16 VideoMode;
  [Description("Current number of color planes.  If this value is not applicable for the current video configuration, enter 0.") : Amended ToSubclass] uint16 NumberOfColorPlanes;
};

[Description("Capabilities and management  of a PCMCIA controller.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_PCMCIAController : cim_controller
{
  [Description("The Manufacturer property indicates the name of the PCMCIA controller manufacturer.\nExample: Acme") : Amended ToSubclass] string Manufacturer;
};

[Description("Capabilities and management of a USB controller.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_USBController : CIM_Controller
{
  [Description("The Manufacturer property indicates the name of the USB controller  manufacturer.\nExample: Acme") : Amended ToSubclass] string Manufacturer;
};

[Description("NetworkAdapter is an Abstract class defining general networking hardware concepts (for example, PermanentAddress or Speed of operation). NetworkAdapters are Devices with the ability to support multiple, higher level protocols and provide the implementation behind the Network Model's ProtocolEndpoint class. (This information is conveyed using the DeviceSAPImplementation association, defined in the Core Model.) NetworkAdapters and their Endpoints represent the potential for connectivity among peers.\nThe 'potential for connectivity' is very different than the master-slave/controller-controlled by relationships of CIM_Controller. Sometimes, however, a single Device is both a kind of NetworkAdapter and a Controller - for example, when a FibreChannelAdapater is operating as a ComputerSystem's SCSIController. In this case, there are aspects of the Device that are network oriented and others that are Controller oriented - and, both the Controller and Adapter classes should be instantiated. A DeviceIdentity relationship would also be created to tie together these differing aspects/abstractions of the Device.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_NetworkAdapter : CIM_LogicalDevice
{
  [Description("PermanentAddress defines the network address hard coded into an adapter.  This 'hard coded' address may be changed via firmware upgrade or software configuration. If so, this field should be updated when the change is made.  PermanentAddress should be left blank if no 'hard coded' address exists for the network adapter.") : Amended ToSubclass] string PermanentAddress;
  [Description("An array of strings indicating the network addresses for an adapter.") : Amended ToSubclass] string NetworkAddresses[];
  [Description("An estimate of the current bandwidth in bits per second. For endpoints which vary in bandwidth or for those where no accurate estimation can be made, this property should contain the nominal bandwidth.") : Amended ToSubclass,Units("bits per second") : Amended ToSubclass] uint64 Speed;
  [Description("The maximum speed, in bits per second, for the network adapter.") : Amended ToSubclass,Units("bits per second") : Amended ToSubclass] uint64 MaxSpeed;
  [Description("A boolean indicating whether the NetworkAdapter is capable of automatically determining the speed or other communications characteristics of the attached network media.") : Amended ToSubclass] boolean AutoSense;
};

[Description("User devices are logical devices that allow a computer system's users to input, view or hear data. The CIM_UserDevice class is a superclass from which other classes, such as CIM_Keyboard or CIM_DesktopMonitor, descend.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_UserDevice : CIM_LogicalDevice
{
  [Description("An indication of whether the device is locked, preventing user input or output.") : Amended ToSubclass] boolean IsLocked;
};

[Description("The CIM_Display class is a superclass for grouping the miscellaneous display devices that exist.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_Display : CIM_UserDevice
{
};

[Description("Capabilities and management of the desktop monitor (CRT) logical device.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_DesktopMonitor : CIM_Display
{
  [Description("The type of desktop monitor or CRT. For example, multiscan color or monochrome monitors (values 2 or 3, respectively) can be indicated in this property.") : Amended ToSubclass,Values{"Unknown", "Other", "Multiscan Color", "Multiscan Monochrome", "Fixed Frequency Color", "Fixed Frequency Monochrome"} : Amended ToSubclass] uint16 DisplayType;
  [Description("Monitor's bandwidth in megahertz. If unknown, enter 0.") : Amended ToSubclass,Units("megahertz") : Amended ToSubclass] uint32 Bandwidth;
  [Description("The logical height of the display in screen coordinates.") : Amended ToSubclass] uint32 ScreenHeight;
  [Description("The logical width of the display in screen coordinates.") : Amended ToSubclass] uint32 ScreenWidth;
};

[Description("Capabilities and management of the flat panel logical device.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_FlatPanel : CIM_Display
{
  [Description("Flat panel's horizontal resolution in pixels.") : Amended ToSubclass,Units("pixels") : Amended ToSubclass] uint32 HorizontalResolution;
  [Description("Flat panel's vertical resolution in pixels.") : Amended ToSubclass,Units("pixels") : Amended ToSubclass] uint32 VerticalResolution;
  [Description("A Flat panel's scan mode indicating either single (value=2) or dual scan (3).") : Amended ToSubclass,Values{"Unknown", "Other", "Single Scan", "Dual Scan"} : Amended ToSubclass] uint16 ScanMode;
  [Description("An integer enumeration describing the type of flat panel display.") : Amended ToSubclass,Values{"Unknown", "Other", "Passive Matrix LCD", "Active Matrix LCD", "Cholesteric LCD", "Field Emission Display", "Electro Luminescent Display", "Gas Plasma", "LED"} : Amended ToSubclass] uint16 DisplayType;
  [Description("A description of the display illumination type. For example, backlit (value=2) or reflective (4) can be specified.") : Amended ToSubclass,Values{"Unknown", "Other", "Backlit", "Edgelit", "Reflective"} : Amended ToSubclass] uint16 LightSource;
  [Description("Boolean indicating whether the flat panel supports color display.") : Amended ToSubclass] boolean SupportsColor;
};

[Description("Capabilities and management of the keyboard logical device.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_Keyboard : CIM_UserDevice
{
  [Description("A free-form string indicating the format and layout of the Keyboard.") : Amended ToSubclass] string Layout;
  [Description("Number of function keys on the Keyboard.") : Amended ToSubclass] uint16 NumberOfFunctionKeys;
  [Description("An integer indicating whether a hardware-level password is enabled at the keyboard (value=4), preventing local input. Other values are:  \"Disabled\" (3), \"Not Implemented\" (5), \"Other\" (1) and \"Unknown\" (2).") : Amended ToSubclass,Values{"Other", "Unknown", "Disabled", "Enabled", "Not Implemented"} : Amended ToSubclass] uint16 Password;
};

[Description("The CIM_PointingDevice class represents a device used to point to regions on the display. Membership criteria: Any device used to manipulate a pointer or point to regions on a visual display is a member of this class. Example: A mouse, stylus, touch pad, or tablet.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_PointingDevice : CIM_UserDevice
{
  [Description("Integer indicating whether the pointing device is configured for right (value=2) or left handed operation (value=3). Also, the values, \"Unknown\" (0) and \"Not Applicable\" (1), can be defined.") : Amended ToSubclass,Values{"Unknown", "Not Applicable", "Right Handed Operation", "Left Handed Operation"} : Amended ToSubclass] uint16 Handedness;
  [Description("The NumberOfButtons property indicates the number of buttons on the pointing device.\nExample: 2") : Amended ToSubclass] uint8 NumberOfButtons;
  [Description("The type of the pointing device.") : Amended ToSubclass,Values{"Other", "Unknown", "Mouse", "Track Ball", "Track Point", "Glide Point", "Touch Pad", "Touch Screen", "Mouse - Optical Sensor"} : Amended ToSubclass] uint16 PointingType;
  [Description("The Resolution property indicates the tracking resolution.\nExample: 0") : Amended ToSubclass,Units("counts per inch") : Amended ToSubclass] uint32 Resolution;
};

[Description("StorageExtent describes the capabilities and management of the various media that exist to store data and allow data retrieval. This superclass could be used to represent the various components of RAID (Hardware or Software) or as a raw logical extent on top of physical media.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_StorageExtent : CIM_LogicalDevice
{
  [Description("Access describes whether the media is readable (value=1), writeable (value=2), or both (value=3). \"Unknown\" (0) and \"Write Once\" (4) can also be defined.") : Amended ToSubclass,Values{"Unknown", "Readable", "Writeable", "Read/Write Supported", "Write Once"} : Amended ToSubclass] uint16 Access;
  [Description("Size in bytes of the blocks which form this StorageExtent. If variable block size, then the maximum block size in bytes should be specified. If the block size is unknown or if a block concept is not valid (for example, for Aggregate Extents, Memory or LogicalDisks), enter a 1.") : Amended ToSubclass,Units("bytes") : Amended ToSubclass] uint64 BlockSize;
  [Description("ErrorMethodology is a free-form string describing the type of error detection and correction supported by this storage extent.") : Amended ToSubclass] string ErrorMethodology;
  [Description("Total number of consecutive blocks, each block the size of the value contained in the BlockSize property, which form this storage extent. Total size of the storage extent can be calculated by multiplying the value of the BlockSize property by the value of this property. If the value of BlockSize is 1, this property is the total size of the storage extent.") : Amended ToSubclass] uint64 NumberOfBlocks;
  [Description("A free form string describing the media and/or its use.") : Amended ToSubclass] string Purpose;
};

[Description("A PhysicalExtent is used to model an SCC RAID implementation. It defines the consecutive addressable block addresses on a single storage device, that are treated as a single StorageExtent and that are in the same StorageRedundancyGroup. An alternate possibility, if automatic configuration is used, is to instantiate or extend the AggregatePExtent class.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_PhysicalExtent : CIM_StorageExtent
{
  [Description("Number of bytes of user data to skip before starting the check data interleave.") : Amended ToSubclass,Units("bytes") : Amended ToSubclass] uint64 UnitsBeforeCheckDataInterleave;
  [Description("Number of bytes to be reserved for check data.") : Amended ToSubclass,Units("bytes") : Amended ToSubclass] uint64 UnitsOfCheckData;
  [Description("Number of bytes to be reserved for user data.") : Amended ToSubclass,Units("bytes") : Amended ToSubclass] uint64 UnitsOfUserData;
};

[Description("The CIM_AggregatePExtent class provides summary information about the addressable logical blocks which are in the same storage redundancy group and reside on the same physical media. This is an alternative grouping for physical extents, when only summary information is needed or when automatic configuration is used. Automatic configuration can result in thousands of physical extents being defined. There is no value in modeling the individual extents.  So, the CIM_AggregatePExtent object was defined.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_AggregatePExtent : CIM_StorageExtent
{
  [Description("Total number of blocks (including the check data blocks) contained in this aggregate physical extent.  The block size (an inherited property) should be set to the same value as for the media access device associated with this extent.") : Amended ToSubclass] uint64 NumberOfBlocks;
};

[Description("A LogicalDisk is a presentation of a contiguous range of logical blocks that is identifiable by a FileSystem via the Disk's DeviceId (key) field. For example in a Windows environment, the DeviceID field would contain a drive letter. In a Unix environment, it would contain the access path; and in a NetWare environment, DeviceID would contain the volume name. LogicalDisks are typically built on a DiskPartition or StorageVolume (for example, exposed by a software volume manager) using the LogicalDiskBasedOnPartition or LogicalDiskBasedOnVolume associations. However, it can be based on other StorageExtents, like CIM_Memory, in the case of a RAM disk. The latter is described using the LogicalDiskBasedOnExtent relationship. (Indeed, the BasedOnExtent association is the superclass for the BasedOnPartition and BasedOnVolume relationships.)") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_LogicalDisk : CIM_StorageExtent
{
  [units("bytes") : Amended ToSubclass,Description("The FreeSpace property indicates in bytes how much free space is available on the logical disk.") : Amended ToSubclass] uint64 FreeSpace;
  [units("bytes") : Amended ToSubclass,Description("The Size property indicates in bytes, the size of the logical disk.") : Amended ToSubclass] uint64 Size;
};

[Description("A generic association to establish dependency relationships between objects.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_Dependency
{
  [Description("Antecedent represents the independent object in this association.") : Amended ToSubclass] CIM_ManagedSystemElement Ref Antecedent;
  [Description("Dependent represents the object dependent on the Antecedent.") : Amended ToSubclass] CIM_ManagedSystemElement Ref Dependent;
};

[Description("CIM_ServiceServiceDependency is an association between a service and another service, indicating that the latter is required to be present, required to have completed, or must be absent for the former service to provide its functionality. For example, boot services may be dependent upon underlying BIOS Disk and initialization services. In the case of the initialization services, the boot service is simply dependent on the init services completing.  For the disk services, boot services may actually utilize the SAPs of this service.  This usage dependency is modeled via the CIM_ServiceSAPDependency association.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_ServiceServiceDependency : CIM_Dependency
{
  [Description("The required service.") : Amended ToSubclass] CIM_Service Ref Antecedent;
  [Description("The service that is dependent on an underlying service.") : Amended ToSubclass] CIM_Service Ref Dependent;
  [Description("The nature of the service to service dependency. This property describes that the associated service must have completed (value=2), must be started (3) or must not be started (4) in order for the service to function.") : Amended ToSubclass,Values{"Unknown", "Other", "Service Must Have Completed", "Service Must Be Started", "Service Must Not Be Started"} : Amended ToSubclass] uint16 TypeOfDependency;
};

[Description("The CIM_DeviceConnection relationship indicates that two or more device are connected together.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_DeviceConnection : CIM_Dependency
{
  [Description("A logical device.") : Amended ToSubclass] CIM_LogicalDevice Ref Antecedent;
  [Description("A second logical device connected to the Antecedent device.") : Amended ToSubclass] CIM_LogicalDevice Ref Dependent;
  [Description("When several bus and/or connection speeds are possible, the NegotiatedSpeed property defines the one in use between the devices.  Speed is specified in bits per second.  If connection or bus speeds are not negotiated, or if this information is not available/important to device management, the property should be set to 0.") : Amended ToSubclass,Units("bits per second") : Amended ToSubclass] uint64 NegotiatedSpeed;
  [Description("When several bus and/or connection data widths are possible, the NegotiatedDataWidth property defines the one in use between the devices.  Data width is specified in bits.  If data width is not negotiated, or if this information is not available/important to device management, the property should be set to 0.") : Amended ToSubclass,Units("bits") : Amended ToSubclass] uint32 NegotiatedDataWidth;
};

[Description("Many devices include sensors or have sensors installed nearby, in order to measure critical input and output properties.  This association indicates that relationship.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_AssociatedSensor : CIM_Dependency
{
  [Description("The sensor.") : Amended ToSubclass] CIM_Sensor Ref Antecedent;
  [Description("The logical device for which information is measured by the sensor.") : Amended ToSubclass] CIM_LogicalDevice Ref Dependent;
};

[Description("The CIM_ControlledBy relationship indicates which devices are commanded by or accessed through the controller logical device.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_ControlledBy : CIM_DeviceConnection
{
  [Description("The controller.") : Amended ToSubclass] CIM_Controller Ref Antecedent;
  [Description("The controlled device.") : Amended ToSubclass] CIM_LogicalDevice Ref Dependent;
  [Description("The AccessState property indicates whether the controller is actively commanding or accessing the device (value=1) or not (value=2).  Also, the value, \"Unknown\" (0), can be defined. This information is necessary when a logical device can be commanded by, or accessed through, multiple controllers.") : Amended ToSubclass,Values{"Unknown", "Active", "Inactive"} : Amended ToSubclass] uint16 AccessState;
  [Description("Number of hard resets issued by the controller. A hard reset returns the device to its initialization or 'boot-up' state. All internal device state information and data are lost.") : Amended ToSubclass] uint32 NumberOfHardResets;
  [Description("Number of soft resets issued by the controller. A soft reset does not completely clear current device state and/or data. Exact semantics are dependent on the device, and on the protocols and mechanisms used to communicate to it.") : Amended ToSubclass] uint32 NumberOfSoftResets;
};

[Description("CIM_BasedOn is an association describing how storage extents can be assembled from lower level extents. For example, protected space extents are parts of physical extents, while volume sets are assembled from one or more physical or protected space extents. As another example, cache memory can be defined independently and realized in a physical element or can be 'based on' volatile or non-volatile storage extents.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_BasedOn : CIM_Dependency
{
  [Description("The lower level storage extent.") : Amended ToSubclass] CIM_StorageExtent Ref Antecedent;
  [Description("The higher level storage extent.") : Amended ToSubclass] CIM_StorageExtent Ref Dependent;
  [Description("StartingAddress indicates where in lower level storage, the higher level extent begins.") : Amended ToSubclass] uint64 StartingAddress;
  [Description("EndingAddress indicates where in lower level storage, the higher level extent ends. This property is useful when mapping non-contiguous extents into a higher level grouping.") : Amended ToSubclass] uint64 EndingAddress;
};

[Description("Where a storage extent must be accessed through a media access device, this relationship is described by the CIM_MediaPresent association.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_MediaPresent : CIM_Dependency
{
  [Description("The media access device.") : Amended ToSubclass] CIM_MediaAccessDevice Ref Antecedent;
  [Description("The storage extent accessed using the media access device.") : Amended ToSubclass] CIM_StorageExtent Ref Dependent;
};

[Description("A DiskPartition is a presentation of a contiguous range of logical blocks that is identifiable by the OperatingSystem via the Partition's type and subtype fields. DiskPartitions should be directly realized by PhysicalMedia (indicated by the RealizesDiskPartition association) or built on StorageVolumes (indicated by the PartitionBasedOnVolume association.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_DiskPartition : CIM_StorageExtent
{
  [Description("Boolean indicating that the DiskPartition is labelled as bootable. This does not mean that an OperatingSystem is actually loaded on the partition.") : Amended ToSubclass] boolean Bootable;
  [Description("Boolean indicating that the DiskPartition is labelled as the primary partition for a ComputerSystem.") : Amended ToSubclass] boolean PrimaryPartition;
};

[Description("LogicalDisks can be BasedOn a DiskPartition. For example, a personal computer's C: drive may be located on a Partition on local PhysicalMedia. In this association of LogicalDisks to Partitions, note that the cardinality of the Antecedent, DiskPartition, is Max(1). This dictates that a LogicalDisk can not span more than one Partition. However, there are cases where this is true. When it occurs, the LogicalDisk is really based on some kind of RAID configuration (for example, a mirror or stripe set). In these scenarios, the LogicalDisk is more correctly BasedOn a StorageVolume. To prevent incorrectly using the LogicalDiskBasedOnPartition association, the Max(1) qualifier was put on the Antecedent reference to the DiskPartition.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_LogicalDiskBasedOnPartition : CIM_BasedOn
{
  [Description("The disk partition.") : Amended ToSubclass] CIM_DiskPartition Ref Antecedent;
  [Description("The logical disk which is built on the partition.") : Amended ToSubclass] CIM_LogicalDisk Ref Dependent;
};

[Description("The POTSModem class represents a Device that translates binary data into wave modulations for sound based transmission.  It connects to the POTS (Plain Old Telephone System) network.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_PotsModem : CIM_LogicalDevice
{
  [Description("Answer mode defines the current auto-answer/call-back setting for the modem.") : Amended ToSubclass,Values{"Unknown", "Other", "Disabled", "Manual Answer", "Auto Answer", "Auto Answer with Call-Back"} : Amended ToSubclass] uint16 AnswerMode;
  [Description("Describes the data compression characteristics of the modem.") : Amended ToSubclass,Values{"Unknown", "Other", "No Compression", "MNP 5", "V.42bis"} : Amended ToSubclass] uint16 CompressionInfo;
  [Description("CountriesSupported is an array (bag) that contains a set of strings defining the countries/regions in which the modem can operate.") : Amended ToSubclass] string CountriesSupported[];
  [Description("CountrySelected is a string value defining the country/region for which the modem is currently programmed. When multiple countries/regions are supported, this property defines which one is currently selected for use.") : Amended ToSubclass] string CountrySelected;
  [Description("CurrentPasswords is an array (bag) containing the currently defined passwords for the modem. This array may be left blank for security reasons.") : Amended ToSubclass] string CurrentPasswords[];
  [Description("DialType is an integer indicating whether tone (value=1) or pulse dialing (value=2) is used. \"Unknown\" (0) can also be defined.") : Amended ToSubclass,Values{"Unknown", "Tone", "Pulse"} : Amended ToSubclass] uint16 DialType;
  [Description("Describes the error correction characteristics of the modem.") : Amended ToSubclass,Values{"Unknown", "Other", "No Error Correction", "MNP 4", "LAPM"} : Amended ToSubclass] uint16 ErrorControlInfo;
  [Description("InactivityTimeout defines the time limit (in seconds) for automatic disconnection of the phone line, if no data is exchanged.  A value of 0 indicates that this feature is present but not enabled.") : Amended ToSubclass,Units("seconds") : Amended ToSubclass] uint32 InactivityTimeout;
  [Description("Defines the maximum settable communication speed for accessing the phone system.") : Amended ToSubclass,Units("bits per second") : Amended ToSubclass] uint32 MaxBaudRateToPhone;
  [Description("Defines the maximum settable communication speed to the COM port for an external modem. Enter 0 if not applicable.") : Amended ToSubclass,Units("bits per second") : Amended ToSubclass] uint32 MaxBaudRateToSerialPort;
  [Description("MaxNumberOfPasswords specifies the number of passwords definable in the modem itself. If this feature is not supported, enter 0.") : Amended ToSubclass] uint16 MaxNumberOfPasswords;
  [Description("Describes the modulation scheme of the modem.") : Amended ToSubclass,Values{"Unknown", "Other", "Not Supported", "Bell 103", "Bell 212A", "V.22bis", "V.32", "V.32bis", "V.turbo", "V.FC", "V.34", "V.34bis"} : Amended ToSubclass] uint16 ModulationScheme;
  [Description("Number of rings before the modem answers an incoming call.") : Amended ToSubclass] uint8 RingsBeforeAnswer;
  [Description("Describes the volume level of the audible tones from the modem. For example, high, medium or low volume can be reported (values 3, 4 or 5, respectively).") : Amended ToSubclass,Values{"Unknown", "Other", "Not Supported", "High", "Medium", "Low", "Off", "Auto"} : Amended ToSubclass] uint16 SpeakerVolumeInfo;
  [Description("Indication of whether the modem supports call-back") : Amended ToSubclass] boolean SupportsCallback;
  [Description("Boolean indicating that synchronous, as well as asynchronous, communication is supported.") : Amended ToSubclass] boolean SupportsSynchronousConnect;
  [Description("The TimeOfLastReset property indicates the date and time this controller was last reset.  This could mean the controller was powered down, or reinitialized.") : Amended ToSubclass] datetime TimeOfLastReset;
};

[Description("Capabilities and management of the power supply logical device.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_PowerSupply : CIM_LogicalDevice
{
  [Description("ActiveInputVoltage indicates which input voltage range is currently in use. Range 1, 2 or both can be specified using the values 3, 4 or 5, respectively. If the Supply is not currently drawing power, the value 6 (\"Neither\") can be specified. This information is necessary in the case of a UPS, a subclass of PowerSupply.") : Amended ToSubclass,Values{"Other", "Unknown", "Range 1", "Range 2", "Both", "Neither"} : Amended ToSubclass] uint16 ActiveInputVoltage;
  [Description("Boolean indicating that the power supply is a switching (vs. linear) supply.") : Amended ToSubclass] boolean IsSwitchingSupply;
  [Description("The frequency (in hertz) at the high end of this powersupply's input frequency range 1. A value of zero implies DC.") : Amended ToSubclass,Units("hertz") : Amended ToSubclass] uint32 Range1InputFrequencyHigh;
  [Description("The frequency (in hertz) at the low end of this powersupply's input frequency range 1. A value of zero implies DC.") : Amended ToSubclass,Units("hertz") : Amended ToSubclass] uint32 Range1InputFrequencyLow;
  [Description("The high voltage of input voltage range 1 for this power supply, in millivolts. A value of 0 denotes 'unknown'.") : Amended ToSubclass,Units("millivolts") : Amended ToSubclass] uint32 Range1InputVoltageHigh;
  [Description("The low voltage of input voltage range 1 for this power supply, in millivolts. A value of 0 denotes 'unknown'.") : Amended ToSubclass,Units("millivolts") : Amended ToSubclass] uint32 Range1InputVoltageLow;
  [Description("The frequency (in hertz) at the high end of this powersupply's input frequency range 2. A value of zero implies DC.") : Amended ToSubclass,Units("hertz") : Amended ToSubclass] uint32 Range2InputFrequencyHigh;
  [Description("The frequency (in hertz) at the low end of this powersupply's input frequency range 2. A value of zero implies DC.") : Amended ToSubclass,Units("hertz") : Amended ToSubclass] uint32 Range2InputFrequencyLow;
  [Description("The high voltage of input voltage range 2 for this power supply, in millivolts. A value of 0 denotes 'unknown'.") : Amended ToSubclass,Units("millivolts") : Amended ToSubclass] uint32 Range2InputVoltageHigh;
  [Description("The low voltage of input voltage range 2 for this power supply, in millivolts. A value of 0 denotes 'unknown'.") : Amended ToSubclass,Units("millivolts") : Amended ToSubclass] uint32 Range2InputVoltageLow;
  [Description("Represents the total output power of the power supply in milliwatts. 0 denotes 'unknown'.") : Amended ToSubclass,Units("milliwatts") : Amended ToSubclass] uint32 TotalOutputPower;
  [Description("TypeOfRangeSwitching describes the kind of input voltage range switching implemented in this power supply. For example, Autoswitch can be specified (value=4).") : Amended ToSubclass,Values{"Other", "Unknown", "Manual", "Autoswitch", "Wide Range", "Not Applicable"} : Amended ToSubclass] uint16 TypeOfRangeSwitching;
};

[Description("Capabilities and management of the battery logical device. This class applies to both batteries in laptop systems and other internal/external batteries, such as used in, or as UPSs.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_Battery : CIM_LogicalDevice
{
  [Description("Description of the battery's charge status. Values such as \"Fully Charged\" (value=3) or \"Partially Charged\" (11) can be specified. The value, 10, is not valid in the CIM Schema since in DMI it represents that no battery is installed. In this case, this object should not be instantiated.") : Amended ToSubclass,Values{"Other", "Unknown", "Fully Charged", "Low", "Critical", "Charging", "Charging and High", "Charging and Low", "Charging and Critical", "Undefined", "Partially Charged"} : Amended ToSubclass] uint16 BatteryStatus;
  [Description("TimeOnBattery indicates the elapsed time in seconds since the computer system's UPS last switched to battery power, or the time since the system or UPS was last restarted, whichever is less. Zero shall be returned if the battery is 'on line'.") : Amended ToSubclass,Units("seconds") : Amended ToSubclass] uint32 TimeOnBattery;
  [Description("EstimatedRunTime is an estimate in minutes of the time to battery charge depletion under the present load conditions if the utility power is off, or lost and remains off, or a Laptop is disconnected from a power source.") : Amended ToSubclass,Units("minutes") : Amended ToSubclass] uint32 EstimatedRunTime;
  [Description("An estimate of the percentage of full charge remaining.") : Amended ToSubclass,Units("percent") : Amended ToSubclass] uint16 EstimatedChargeRemaining;
  [Description("An enumeration that describes the battery's chemistry.") : Amended ToSubclass,Values{"Other", "Unknown", "Lead Acid", "Nickel Cadmium", "Nickel Metal Hydride", "Lithium-ion", "Zinc air", "Lithium Polymer"} : Amended ToSubclass] uint16 Chemistry;
  [Description("The design capacity of the battery in milliwatt-hours. If this property is not supported, enter 0.") : Amended ToSubclass,Units("milliwatt-hours") : Amended ToSubclass] uint32 DesignCapacity;
  [Description("The full charge capacity of the battery in milliwatt-hours. Comparison of this value to the DesignCapacity property determines when the battery requires replacement.  A battery's end of life is typically when the FullChargeCapacity property falls below 80% of the DesignCapacity property. If this property is not supported, enter 0.") : Amended ToSubclass,Units("milliwatt-hours") : Amended ToSubclass] uint32 FullChargeCapacity;
  [Description("The design voltage of the battery in millivolts. If this attribute is not supported, enter 0.") : Amended ToSubclass,Units("millivolts") : Amended ToSubclass] uint64 DesignVoltage;
  [Description("The Smart Battery Data Specification version number supported by this battery. If the battery does not support this function, the value should be left blank.") : Amended ToSubclass] string SmartBatteryVersion;
  [Description("The remaining time to charge the battery fully in minutes at the current charging rate and usage.") : Amended ToSubclass,Units("minutes") : Amended ToSubclass] uint32 TimeToFullCharge;
  [Description("Indicates the battery's expected lifetime in minutes, assuming that the battery is fully charged. This property represents the total expected life of the battery, not its current remaining life, which is indicated by the EstimatedRunTime property. ") : Amended ToSubclass,Units("minutes") : Amended ToSubclass] uint32 ExpectedLife;
  [Description("MaxRechargeTime indicates the maximum time, in minutes, to fully charge the battery. This property represents the time to recharge a fully depleted battery, not the current remaining charging time, which is indicated in the TimeToFullCharge property. ") : Amended ToSubclass,Units("minutes") : Amended ToSubclass] uint32 MaxRechargeTime;
};

[Description("Capabilities and management of the Printer LogicalDevice.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_Printer : CIM_LogicalDevice
{
  [Description("Status information for a Printer, beyond that specified in the LogicalDevice Availability property. Values include \"Idle\" (3) and an indication that the Device is currently printing (4).") : Amended ToSubclass,Values{"Other", "Unknown", "Idle", "Printing", "Warmup", "Stopped Printing", "Offline"} : Amended ToSubclass] uint16 PrinterStatus;
  [Description("Printer error information.") : Amended ToSubclass,Values{"Unknown", "Other", "No Error", "Low Paper", "No Paper", "Low Toner", "No Toner", "Door Open", "Jammed", "Offline", "Service Requested", "Output Bin Full"} : Amended ToSubclass] uint16 DetectedErrorState;
  [Description("An array providing supplemental information for the current error state, indicated in DetectedErrorState.") : Amended ToSubclass] string ErrorInformation[];
  [Description("An integer array indicating the types of paper supported.") : Amended ToSubclass,Values{"Unknown", "Other", "A", "B", "C", "D", "E", "Letter", "Legal", "NA-10x13-Envelope", "NA-9x12-Envelope", "NA-Number-10-Envelope", "NA-7x9-Envelope", "NA-9x11-Envelope", "NA-10x14-Envelope", "NA-Number-9-Envelope", "NA-6x9-Envelope", "NA-10x15-Envelope", "A0", "A1", "A2", "A3", "A4", "A5", "A6", "A7", "A8", "A9A10", "B0", "B1", "B2", "B3", "B4", "B5", "B6", "B7", "B8", "B9", "B10", "C0", "C1", "C2C3", "C4", "C5", "C6", "C7", "C8", "ISO-Designated", "JIS B0", "JIS B1", "JIS B2", "JIS B3", "JIS B4", "JIS B5", "JIS B6", "JIS B7", "JIS B8", "JIS B9", "JIS B10", "NA-Letter", "NA-Legal", "B4-Envelope", "B5-Envelope", "C3-Envelope", "C4-Envelope", "C5-Envelope", "C6-Envelope", "Designated-Long-Envelope", "Monarch-Envelope", "Executive", "Folio", "Invoice", "Ledger", "Quarto"} : Amended ToSubclass] uint16 PaperSizesSupported[];
  [Description("An array of free-form strings specifying the types of paper that are currently available on the Printer. Each string should be expressed in the form specified by ISO/IEC 10175 Document Printing Application (DPA) which is also summarized in Appendix C of RFC 1759 (Printer MIB). Examples of valid strings are \"iso-a4-colored\" and \"na-10x14-envelope\". By definition a paper size that is available and listed in PaperTypesAvailable should also appear in the PaperSizesSupported property.") : Amended ToSubclass] string PaperTypesAvailable[];
  [Description("Specifies the paper type that the Printer will use if a PrintJob does not specify a particular type. The string should be expressed in the form specified by ISO/IEC 10175 Document Printing Application (DPA) which is also summarized in Appendix C of RFC 1759 (Printer MIB).") : Amended ToSubclass] string DefaultPaperType;
  [Description("Specifies the paper type that the Printer is currently using. The string should be expressed in the form specified by ISO/IEC 10175 Document Printing Application (DPA) which is also summarized in Appendix C of RFC 1759 (Printer MIB).") : Amended ToSubclass] string CurrentPaperType;
  [Description("An array indicating the print languages natively supported.") : Amended ToSubclass,Values{"Other", "Unknown", "PCL", "HPGL", "PJL", "PS", "PSPrinter", "IPDS", "PPDS", "EscapeP", "Epson", "DDIF", "Interpress", "ISO6429", "Line Data", "MODCA", "REGIS", "SCS", "SPDL", "TEK4014", "PDS", "IGP", "CodeV", "DSCDSE", "WPS", "LN03", "CCITT", "QUIC", "CPAP", "DecPPL", "Simple Text", "NPAP", "DOC", "imPress", "Pinwriter", "NPDL", "NEC201PL", "Automatic", "Pages", "LIPS", "TIFF", "Diagnostic", "CaPSL", "EXCL", "LCDS", "XES", "MIME", "XPS", "HPGL2", "PCLXL"} : Amended ToSubclass] uint16 LanguagesSupported[];
  [Description("An array of free-form strings providing more detailed explanations of any mime types that are supported by the Printer. If data is provided for this property, then the value 47, \"Mime\", should be included in the LanguagesSupported property.") : Amended ToSubclass] string MimeTypesSupported[];
  [Description("Indicates the current printer language being used. A language that is being used by the Printer should also be listed in LanguagesSupported.") : Amended ToSubclass,Values{"Other", "Unknown", "PCL", "HPGL", "PJL", "PS", "PSPrinter", "IPDS", "PPDS", "EscapeP", "Epson", "DDIF", "Interpress", "ISO6429", "Line Data", "MODCA", "REGIS", "SCS", "SPDL", "TEK4014", "PDS", "IGP", "CodeV", "DSCDSE", "WPS", "LN03", "CCITT", "QUIC", "CPAP", "DecPPL", "Simple Text", "NPAP", "DOC", "imPress", "Pinwriter", "NPDL", "NEC201PL", "Automatic", "Pages", "LIPS", "TIFF", "Diagnostic", "CaPSL", "EXCL", "LCDS", "XES", "MIME"} : Amended ToSubclass] uint16 CurrentLanguage;
  [Description("Specifies the mime type currently being used by the Printer if the CurrentLanguage is set to indicate a mime type is in use (value = 47).") : Amended ToSubclass] string CurrentMimeType;
  [Description("Indicates the default printer language. A language that is used as a default by the Printer should also be listed in LanguagesSupported.") : Amended ToSubclass,Values{"Other", "Unknown", "PCL", "HPGL", "PJL", "PS", "PSPrinter", "IPDS", "PPDS", "EscapeP", "Epson", "DDIF", "Interpress", "ISO6429", "Line Data", "MODCA", "REGIS", "SCS", "SPDL", "TEK4014", "PDS", "IGP", "CodeV", "DSCDSE", "WPS", "LN03", "CCITT", "QUIC", "CPAP", "DecPPL", "Simple Text", "NPAP", "DOC", "imPress", "Pinwriter", "NPDL", "NEC201PL", "Automatic", "Pages", "LIPS", "TIFF", "Diagnostic", "CaPSL", "EXCL", "LCDS", "XES", "MIME"} : Amended ToSubclass] uint16 DefaultLanguage;
  [Description("Specifies the default mime type used by the Printer if the DefaultLanguage is set to indicate a mime type is in use (value=47).") : Amended ToSubclass] string DefaultMimeType;
  [Description("Printer jobs processed since last reset.  These jobs may be processed from one or more PrintQueues.") : Amended ToSubclass] uint32 JobCountSinceLastReset;
  [Description("Time of last reset of the Printer Device.") : Amended ToSubclass] datetime TimeOfLastReset;
  [Description("An array of integers indicating Printer capabilities. Information such as \"Duplex Printing\" (value=3) or \"Transparency Printing\" (7) is specified in this property.") : Amended ToSubclass,Values{"Unknown", "Other", "Color Printing", "Duplex Printing", "Copies", "Collation", "Stapling", "Transparency Printing", "Punch", "Cover", "Bind", "Black and White Printing", "One Sided", "Two Sided Long Edge", "Two Sided Short Edge", "Portrait", "Landscape", "Reverse Portrait", "Reverse Landscape", "Quality High", "Quality Normal", "Quality Low"} : Amended ToSubclass] uint16 Capabilities[];
  [Description("An array of free-form strings providing more detailed explanations for any of the Printer features indicated in the Capabilities array. Note, each entry of this array is related to the entry in the Capabilities array that is located at the same index.") : Amended ToSubclass] string CapabilityDescriptions[];
  [Description("Specifies which finishings and other capabilities of the Printer will be used by default. An entry in DefaultCapabilities should also be listed in the Capabilities array.") : Amended ToSubclass,Values{"Unknown", "Other", "Color Printing", "Duplex Printing", "Copies", "Collation", "Stapling", "Transparency Printing", "Punch", "Cover", "Bind", "Black and White Printing", "One Sided", "Two Sided Long Edge", "Two Sided Short Edge", "Portrait", "Landscape", "Reverse Portrait", "Reverse Landscape", "Quality High", "Quality Normal", "Quality Low"} : Amended ToSubclass] uint16 DefaultCapabilities[];
  [Description("Specifies which finishings and other capabilities of the Printer are currently being used. An entry in this property should also be listed in the Capabilities array.") : Amended ToSubclass,Values{"Unknown", "Other", "Color Printing", "Duplex Printing", "Copies", "Collation", "Stapling", "Transparency Printing", "Punch", "Cover", "Bind", "Black and White Printing", "One Sided", "Two Sided Long Edge", "Two Sided Short Edge", "Portrait", "Landscape", "Reverse Portrait", "Reverse Landscape", "Quality High", "Quality Normal", "Quality Low"} : Amended ToSubclass] uint16 CurrentCapabilities[];
  [Description("The maximum number of copies that can be produced by the Printer from a single Job.") : Amended ToSubclass] uint32 MaxCopies;
  [Description("The number of copies that will be produced for a single Job unless otherwise specified.") : Amended ToSubclass] uint32 DefaultCopies;
  [Description("The maximum number of print-stream pages that the Printer can render onto a single media sheet.") : Amended ToSubclass] uint32 MaxNumberUp;
  [Description("The number of print-stream pages that the Printer will render onto a single media sheet unless a Job specifies otherwise.") : Amended ToSubclass] uint32 DefaultNumberUp;
  [Description("Printer's horizontal resolution in pixels per inch.") : Amended ToSubclass,Units("pixels per inch") : Amended ToSubclass] uint32 HorizontalResolution;
  [Description("Printer's vertical resolution in pixels per inch.") : Amended ToSubclass,Units("pixels per inch") : Amended ToSubclass] uint32 VerticalResolution;
  [Description("Identifies the available character sets for the output of text related to managing the Printer. Strings provided in this property should conform to the semantics and syntax specified by section 4.1.2 (\"Charset parameter\") in RFC 2046 (MIME Part 2) and contained in the IANA character-set registry. Examples include \"utf-8\", \"us-ascii\" and \"iso-8859-1\".") : Amended ToSubclass] string CharSetsSupported[];
  [Description("Specifies the current character set being used for the output of text relating to management of the Printer. The character set described by this property should also be listed in CharsetsSupported. The string specified by this property should conform to the semantics and syntax specified by section 4.1.2 (\"Charset parameter\") in RFC 2046 (MIME Part 2) and contained in the IANA character-set registry. Examples include \"utf-8\", \"us-ascii\" and \"iso-8859-1\".") : Amended ToSubclass] string CurrentCharSet;
  [Description("Identifies the available languages for strings used by the Printer for the output of management information. The strings should conform to RFC 1766, for example \"en\" is used for English.") : Amended ToSubclass] string NaturalLanguagesSupported[];
  [Description("Identifies the current language being used by the Printer for management. The language listed in the CurrentNaturalLanguage property should also be listed in NaturalLanguagesSupported.") : Amended ToSubclass] string CurrentNaturalLanguage;
  [Description("Specifies the largest Job (as a byte stream) that the Printer will accept in units of Kbytes. A value of zero indicates that no limit has been set.") : Amended ToSubclass,Units("kilobytes") : Amended ToSubclass] uint32 MaxSizeSupported;
  [Description("Describes all of the job sheets that are available on the Printer. This can also be used to describe the banner that a Printer might provide at the beginning of each Job, or can describe other user specified options.") : Amended ToSubclass] string AvailableJobSheets[];
  [Description("Specifies the marking technology used by the Printer.") : Amended ToSubclass,Values{"Other", "Unknown", "Electrophotographic LED", "Electrophotographic Laser", "Electrophotographic Other", "Impact Moving Head Dot Matrix 9pin", "Impact Moving Head Dot Matrix 24pin", "Impact Moving Head Dot Matrix Other", "Impact Moving Head Fully Formed", "Impact Band", "Impact Other", "Inkjet Aqueous", "Inkjet Solid", "Inkjet Other", "Pen", "Thermal Transfer", "Thermal Sensitive", "Thermal Diffusion", "Thermal Other", "Electroerosion", "Electrostatic", "Photographic Microfiche", "Photographic Imagesetter", "Photographic Other", "Ion Deposition", "eBeam", "Typesetter"} : Amended ToSubclass] uint16 MarkingTechnology;
};

[Description("Capabilities and management of the processor logical device.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_Processor : CIM_LogicalDevice
{
  [Description("Processor address width in bits.") : Amended ToSubclass,Units("bits") : Amended ToSubclass] uint16 AddressWidth;
  [Description("The current speed (in MHz) of this processor.") : Amended ToSubclass,Units("megahertz") : Amended ToSubclass] uint32 CurrentClockSpeed;
  [Description("Processor data width in bits.") : Amended ToSubclass,Units("bits") : Amended ToSubclass] uint16 DataWidth;
  [Description("The processor family type. For example, values include \"Pentium(R) processor with MMX(TM) technology\" (14) and \"68040\" (96).") : Amended ToSubclass,Values{"Other", "Unknown", "8086", "80286", "80386", "80486", "8087", "80287", "80387", "80487", "Pentium(R) brand", "Pentium(R) Pro", "Pentium(R) II", "Pentium(R) processor with MMX(TM) technology", "Celeron(TM)", "Pentium(R) II Xeon(TM)", "Pentium(R) III", "M1 Family", "M2 Family", "K5 Family", "K6 Family", "K6-2", "K6-3", "AMD Athlon(TM) Processor Family", "AMD(R) Duron(TM) Processor", "AMD29000 Family", "K6-2+", "Power PC Family", "Power PC 601", "Power PC 603", "Power PC 603+", "Power PC 604", "Power PC 620", "Power PC X704", "Power PC 750", "Alpha Family", "Alpha 21064", "Alpha 21066", "Alpha 21164", "Alpha 21164PC", "Alpha 21164a", "Alpha 21264", "Alpha 21364", "MIPS Family", "MIPS R4000", "MIPS R4200", "MIPS R4400", "MIPS R4600", "MIPS R10000", "SPARC Family", "SuperSPARC", "microSPARC II", "microSPARC IIep", "UltraSPARC", "UltraSPARC II", "UltraSPARC IIi", "UltraSPARC III", "UltraSPARC IIIi", "68040", "68xxx Family", "68000", "68010", "68020", "68030", "Hobbit Family", "Crusoe(TM) TM5000 Family", "Crusoe(TM) TM3000 Family", "Efficeon(TM) TM8000 Family", "Weitek", "Itanium(TM) Processor", "AMD Athlon(TM) 64 Processor Family", "AMD Opteron(TM) Family", "PA-RISC Family", "PA-RISC 8500", "PA-RISC 8000", "PA-RISC 7300LC", "PA-RISC 7200", "PA-RISC 7100LC", "PA-RISC 7100", "V30 Family", "Pentium(R) III Xeon(TM)", "Pentium(R) III Processor with Intel(R) SpeedStep(TM) Technology", "Pentium(R) 4", "Intel(R) Xeon(TM)", "AS400 Family", "Intel(R) Xeon(TM) processor MP", "AMD AthlonXP(TM) Family", "AMD AthlonMP(TM) Family", "Intel(R) Itanium(R) 2", "Intel Pentium M Processor", "K7", "IBM390 Family", "G4", "G5", "G6", "z/Architecture base", "i860", "i960", "SH-3", "SH-4", "ARM", "StrongARM", "6x86", "MediaGX", "MII", "WinChip", "DSP", "Video Processor"} : Amended ToSubclass] uint16 Family;
  [Description("A string describing the processor family type - used when the family property is set to 1 (\"Other\"). This string should be set to NULL when the family property is any value other than 1.") : Amended ToSubclass] string OtherFamilyDescription;
  [Description("Loading of this processor, averaged over the last minute, in percent.") : Amended ToSubclass,Units("percent") : Amended ToSubclass] uint16 LoadPercentage;
  [Description("The maximum speed (in MHz) of this processor.") : Amended ToSubclass,Units("megahertz") : Amended ToSubclass] uint32 MaxClockSpeed;
  [Description("A free form string describing the role of the processor - for example, \"Central Processor\"' or \"Math Processor\"") : Amended ToSubclass] string Role;
  [Description("CPU socket information including data on how this Processor can be upgraded (if upgrades are supported). This property is an integer enumeration.") : Amended ToSubclass,Values{"Other", "Unknown", "Daughter Board", "ZIF Socket", "Replacement/Piggy Back", "None", "LIF Socket", "Slot 1", "Slot 2", "370 Pin Socket", "Slot A", "Slot M", "Socket 423", "Socket A (Socket 462)", "Socket 478", "Socket 754", "Socket 940", "Socket 939"} : Amended ToSubclass] uint16 UpgradeMethod;
  [Description("Stepping is a free-form string indicating the revision level of the processor within the processor family.") : Amended ToSubclass] string Stepping;
  [Description("A globally unique identifier for the processor.  This identifier may only be unique within a processor family.") : Amended ToSubclass] string UniqueId;
};

[Description("Capabilities and management of an uninterruptible power supply. The properties of the UPS device indicate when incoming power is trimmed or boosted, and the aggregated information of the batteries, generators, etc. that comprise the device.  These individual components (for example, multiple batteries) can also be independently modeled and associated with the UPS.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_UninterruptiblePowerSupply : CIM_PowerSupply
{
  [Description("If the voltage (in millivolts) drops below the value specified by Range1InputVoltageLow property, the UPS will compensate by boosting the voltage using its power source(s).  A value of 0 indicates that the voltage at which boosting occurs is 'unknown'.") : Amended ToSubclass,Units("millivolts") : Amended ToSubclass] uint32 Range1InputVoltageLow;
  [Description("If the voltage (in millivolts) rises above the value specified by Range1InputVoltageHigh property, the UPS will compensate by trimming the voltage.  A value of 0 indicates that the voltage at which trimming occurs is 'unknown'.") : Amended ToSubclass,Units("millivolts") : Amended ToSubclass] uint32 Range1InputVoltageHigh;
  [Description("If the voltage (in millivolts) drops below the value specified by Range2InputVoltageLow property, the UPS will compensate by boosting the voltage using its power source(s).  A value of 0 indicates that the voltage at which boosting occurs is 'unknown'.") : Amended ToSubclass,Units("millivolts") : Amended ToSubclass] uint32 Range2InputVoltageLow;
  [Description("If the voltage (in millivolts) rises above the value specified by Range2InputVoltageHigh property, the UPS will compensate by trimming the voltage.  A value of 0 indicates that the voltage at which trimming occurs is 'unknown'.") : Amended ToSubclass,Units("millivolts") : Amended ToSubclass] uint32 Range2InputVoltageHigh;
  [Description("The indication of the capacity remaining in the UPS' batteries, generator, ...  A value of \"Normal\" (2) indicates that the remaining estimated minutes of run-time is greater than the UPS' defined 'low power' state (typically two minutes). A value of \"Low\" (3) indicates that the remaining estimated minutes of run-time is less than or equal to the UPS' defined 'low power' state.  A value of \"Depleted\" (4) indicates that the UPS will be unable to sustain the present load when and if the utility power is lost (including the possibility that the utility power is currently absent).") : Amended ToSubclass,Values{"Unknown", "Normal", "Low", "Depleted"} : Amended ToSubclass] uint16 RemainingCapacityStatus;
  [Description("TimeOnBackup indicates the elapsed time in seconds since the UPS last switched to battery power, generator, ...  Or, the time since the UPS was last restarted, whichever is less. Zero shall be returned if the UPS is 'on line'.") : Amended ToSubclass,Units("seconds") : Amended ToSubclass] uint32 TimeOnBackup;
  [Description("EstimatedRunTime is an estimate in minutes of the time to battery, generator, ... depletion under the present load conditions if the utility power is off, or lost and remains off.") : Amended ToSubclass,Units("minutes") : Amended ToSubclass] uint32 EstimatedRunTime;
  [Description("An estimate of the percentage of full charge remaining for a UPS (that uses battery technology).") : Amended ToSubclass,Units("percent") : Amended ToSubclass] uint16 EstimatedChargeRemaining;
};

[Description("Capabilities and management of the parallel port logical device") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_ParallelController : CIM_Controller
{
  [Description("An integer enumeration indicating the capabilities of the parallel controller") : Amended ToSubclass,Values{"Unknown", "Other", "XT/AT Compatible", "PS/2 Compatible", "ECP", "EPP", "PC-98", "PC-98-Hireso", "PC-H98"} : Amended ToSubclass] uint16 Capabilities[];
  [Description("An array of free-form strings providing more detailed explanations for any of the parallel controller features indicated in the Capabilities array. Note, each entry of this array is related to the entry in the Capabilities array that is located at the same index.") : Amended ToSubclass] string CapabilityDescriptions[];
  [Description("Set to true if the ParallelController supports DMA.") : Amended ToSubclass] boolean DMASupport;
};

[Description("Capabilities and management of the SCSI controller, logical device.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_SCSIController : CIM_Controller
{
  [Description("Number of SCSIController timeouts that have occurred since the TimeOfLastReset.") : Amended ToSubclass] uint32 ControllerTimeouts;
  [Units("bits") : Amended ToSubclass,Description("Maximum data width (in bits) supported by the SCSIController.") : Amended ToSubclass] uint32 MaxDataWidth;
  [Units("bits per second") : Amended ToSubclass,Description("Maximum transfer rate (in bits per second) supported by the SCSIController.") : Amended ToSubclass] uint64 MaxTransferRate;
  [Description("An integer enumeration indicating whether or not the SCSI controller provides redundancy or protection against device failures.") : Amended ToSubclass,Values{"Other", "Unknown", "Unprotected", "Protected", "Protected through SCC (SCSI-3 Controller Command)", "Protected through SCC-2 (SCSI-3 Controller Command)"} : Amended ToSubclass] uint16 ProtectionManagement;
};

[Description("Capabilities and management of the serial port, logical device.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_SerialController : CIM_Controller
{
  [Description("The Capabilities property defines chip level compatibility for the serial controller.  Therefore, this property describes the buffering and other capabilities of the serial controller, that may be inherent in the chip hardware. The property is an enumerated integer.") : Amended ToSubclass,Values{"Other", "Unknown", "XT/AT Compatible", "16450 Compatible", "16550 Compatible", "16550A Compatible", "8251 Compatible", "8251FIFO Compatible"} : Amended ToSubclass] uint16 Capabilities[];
  [Description("An array of free-form strings providing more detailed explanations for any of the serial controller features indicated in the Capabilities array. Note, each entry of this array is related to the entry in the Capabilities array that is located at the same index.") : Amended ToSubclass] string CapabilityDescriptions[];
  [Description("Maximum baud rate in bits per second supported by the SerialController.") : Amended ToSubclass,Units("bits per second") : Amended ToSubclass] uint32 MaxBaudRate;
};

[DisplayName("Files (CIM)") : Amended,Description("The CIM_LogicalFile class represents a named collection of data (this can be executable code) located in a file system on a storage extent.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_LogicalFile : CIM_LogicalElement
{
  [DisplayName("Current File Open Count") : Amended,Description("The InUseCount property is an integer indicating the number of 'file opens' that are currently active against the file.") : Amended ToSubclass] uint64 InUseCount;
  [DisplayName("Should Be Archived") : Amended,Description("The Archive property is a boolean value indicating that the file should be archived.") : Amended ToSubclass] boolean Archive;
  [DisplayName("Computer System Class Name") : Amended,Description("The CSCreationClassName property is a string indicating the class of the computer system.") : Amended ToSubclass] string CSCreationClassName;
  [DisplayName("Computer System Name") : Amended,Description("The CSName property is a string indicating the name of the computer system.") : Amended ToSubclass] string CSName;
  [DisplayName("Compressed") : Amended,Description("The Compressed property is a boolean value indicating that the file is compressed.") : Amended ToSubclass] boolean Compressed;
  [DisplayName("Class Name") : Amended,Description("The CreationClassName property is a string indicating the name of this class.") : Amended ToSubclass] string CreationClassName;
  [DisplayName("Creation Date") : Amended,Description("The CreationDate property is a datetime value indicating the file's creation date.") : Amended ToSubclass] datetime CreationDate;
  [DisplayName("Encrypted") : Amended,Description("The Encrypted property is a boolean value indicating that the file is encrypted.") : Amended ToSubclass] boolean Encrypted;
  [DisplayName("File System Class Name") : Amended,Description("The FSCreationClassName property is a string indicating the class of the file system.") : Amended ToSubclass] string FSCreationClassName;
  [DisplayName("File System Name") : Amended,Description("The FSName property is string indicating the name of the file system.") : Amended ToSubclass] string FSName;
  [DisplayName("Last Accessed") : Amended,Description("The LastAccessed property is a datetime value indicating the time the file was last accessed.") : Amended ToSubclass] datetime LastAccessed;
  [DisplayName("Last Modified") : Amended,Description("The LastModified property is a datetime value indicating the time the file was last modified.") : Amended ToSubclass] datetime LastModified;
  [DisplayName("Readable") : Amended,Description("The Readable property is a boolean value indicating if the file can be read.") : Amended ToSubclass] boolean Readable;
  [DisplayName("Size") : Amended,Description("The FileSize property represents the size of the file (in bytes).") : Amended ToSubclass,Units("bytes") : Amended ToSubclass] uint64 FileSize;
  [DisplayName("Writeable") : Amended,Description("The Writeable property is a boolean value indicating if the file can be written.") : Amended ToSubclass] boolean Writeable;
  [DisplayName("Hidden") : Amended,Description("The Hidden property is a boolean value indicating if the file is hidden.") : Amended ToSubclass] boolean Hidden;
  [DisplayName("System File") : Amended,Description("The system property is a boolean value indicating if the file is a system file.") : Amended ToSubclass] boolean System;
  [DisplayName("File Type") : Amended,Description("The FileType property is a string descriptor representing the file type (indicated by the Extension property).") : Amended ToSubclass] string FileType;
  [DisplayName("Eight Dot Three File Name") : Amended,Description("The EightDotThreeFileName property is a string representing the DOS-compatible file name for this file.\nExample: c:\\progra~1") : Amended ToSubclass] string EightDotThreeFileName;
  [DisplayName("Compression Method") : Amended,Description("The CompressionMethod property is a free form string indicating the algorithm or tool used to compress the logical file. If it is not possible (or not desired) to describe the compression scheme (perhaps because it is not known), use the following words: \"Unknown\" to represent that it is not known whether the logical file is compressed or not, \"Compressed\" to represent that the file is compressed but either its compression scheme is not known or not disclosed, and \"Not Compressed\" to represent that the logical file is not compressed.") : Amended ToSubclass] string CompressionMethod;
  [DisplayName("Encryption Method") : Amended,Description("The EncryptionMethod property is a free form string indicating the algorithm or tool used to encrypt the logical file. If it is not possible (or not desired) to describe the encryption scheme (perhaps for security reasons), use the following words: \"Unknown\" to represent that it is not known whether the logical file is encrypted or not, \"Encrypted\" to represent that the file is encrypted but either its encryption scheme is not known or not disclosed, and \"Not Encrypted\" to represent that the logical file is not encrypted.") : Amended ToSubclass] string EncryptionMethod;
  [Description("The Name property is a string representing the inherited name that serves as a key of a logical file instance within a file system. Full path names should be provided. Example: c:\\winnt\\system\\win.ini") : Amended ToSubclass,Key : ToInstance ToSubclass DisableOverride] string Name;
  [DisplayName("Drive") : Amended,Description("The Drive property is a string representing the drive letter (including colon) of the file. Example: c:") : Amended ToSubclass] string Drive;
  [DisplayName("Path") : Amended,Description("The Path property is a string representing the path of the file. This includes leading and trailing backslashes. Example: \\windows\\system\\") : Amended ToSubclass] string Path;
  [DisplayName("File Name") : Amended,Description("The FileName property is a string representing the filename (without extension) of the file. Example: autoexec") : Amended ToSubclass] string FileName;
  [DisplayName("File Extension") : Amended,Description("The Extension property is a string representing the file's extension (without the dot). Example: txt, mof, mdb.") : Amended ToSubclass] string Extension;
  [DisplayName("Access Rights") : Amended,Description("The AccessMask property is a bit array representing the access rights to the given file or directory held by the user or group on whose behalf the instance is returned. This property is only supported under Windows NT and Windows 2000. On Windows 98 and on Windows NT/2000 FAT volumes, FULL_ACCESS is returned, indicating no security has been set on the object.") : Amended ToSubclass,BitValues{"FILE_READ_DATA (file) or FILE_LIST_DIRECTORY (directory)", "FILE_WRITE_DATA (file) or FILE_ADD_FILE (directory)", "FILE_APPEND_DATA (file) or FILE_ADD_SUBDIRECTORY (directory)", "FILE_READ_EA", "FILE_WRITE_EA", "FILE_EXECUTE (file) or FILE_TRAVERSE (directory)", "FILE_DELETE_CHILD (directory)", "FILE_READ_ATTRIBUTES", "FILE_WRITE_ATTRIBUTES", "DELETE", "READ_CONTROL", "WRITE_DAC", "WRITE_OWNER", "SYNCHRONIZE"} : Amended ToSubclass] uint32 AccessMask;
  [Description("The TakeOwnerShip method obtains ownership of the logical file specified in the object path . If the logical file is actually a directory, then TakeOwnerShip will act recursively, taking ownership of all the files and sub-directories the directory contains. \nIt returns one of the following integer values:\n0 - The request was successful.\n2 - Access was denied.\n8 - An unspecified failure occurred.\n9 - The name specified was invalid.\n10 - The object specified already exists.\n11 - The file system is not NTFS.\n12 - The platform is not Windows NT or Windows 2000.\n13 - The drive is not the same.\n14 - The directory is not empty.\n15 - There has been a sharing violation.\n16 - The start file specified was invalid.\n17 - A privilege required for the operation is not held.\n21 - A parameter specified is invalid.\n") : Amended ToSubclass,Values{"Success", "Access Denied", "Unspecified failure", "Invalid object", "Object already exists", "File system not NTFS", "Platform not NT/Windows 2000", "Drive not the same", "Directory not empty", "Sharing violation", "Invalid start file", "Privilege not held", "Invalid parameter"} : Amended ToSubclass] uint32 TakeOwnerShip();
  [Description("The ChangeSecurityPermissions method changes the security permissions for the logical file specified in the object path. If the logical file is actually a directory, then ChangeSecurityPermissions will act recursively, changing the security permissions of all the files and sub-directories the directory contains. ChangeSecurityPermissions returns an integer value of 0 if the permissions were changed, and any other number to indicate an error.\nIt returns one of the following integer values:\n0 - The request was successful.\n2 - Access was denied.\n8 - An unspecified failure occurred.\n9 - The name specified was invalid.\n10 - The object specified already exists.\n11 - The file system is not NTFS.\n12 - The platform is not Windows NT or Windows 2000.\n13 - The drive is not the same.\n14 - The directory is not empty.\n15 - There has been a sharing violation.\n16 - The start file specified was invalid.\n17 - A privilege required for the operation is not held.\n21 - A parameter specified is invalid.\n") : Amended ToSubclass,Values{"Success", "Access Denied", "Unspecified failure", "Invalid object", "Object already exists", "File system not NTFS", "Platform not NT/Windows 2000", "Drive not the same", "Directory not empty", "Sharing violation", "Invalid start file", "Privilege not held", "Invalid parameter"} : Amended ToSubclass] uint32 ChangeSecurityPermissions([In,Description("The SecurityDescriptor input parameter specifies the security information") : Amended ToSubclass] Win32_SecurityDescriptor SecurityDescriptor,[In,Description("The Option input parameter specifies the actual security privilege to be modified. Change_Owner_Security_Information - Change the owner of the logical file. Change_Group_Security_Information - Change the group of the logical file. Change_Dacl_Security_Information - Change the Access Control List of the logical file. Change_Sacl_Security_Information - Change the System Access Control List of the logical file.") : Amended ToSubclass,BitValues{"Change_Owner_Security_Information", "Change_Group_Security_Information", "Change_Dacl_Security_Information", "Change_Sacl_Security_Information"} : Amended ToSubclass] uint32 Option);
  [Description("The Copy method copies the logical file or directory specified in the object path to the location specified by the input parameter. Copy returns an integer value of 0 if the file was successfully copied, and any other number to indicate an error. A copy is not supported if overwriting an existing logical file is required.\nIt returns one of the following integer values:\n0 - The request was successful.\n2 - Access was denied.\n8 - An unspecified failure occurred.\n9 - The name specified was invalid.\n10 - The object specified already exists.\n11 - The file system is not NTFS.\n12 - The platform is not Windows NT or Windows 2000.\n13 - The drive is not the same.\n14 - The directory is not empty.\n15 - There has been a sharing violation.\n16 - The start file specified was invalid.\n17 - A privilege required for the operation is not held.\n21 - A parameter specified is invalid.\n") : Amended ToSubclass,Values{"Success", "Access Denied", "Unspecified failure", "Invalid object", "Object already exists", "File system not NTFS", "Platform not NT/Windows 2000", "Drive not the same", "Directory not empty", "Sharing violation", "Invalid start file", "Privilege not held", "Invalid parameter"} : Amended ToSubclass] uint32 Copy([In,Description("The FileName input parameter is a string representing the fully qualified name of the copy of the file (or directory). Example: c:\\temp\\newdirectory") : Amended ToSubclass] string FileName);
  [Description("The Rename method renames the logical file (or directory) specified in the object path. Rename returns an integer value of 0 if the file was successfully renamed, and any other number to indicate an error. A rename is not supported if the destination is on another drive or overwriting an existing logical file is required\nIt returns one of the following integer values:\n0 - The request was successful.\n2 - Access was denied.\n8 - An unspecified failure occurred.\n9 - The name specified was invalid.\n10 - The object specified already exists.\n11 - The file system is not NTFS.\n12 - The platform is not Windows NT or Windows 2000.\n13 - The drive is not the same.\n14 - The directory is not empty.\n15 - There has been a sharing violation.\n16 - The start file specified was invalid.\n17 - A privilege required for the operation is not held.\n21 - A parameter specified is invalid.\n") : Amended ToSubclass,Values{"Success", "Access Denied", "Unspecified failure", "Invalid object", "Object already exists", "File system not NTFS", "Platform not NT/Windows 2000", "Drive not the same", "Directory not empty", "Sharing violation", "Invalid start file", "Privilege not held", "Invalid parameter"} : Amended ToSubclass] uint32 Rename([In,Description("The FileName input parameter is a string representing the new name for the logical file (or directory). The FileName input parameter must be a fully qualified path name. Example: c:\\temp\\newfile.txt.") : Amended ToSubclass] string FileName);
  [Description("The Delete method will delete the logical file (or directory) specified in the object path. Delete returns an integer value of 0 if the file was successfully deleted, and any other number to indicate an error.\nIt returns one of the following integer values:\n0 - The request was successful.\n2 - Access was denied.\n8 - An unspecified failure occurred.\n9 - The name specified was invalid.\n10 - The object specified already exists.\n11 - The file system is not NTFS.\n12 - The platform is not Windows NT or Windows 2000.\n13 - The drive is not the same.\n14 - The directory is not empty.\n15 - There has been a sharing violation.\n16 - The start file specified was invalid.\n17 - A privilege required for the operation is not held.\n21 - A parameter specified is invalid.\n") : Amended ToSubclass,Values{"Success", "Access Denied", "Unspecified failure", "Invalid object", "Object already exists", "File system not NTFS", "Platform not NT/Windows 2000", "Drive not the same", "Directory not empty", "Sharing violation", "Invalid start file", "Privilege not held", "Invalid parameter"} : Amended ToSubclass] uint32 Delete();
  [Description("The Compress method compresses the logical file (or directory) specified in the object path. Compress returns an integer value of 0 if the file was successfully compressed, and any other number to indicate an error.\nIt returns one of the following integer values:\n0 - The request was successful.\n2 - Access was denied.\n8 - An unspecified failure occurred.\n9 - The name specified was invalid.\n10 - The object specified already exists.\n11 - The file system is not NTFS.\n12 - The platform is not Windows NT or Windows 2000.\n13 - The drive is not the same.\n14 - The directory is not empty.\n15 - There has been a sharing violation.\n16 - The start file specified was invalid.\n17 - A privilege required for the operation is not held.\n21 - A parameter specified is invalid.\n") : Amended ToSubclass,Values{"Success", "Access Denied", "Unspecified failure", "Invalid object", "Object already exists", "File system not NTFS", "Platform not NT/Windows 2000", "Drive not the same", "Directory not empty", "Sharing violation", "Invalid start file", "Privilege not held", "Invalid parameter"} : Amended ToSubclass] uint32 Compress();
  [Description("The Uncompress method uncompresses the logical file (or directory) specified in the object path. Uncompress returns an integer value of 0 if the file was successfully decompressed, and any other number to indicate an error.\nIt returns one of the following integer values:\n0 - The request was successful.\n2 - Access was denied.\n8 - An unspecified failure occurred.\n9 - The name specified was invalid.\n10 - The object specified already exists.\n11 - The file system is not NTFS.\n12 - The platform is not Windows NT or Windows 2000.\n13 - The drive is not the same.\n14 - The directory is not empty.\n15 - There has been a sharing violation.\n16 - The start file specified was invalid.\n17 - A privilege required for the operation is not held.\n21 - A parameter specified is invalid.\n") : Amended ToSubclass,Values{"Success", "Access Denied", "Unspecified failure", "Invalid object", "Object already exists", "File system not NTFS", "Platform not NT/Windows 2000", "Drive not the same", "Directory not empty", "Sharing violation", "Invalid start file", "Privilege not held", "Invalid parameter"} : Amended ToSubclass] uint32 Uncompress();
  [Description("The TakeOwnerShipEx method obtains ownership of the logical file specified in the object path. If the logical file is actually a directory, then this method will act recursively, taking ownership of all the files and sub-directories the directory contains. TakeOwnerShipEx returns an integer value of 0 on success, and any other number to indicate an error. TakeOwnerShipEx is an extended version of the TakeOwnerShip method.\nIt returns one of the following integer values:\n0 - The request was successful.\n2 - Access was denied.\n8 - An unspecified failure occurred.\n9 - The name specified was invalid.\n10 - The object specified already exists.\n11 - The file system is not NTFS.\n12 - The platform is not Windows NT or Windows 2000.\n13 - The drive is not the same.\n14 - The directory is not empty.\n15 - There has been a sharing violation.\n16 - The start file specified was invalid.\n17 - A privilege required for the operation is not held.\n21 - A parameter specified is invalid.\n") : Amended ToSubclass,Values{"Success", "Access Denied", "Unspecified failure", "Invalid object", "Object already exists", "File system not NTFS", "Platform not NT/Windows 2000", "Drive not the same", "Directory not empty", "Sharing violation", "Invalid start file", "Privilege not held", "Invalid parameter"} : Amended ToSubclass] uint32 TakeOwnerShipEx([Out,Description("The StopFileName output parameter is a string representing the name of the file/directory where TakeOwnerShipEx method failed. StopFileName parameter will be null if the method succeeds.") : Amended ToSubclass] string StopFileName,[In,Description("The StartFileName input parameter is a string that names the child file/directory to use as a starting point for TakeOwnerShipEx.The StartFileName property typically, is the StopFileName parameter specifying the file or directory at which anerror occurred from the previous method call. If this parameter is NULL, the operation is performed on the file ordirectory specified in the ExecMethod call.") : Amended ToSubclass] string StartFileName,[In,Description("The Recursive input parameter is a boolean that indicates whether the change of ownership will be applied recursively to files and directories within the directory specified by the CIM_LogicalFile instance.Note for file instances the Recursive input parameter is ignored.") : Amended ToSubclass] boolean Recursive);
  [Description("The ChangeSecurityPermissionsEx method changes the security permissions for the logical file specified in the object path. If the logical file is actually a directory, then this method will act recursively, changing the security permissions of all the files and sub-directories the directory contains. ChangeSecurityPermissionsEx returns an integer value of 0 if the permissions were changed, and any other number to indicate an error. The ChangeSecurityPermissionsEx method is an extended version of the ChangeSecurityPermissions method.\nIt returns one of the following integer values:\n0 - The request was successful.\n2 - Access was denied.\n8 - An unspecified failure occurred.\n9 - The name specified was invalid.\n10 - The object specified already exists.\n11 - The file system is not NTFS.\n12 - The platform is not Windows NT or Windows 2000.\n13 - The drive is not the same.\n14 - The directory is not empty.\n15 - There has been a sharing violation.\n16 - The start file specified was invalid.\n17 - A privilege required for the operation is not held.\n21 - A parameter specified is invalid.\n") : Amended ToSubclass,Values{"Success", "Access Denied", "Unspecified failure", "Invalid object", "Object already exists", "File system not NTFS", "Platform not NT/Windows 2000", "Drive not the same", "Directory not empty", "Sharing violation", "Invalid start file", "Privilege not held", "Invalid parameter"} : Amended ToSubclass] uint32 ChangeSecurityPermissionsEx([in,Description("The SecurityDescriptor input parameter specifies the security information.") : Amended ToSubclass] Win32_SecurityDescriptor SecurityDescriptor,[In,Description("The Option input parameter specifies the actual security permission to be modified. Change_Owner_Security_Information - Change the owner of the logical file. Change_Group_Security_Information - Change the group of the logical file. Change_Dacl_Security_Information - Change the Access Control List of the logical file. Change_Sacl_Security_Information - Change the System Access Control List of the logical file.") : Amended ToSubclass,BitValues{"Change_Owner_Security_Information", "Change_Group_Security_Information", "Change_Dacl_Security_Information", "Change_Sacl_Security_Information"} : Amended ToSubclass] uint32 Option,[Out,Description("The StopFileName output parameter is a string representing the name of the file/directory where ChangeSecurityPermissionsEx failed. StopFileName will be null if the method succeeds.") : Amended ToSubclass] string StopFileName,[In,Description("The StartFileName input parameter is a string representing the child file/directory to use as a starting point for ChangeSecurityPermissionsEx.The StartFileName property typically, is the StopFileName parameter specifying the file or directory at which anerror occurred from the previous method call. If this parameter is NULL, the operation is performed on the file ordirectory specified in the ExecMethod call.") : Amended ToSubclass] string StartFileName,[In,Description("The Recursive input parameter is a boolean that indicates whether the security permissions will be applied recursively to files and directories within the directory specified by the CIM_LogicalFile instance.Note for file instances the Recursive input parameter is ignored.") : Amended ToSubclass] boolean Recursive);
  [Description("The CopyEx method copies the logical file or directory specified in the object path to the location specified by the FileName parameter. CopyEx returns an integer value of 0 if the file was successfully copied, and any other number to indicate an error. A copy is not supported if overwriting an existing logical file is required. CopyEx is an extended version of the Copy method.\nIt returns one of the following integer values:\n0 - The request was successful.\n2 - Access was denied.\n8 - An unspecified failure occurred.\n9 - The name specified was invalid.\n10 - The object specified already exists.\n11 - The file system is not NTFS.\n12 - The platform is not Windows NT or Windows 2000.\n13 - The drive is not the same.\n14 - The directory is not empty.\n15 - There has been a sharing violation.\n16 - The start file specified was invalid.\n17 - A privilege required for the operation is not held.\n21 - A parameter specified is invalid.\n") : Amended ToSubclass,Values{"Success", "Access Denied", "Unspecified failure", "Invalid object", "Object already exists", "File system not NTFS", "Platform not NT/Windows 2000", "Drive not the same", "Directory not empty", "Sharing violation", "Invalid start file", "Privilege not held", "Invalid parameter"} : Amended ToSubclass] uint32 CopyEx([In,Description("The FileName input parameter is a string representing the fully qualified name of the copy of the file (or directory). Example: c:\\temp\\newdirectory.") : Amended ToSubclass] string FileName,[Out,Description("The StopFileName output parameter is a string representing the name of the file/directory where CopyEx failed. This string parameter will be null if the method succeeds.") : Amended ToSubclass] string StopFileName,[In,Description("The StartFileName input parameter is a string that names the child file/directory to use as a starting point for CopyEx.The StartFileName property typically, is the StopFileName parameter specifying the file or directory at which anerror occurred from the previous method call. If this parameter is NULL, the operation is performed on the file ordirectory specified in the ExecMethod call.") : Amended ToSubclass] string StartFileName,[In,Description("The Recursive input parameter is a boolean that indicates whether the copy will be applied recursively to files and directories within the directory specified by the CIM_LogicalFile instance.Note for file instances the Recursive input parameter is ignored.") : Amended ToSubclass] boolean Recursive);
  [Description("The DeleteEx method will delete the logical file (or directory) specified in the object path. DeleteEx returns an integer value of 0 if the file was successfully deleted, and any other number to indicate an error. DeleteEx is an extended version of the Delete method.\nIt returns one of the following integer values:\n0 - The request was successful.\n2 - Access was denied.\n8 - An unspecified failure occurred.\n9 - The name specified was invalid.\n10 - The object specified already exists.\n11 - The file system is not NTFS.\n12 - The platform is not Windows NT or Windows 2000.\n13 - The drive is not the same.\n14 - The directory is not empty.\n15 - There has been a sharing violation.\n16 - The start file specified was invalid.\n17 - A privilege required for the operation is not held.\n21 - A parameter specified is invalid.\n") : Amended ToSubclass,Values{"Success", "Access Denied", "Unspecified failure", "Invalid object", "Object already exists", "File system not NTFS", "Platform not NT/Windows 2000", "Drive not the same", "Directory not empty", "Sharing violation", "Invalid start file", "Privilege not held", "Invalid parameter"} : Amended ToSubclass] uint32 DeleteEx([Out,Description("The StopFileName output parameter is a string representing the name of the file/directory where DeleteEx failed. This string parameter will be null if DeleteEx succeeds.") : Amended ToSubclass] string StopFileName,[In,Description("The StartFileName input parameter is a string that names the child file/directory to use as a starting point for DeleteEx.The StartFileName property typically, is the StopFileName parameter specifying the file or directory at which anerror occurred from the previous method call. If this parameter is NULL, the operation is performed on the file ordirectory specified in the ExecMethod call.") : Amended ToSubclass] string StartFileName);
  [Description("The CompressEx method compresses the logical file (or directory) specified in the object path. CompressEx returns an integer value of 0 if the file was successfully compressed, and any other number to indicate an error. CompressEx is an extended version of the Compress method.\nIt returns one of the following integer values:\n0 - The request was successful.\n2 - Access was denied.\n8 - An unspecified failure occurred.\n9 - The name specified was invalid.\n10 - The object specified already exists.\n11 - The file system is not NTFS.\n12 - The platform is not Windows NT or Windows 2000.\n13 - The drive is not the same.\n14 - The directory is not empty.\n15 - There has been a sharing violation.\n16 - The start file specified was invalid.\n17 - A privilege required for the operation is not held.\n21 - A parameter specified is invalid.\n") : Amended ToSubclass,Values{"Success", "Access Denied", "Unspecified failure", "Invalid object", "Object already exists", "File system not NTFS", "Platform not NT/Windows 2000", "Drive not the same", "Directory not empty", "Sharing violation", "Invalid start file", "Privilege not held", "Invalid parameter"} : Amended ToSubclass] uint32 CompressEx([Out,Description("The StopFileName output parameter is a string representing the name of the file/directory where CompressEx failed. StopFileName will be null if the method succeeds.") : Amended ToSubclass] string StopFileName,[In,Description("The StartFileName input parameter is a string that names the child file/directory to use as a starting point for CompressEx.The StartFileName property typically, is the StopFileName parameter specifying the file or directory at which anerror occurred from the previous method call. If this parameter is NULL, the operation is performed on the file ordirectory specified in the ExecMethod call.") : Amended ToSubclass] string StartFileName,[In,Description("The Recursive input parameter is a boolean that indicates whether the compression will be applied recursively to files and directories within the directory specified by the CIM_LogicalFile instance.Note for file instances the Recursive input parameter is ignored.") : Amended ToSubclass] boolean Recursive);
  [Description("The UncompressEx method uncompresses the logical file (or directory) specified in the object path. UncompressEx returns an integer value of 0 if the file was successfully decompressed, and any other number to indicate an error. UncompressEx is an extended version of the Uncompress method.\nIt returns one of the following integer values:\n0 - The request was successful.\n2 - Access was denied.\n8 - An unspecified failure occurred.\n9 - The name specified was invalid.\n10 - The object specified already exists.\n11 - The file system is not NTFS.\n12 - The platform is not Windows NT or Windows 2000.\n13 - The drive is not the same.\n14 - The directory is not empty.\n15 - There has been a sharing violation.\n16 - The start file specified was invalid.\n17 - A privilege required for the operation is not held.\n21 - A parameter specified is invalid.\n") : Amended ToSubclass,Values{"Success", "Access Denied", "Unspecified failure", "Invalid object", "Object already exists", "File system not NTFS", "Platform not NT/Windows 2000", "Drive not the same", "Directory not empty", "Sharing violation", "Invalid start file", "Privilege not held", "Invalid parameter"} : Amended ToSubclass] uint32 UncompressEx([Out,Description("The StopFileName output parameter is a string representing the name of the file/directory where UncompressEx failed. StopFileName will be null if the method succeeds.") : Amended ToSubclass] string StopFileName,[In,Description("The StartFileName input parameter is a string that names the child file/directory to use as a starting point for UncompressEx.The StartFileName property typically, is the StopFileName parameter specifying the file or directory at which anerror occurred from the previous method call. If this parameter is NULL, the operation is performed on the file ordirectory specified in the ExecMethod call.") : Amended ToSubclass] string StartFileName,[In,Description("The Recursive input parameter is a boolean that indicates whether the decompression will be applied recursively to files and directories within the directory specified by the CIM_LogicalFile instance.Note for file instances the Recursive input parameter is ignored.") : Amended ToSubclass] boolean Recursive);
  [Description("The GetEffectivePermission method determines whether the caller has the aggregated permissions specified by the Permission argument not only on the file object, but on the share the file or directory resides on (if it is on a share).") : Amended ToSubclass] boolean GetEffectivePermission([In,Description("The Permissions input parameter is a bit array of the permissions that the caller wishes to inquire about.") : Amended ToSubclass,BitValues{"FILE_READ_DATA (file) or FILE_LIST_DIRECTORY (directory)", "FILE_WRITE_DATA (file) or FILE_ADD_FILE (directory)", "FILE_APPEND_DATA (file) or FILE_ADD_SUBDIRECTORY (directory)", "FILE_READ_EA", "FILE_WRITE_EA", "FILE_EXECUTE (file) or FILE_TRAVERSE (directory)", "FILE_DELETE_CHILD (directory)", "FILE_READ_ATTRIBUTES", "FILE_WRITE_ATTRIBUTES", "DELETE", "READ_CONTROL", "WRITE_DAC", "WRITE_OWNER", "SYNCHRONIZE"} : Amended ToSubclass] uint32 Permissions);
};

[DisplayName("All Files (CIM)") : Amended,Description("CIM_DataFile is a type of logical file that is a named collection of data or executable code.\n<B>The behavior of the provider backing this class will be changed in future releases. Currently the provider returns both files on fixed disks as well as files on mapped logical disks. In the future, only instances of files on local fixed disks will be returned.<B>") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_DataFile : CIM_LogicalFile
{
  [DisplayName("Version") : Amended,Description("Version string from version resource if one is present.") : Amended ToSubclass] string Version;
  [DisplayName("Manufacturer") : Amended,Description("Manufacturer string from version resource if one is present.") : Amended ToSubclass] string Manufacturer;
};

[Description("A link between a process and a data file indicating that the file participates in the execution of the process.\nNote: In order to receive all possible instances of this class, the SE_DEBUG_PRIVILEGE should be enabled.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_ProcessExecutable : CIM_Dependency
{
  [key : ToInstance ToSubclass DisableOverride,Description("The data file participating in the execution of the process.") : Amended ToSubclass] CIM_DataFile Ref Antecedent;
  [key : ToInstance ToSubclass DisableOverride,Description("The process.") : Amended ToSubclass] CIM_Process Ref Dependent;
  [Description("GlobalProcessCount is the current number of processes that have the file loaded in memory.") : Amended ToSubclass] uint32 GlobalProcessCount;
  [Description("ProcessCount represents the reference count of the file in the associated process.") : Amended ToSubclass] uint32 ProcessCount;
  [Description("ModuleInstance represents the Win32 instance handle.The ModuleInstance property has been deprecated.  There is no replacement value and this property is now considered obsolete.") : Amended ToSubclass] uint32 ModuleInstance;
  [Description("BaseAddress represents the base address of the module in the address space of the associated process.") : Amended ToSubclass] uint64 BaseAddress;
};

[DisplayName("Directories (CIM)") : Amended,Description("Directory is a type of file that logically groups data files 'contained' in it, and provides path information for the grouped files.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_Directory : CIM_LogicalFile
{
};

[Description(" The CIM_SoftwareElement class is used to decompose  a CIM_SoftwareFeature object into a set of individually  manageable or deployable parts for a particular platform.   A software element's platform is uniquely identified by its  underlying hardware architecture and operating system  (for example Sun Solaris on Sun Sparc or Windows NT on Intel).   As such, to understand the details of how the functionality  of a particular software feature is provided on a particular  platform, the CIM_SoftwareElement objects referenced by   CIM_SoftwareFeatureSoftwareElement associations are organized   in disjoint sets based on the TargetOperatingSystem property.    A CIM_SoftwareElement object captures the management  details of a part or component in one of  four states  characterized by the SoftwareElementState property.   ") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_SoftwareElement : CIM_LogicalElement
{
  [key : ToInstance ToSubclass DisableOverride,Description("The name used to identify this software element") : Amended ToSubclass] string Name;
  [key : ToInstance ToSubclass DisableOverride,Description("Version should be in the form <Major>.<Minor>.<Revision> or <Major>.<Minor><letter><revision>") : Amended ToSubclass] string Version;
  [key : ToInstance ToSubclass DisableOverride,Description(" The SoftwareElementState is defined in this model to  identify various states of a software elements life cycle.   - A software element in the deployable state describes     the details necessary to successful distribute it and     the details (conditions and actions) required to create     a software element in the installable state (i.e., the next state).  - A software element in the installable state describes     the details necessary to successfully install it and the    details (conditions and actions required to create a     software element in the executable state (i.e., the next state).  - A software element in the executable state describes the     details necessary to successfully  start it and the details     (conditions and actions required to create a software element in     the running state (i.e., the next state).  - A software element in the running state describes the details     necessary to monitor and operate on a start element.") : Amended ToSubclass,Values{"Deployable", "Installable", "Executable", "Running"} : Amended ToSubclass] uint16 SoftwareElementState;
  [key : ToInstance ToSubclass DisableOverride,Description(" This is an identifier for this software element and is designed to be  used in conjunction with other keys to create a unique representation  of this CIM_SoftwareElement") : Amended ToSubclass] string SoftwareElementID;
  [key : ToInstance ToSubclass DisableOverride,Description("The TargetOperatingSystem property allows the provider to specify the  operating system environment. The value of this property does not  ensure binary executable.  Two other pieces of information are needed.   First, the version of the OS needs to be specified using the OS  version check. The second piece of information is the architecture the  OS runs on. The combination of these constructs allows the provider to  clearly identify the level of OS required for a particular software  element.") : Amended ToSubclass,Values{"Unknown", "Other", "MACOS", "ATTUNIX", "DGUX", "DECNT", "Digital Unix", "OpenVMS", "HPUX", "AIX", "MVS", "OS400", "OS/2", "JavaVM", "MSDOS", "WIN3x", "WIN95", "WIN98", "WINNT", "WINCE", "NCR3000", "NetWare", "OSF", "DC/OS", "Reliant UNIX", "SCO UnixWare", "SCO OpenServer", "Sequent", "IRIX", "Solaris", "SunOS", "U6000", "ASERIES", "TandemNSK", "TandemNT", "BS2000", "LINUX", "Lynx", "XENIX", "VM/ESA", "Interactive UNIX", "BSDUNIX", "FreeBSD", "NetBSD", "GNU Hurd", "OS9", "MACH Kernel", "Inferno", "QNX", "EPOC", "IxWorks", "VxWorks", "MiNT", "BeOS", "HP MPE", "NextStep", "PalmPilot", "Rhapsody", "Windows 2000", "Dedicated", "VSE", "TPF"} : Amended ToSubclass] uint16 TargetOperatingSystem;
  [Description(" The OtherTargetOS property records the manufacturer and  operating system type for a software element when  the TargetOperatingSystem property has a value of  1 (\"Other\").  Therefore, when the TargetOperatingSystem property has a value of \"Other\", the OtherTargetOS  property must have a non-null value.  For all other values  of TargetOperatingSystem, the OtherTargetOS property is to be NULL. ") : Amended ToSubclass] string OtherTargetOS;
  [Description("Manufacturer of this software element") : Amended ToSubclass] string Manufacturer;
  [Description("The internal identifier for this compilation of this software element.") : Amended ToSubclass] string BuildNumber;
  [Description("The assigned serial number of this software element.") : Amended ToSubclass] string SerialNumber;
  [Description("The code set used by this software element. ") : Amended ToSubclass] string CodeSet;
  [Description(" The value of this property is the manufacturer's identifier for this software element. Often this will be a stock keeping unit (SKU) or a part number.") : Amended ToSubclass] string IdentificationCode;
  [Description("The value of this property identifies the language edition of this software element. The language codes defined in ISO 639 should be used. Where the software element represents multi-lingual or international version of a product, the string multilingual should be used.") : Amended ToSubclass] string LanguageEdition;
};

[Description("CIM_BIOSElement represents the low-level software that is loaded into non-volatile storage and used to bring up and configure a computer system.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_BIOSElement : CIM_SoftwareElement
{
  [Description("If true, this is the primary BIOS of the computer system.") : Amended ToSubclass] boolean PrimaryBIOS;
};

[Description("CIM_Job is a logical element representing a unit of work for a system, such as a print job. A job is distinct from a process in that a job can be scheduled.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_Job : CIM_LogicalElement
{
  [Description("Length of time that the job has been executing.") : Amended ToSubclass] datetime ElapsedTime;
  [Description("User to be notified upon job completion or failure.") : Amended ToSubclass] string Notify;
  [Description("User that submitted the job.") : Amended ToSubclass] string Owner;
  [Description("Priority indicates the urgency or importance of execution of a job.") : Amended ToSubclass] uint32 Priority;
  [Description("Time that the job was begun.") : Amended ToSubclass] datetime StartTime;
  [Description("A free form string representing the job's status.") : Amended ToSubclass] string JobStatus;
  [Description("Time that the job was submitted.") : Amended ToSubclass] datetime TimeSubmitted;
  [Description("Time after which the job is invalid or should be stopped.") : Amended ToSubclass] datetime UntilTime;
};

[Description("An operating system is software/firmware that makes a computer system's hardware usable, and implements and/or manages the resources, file systems, processes, user interfaces, services, ... available on the computer system.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_OperatingSystem : CIM_LogicalElement
{
  [Description("CSCreationClassName contains the scoping computer system's creation class name.") : Amended ToSubclass] string CSCreationClassName;
  [Description("CSName contains the scoping computer system's name.") : Amended ToSubclass] string CSName;
  [Description("CreationClassName indicates the name of the class or the subclass used in the creation of an instance. When used with the other key properties of this class, this property allows all instances of this class and its subclasses to be uniquely identified.") : Amended ToSubclass] string CreationClassName;
  [Description("Boolean indicating whether the operating system is distributed across several computer system nodes. If so, these nodes should be grouped as a cluster.") : Amended ToSubclass] boolean Distributed;
  [Description("Number of kilobytes of physical memory currently unused and available") : Amended ToSubclass,Units("kilobytes") : Amended ToSubclass] uint64 FreePhysicalMemory;
  [Description("Number of kilobytes of virtual memory currently unused and available. For example, this may be calculated by adding the amount of free RAM to the amount of free paging space (i.e., adding the properties, FreePhysicalMemory and FreeSpaceInPagingFiles).") : Amended ToSubclass,Units("kilobytes") : Amended ToSubclass] uint64 FreeVirtualMemory;
  [Description("Maximum number of kilobytes of memory that can be allocated to a process. For operating systems with no virtual memory, this value is typically equal to the total amount of physical memory minus memory used by the BIOS and OS. For some operating systems, this value may be infinity - in which case, 0 should be entered. In other cases, this value could be a constant - for example, 2G or 4G.") : Amended ToSubclass,Units("kilobytes") : Amended ToSubclass] uint64 MaxProcessMemorySize;
  [Description("A integer indicating the type of operating system.") : Amended ToSubclass,Values{"Unknown", "Other", "MACOS", "ATTUNIX", "DGUX", "DECNT", "Digital Unix", "OpenVMS", "HPUX", "AIX", "MVS", "OS400", "OS/2", "JavaVM", "MSDOS", "WIN3x", "WIN95", "WIN98", "WINNT", "WINCE", "NCR3000", "NetWare", "OSF", "DC/OS", "Reliant UNIX", "SCO UnixWare", "SCO OpenServer", "Sequent", "IRIX", "Solaris", "SunOS", "U6000", "ASERIES", "TandemNSK", "TandemNT", "BS2000", "LINUX", "Lynx", "XENIX", "VM/ESA", "Interactive UNIX", "BSDUNIX", "FreeBSD", "NetBSD", "GNU Hurd", "OS9", "MACH Kernel", "Inferno", "QNX", "EPOC", "IxWorks", "VxWorks", "MiNT", "BeOS", "HP MPE", "NextStep", "PalmPilot", "Rhapsody", "Windows 2000", "Dedicated", "OS/390", "VSE", "TPF"} : Amended ToSubclass] uint16 OSType;
  [Description("A string describing the manufacturer and operating system type - used when the operating system property, OSType, is set to 1 (\"Other\"). The format of the string inserted in OtherTypeDescription should be similar in format to the Values strings defined for OSType.  OtherTypeDescription should be set to NULL when OSType is any value other than 1.") : Amended ToSubclass] string OtherTypeDescription;
  [Description("A string describing the operating system's version number. The format of the version information is as follows: <Major Number>.<Minor Number>.<Revision> or <Major Number>.<Minor Number>.<Revision Letter>.") : Amended ToSubclass] string Version;
  [Description("Operating system's notion of the local date and time of day.") : Amended ToSubclass] datetime LocalDateTime;
  [Description("CurrentTimeZone indicates the number of minutes the operating system is offset from Greenwich Mean Time. Either the number is positive, negative or zero.") : Amended ToSubclass,Units("minutes") : Amended ToSubclass] sint16 CurrentTimeZone;
  [Description("The total number of kilobytes that can be stored in the operating system's paging files. Note that this number does not represent the actual physical size of the paging file on disk.  0 indicates that there are no paging files.") : Amended ToSubclass,Units("kilobytes") : Amended ToSubclass] uint64 SizeStoredInPagingFiles;
  [Description("The total number of KBytes that can be mapped into the OperatingSystem's paging files without causing any other pages to be swapped out. 0 indicates that there are no paging files.") : Amended ToSubclass,Units("kilobytes") : Amended ToSubclass] uint64 FreeSpaceInPagingFiles;
  [Description("Time when the operating system was last booted") : Amended ToSubclass] datetime LastBootUpTime;
  [Description("Maximum number of process contexts the operating system can support. If there is no fixed maximum, the value should be 0. On systems that have a fixed maximum, this object can help diagnose failures that occur when the maximum is reached. If unknown, enter -1.") : Amended ToSubclass] uint32 MaxNumberOfProcesses;
  [Description("Name of the operating system instance within a computer system.") : Amended ToSubclass] string Name;
  [Description("Number of user licenses for the operating system. If unlimited, enter 0. If unknown, enter -1.") : Amended ToSubclass] uint32 NumberOfLicensedUsers;
  [Description("Number of process contexts currently loaded or running on the operating system.") : Amended ToSubclass] uint32 NumberOfProcesses;
  [Description("Number of user sessions for which the operating system is currently storing state information") : Amended ToSubclass] uint32 NumberOfUsers;
  [Description("Total swap space in kilobytes. This value may be NULL (unspecified) if swap space is not distinguished from page files.  However, some operating systems distinguish these concepts.  For example, in UNIX, whole processes can be 'swapped out' when the free page list falls and remains below a specified amount.") : Amended ToSubclass,Units("kilobytes") : Amended ToSubclass] uint64 TotalSwapSpaceSize;
  [Description("Number of kilobytes of virtual memory. For example, this may be calculated by adding the amount of total RAM to the amount of paging space (i.e., adding the amount of memory in/aggregated by the computer system to the property, SizeStoredInPagingFiles.") : Amended ToSubclass,Units("kilobytes") : Amended ToSubclass] uint64 TotalVirtualMemorySize;
  [Description("The total amount of physical memory (in Kbytes) available to the OperatingSystem. This value does not necessarily indicate the true amount of physical memory, but what is reported to the OperatingSystem as available to it.") : Amended ToSubclass,Units("kilobytes") : Amended ToSubclass] uint64 TotalVisibleMemorySize;
  [Description("Requests a reboot of the operating system. The return value should be 0 if the request was successfully executed, 1 if the request is not supported and some other value if an error occurred.  The strings to which the ValueMap contents are 'translated' may also be specified in the subclass as a Values array qualifier.") : Amended ToSubclass] uint32 Reboot();
  [Description("Requests a shutdown of the operating system. The return value should be 0 if the request was successfully executed, 1 if the request is not supported and some other value if an error occurred. It is up to the implementation or subclass of operating system to establish dependencies between the Shutdown and Reboot methods, and for example, to provide more sophisticated capabilities such as scheduled shutdown/reboot, etc.") : Amended ToSubclass] uint32 Shutdown();
};

[DisplayName("Processes (CIM)") : Amended,Description("Each instance of the CIM_Process class represents a single instance of a running program. A user of the OperatingSystem will typically see a Process as an application or task. Within an OperatingSystem, a Process is defined by a workspace of memory resources and environmental settings that are allocated to it. On a multitasking System, this workspace prevents intrusion of resources by other Processes. Additionally, a Process can execute as multiple Threads, all which run within the same workspace.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_Process : CIM_LogicalElement
{
  [DisplayName("Computer System Class Name") : Amended,Description("CSCreationClassName contains the scoping computer system's creation class name.") : Amended ToSubclass] string CSCreationClassName;
  [DisplayName("Computer System Name") : Amended,Description("The scoping computer system's name.") : Amended ToSubclass] string CSName;
  [DisplayName("Class Name") : Amended,Description("CreationClassName indicates the name of the class or the subclass used in the creation of an instance. When used with the other key properties of this class, this property allows all instances of this class and its subclasses to be uniquely identified.") : Amended ToSubclass] string CreationClassName;
  [DisplayName("CreationDate") : Amended,Description("Time that the process began executing.") : Amended ToSubclass] datetime CreationDate;
  [DisplayName("Handle") : Amended,Key : ToInstance ToSubclass DisableOverride,Description("A string used to identify the process. A process ID is a kind of process handle.") : Amended ToSubclass] string Handle;
  [DisplayName("Kernel Model Time") : Amended,Description("Time in kernel mode, in milliseconds. If this information is not available, a value of 0 should be used.") : Amended ToSubclass,Units("milliseconds") : Amended ToSubclass] uint64 KernelModeTime;
  [DisplayName("Operating System Class Name") : Amended,Description("The scoping operating system's creation class name.") : Amended ToSubclass] string OSCreationClassName;
  [DisplayName("Operating System Name") : Amended,Description("The scoping operating system's name.") : Amended ToSubclass] string OSName;
  [DisplayName("Priority") : Amended,Description("Priority indicates the urgency or importance of execution of a process. If a priority is not defined for a process, a value of 0 should be used.") : Amended ToSubclass] uint32 Priority;
  [DisplayName("Execution State") : Amended,Description("Indicates the current operating condition of the process. Values include ready (2), running (3), and blocked (4), among others.") : Amended ToSubclass,Values{"Unknown", "Other", "Ready", "Running", "Blocked", "Suspended Blocked", "Suspended Ready", "Terminated", "Stopped", "Growing"} : Amended ToSubclass] uint16 ExecutionState;
  [DisplayName("Termination Date") : Amended,Description("Time that the process was stopped or terminated.") : Amended ToSubclass] datetime TerminationDate;
  [DisplayName("User Mode Time") : Amended,Description("Time in user mode, in milliseconds. If this information is not available, a value of 0 should be used.") : Amended ToSubclass,Units("milliseconds") : Amended ToSubclass] uint64 UserModeTime;
  [DisplayName("Working Set Size") : Amended,Description("The amount of memory in bytes that a process needs to execute efficiently, for an operating system that uses page-based memory management. If an insufficient amount of memory is available (< working set size), thrashing will occur. If this information is not known, NULL or 0 should be entered.  If this data is provided, it could be monitored to understand a process' changing memory requirements as execution proceeds.") : Amended ToSubclass,Units("bytes") : Amended ToSubclass] uint64 WorkingSetSize;
};

[Description("Threads represent the ability to execute units of a process or task in parallel.  A process can have many threads, each of which is weak to the process.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_Thread : CIM_LogicalElement
{
  [Description("The scoping computer system's creation class name.") : Amended ToSubclass] string CSCreationClassName;
  [Description("The scoping computer system's name.") : Amended ToSubclass] string CSName;
  [Description("The scoping operating system's creation class name.") : Amended ToSubclass] string OSCreationClassName;
  [Description("The scoping operating system's name.") : Amended ToSubclass] string OSName;
  [Description("The scoping process' CreationClassName.") : Amended ToSubclass] string ProcessCreationClassName;
  [Key : ToInstance ToSubclass DisableOverride,Description("The scoping process' Handle.") : Amended ToSubclass] string ProcessHandle;
  [Description("CreationClassName indicates the name of the class or the subclass used in the creation of an instance. When used with the other key properties of this class, this property allow all instances of this class and its subclasses to be uniquely identified.") : Amended ToSubclass] string CreationClassName;
  [Key : ToInstance ToSubclass DisableOverride,Description("A string used to identify the thread.") : Amended ToSubclass] string Handle;
  [Description("Priority indicates the urgency or importance of execution of a thread. A thread may have a different priority than its owning process. If this information is not available for a thread, a value of 0 should be used.") : Amended ToSubclass] uint32 Priority;
  [Description("Indicates the current operating condition of the thread. Values include ready (2), running (3), and blocked (4), among others.") : Amended ToSubclass,Values{"Unknown", "Other", "Ready", "Running", "Blocked", "Suspended Blocked", "Suspended Ready"} : Amended ToSubclass] uint16 ExecutionState;
  [Description("Time in user mode, in milliseconds. If this information is not available, a value of 0 should be used.") : Amended ToSubclass,Units("milliseconds") : Amended ToSubclass] uint64 UserModeTime;
  [Description("Time in kernel mode, in milliseconds. If this information is not available, a value of 0 should be used.") : Amended ToSubclass,Units("milliseconds") : Amended ToSubclass] uint64 KernelModeTime;
};

[Description("The Setting class represents configuration-related and operational parameters for one or more ManagedSystemElement(s). A ManagedSystemElement may have multiple Setting objects associated with it. The current operational values for an Element's parameters are reflected by properties in the Element itself or by properties in its associations. These properties do not have to be the same values present in the Setting object. For example, a modem may have a Setting baud rate of 56Kb/sec but be operating at 19.2Kb/sec.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_Setting
{
  [Description("The identifier by which the CIM_Setting object is known.") : Amended ToSubclass] string SettingID;
  [Description("A short textual description (one-line string) of the CIM_Setting object.") : Amended ToSubclass] string Caption;
  [Description("A textual description of the CIM_Setting object.") : Amended ToSubclass] string Description;
};

[Description("CIM_VideoControllerResolution describes the various video modes that a video controller can support.  Video modes are defined by the possible horizontal and vertical resolutions, refresh rate, scan mode and number of colors settings supported by a controller. The actual resolutions, etc. that are in use, are the values specified in the CIM_VideoController object.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_VideoControllerResolution : CIM_Setting
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The inherited SettingID serves as part of the key for a CIM_VideoControllerResolution instance.") : Amended ToSubclass] string SettingID;
  [Description("Controller's horizontal resolution in pixels.") : Amended ToSubclass,Units("pixels") : Amended ToSubclass] uint32 HorizontalResolution;
  [Description("Controller's vertical resolution in pixels.") : Amended ToSubclass,Units("pixels") : Amended ToSubclass] uint32 VerticalResolution;
  [Description("Refresh rate in hertz. If a range of rates is supported, use the MinRefreshRate and MaxRefreshRate properties, and set RefreshRate (this property) to 0.") : Amended ToSubclass,Units("hertz") : Amended ToSubclass] uint32 RefreshRate;
  [Description("Minimum refresh rate in hertz, when a range of rates is supported at the specified resolutions.") : Amended ToSubclass,Units("hertz") : Amended ToSubclass] uint32 MinRefreshRate;
  [Description("Maximum refresh rate in hertz, when a range of rates is supported at the specified resolutions.") : Amended ToSubclass,Units("hertz") : Amended ToSubclass] uint32 MaxRefreshRate;
  [Description("Integer indicating whether the controller operates in interlaced (value=5) or non-interlaced (4) mode.") : Amended ToSubclass,Values{"Other", "Unknown", "Not Supported", "Non-Interlaced Operation", "Interlaced Operation"} : Amended ToSubclass] uint16 ScanMode;
  [Description("Number of colors supported at the current resolutions.") : Amended ToSubclass] uint64 NumberOfColors;
};

[Description("CIM_Component is a generic association used to establish 'part of' relationships between Managed System Elements. For example, the SystemComponent association defines parts of a System.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_Component
{
  [Description("The parent element in the association.") : Amended ToSubclass] CIM_ManagedSystemElement Ref GroupComponent;
  [Description("The child element in the association.") : Amended ToSubclass] CIM_ManagedSystemElement Ref PartComponent;
};

[Description("The CIM_DirectoryContainsFile class represents an association between a directory and files contained within that directory.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_DirectoryContainsFile : CIM_Component
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The directory.") : Amended ToSubclass] CIM_Directory Ref GroupComponent;
  [Key : ToInstance ToSubclass DisableOverride,Description("The LogicalFile 'contained within' the Directory.") : Amended ToSubclass] CIM_DataFile Ref PartComponent;
};

[Description("CIM_SystemComponent is a specialization of the CIM_Component association that establishes 'part of' relationships between a System and the Managed System Elements of which it is composed.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_SystemComponent : CIM_Component
{
  [Description("The parent system in the association.") : Amended ToSubclass] CIM_System Ref GroupComponent;
  [Description("The child element that is a component of a system.") : Amended ToSubclass] CIM_ManagedSystemElement Ref PartComponent;
};

[Description("Logical devices may be aggregated by a system. This relationship is made explicit by the CIM_SystemDevice association. ") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_SystemDevice : CIM_SystemComponent
{
  [Description("The parent system in the association.") : Amended ToSubclass] CIM_System Ref GroupComponent;
  [Description("The logical device that is a component of a system.") : Amended ToSubclass] CIM_LogicalDevice Ref PartComponent;
};

[Description("A link between the computer system and the operating system(s) installed or loaded on it. An operating system is 'installed' on a computer system, when placed on one of its storage extents - for example, copied to a disk drive or downloaded to memory. Using this definition, an operating system is 'installed' on a NetPC when downloaded via the network.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_InstalledOS : CIM_SystemComponent
{
  [Description("The computer system.") : Amended ToSubclass] CIM_ComputerSystem Ref GroupComponent;
  [Description("The operating system installed on the computer system.") : Amended ToSubclass] CIM_OperatingSystem Ref PartComponent;
  [Description("Boolean indicating that the operating system is the default OS for the computer system.") : Amended ToSubclass] boolean PrimaryOS;
};

[Description("ElementSetting represents the association between ManagedSystemElements and the Setting class(es) defined for them.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_ElementSetting
{
  [Description("The Element reference represents the role of the CIM_ManagedSystemElement object of the CIM_ElementSetting association. Role: The associated managed system element provides the element that implements the element setting.") : Amended ToSubclass] CIM_ManagedSystemElement Ref Element;
  [Description("The CIM_Setting reference represents the role of the CIM_Setting object of the CIM_ElementSetting association. Role: The associated setting provides the setting that implements the element setting.") : Amended ToSubclass] CIM_Setting Ref Setting;
};

[Description("The CIM_VideoSetting class associates the CIM_VideoControllerResolution setting object with the controller to which it applies.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_VideoSetting : CIM_ElementSetting
{
  [Description("The video controller.") : Amended ToSubclass] CIM_VideoController Ref Element;
  [Description("The resolutions, refresh rates, scan mode and number of colors that can be set for the Controller.") : Amended ToSubclass] CIM_VideoControllerResolution Ref Setting;
};

[Description("CIM_MonitorResolution describes the relationship between horizontal and vertical resolutions, refresh rate and scan mode for a desktop monitor. The actual resolutions, etc. that are in use, are the values specified in the video controller object.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_MonitorResolution : CIM_Setting
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The inherited SettingID serves as part of the key for a CIM_MonitorResolution instance.") : Amended ToSubclass] string SettingID;
  [Description("Monitor's horizontal resolution in pixels.") : Amended ToSubclass,Units("pixels") : Amended ToSubclass] uint32 HorizontalResolution;
  [Description("Monitor's vertical resolution in pixels.") : Amended ToSubclass,Units("pixels") : Amended ToSubclass] uint32 VerticalResolution;
  [Description("Monitor's refresh rate in hertz. If a range of rates is supported, use the MinRefreshRate and MaxRefreshRate properties, and set RefreshRate (this property) to 0.") : Amended ToSubclass,Units("hertz") : Amended ToSubclass] uint32 RefreshRate;
  [Description("Monitor's minimum refresh rate in hertz, when a range of rates is supported at the specified resolutions.") : Amended ToSubclass,Units("hertz") : Amended ToSubclass] uint32 MinRefreshRate;
  [Description("Monitor's maximum refresh rate in hertz, when a range of rates is supported at the specified resolutions.") : Amended ToSubclass,Units("hertz") : Amended ToSubclass] uint32 MaxRefreshRate;
  [Description("Integer indicating whether the monitor operates in interlaced (value=5) or non-interlaced (4) mode.") : Amended ToSubclass,Values{"Other", "Unknown", "Not Supported", "Non-Interlaced Operation", "Interlaced Operation"} : Amended ToSubclass] uint16 ScanMode;
};

[Description("CIM_MonitorSetting associates the monitor resolution with the desktop monitor to which it applies.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_MonitorSetting : CIM_ElementSetting
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The desktop monitor.") : Amended ToSubclass] CIM_DesktopMonitor Ref Element;
  [Key : ToInstance ToSubclass DisableOverride,Description("The monitor resolution associated with the desktop monitor.") : Amended ToSubclass] CIM_MonitorResolution Ref Setting;
};

[Description("A logical device may use or require one or more batteries. This relationship is described by the CIM_AssociatedBattery dependency. It is also possible to model the individual batteries that comprise a UPS, using this association.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_AssociatedBattery : CIM_Dependency
{
  [Description("The battery.") : Amended ToSubclass] CIM_Battery Ref Antecedent;
  [Description("The logical device needing or associated with the battery") : Amended ToSubclass] CIM_LogicalDevice Ref Dependent;
};

[Description("An association between logical devices and system resources, indicating that the resource is assigned to the device.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_AllocatedResource : CIM_Dependency
{
  [Description("The resource.") : Amended ToSubclass] CIM_SystemResource Ref Antecedent;
  [Description("The logical device to which the resource is assigned.") : Amended ToSubclass] CIM_LogicalDevice Ref Dependent;
};

[Description("CIM_StatisticalInformation is a root class for any arbitrary collection of statistical data and/or metrics applicable to one or more managed system elements.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_StatisticalInformation
{
  [Description("The Name property defines the label by which the statistic or metric is known. When subclassed, the property can be overridden to be a Key property. ") : Amended ToSubclass] string Name;
  [Description("A textual description of the statistic or metric.") : Amended ToSubclass] string Description;
  [Description("A short textual description (one-line string) for the statistic or metric.") : Amended ToSubclass] string Caption;
};

[Description("CIM_Statistics is an association that relates managed system elements to the statistical group(s) that apply to them.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_Statistics
{
  [Description("The statistical information/object.") : Amended ToSubclass] CIM_StatisticalInformation Ref Stats;
  [Description("The CIM_ManagedSystemElement for which statistical or metric data is defined.") : Amended ToSubclass] CIM_ManagedSystemElement Ref Element;
};

[Description("CIM_DeviceErrorCounts is a statistical class containing error-related counters for a logical device. The types of errors are as defined by CCITT (Rec X.733) and ISO (IEC 10164-4).") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_DeviceErrorCounts : CIM_StatisticalInformation
{
  [Description("The scoping system's creation class name. ") : Amended ToSubclass] string SystemCreationClassName;
  [Description("The scoping system's name. ") : Amended ToSubclass] string SystemName;
  [Key : ToInstance ToSubclass DisableOverride,Description("The scoping device's creation class name. ") : Amended ToSubclass] string DeviceCreationClassName;
  [Key : ToInstance ToSubclass DisableOverride,Description("The scoping device's ID. ") : Amended ToSubclass] string DeviceID;
  [Key : ToInstance ToSubclass DisableOverride,Description("The inherited Name property serves as part of the key for the CIM_DeviceErrorCounts instance.  The object is scoped by the logical device to which the statistics apply. ") : Amended ToSubclass] string Name;
  [Description("Count of the indeterminate errors. ") : Amended ToSubclass] uint64 IndeterminateErrorCount;
  [Description("Count of the critical errors. ") : Amended ToSubclass] uint64 CriticalErrorCount;
  [Description("Count of the major errors. ") : Amended ToSubclass] uint64 MajorErrorCount;
  [Description("Count of the minor errors. ") : Amended ToSubclass] uint64 MinorErrorCount;
  [Description("Count of the warnings. ") : Amended ToSubclass] uint64 WarningCount;
  [Description("Method to reset the error and warning counters. The method takes one parameter as input an integer indicating which counter to reset. For this input parameter, 0 indicates all, 1 indicates a reset of the indeterminate error counter, 2 the critical error counter, 3 the major error counter, 4 the minor error counter and 5 the warning counter. The method returns 0 if successful, 1 if not supported, and any other value if an error occurred. A method is specified so that the logical device's instrumentation, which tabulates the errors and warnings, can also reset its internal processing and counters.\nIn a subclass, the set of possible return codes could be specified, using a ValueMap qualifier on the method. The strings to which the ValueMap contents are 'translated' may also be specified in the subclass as a Values array qualifier.") : Amended ToSubclass] uint32 ResetCounter([IN,Values{"All", "Indeterminate Error Counter", "Critical Error Counter", "Major Error Counter", "Minor Error Counter", "Warning Counter"} : Amended ToSubclass] uint16 SelectedCounter);
};

[Description("CIM_ErrorCountersForDevice relates the CIM_DeviceErrorCounts class to the logical device to which it applies. ") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_ErrorCountersForDevice : CIM_Statistics
{
  [Description("The statistical object - in this case, the error counter class. ") : Amended ToSubclass] CIM_DeviceErrorCounts Ref Stats;
  [Description("The device to which the error counters apply. ") : Amended ToSubclass] CIM_LogicalDevice Ref Element;
};

[Description("CIM_RelatedStatistics is an association that defines hierarchies and/or dependencies of related CIM_StatisticalInformation classes.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_RelatedStatistics
{
  [Description("The statistic information/object.") : Amended ToSubclass] CIM_StatisticalInformation Ref Stats;
  [Description("The related statistics or metrics.") : Amended ToSubclass] CIM_StatisticalInformation Ref RelatedStats;
};

[Description("Subclasses of CIM_PhysicalElement define any component of a system that has a distinct physical identity. Instances of this class can be defined in terms of labels that can be physically attached to the object. All processes, files, and logical devices are considered not to be physical elements. For example, it is not possible to attach a label to a modem. It is only possible to attach a label to the card that implements the modem. The same card could also implement a LAN  adapter. These are tangible managed system elements (usually actual hardware items) that have a physical manifestation of some sort. A managed system element is not necessarily a discrete component. For example, it is possible for a single card (which is a type of physical element) to host more than one logical device. The card would be represented by a single physical element associated with multiple logical devices.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_PhysicalElement : CIM_ManagedSystemElement
{
  [Description("CreationClassName indicates the name of the class or the subclass used in the creation of an instance. When used with the other key properties of this class, this property allows all instances of this class and its subclasses to be uniquely identified.") : Amended ToSubclass] string CreationClassName;
  [Description("The name of the organization responsible for producing the physical element. This may be the entity from whom the element is purchased, but this is not necessarily true. The latter information is contained in the Vendor property of CIM_Product.") : Amended ToSubclass] string Manufacturer;
  [Description("The name by which the physical element is generally known.") : Amended ToSubclass] string Model;
  [Description("The stock keeping unit number for this physical element.") : Amended ToSubclass] string SKU;
  [Description("A manufacturer-allocated number used to identify the PhysicalElement.") : Amended ToSubclass] string SerialNumber;
  [Description("An arbitrary string that uniquely identifies the physicalelement and serves as the element's key.  The Tag property can contain information such as asset tag or serial number data. The key for CIM_PhysicalElement is placed very high in the object hierarchy in order to independently identify the hardware/entity, regardless of physical placement in or on cabinets, adapters, etc.  For example, a removable component that can be hot swapped, may be taken from its containing (scoping) package and be temporarily unused.  The object still continues to exist - and may even be inserted into a different scoping container.  Therefore, the key for physicalelement is an arbitrary string and is defined independently of any placement or location-oriented hierarchy.") : Amended ToSubclass] string Tag;
  [Description("A string indicating the version of the physical element.") : Amended ToSubclass] string Version;
  [Description("The part number assigned by the organization responsible for producing or manufacturing the physical element.") : Amended ToSubclass] string PartNumber;
  [Description("OtherIdentifyingInfo captures additional data, beyond asset tag information, that could be used to identify a physical element. One example is bar code data associated with an element that also has an asset tag. Note that if only bar code data is available and is unique/able to be used as an element key, this property would be NULL and the bar code data used as the class key, in the tag property.") : Amended ToSubclass] string OtherIdentifyingInfo;
  [Description("Boolean indicating that the physical element is powered on (TRUE), or is currently off (FALSE).") : Amended ToSubclass] boolean PoweredOn;
};

[Description("CIM_Realizes is the association that defines the mapping between a logical device and the physical component that implements the device.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_Realizes : CIM_Dependency
{
  [Description("The physical component that implements the device.") : Amended ToSubclass] CIM_PhysicalElement Ref Antecedent;
  [Description("The logical device.") : Amended ToSubclass] CIM_LogicalDevice Ref Dependent;
};

[Description("CIM_Product is a concrete class that is a collection of physical elements, software features and/or other products, acquired as a unit. Acquisition implies an agreement between supplier and consumer which may have implications to product licensing, support and warranty.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_Product
{
  [Description("A short textual description (one-line string) for the Product.") : Amended ToSubclass] string Caption;
  [Description("A textual description of the product.") : Amended ToSubclass] string Description;
  [Key : ToInstance ToSubclass DisableOverride,Description("Product identification such as a serial number on software, a die number on a hardware chip, or (for non-commercial Products) a project number.") : Amended ToSubclass] string IdentifyingNumber;
  [Key : ToInstance ToSubclass DisableOverride,Description("Commonly used product name.") : Amended ToSubclass] string Name;
  [Description("Product SKU (stock keeping unit) information.") : Amended ToSubclass] string SKUNumber;
  [Description("The name of the Product's supplier, or entity selling the Product (the manufacturer, reseller, OEM, etc.). Corresponds to the Vendor property in the Product object in the DMTF Solution Exchange Standard.") : Amended ToSubclass] string Vendor;
  [Key : ToInstance ToSubclass DisableOverride,Description("Product version information.  Corresponds to the Version property in the product object in the DMTF Solution Exchange Standard.") : Amended ToSubclass] string Version;
};

[Description("Capabilities and management of memory-related logical devices.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_Memory : CIM_StorageExtent
{
  [Description("ErrorMethodology for CIM_Memory is a string property that indicates whether parity or CRC algorithms, ECC or other mechanisms are used. Details on the algorithm can also be supplied.") : Amended ToSubclass] string ErrorMethodology;
  [Description("The beginning address, referenced by an application or operating system and mapped by a memory controller, for this memory object. The starting address is specified in KBytes.") : Amended ToSubclass,Units("kilobytes") : Amended ToSubclass] uint64 StartingAddress;
  [Description("The ending address, referenced by an application or operating system and mapped by a memory controller, for this memory object. The ending address is specified in KBytes.") : Amended ToSubclass,Units("kilobytes") : Amended ToSubclass] uint64 EndingAddress;
  [Description("An integer enumeration describing the type of error that occurred most recently. For example, single (value=6) or double bit errors (7) can be specified using this property. The values, 12-14, are undefined in the CIM Schema since in DMI, they mix the semantics of the type of error and whether it was correctable or not.  The latter is indicated in the property, CorrectableError.") : Amended ToSubclass,Values{"Other", "Unknown", "OK", "Bad Read", "Parity Error", "Single-Bit Error", "Double-Bit Error", "Multi-Bit Error", "Nibble Error", "Checksum Error", "CRC Error", "Undefined", "Undefined", "Undefined"} : Amended ToSubclass] uint16 ErrorInfo;
  [Description("Free form string providing more information if the ErrorType property is set to 1, \"Other\". If not set to 1, this string has no meaning.") : Amended ToSubclass] string OtherErrorDescription;
  [Description("Boolean indicating that the most recent error was correctable. If the ErrorInfo property is equal to 3, \"OK\", then this property has no meaning.") : Amended ToSubclass] boolean CorrectableError;
  [Description("The time that the last memory error occurred. The type of error is described by the ErrorInfo property. If the ErrorInfo property is equal to 3, \"OK\", then this property has no meaning.") : Amended ToSubclass] datetime ErrorTime;
  [Description("An integer enumeration indicating the memory access operation that caused the last error. The type of error is described by the ErrorInfo property. If the ErrorInfo property is equal to 3, \"OK\", then this property has no meaning.") : Amended ToSubclass,Values{"Other", "Unknown", "Read", "Write", "Partial Write"} : Amended ToSubclass] uint16 ErrorAccess;
  [Description("The size of the data transfer in bits that caused the last error. 0 indicates no error. If the ErrorInfo property is equal to 3, \"OK\", then this property should be set to 0.") : Amended ToSubclass,Units("bits") : Amended ToSubclass] uint32 ErrorTransferSize;
  [Description("Data captured during the last erroneous memory access. The data occupies the first n octets of the array necessary to hold the number of bits specified by the ErrorTransferSize property. If ErrorTransferSize is 0, then this property has no meaning.") : Amended ToSubclass] uint8 ErrorData[];
  [Description("The ordering for data stored in the ErrorData property. \"Least Significant Byte First\" (value=1) or \"Most Significant Byte First\" (2) can be specified. If ErrorTransferSize is 0, then this property has no meaning.") : Amended ToSubclass,Values{"Unknown", "Least Significant Byte First", "Most Significant Byte First"} : Amended ToSubclass] uint16 ErrorDataOrder;
  [Description("Specifies the address of the last memory error. The type of error is described by the ErrorInfo property. If the ErrorInfo property is equal to 3, \"OK\", then this property has no meaning.") : Amended ToSubclass] uint64 ErrorAddress;
  [Description("Boolean indicating whether the address information in the property, ErrorAddress, is a system-level address (TRUE) or a physical address (FALSE). If the ErrorInfo property is equal to 3, \"OK\", then this property has no meaning.") : Amended ToSubclass] boolean SystemLevelAddress;
  [Description("Specifies the range, in bytes, to which the last error can be resolved. For example, if error addresses are resolved to bit 11 (i.e., on a typical page basis), then errors can be resolved to 4K boundaries and this property is set to 4000. If the ErrorInfo property is equal to 3, \"OK\", then this property has no meaning.") : Amended ToSubclass,Units("bytes") : Amended ToSubclass] uint64 ErrorResolution;
  [Description("An array of octets holding additional error information. An example is ECC Syndrome or the return of the check bits if a CRC-based error methodology is used. In the latter case, if a single bit error is recognized and the CRC algorithm is known, it is possible to determine the exact bit that failed.  This type of data (ECC Syndrome, Check Bit or Parity Bit data, or other vendor supplied information) is included in this field. If the ErrorInfo property is equal to 3, \"OK\", then the AdditionalErrorData property has no meaning.") : Amended ToSubclass] uint8 AdditionalErrorData[];
};

[Description("Capabilities and management of NV Storage. Non-volatile memory natively includes flash and ROM storage. In addition, NV memory can be BasedOn VolatileStorage, if the volatile memory is backed by a Battery. This scenario would be completely described by an instance of the AssociatedBattery relationship, referencing the NonVolatileStorage as the Dependent and the Battery as the Antecedent, and an instance of the BasedOn relationship, referencing the NonVolatileStorage as the Dependent and the VolatileStorage as the Antecedent.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_NonVolatileStorage : CIM_Memory
{
  [Description("Indicating that the NV storage is writeable.") : Amended ToSubclass] boolean IsWriteable;
};

[Description("Capabilities and management of volatile storage.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_VolatileStorage : CIM_Memory
{
  [Description("Indicates whether this memory can be cached or not.") : Amended ToSubclass] boolean Cacheable;
  [Description("An enumeration indicating the cache type that is compatible with this memory. For example, 4 indicates write-through cache.  If the Cacheable property is set to false, then this property does not have meaning and should be set to 5, \"Not Applicable\".") : Amended ToSubclass,Values{"Other", "Unknown", "Write-Back", "Write-Through", "Not Applicable"} : Amended ToSubclass] uint16 CacheType;
};

[Description("Logical devices may have memory installed on them or otherwise associated with them - such as cache memory. This is made explicit in this association.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_AssociatedMemory : CIM_Dependency
{
  [Description("Memory installed on or associated with a device.") : Amended ToSubclass] CIM_Memory Ref Antecedent;
  [Description("The logical device.") : Amended ToSubclass] CIM_LogicalDevice Ref Dependent;
};

[Description("Associates the processor and system memory, or a processor's cache.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_AssociatedProcessorMemory : CIM_AssociatedMemory
{
  [Description("The processor that accesses the memory or uses the cache.") : Amended ToSubclass] CIM_Processor Ref Dependent;
  [Description("Speed of the bus, in MHertz, between the processor and memory. ") : Amended ToSubclass,Units("megahertz") : Amended ToSubclass] uint32 BusSpeed;
};

[Description("Capabilities and management of cache memory. Cache memory is dedicated or allocated RAM that a Processor searches first for data, before going to 'regular' memory. CacheMemory is used to speed up the delivery of data to a Processor. It is usually described by its closeness to the Processor (for example, Primary or Secondary Cache).\\nIf a DiskDrive includes RAM allocated for holding the disk's most recently read and/or adjacent data (in order to speed up retrieval), this also would be modeled as CacheMemory. Note that CacheMemory is NOT operating system or application level buffers but actual RAM allocated for caching data for a Processor, from a hard disk, etc.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_CacheMemory : CIM_Memory
{
  [Description("Defines whether this is the primary (value=3), secondary (value=4) or tertiary (value=5) cache. Also, \"Other\" (1), \"Unknown\" (2) and \"Not Applicable\" (6) can be defined.") : Amended ToSubclass,Values{"Other", "Unknown", "Primary", "Secondary", "Tertiary", "Not Applicable"} : Amended ToSubclass] uint16 Level;
  [Description("Defines whether this is write-back (value=3) or write-through (value=4) Cache, or whether this information \"Varies with Address\" (5) or is defined individually for each I/O (6). Also, \"Other\" (1) and \"Unknown\" (2) can be specified.") : Amended ToSubclass,Values{"Other", "Unknown", "Write Back", "Write Through", "Varies with Address", "Determination Per I/O"} : Amended ToSubclass] uint16 WritePolicy;
  [Description("Defines whether this is for instruction caching (value=3), data caching (value=4) or both (value=5, \"Unified\"). Also, \"Other\" (1) and \"Unknown\" (2) can be defined.") : Amended ToSubclass,Values{"Other", "Unknown", "Instruction", "Data", "Unified"} : Amended ToSubclass] uint16 CacheType;
  [Description("Size, in bytes, of a single cache bucket or line.") : Amended ToSubclass,Units("bytes") : Amended ToSubclass] uint32 LineSize;
  [Description("An integer enumeration describing the algorithm to determine which cache lines or buckets should be re-used.") : Amended ToSubclass,Values{"Other", "Unknown", "Least Recently Used (LRU)", "First In First Out (FIFO)", "Last In First Out (LIFO)", "Least Frequently Used (LFU)", "Most Frequently Used (MFU)", "Data Dependent Multiple Algorithms"} : Amended ToSubclass] uint16 ReplacementPolicy;
  [Description("Policy that shall be employed by the cache for handling read requests. For example, \"Read\", \"Read-Ahead\" or both can be specified using the values, 3, 4 or 5, respectively. If the read policy is determined individually (ie, for each request), then the value 6 (\"Determination per I/O\") should be specified. \"Other\" (1) and \"Unknown\" (2) are also valid values.") : Amended ToSubclass,Values{"Other", "Unknown", "Read", "Read-Ahead", "Read and Read-Ahead", "Determination Per I/O"} : Amended ToSubclass] uint16 ReadPolicy;
  [Description("Maximum amount of time, in seconds, dirty lines or buckets may remain in the cache before they are flushed. A value of zero indicated that a cache flush is not controlled by a flushing timer.") : Amended ToSubclass,Units("seconds") : Amended ToSubclass] uint32 FlushTimer;
  [Description("An integer enumeration defining the system cache associativity. For example, 6 indicates a fully associative cache.") : Amended ToSubclass,Values{"Other", "Unknown", "Direct Mapped", "2-way Set-Associative", "4-way Set-Associative", "Fully Associative", "8-way Set-Associative", "16-way Set-Associative"} : Amended ToSubclass] uint16 Associativity;
};

[Description("An alarm device is a type of device that emits audible or visible indications related to a problem situation. ") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_AlarmDevice : CIM_LogicalDevice
{
  [Description("Boolean indicating that the alarm is audible. ") : Amended ToSubclass] boolean AudibleAlarm;
  [Description("Boolean indicating that the alarm is visible. ") : Amended ToSubclass] boolean VisibleAlarm;
  [Description("Urgency is an enumerated value that indicates the relative frequency at which the Alarm flashes, vibrates and/or emits audible tones. ") : Amended ToSubclass,Values{"Unknown", "Other", "Not Supported", "Informational", "Non-Critical", "Critical", "Unrecoverable"} : Amended ToSubclass] uint16 Urgency;
  [Description("SetUrgency is a method for defining the desired urgency level for the alarm. Its input parameter, RequestedUrgency, is specified using the Values list of CIM_AlarmDevice's Urgency property. SetUrgency returns 0 if the request is successfully implemented, 1 if the specified urgency level is not supported, and some other value if any other error occurred.") : Amended ToSubclass] uint32 SetUrgency([IN] uint16 RequestedUrgency);
};

[Description("The Location class specifies the position and address of a physical element.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_Location
{
  [Key : ToInstance ToSubclass DisableOverride,Description("Name is a free-form string defining a label for the location. It is a part of the key for the object.") : Amended ToSubclass] string Name;
  [Key : ToInstance ToSubclass DisableOverride,Description("Position is a free-form string indicating the placement of a physical element.  It can specify slot information on a hosting board, mounting site in a cabinet, or latitude and longitude information, for example, from a GPS. It is part of the key of the CIM_Location object.") : Amended ToSubclass] string PhysicalPosition;
  [Description("Address is a free-form string indicating a street, building or other type of address for the physical element's location.") : Amended ToSubclass] string Address;
};

[Description("CIM_PhysicalElementLocation associates a physical element with a CIM_Location object for inventory or replacement purposes.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_PhysicalElementLocation
{
  [Description("The physical element whose location is specified.") : Amended ToSubclass] CIM_PhysicalElement Ref Element;
  [Description("The physical element's location.") : Amended ToSubclass] CIM_Location Ref PhysicalLocation;
};

[Description("CIM_PhysicalCapacity is an abstract class describing a physical element's minimum/maximum requirements and ability to support different types of hardware. For example, minimum and maximum memory requirements can be modeled as a subclass of CIM_PhysicalCapacity.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_PhysicalCapacity
{
  [Description("The Name property defines the label by which the CIM_PhysicalCapacity object is known.  When subclassed, the Name property can be overridden to be a Key property.") : Amended ToSubclass] string Name;
  [Description("Caption is a short textual description (one-line string) of the CIM_PhysicalCapacity object.") : Amended ToSubclass] string Caption;
  [Description("The Description property provides a textual description of the CIM_PhysicalCapacity object.") : Amended ToSubclass] string Description;
};

[Description("CIM_ElementCapacity associates a CIM_PhysicalCapacity object with one or more physical elements. It serves to associate a description of min/max hardware requirements or capabilities (stored as a kind of CIM_PhysicalCapacity), with the physical elements being described.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_ElementCapacity
{
  [Description("CIM_PhysicalCapacity describes the minimum and maximum requirements and ability to support different types of hardware for a physical element.") : Amended ToSubclass] CIM_PhysicalCapacity Ref Capacity;
  [Description("The physical element being described.") : Amended ToSubclass] CIM_PhysicalElement Ref Element;
};

[Description("CIM_MemoryCapacity describes the type of memory that can be installed on a physical element and its minimum/maximum configurations. Information on what memory is currently 'installed', versus an element's min/max requirements, is located in instances of the CIM_PhysicalMemory class.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_MemoryCapacity : CIM_PhysicalCapacity
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The inherited Name property serves as a part of the CIM_MemoryCapacity object key.") : Amended ToSubclass] string Name;
  [Key : ToInstance ToSubclass DisableOverride,Description("The type of memory. This is a part of the object key. Values correspond to the list of possible memory types in the CIM_PhysicalMemory class.") : Amended ToSubclass,Values{"Unknown", "Other", "DRAM", "Synchronous DRAM", "Cache DRAM", "EDO", "EDRAM", "VRAM", "SRAM", "RAM", "ROM", "Flash", "EEPROM", "FEPROM", "EPROM", "CDRAM", "3DRAM", "SDRAM", "SGRAM", "RDRAM", "DDR", "DDR-2"} : Amended ToSubclass] uint16 MemoryType;
  [Description("Minimum amount of memory, in Kbytes, that is needed for the associated physical element to operate correctly. ") : Amended ToSubclass,Units("kilobytes") : Amended ToSubclass] uint64 MinimumMemoryCapacity;
  [Description("Maximum amount of memory, in Kbytes, that can be supported by the associated physical element. ") : Amended ToSubclass,Units("kilobytes") : Amended ToSubclass] uint64 MaximumMemoryCapacity;
};

[Description("The CIM_ReplacementSet class aggregates physical elements that must be 'replaced' or 'FRUed' together. For example, when replacing a memory card, the component memory chips could be removed and replaced as well. Or, a set of memory chips may be specified to be replaced or upgraded together using this association.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_ReplacementSet
{
  [Key : ToInstance ToSubclass DisableOverride,Description("Name is a free-form string defining a label for the CIM_ReplacementSet. It is the key for the object.") : Amended ToSubclass] string Name;
  [Description("A free-form string specifying information related to the CIM_ReplacementSet.  The purpose of the set or information related to how the component elements are replaced may be included in this property.") : Amended ToSubclass] string Description;
};

[Description("CIM_ParticipatesInSet indicates which physical elements should be replaced together.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_ParticipatesInSet
{
  [Description("The CIM_ReplacementSet.") : Amended ToSubclass] CIM_ReplacementSet Ref Set;
  [Description("The physical element which should be replaced with other elements, as a set.") : Amended ToSubclass] CIM_PhysicalElement Ref Element;
};

[Description("The CIM_PhysicalPackage class represents physical elements that contain or host other components. Examples are a rack enclosure or an adapter card.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_PhysicalPackage : CIM_PhysicalElement
{
  [Description("A physical package is removable if it is designed to be taken in and out of the physical container in which it is normally found, without impairing the function of the overall packaging. A package can still be removable if power must be 'off' in order to perform the removal. If power can be 'on' and the package removed, then the element is removable and can be hot swapped. For example, an extra battery in a laptop is removable, as is a disk drive package inserted using SCA connectors. However, the latter can be hot swapped.  A laptop's display is not removable, nor is a non-redundant power supply.  Removing these components would impact the function of the overall packaging or is impossible due to the tight integration of the package.") : Amended ToSubclass] boolean Removable;
  [Description("A physical package is replaceable  if it is possible to replace (FRU or upgrade) the element with a physically different one.  For example, some computer systems allow the main processor chip to be upgraded to one of a higher clock rating. In this case, the processor is said to be replaceable . Another example is a power supply package mounted on sliding rails. All removable packages are inherently replaceable .") : Amended ToSubclass] boolean Replaceable;
  [Description("A physical package can be hot swapped if it is possible to replace the element with a physically different but equivalent one while the containing package has power applied to it (i.e., is 'on').  For example, a disk drive package inserted using SCA connectors is removable and can be hot swapped. All packages that can be hot swapped are inherently removable and replaceable.") : Amended ToSubclass] boolean HotSwappable;
  [Description("The height of the physical package in inches.") : Amended ToSubclass,Units("inches") : Amended ToSubclass] real32 Height;
  [Description("The depth of the physical package in inches.") : Amended ToSubclass,Units("inches") : Amended ToSubclass] real32 Depth;
  [Description("The width of the physical package in inches.") : Amended ToSubclass,Units("inches") : Amended ToSubclass] real32 Width;
  [Description("The weight of the physical package in pounds.") : Amended ToSubclass,Units("pounds") : Amended ToSubclass] real32 Weight;
  [Description("The IsCompatible method verifies whether the referenced physical element may be contained by or inserted into the physical package. The return value should be 0 if the request was successfully executed, 1 if the request is not supported and some other value if an error occurred.  In a subclass, the set of possible return codes could be specified, using a ValueMap qualifier on the method. The strings to which the ValueMap contents are 'translated' may also be specified in the subclass as a Values array qualifier.") : Amended ToSubclass] uint32 IsCompatible([IN] CIM_PhysicalElement Ref ElementToCheck);
};

[Description("The CIM_Container association represents the relationship between a contained and a containing physical element. A containing object must be a physical package.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_Container : CIM_Component
{
  [Description("The physical package that contains other physical elements, including other packages.") : Amended ToSubclass] CIM_PhysicalPackage Ref GroupComponent;
  [Description("The physical element which is contained in the package.") : Amended ToSubclass] CIM_PhysicalElement Ref PartComponent;
  [Description("A free-form string representing the positioning of the PhysicalElement within the PhysicalPackage. Information relative to stationary elements in the Container (for example, 'second drive bay from the top'), angles, altitudes and other data may be recorded in this property. This string could supplement or be used in place of instantiating the CIM_Location object.") : Amended ToSubclass] string LocationWithinContainer;
};

[Description("CIM_PhysicalFrame is a superclass of rack, chassis and other frame enclosures, as they are defined in extension classes. Properties like visible or audible alarm, and data related to security breaches are in this superclass.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_PhysicalFrame : CIM_PhysicalPackage
{
  [Description("CableManagementStrategy is a free-form string that contains information on how the various cables are connected and bundled for the frame. With many networking, storage-related and power cables, cable management can be a complex and challenging endeavor. This string property contains information to aid in assembly and service of the frame.") : Amended ToSubclass] string CableManagementStrategy;
  [Description("ServicePhilosophy is an enumerated, integer-valued array that indicates whether the frame is serviced from the top (value=2), front (3), back (4) or side (5), whether it has sliding trays (6) or removable sides (7), and/or whether the frame is moveable (8), for example, having rollers.") : Amended ToSubclass,Values{"Unknown", "Other", "Service From Top", "Service From Front", "Service From Back", "Service From Side", "Sliding Trays", "Removable Sides", "Moveable"} : Amended ToSubclass] uint16 ServicePhilosophy[];
  [Description("An array of free-form strings providing more detailed explanations for any of the entries in the ServicePhilosophy array. Note, each entry of this array is related to the entry in ServicePhilosophy that is located at the same index.") : Amended ToSubclass] string ServiceDescriptions[];
  [Description("Boolean indicating whether the frame is protected with a lock.") : Amended ToSubclass] boolean LockPresent;
  [Description("Boolean indicating whether the frame is equipped with an audible alarm.") : Amended ToSubclass] boolean AudibleAlarm;
  [Description("Boolean indicating that the equipment includes a visible alarm.") : Amended ToSubclass] boolean VisibleAlarm;
  [Description("SecurityBreach is an enumerated, integer-valued property indicating whether a physical breach of the frame was attempted but unsuccessful (value=4) or attempted and successful (5). Also, the values, \"Unknown\", \"Other\" or \"No Breach\", can be specified.") : Amended ToSubclass,Values{"Other", "Unknown", "No Breach", "Breach Attempted", "Breach Successful"} : Amended ToSubclass] uint16 SecurityBreach;
  [Description("BreachDescription is a free-form string providing more information if the SecurityBreach property indicates that a breach or some other security-related event occurred.") : Amended ToSubclass] string BreachDescription;
};

[Description("A rack is a physical frame that represents an enclosure in which chassis are placed. Typically a rack is nothing more than the enclosure, and all the functioning components are packaged in the chassis, loaded in the rack.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_Rack : CIM_PhysicalFrame
{
  [Description("The height of the physical package in 'U's. A 'U' is a standard unit of measure for the height of a rack or rack-mountable component. It is equal to 1.75 inches or 4.445 cm.") : Amended ToSubclass,Units("Us") : Amended ToSubclass] real32 Height;
  [Description("Enumeration indicating the type of rack.Information such as \"Telco\" rack (value=2) or standard 19 inch rack (1) can be specified. The country/region for which the rack is manufactured is defined in the CountryDesignation property.") : Amended ToSubclass,Values{"Unknown", "Standard 19 Inch", "Telco", "Equipment Shelf", "Non-Standard"} : Amended ToSubclass] uint16 TypeOfRack;
  [Description("Designation of the country/region for which the rack is designed. Country/region code strings are as defined by ISO/IEC 3166. The rack type is specified in the TypeOfRack property.") : Amended ToSubclass] string CountryDesignation;
};

[Description("The CIM_Chassis class represents the physical elements that enclose other elements and provide definable functionality, such as a desktop, processing node, UPS, disk or tape storage, or a combination of these.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_Chassis : CIM_PhysicalFrame
{
  [Description("Integer indicating the number of power cords which must be connected to the chassis, for all the components to operate.") : Amended ToSubclass] uint16 NumberOfPowerCords;
  [Description("Current required by the chassis at 120V. If power is provided by the chassis (as in the case of a UPS), this property may indicate the amperage produced, as a negative number.") : Amended ToSubclass,Units("amps at 120 volts") : Amended ToSubclass] sint16 CurrentRequiredOrProduced;
  [Description("Amount of heat generated by the chassis in BTU/hour.") : Amended ToSubclass,Units("BTU per hour") : Amended ToSubclass] uint16 HeatGeneration;
  [Description("An enumerated, integer-valued array indicating the type of chassis.") : Amended ToSubclass,Values{"Other", "Unknown", "Desktop", "Low Profile Desktop", "Pizza Box", "Mini Tower", "Tower", "Portable", "Laptop", "Notebook", "Hand Held", "Docking Station", "All in One", "Sub Notebook", "Space-Saving", "Lunch Box", "Main System Chassis", "Expansion Chassis", "SubChassis", "Bus Expansion Chassis", "Peripheral Chassis", "Storage Chassis", "Rack Mount Chassis", "Sealed-Case PC"} : Amended ToSubclass] uint16 ChassisTypes[];
  [Description("An array of free-form strings providing more information on the ChassisTypes array entries. Note, each entry of this array is related to the entry in ChassisTypes that is located at the same index.") : Amended ToSubclass] string TypeDescriptions[];
};

[Description("Racks, as simple enclosures, contain chassis that provide the physical components realizing processing nodes, storage devices, UPSs, etc. The CIM_ChassisInRack association makes explicit the 'containing' relationship between the rack and the chassis.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_ChassisInRack : CIM_Container
{
  [Description("The rack that contains the chassis.") : Amended ToSubclass] CIM_Rack Ref GroupComponent;
  [Description("The chassis which is mounted in the rack.") : Amended ToSubclass] CIM_Chassis Ref PartComponent;
  [Description("An integer indicating the lowest or 'bottom' U in which the chassis is mounted. A 'U' is a standard unit of measure for the height of a rack or rack-mountable component. It is equal to 1.75 inches or 4.445 cm.") : Amended ToSubclass,Units("Us") : Amended ToSubclass] uint16 BottomU;
};

[Description("A chassis can contain other packages, such as other chassis and cards. The CIM_PackageInChassis association makes explicit this relationship.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_PackageInChassis : CIM_Container
{
  [Description("The chassis that contains other physical packages.") : Amended ToSubclass] CIM_Chassis Ref GroupComponent;
  [Description("The physical package which is contained in the chassis.") : Amended ToSubclass] CIM_PhysicalPackage Ref PartComponent;
};

[Description("A laptop, a type of chassis, may be docked in another type of chassis, a docking station. This is the relationship represented by the CIM_Docked association. Because this is such a typical relationship, it is explicitly described.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_Docked : CIM_Dependency
{
  [Description("The docking station.") : Amended ToSubclass] CIM_Chassis Ref Antecedent;
  [Description("The laptop that is 'docked'.") : Amended ToSubclass] CIM_Chassis Ref Dependent;
};

[Description("The CIM_Card class represents a type of physical container that can be plugged into another card or hosting board, or is itself a hosting board/motherboard in a chassis. The CIM_Card class includes any package capable of carrying signals and providing a mounting point for  physical components, such as chips, or other physical packages, such as other cards.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_Card : CIM_PhysicalPackage
{
  [Description("Boolean indicating that this card is a motherboard or, more generically, a baseboard in a chassis.") : Amended ToSubclass] boolean HostingBoard;
  [Description("SlotLayout is a free-form string that describes the slot positioning, typical usage, restrictions, individual slot spacings or any other pertinent information for the slots on a card.") : Amended ToSubclass] string SlotLayout;
  [Description("Boolean indicating that at least one daughterboard or auxiliary card is required in order to function properly.") : Amended ToSubclass] boolean RequiresDaughterBoard;
  [Description("Boolean indicating that this card is physically unique from other cards of the same type and therefore requires a special slot. For example, a double-wide card requires two slots. Another example is where a certain card may be used for the same general function as other cards but requires a special slot (e.g., extra long), whereas the other cards can be placed in any available slot. If set to TRUE, then the corresponding property, RequirementsDescription, should specify the nature of the uniqueness or purpose of the card.") : Amended ToSubclass] boolean SpecialRequirements;
  [Description("A free-form string describing the way(s) in which this card is physically unique from other cards. This property only has meaning when the corresponding boolean property, SpecialRequirements, is set to TRUE.") : Amended ToSubclass] string RequirementsDescription;
};

[Description("Cards may be plugged into motherboards/baseboards, are daughtercards of an adapter, or support special card-like modules. These relationships are described by the CIM_CardOnCard association.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_CardOnCard : CIM_Container
{
  [Description("The card that hosts another card.") : Amended ToSubclass] CIM_Card Ref GroupComponent;
  [Description("The card that is plugged into or otherwise mounted on another card.") : Amended ToSubclass] CIM_Card Ref PartComponent;
  [Description("A string describing and identifying how the card is mounted on or plugged into the 'other' card. slot information could be included in this field and may be sufficient for certain management purposes. If so, this avoids creating instantiations of connector/slot objects just to model the relationship of cards to hosting boards or other adapters. On the other hand, if slot and connector information is available, this field could be used to provide more detailed mounting or slot insertion data.") : Amended ToSubclass] string MountOrSlotDescription;
};

[Description("The CIM_PhysicalComponent class represents any low-level or basic component within a package. Any physical element that is not a link, connector, or package is a descendent (or member) of this class. For example, the UART chipset on an internal modem card would be a subclass (if additional properties or associations are defined) or an instance of CIM_PhysicalComponent.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_PhysicalComponent : CIM_PhysicalElement
{
  [Description("A physical component is removable if it is designed to be taken in and out of the physical container in which it is normally found, without impairing the function of the overall packaging. A component can still be removable if power must be 'off' in order to perform the removal. If power can be 'on' and the component removed, then the element is removable and can be hot swapped. For example, an upgradeable processor chip is removable.") : Amended ToSubclass] boolean Removable;
  [Description("A physical component is replaceable  if it is possible to replace (FRU or upgrade) the element with a physically different one.  For example, some computer systems allow the main processor chip to be upgraded to one of a higher clock rating. In this case, the processor is said to be replaceable . All removable components are inherently replaceable .") : Amended ToSubclass] boolean Replaceable;
  [Description("A physical component can be hot swapped if it is possible to replace the element with a physically different but equivalent one while the containing package has power applied to it (i.e., is 'on').  For example, a fan component may be designed to be hot swapped. All components that can be hot swapped are inherently removable and replaceable .") : Amended ToSubclass] boolean HotSwappable;
};

[Description("A component is typically contained by a physical package, such as a chassis or card. The CIM_PackagedComponent association makes this relationship explicit. In the first sentence, the word, 'typically', is used. This is because a component may be removed from, or not yet inserted into, its containing package (i.e., the Removable boolean property is TRUE). Therefore, a component may not always be associated with a container.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_PackagedComponent : CIM_Container
{
  [Description("The physical package that contains component(s).") : Amended ToSubclass] CIM_PhysicalPackage Ref GroupComponent;
  [Description("The physical component which is contained in the package.") : Amended ToSubclass] CIM_PhysicalComponent Ref PartComponent;
};

[Description("The CIM_Chip class represents any type of integrated circuit hardware, including ASICs, processors, memory chips, etc.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_Chip : CIM_PhysicalComponent
{
  [Description("The implementation form factor for the chip.For example, values such as SIMM (7), TSOP (9) or PGA (10) can be specified.") : Amended ToSubclass,Values{"Unknown", "Other", "SIP", "DIP", "ZIP", "SOJ", "Proprietary", "SIMM", "DIMM", "TSOP", "PGA", "RIMM", "SODIMM", "SRIMM", "SMD", "SSMP", "QFP", "TQFP", "SOIC", "LCC", "PLCC", "BGA", "FPBGA", "LGA", "FB-DIMM"} : Amended ToSubclass] uint16 FormFactor;
};

[Description("CIM_PhysicalMemory is a subclass of CIM_Chip, representing low level memory devices - SIMMS, DIMMs, raw memory chips, etc.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_PhysicalMemory : CIM_Chip
{
  [Description("The type of physical memory.") : Amended ToSubclass,Values{"Unknown", "Other", "DRAM", "Synchronous DRAM", "Cache DRAM", "EDO", "EDRAM", "VRAM", "SRAM", "RAM", "ROM", "Flash", "EEPROM", "FEPROM", "EPROM", "CDRAM", "3DRAM", "SDRAM", "SGRAM", "RDRAM", "DDR", "DDR2", "DDR2 FB-DIMM"} : Amended ToSubclass] uint16 MemoryType;
  [Description("Total width, in bits, of the physical memory, including check or error correction bits. If there are no error correction bits, the value in this property should match that specified for the DataWidth property.") : Amended ToSubclass,Units("bits") : Amended ToSubclass] uint16 TotalWidth;
  [Description("Data width of the physical memory, in bits. A data width of 0 and a total width of 8 would indicate that the memory is solely used to provide error correction bits.") : Amended ToSubclass,Units("bits") : Amended ToSubclass] uint16 DataWidth;
  [Description("The speed of the physical memory, in nanoseconds.") : Amended ToSubclass,Units("nanoseconds") : Amended ToSubclass] uint32 Speed;
  [Description("The total capacity of this physical memory, in bytes.") : Amended ToSubclass,Units("bytes") : Amended ToSubclass] uint64 Capacity;
  [Description("A string identifying the physically labeled bank where the memory is located - for example, 'Bank 0' or 'Bank A'.") : Amended ToSubclass] string BankLabel;
  [Description("Specifies the position of the physical memory in a 'row'. For example, if it takes two 8-bit memory devices to form a 16-bit row, then a value of '2'means that this memory is the second device. 0 is an invalid value for this property.") : Amended ToSubclass] uint32 PositionInRow;
  [Description("The position of this physical memory in an interleave. 0 indicates non-interleaved. 1 indicates the first position, 2 the second position and so on. For example, in a 2:1 interleave, a value of '1' would indicate that the memory is in the 'even' position.") : Amended ToSubclass] uint32 InterleavePosition;
};

[Description("Physical memory can be located on hosting boards, adapter cards, etc. This association explicitly defines this relationship of memory to cards.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_MemoryOnCard : CIM_PackagedComponent
{
  [Description("The card that includes or 'contains' memory.") : Amended ToSubclass] CIM_Card Ref GroupComponent;
  [Description("The physical memory which is located on the card.") : Amended ToSubclass] CIM_PhysicalMemory Ref PartComponent;
};

[Description("The CIM_PhysicalMedia class represents any type of documentation or storage medium, such as tapes, CD ROMs, etc. This class is typically used to locate and manage removable media (versus media sealed with the media access device, as a single package, as is the case with hard disks). However, 'sealed' media can also be modeled using this class, where the media would then be associated with the physical package using the CIM_PackagedComponent relationship.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_PhysicalMedia : CIM_PhysicalComponent
{
  [Description("The number of bytes that can be read from or written to a Media. This property is not applicable to \"Hard Copy\" (documentation) or cleaner Media. Data compression should not be assumed, as it would increase the value in this property. For tapes, it should be assumed that no filemarks or blank space areas are recorded on the Media.") : Amended ToSubclass,Units("bytes") : Amended ToSubclass] uint64 Capacity;
  [Description("Specifies the type of the physical media, as an enumerated integer. The MediaDescription property is used to provide more explicit definition of the media type, whether it is pre-formatted, compatibility features, etc.") : Amended ToSubclass,Values{"Unknown", "Other", "Tape Cartridge", "QIC Cartridge", "AIT Cartridge", "DTF Cartridge", "DAT Cartridge", "8mm Tape Cartridge", "19mm Tape Cartridge", "DLT Cartridge", "Half-Inch Magnetic Tape Cartridge", "Cartridge Disk", "JAZ Disk", "ZIP Disk", "SyQuest Disk", "Winchester Removable Disk", "CD-ROM", "CD-ROM/XA", "CD-I", "CD Recordable", "WORM", "Magneto-Optical", "DVD", "DVD+RW", "DVD-RAM", "DVD-ROM", "DVD-Video", "Divx", "Floppy/Diskette", "Hard Disk", "Memory Card", "Hard Copy", "Clik Disk", "CD-RW", "CD-DA", "CD+", "DVD Recordable", "DVD-RW", "DVD-Audio", "DVD-5", "DVD-9", "DVD-10", "DVD-18", "Magneto-Optical Rewriteable", "Magneto-Optical Write Once", "Magneto-Optical Rewriteable (LIMDOW)", "Phase Change Write Once", "Phase Change Rewriteable", "Phase Change Dual Rewriteable", "Ablative Write Once", "Near Field Recording", "MiniQic", "Travan", "8mm Metal Particle", "8mm Advanced Metal Evaporate", "NCTP", "LTO Ultrium", "LTO Accelis", "9 Track Tape", "18 Track Tape", "36 Track Tape", "Magstar 3590", "Magstar MP", "D2 Tape", "Tape - DST Small ", "Tape - DST Medium", "Tape - DST Large"} : Amended ToSubclass] uint16 MediaType;
  [Description("Additional detail related to the MediaType enumeration. For example, if value 3 (\"QIC Cartridge\") is specified, this property could indicate whether the tape is wide or 1/4 inch, whether it is pre-formatted, whether it is Travan compatible, etc.") : Amended ToSubclass] string MediaDescription;
  [Description("Boolean specifying whether the media is currently write protected by some kind of physical mechanism, such as a protect tab on a floppy diskette.") : Amended ToSubclass] boolean WriteProtectOn;
  [Description("Boolean indicating that the physical media is used for cleaning purposes and not data storage.") : Amended ToSubclass] boolean CleanerMedia;
};

[Description("CIM_MemoryWithMedia indicates that memory is associated with a physical media and its cartridge. The memory provides media identification and also stores user-specific data. ") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_MemoryWithMedia : CIM_Dependency
{
  [Description("The memory associated with physical media. ") : Amended ToSubclass] CIM_PhysicalMemory Ref Antecedent;
  [Description("The physical media.") : Amended ToSubclass] CIM_PhysicalMedia Ref Dependent;
};

[Description("Physical extents are realized on a physical media. This relationship is made explicit by the CIM_RealizesPExtent association.  In addition, the starting address of the physical extent on the physical media is specified here.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_RealizesPExtent : CIM_Realizes
{
  [Description("The physical media on which the extent is realized.") : Amended ToSubclass] CIM_PhysicalMedia Ref Antecedent;
  [Description("The physical extent that is located on the media.") : Amended ToSubclass] CIM_PhysicalExtent Ref Dependent;
  [Description("The starting address on the physical media where the physical extent begins.  Ending address of the physicalextent is determined using the NumberOfBlocks and BlockSize properties of the CIM_PhysicalExtent object.") : Amended ToSubclass] uint64 StartingAddress;
};

[Description("DiskPartitions can be directly realized on a PhysicalMedia. This is used to model the creation of Partitions on a raw SCSI or IDE drive, using the fdisk (DOS and Unix) or pdisk (Unix) command. The StartingAddress of the DiskPartition on the PhysicalMedia is also specified as a property of this relationship. An alternative is that Partitions can be BasedOn StorageVolumes, such as a VolumeSet or a Volume exposed by a hardware RAID cabinet. The latter relationship is modeled using the DiskPartitionBasedOnVolume association.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_RealizesDiskPartition : CIM_Realizes
{
  [Description("The physical media on which the extent is realized.") : Amended ToSubclass] CIM_PhysicalMedia Ref Antecedent;
  [Description("The disk partition that is located on the media.") : Amended ToSubclass] CIM_DiskPartition Ref Dependent;
  [Description("The starting address on the physical media where the disk partition begins.  Ending address of the partition is determined using the NumberOfBlocks and BlockSize properties of the disk partition object.") : Amended ToSubclass] uint64 StartingAddress;
};

[Description("CIM_AggregatePExtent is realized on a physical media. This relationship is made explicit by the CIM_RealizesAggregatePExtent association.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_RealizesAggregatePExtent : CIM_Realizes
{
  [Description("The physical media on which the extent is realized.") : Amended ToSubclass] CIM_PhysicalMedia Ref Antecedent;
  [Description("The CIM_AggregatePExtent that is located on the media.") : Amended ToSubclass] CIM_AggregatePExtent Ref Dependent;
};

[Description("The CIM_PhysicalLink class represents the cabling of physical elements together. For example, serial or Ethernet cables, and infrared Links would be subclasses (if additional properties or associations are defined) or instances of CIM_PhysicalLink. In many cases, the numerous physical cables within a physical package or network will not be modeled. However, where these cables or links are critical components, or are tagged assets of the company, these objects can be instantiated using this class or one of its descendent classes.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_PhysicalLink : CIM_PhysicalElement
{
  [Description("The maximum length of the physical link in feet.") : Amended ToSubclass,Units("feet") : Amended ToSubclass] real64 MaxLength;
  [Description("The current length of the physical link in feet. For some connections, especially wireless technologies, this property may not be applicable and should be left uninitialized.") : Amended ToSubclass,Units("feet") : Amended ToSubclass] real64 Length;
  [Description("Boolean indicating whether the physical link is an actual cable (TRUE) or a wireless connection (FALSE).") : Amended ToSubclass] boolean Wired;
  [Description("The MediaType property defines the particular type of media through which transmission signals pass. Common network media include twisted-pair (value=11 or 12), coaxial (7, 8 or 9) and fiber-optic cable (10).") : Amended ToSubclass,Values{"Unknown", "Other", "Cat1", "Cat2", "Cat3", "Cat4", "Cat5", "50-ohm Coaxial", "75-ohm Coaxial", "100-ohm Coaxial", "Fiber-optic", "UTP", "STP", "Ribbon Cable", "Twinaxial", "Optical 9um", "Optical 50um", "Optical 62.5um"} : Amended ToSubclass] uint16 MediaType;
};

[Description("The CIM_ElementsLinked association indicates which physical elements are cabled together by a physical link.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_ElementsLinked : CIM_Dependency
{
  [Description("The physical link.") : Amended ToSubclass] CIM_PhysicalLink Ref Antecedent;
  [Description("The physical element that is linked.") : Amended ToSubclass] CIM_PhysicalElement Ref Dependent;
};

[Description("The CIM_PhysicalConnector class represents any physical element that is used to connect to other elements. Any object that can be used to connect and transmit signals or power between two or more physical elements is a descendant (or member) of this class. For example, slots and D-shell connectors are types of physical connectors.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_PhysicalConnector : CIM_PhysicalElement
{
  [Description("A free-form string describing the pin configuration and signal usage of a physical connector.") : Amended ToSubclass] string ConnectorPinout;
  [Description("An array of integers defining the type of physical connector. An array is specified to allow the description of 'combinations' of connector information. For example, one array entry could specify RS-232 (value=25), another DB-25 (value=23) and a third entry define the connector as \"Male\" (value=2).") : Amended ToSubclass,Values{"Unknown", "Other", "Male", "Female", "Shielded", "Unshielded", "SCSI (A) High-Density (50 pins)", "SCSI (A) Low-Density (50 pins)", "SCSI (P) High-Density (68 pins)", "SCSI SCA-I (80 pins)", "SCSI SCA-II (80 pins)", "SCSI Fibre Channel (DB-9, Copper)", "SCSI Fibre Channel (Fibre)", "SCSI Fibre Channel SCA-II (40 pins)", "SCSI Fibre Channel SCA-II (20 pins)", "SCSI Fibre Channel BNC", "ATA 3-1/2 Inch (40 pins)", "ATA 2-1/2 Inch (44 pins)", "ATA-2", "ATA-3", "ATA/66", "DB-9", "DB-15", "DB-25", "DB-36", "RS-232C", "RS-422", "RS-423", "RS-485", "RS-449", "V.35", "X.21", "IEEE-488", "AUI", "UTP Category 3", "UTP Category 4", "UTP Category 5", "BNC", "RJ11", "RJ45", "Fiber MIC", "Apple AUI", "Apple GeoPort", "PCI", "ISA", "EISA", "VESA", "PCMCIA", "PCMCIA Type I", "PCMCIA Type II", "PCMCIA Type III", "ZV Port", "CardBus", "USB", "IEEE 1394", "HIPPI", "HSSDC (6 pins)", "GBIC", "DIN", "Mini-DIN", "Micro-DIN", "PS/2", "Infrared", "HP-HIL", "Access.bus", "NuBus", "Centronics", "Mini-Centronics", "Mini-Centronics Type-14", "Mini-Centronics Type-20", "Mini-Centronics Type-26", "Bus Mouse", "ADB", "AGP", "VME Bus", "VME64", "Proprietary", "Proprietary Processor Card Slot", "Proprietary Memory Card Slot", "Proprietary I/O Riser Slot", "PCI-66MHZ", "AGP2X", "AGP4X", "PC-98", "PC-98-Hireso", "PC-H98", "PC-98Note", "PC-98Full", "SSA SCSI", "Circular", "On Board IDE Connector", "On Board Floppy Connector", "9 Pin Dual Inline", "25 Pin Dual Inline", "50 Pin Dual Inline", "68 Pin Dual Inline", "On Board Sound Connector", "Mini-jack", "PCI-X", "Sbus IEEE 1396-1993 32 bit", "Sbus IEEE 1396-1993 64 bit", "MCA", "GIO", "XIO", "HIO", "NGIO", "PMC", "MTRJ", "VF-45", "Future I/O", "SC", "SG", "Electrical", "Optical", "Ribbon", "GLM", "1x9", "Mini SG", "LC", "HSSC", "VHDCI Shielded (68 pins)", "InfiniBand"} : Amended ToSubclass] uint16 ConnectorType[];
};

[Description("The CIM_ConnectedTo association indicates that two or more physical connectors are connected together.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_ConnectedTo : CIM_Dependency
{
  [Description("The Antecedent represents a physical connector that serves as one end of the connection.") : Amended ToSubclass] CIM_PhysicalConnector Ref Antecedent;
  [Description("The Dependent represents another physical connector that serves as the other end of the connection.") : Amended ToSubclass] CIM_PhysicalConnector Ref Dependent;
};

[Description("The Slot class represents Connectors into which Packages are inserted. For example, a PhysicalPackage that is a DiskDrive may be inserted into an SCA 'Slot'. As another example, a Card (subclass of PhysicalPackage) may be inserted into a 16-, 32-, or 64-bit expansion 'Slot' on a HostingBoard. PCI or PCMCIA Type III Slots are examples of the latter.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_Slot : CIM_PhysicalConnector
{
  [Description("Boolean indicating whether the slot supports hot-plug of adapter cards.") : Amended ToSubclass] boolean SupportsHotPlug;
  [Description("Maximum height of an adapter card that can be inserted into the slot, in inches.") : Amended ToSubclass,Units("inches") : Amended ToSubclass] real32 HeightAllowed;
  [Description("Maximum length of an adapter card that can be inserted into the slot, in inches.") : Amended ToSubclass,Units("inches") : Amended ToSubclass] real32 LengthAllowed;
  [Description("Maximum bus width of adapter cards that can be inserted into this slot, in bits.") : Amended ToSubclass,Units("bits") : Amended ToSubclass,Values{"8", "16", "32", "64", "128"} : Amended ToSubclass] uint16 MaxDataWidth;
  [Description("An array of enumerated integers indicating the Vcc voltage supported by this slot.") : Amended ToSubclass,Values{"Unknown", "Other", "3.3V", "5V"} : Amended ToSubclass] uint16 VccMixedVoltageSupport[];
  [Description("An array of enumerated integers indicating the Vpp voltage supported by this slot.") : Amended ToSubclass,Values{"Unknown", "Other", "3.3V", "5V", "12V"} : Amended ToSubclass] uint16 VppMixedVoltageSupport[];
  [Description("Maximum thermal dissipation of the slot in milliwatts.") : Amended ToSubclass,Units("milliwatts") : Amended ToSubclass] uint32 ThermalRating;
  [Description("Boolean indicating that this slot is physically unique and may hold special types of hardware, e.g. a graphics processor slot. If set to TRUE, then the property, PurposeDescription property (a string), should specify the nature of the uniqueness or purpose of the slot.") : Amended ToSubclass] boolean SpecialPurpose;
  [Description("A free-form string describing that this slot is physically unique and may hold special types of hardware. This property only has meaning when the corresponding boolean property, SpecialPurpose, is set to TRUE.") : Amended ToSubclass] string PurposeDescription;
  [Description("The Number property indicates the physical slot number, which can be used as an index into a system slot table, whether or not that slot is physically occupied.") : Amended ToSubclass] uint16 Number;
};

[Description("Slots are special types of connectors into which adapter cards are typically inserted. The CIM_SlotInSlot relationship represents the ability of a special adapter to extend the existing slot structure to enable otherwise incompatible cards to be plugged into a frame or hosting board. The adapter effectively creates a new slot and can be thought of (conceptually) as a slot in a slot. This enables cards that would otherwise be physically and/or electrically incompatible with the existing slots to be supported, by interfacing to the slot provided by the adapter. This has many practical uses. For example, networking boards are very expensive. As new hardware becomes available, chassis and even card configurations change. To protect the investment of their customers, networking vendors will manufacture special adapters that enable old cards to fit into new chassis or HostingBoards and/or new cards to fit into old. This is done using a special adapter that fits over one or more existing slots and presents a new slot into which the card can plug.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_SlotInSlot : CIM_ConnectedTo
{
  [Description("The Antecedent reference represents the existing slot(s) of the hosting board, or frame that are being adapted to accommodate a card that would otherwise not be physically and/or electrically compatible with it.") : Amended ToSubclass] CIM_Slot Ref Antecedent;
  [Description("The new slot provided by the adapter board.") : Amended ToSubclass] CIM_Slot Ref Dependent;
};

[Description("CIM_AdjacentSlots describes the layout of slots on a hosting board or adapter card.  Information like the distance between the slots and whether they are 'shared' (if one is populated, then the other slot can not be used), is conveyed as properties of the association.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_AdjacentSlots
{
  [Description("One of the adjacent slots.") : Amended ToSubclass] CIM_Slot Ref SlotA;
  [Description("The 'other' adjacent slot.") : Amended ToSubclass] CIM_Slot Ref SlotB;
  [Description("The distance, in inches, between adjacent slots.") : Amended ToSubclass,Units("inches") : Amended ToSubclass] real32 DistanceBetweenSlots;
  [Description("Slots can be located in close proximity on hostingboards or other cards, such that if one of these slots is populated by an adapter card, the other slot must be left empty. This relationship is indicated by the SharedSlots boolean set to TRUE.") : Amended ToSubclass] boolean SharedSlots;
};

[Description("Complex networking devices often are chassis-based. These chassis allow for enhancement and/or augmentation of their base functionality by accepting additional chassis devices, similar to accepting functionality in the form of adding cards. This association models this capability.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_PackageInSlot : CIM_Dependency
{
  [Description("The slot into which the physical package is inserted.") : Amended ToSubclass] CIM_Slot Ref Antecedent;
  [Description("The package in the slot.") : Amended ToSubclass] CIM_PhysicalPackage Ref Dependent;
};

[Description("Slots are special types of connectors into which adapter cards are inserted. This relationship of a card in a slot is made explicit using the CIM_CardInSlot association.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_CardInSlot : CIM_PackageInSlot
{
  [Description("The slot into which the card is inserted.") : Amended ToSubclass] CIM_Slot Ref Antecedent;
  [Description("The card in the slot.") : Amended ToSubclass] CIM_Card Ref Dependent;
};

[Description("Cables and links utilize physical connectors to actually 'connect' physical elements. This association explicitly defines this relationship of connectors for CIM_PhysicalLink.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_LinkHasConnector : CIM_Component
{
  [Description("The physical link that has a connector.") : Amended ToSubclass] CIM_PhysicalLink Ref GroupComponent;
  [Description("The physical connector.") : Amended ToSubclass] CIM_PhysicalConnector Ref PartComponent;
};

[Description("Physical packages contain connectors as well as other physical elements. The CIM_ConnectorOnPackage association makes explicit the containment relationship between connectors and packages.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_ConnectorOnPackage : CIM_Container
{
  [Description("The physical package that has a connector.") : Amended ToSubclass] CIM_PhysicalPackage Ref GroupComponent;
  [Description("The physical connector.") : Amended ToSubclass] CIM_PhysicalConnector Ref PartComponent;
};

[Description("Similar to the way that logical devices are 'Realized' by physical elements, unitary computer systems are realized in one or more physical packages. The CIM_ComputerSystemPackage association explicitly defines this relationship.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_ComputerSystemPackage : CIM_Dependency
{
  [Description("The physical package(s) that realize a unitary computer system.") : Amended ToSubclass] CIM_PhysicalPackage Ref Antecedent;
  [Description("The unitary computer system.") : Amended ToSubclass] CIM_UnitaryComputerSystem Ref Dependent;
};

[Description("Often, a cooling device is installed in a package such as a chassis or a rack, not for a specific device, but to assist in the cooling of the package in general.  This relationship is described by the CIM_PackageCooling association.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_PackageCooling : CIM_Dependency
{
  [Description("The cooling device for the package.") : Amended ToSubclass] CIM_CoolingDevice Ref Antecedent;
  [Description("The physical package whose environment is cooled.") : Amended ToSubclass] CIM_PhysicalPackage Ref Dependent;
};

[Description("Often, a temperature sensor is installed in a package such as a chassis or a rack, not to measure any particular device, but the package's environment in general.  This relationship is described by the CIM_PackageTempSensor association.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_PackageTempSensor : CIM_Dependency
{
  [Description("The temperature sensor for the package.") : Amended ToSubclass] CIM_TemperatureSensor Ref Antecedent;
  [Description("The physical package whose environment is monitored.") : Amended ToSubclass] CIM_PhysicalPackage Ref Dependent;
};

[Description("Often, an alarm device is installed as part of a package, not to indicate issues with any particular logical device or physical component, but with the package's environment in general, its security state or its overall health. This relationship is described by the CIM_PackageAlarm association. ") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_PackageAlarm : CIM_Dependency
{
  [Description("The alarm device for the package. ") : Amended ToSubclass] CIM_AlarmDevice Ref Antecedent;
  [Description("The physical package whose health, security, environment, etc. is alarmed. ") : Amended ToSubclass] CIM_PhysicalPackage Ref Dependent;
};

[Description("The CIM_ActsAsSpare association indicates which elements can spare or replace the other aggregated elements.  The fact that a spare can operate in \"hot standby\" mode is specified on an element by element basis.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_ActsAsSpare
{
  [Description("The Group reference represents the CIM_SpareGroup.") : Amended ToSubclass] CIM_SpareGroup Ref Group;
  [Description("HotStandby property is a boolean indicating that the spare is operating as a hot standby.") : Amended ToSubclass] BOOLEAN HotStandby;
  [Description("A managed system element acting as a spare and participating in the spare group.") : Amended ToSubclass] CIM_ManagedSystemElement Ref Spare;
};

[Description("CIM_CompatibleProduct is an association between products that can indicate a wide variety of information. For example, it can indicate that the two referenced products interoperate, that they can be installed together, that one can be the physical container for the other, etc. The string property, CompatibilityDescription, defines how the products interoperate or are compatible, any limitations regarding interoperability or installation, ...") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_CompatibleProduct
{
  [Description("CompatibilityDescription is a free-form string defining how the two referenced products interoperate or are compatible, any limitations to compatibility, etc.") : Amended ToSubclass] STRING CompatibilityDescription;
  [Description("The compatible product.") : Amended ToSubclass] CIM_Product Ref CompatibleProduct;
  [Description("The product for which compatible offerings are defined.") : Amended ToSubclass] CIM_Product Ref Product;
};

[Description("The CIM_CollectionOfSensors association indicates the binary sensors that make up the multi-state sensor.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_CollectionOfSensors : CIM_Component
{
  [Description("The multi-state sensor.") : Amended ToSubclass] CIM_MultiStateSensor Ref GroupComponent;
  [Description("A binary sensor that is part of the multi-state sensor.") : Amended ToSubclass] CIM_BinarySensor Ref PartComponent;
};

[Description("A link between the file system and the logical file(s) addressed through this file system.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_FileStorage : CIM_Component
{
  [Description("The file system.") : Amended ToSubclass] CIM_FileSystem Ref GroupComponent;
  [Description("The logical file stored in the context of the file system.") : Amended ToSubclass] CIM_LogicalFile Ref PartComponent;
};

[Description("Indicates the software features that make up the operating system. The software features can be part of different products.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_OperatingSystemSoftwareFeature : CIM_Component
{
  [Description("The operating system.") : Amended ToSubclass] CIM_OperatingSystem Ref GroupComponent;
  [Description("The software features that make up the operating system.") : Amended ToSubclass] CIM_SoftwareFeature Ref PartComponent;
};

[Description("A link between the operating system and one or more processes running in the context of this operating system.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_OSProcess : CIM_Component
{
  [Description("The operating system.") : Amended ToSubclass] CIM_OperatingSystem Ref GroupComponent;
  [Description("The process running in the context of the operating system") : Amended ToSubclass] CIM_Process Ref PartComponent;
};

[Description("A link between a process and the thread(s) running in the context of this process.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_ProcessThread : CIM_Component
{
  [Description("The process.") : Amended ToSubclass] CIM_Process Ref GroupComponent;
  [Description("The thread running in the context of the process.") : Amended ToSubclass] CIM_Thread Ref PartComponent;
};

[Description("The CIM_RedundancyComponent class associates a redundancy group composed of managed system elements and indicates that these elements, taken together, provide redundancy. All elements aggregated in a redundancy group should be instantiations of the same object class.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_RedundancyComponent : CIM_Component
{
  [Description("The CIM_RedundancyComponent association indicates that 'this set of fans' or 'these physical extents' participate in a single redundancy group.") : Amended ToSubclass] CIM_RedundancyGroup Ref GroupComponent;
};

[Description("Describes the aggregate physical extent in a storage redundancy group.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_AggregateRedundancyComponent : CIM_RedundancyComponent
{
  [Description("The storage redundancy group.") : Amended ToSubclass] CIM_StorageRedundancyGroup Ref GroupComponent;
  [Description("The aggregate physical extent participating in the redundancy group.") : Amended ToSubclass] CIM_AggregatePExtent Ref PartComponent;
};

[Description("Describes the physical extents participating in a storage redundancy group.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_PExtentRedundancyComponent : CIM_RedundancyComponent
{
  [Description("The storage redundancy group.") : Amended ToSubclass] CIM_StorageRedundancyGroup Ref GroupComponent;
  [Description("The physical extent participating in the redundancy group.") : Amended ToSubclass] CIM_PhysicalExtent Ref PartComponent;
};

[Description("An association between a computer system and the system resources available on it.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_ComputerSystemResource : CIM_SystemComponent
{
  [Description("The computer system.") : Amended ToSubclass] CIM_ComputerSystem Ref GroupComponent;
  [Description("A system resource of the computer system.") : Amended ToSubclass] CIM_SystemResource Ref PartComponent;
};

[Description("An association between a computer system and the DMA channels available on it.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_ComputerSystemDMA : CIM_ComputerSystemResource
{
  [Description("A DMA channel of the computer system.") : Amended ToSubclass] CIM_DMA Ref PartComponent;
};

[Description("An association between a computer system and the IRQs available on it.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_ComputerSystemIRQ : CIM_ComputerSystemResource
{
  [Description("An IRQ of the computer system.") : Amended ToSubclass] CIM_IRQ Ref PartComponent;
};

[Description("An association between a computer system and the memory mapped I/O ports available on it.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_ComputerSystemMappedIO : CIM_ComputerSystemResource
{
  [Description("A memory mapped I/O port of the computer system.") : Amended ToSubclass] CIM_MemoryMappedIO Ref PartComponent;
};

[Description("A link between the computer system and the file system(s) hosted on this computer system.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_HostedFileSystem : CIM_SystemComponent
{
  [Description("The computer system.") : Amended ToSubclass] CIM_ComputerSystem Ref GroupComponent;
  [Description("The file system owned by the computer system.") : Amended ToSubclass] CIM_FileSystem Ref PartComponent;
};

[Description("The Configuration object allows the grouping of sets of parameters (defined in CIM_Setting objects) and dependencies for one or more managed system elements. The Configuration object represents a certain behavior, or a desired functional state for the managed system elements. The desired functional state is typically driven by external requirements such as time or location. For example, to connect to a mail system from 'home', a dependency on a modem exists, but a dependency on a network adapter exists at 'work'. Settings for the pertinent logical devices (in this example, POTS modem and network adapter) can be defined and aggregated by CIM_Configuration. Therefore, two 'Connect to Mail' configurations may be defined grouping the relevant dependencies and CIM_Setting objects.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_Configuration
{
  [Description("A short textual description (one-line string) of the CIM_Configuration object.") : Amended ToSubclass] STRING Caption;
  [Description("A textual description of the CIM_Configuration object.") : Amended ToSubclass] STRING Description;
  [Description("The label by which the CIM_Configuration object is known.") : Amended ToSubclass,Key : ToInstance ToSubclass DisableOverride] STRING Name;
};

[Description("Logical devices may have one or more alarm devices associated with them, in order to indicate problem situations. This relationship is indicated by the CIM_AssociatedAlarm dependency. ") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_AssociatedAlarm : CIM_Dependency
{
  [Description("The alarm device. ") : Amended ToSubclass] CIM_AlarmDevice Ref Antecedent;
  [Description("The logical device that is alarmed. ") : Amended ToSubclass] CIM_LogicalDevice Ref Dependent;
};

[Description("Many devices, such as processors or power supplies, require their own cooling devices.  This association indicates where fans or other cooling devices are specific to a device, versus providing enclosure or cabinet cooling.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_AssociatedCooling : CIM_Dependency
{
  [Description("The cooling device.") : Amended ToSubclass] CIM_CoolingDevice Ref Antecedent;
  [Description("The logical device being cooled.") : Amended ToSubclass] CIM_LogicalDevice Ref Dependent;
};

[Description("A power supply may have an associated current sensor, monitoring its input frequency. This is described by this association.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_AssociatedSupplyCurrentSensor : CIM_AssociatedSensor
{
  [Description("The current sensor.") : Amended ToSubclass] CIM_CurrentSensor Ref Antecedent;
  [Description("The power supply associated with the current sensor.") : Amended ToSubclass] CIM_PowerSupply Ref Dependent;
  [Description("Indicates the power supply's input frequency range measured by the associated sensor. Range 1, 2 or both can be specified using the values 2, 3 or 4, respectively.") : Amended ToSubclass,Values{"Unknown", "Other", "Range 1", "Range 2", "Both Range 1 and 2"} : Amended ToSubclass] UINT16 MonitoringRange;
};

[Description("A power supply may have an associated voltage sensor, monitoring its input voltage. This is described by this association.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_AssociatedSupplyVoltageSensor : CIM_AssociatedSensor
{
  [Description("The voltage sensor.") : Amended ToSubclass] CIM_VoltageSensor Ref Antecedent;
  [Description("The power supply associated with the voltage sensor.") : Amended ToSubclass] CIM_PowerSupply Ref Dependent;
  [Description("Indicates the power supply's input voltage range measured by the associated sensor. Range 1, 2 or both can be specified using the values 2, 3 or 4, respectively.") : Amended ToSubclass,Values{"Unknown", "Other", "Range 1", "Range 2", "Both Range 1 and 2"} : Amended ToSubclass] UINT16 MonitoringRange;
};

[Description("LogicalDisks can be BasedOn a single Volume (for example, exposed by a software volume manager), or be BasedOn a DiskPartition directly. The former relationship is made explicit in this association.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_LogicalDiskBasedOnVolumeSet : CIM_BasedOn
{
  [Description("The volume set.") : Amended ToSubclass] CIM_VolumeSet Ref Antecedent;
  [Description("The logical disk which is built on the volume set.") : Amended ToSubclass] CIM_LogicalDisk Ref Dependent;
};

[Description("Protected space extents are based on a physical extent. This relationship is made explicit in this association.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_PSExtentBasedOnPExtent : CIM_BasedOn
{
  [Description("The physical extent.") : Amended ToSubclass] CIM_PhysicalExtent Ref Antecedent;
  [Description("The protected space extent which is built on the physical extent.") : Amended ToSubclass] CIM_ProtectedSpaceExtent Ref Dependent;
};

[Description("A link between BIOS element and non-volatile storage where the BIOS is loaded.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_BIOSLoadedInNV : CIM_Dependency
{
  [Description("The non-volatile storage.") : Amended ToSubclass] CIM_NonVolatileStorage Ref Antecedent;
  [Description("The BIOS stored in the non-volatile extent.") : Amended ToSubclass] CIM_BIOSElement Ref Dependent;
  [Description("The ending address where the BIOS is located in non-volatile storage.") : Amended ToSubclass] UINT64 EndingAddress;
  [Description("The starting address where the BIOS is located in non-volatile storage.") : Amended ToSubclass] UINT64 StartingAddress;
};

[Description("A link between the operating system and the file system(s) from which this operating system is loaded. The association is many-to-many since a distributed OS could depend on several file systems in order to correctly and completely load.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_BootOSFromFS : CIM_Dependency
{
  [Description("The file system from which the operating system is loaded.") : Amended ToSubclass] CIM_FileSystem Ref Antecedent;
  [Description("The operating system.") : Amended ToSubclass] CIM_OperatingSystem Ref Dependent;
};

[Description("Specifies the logical device that is associated with, and accessed using the referenced CIM_DeviceFile.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_DeviceAccessedByFile : CIM_Dependency
{
  [Description("The device file.") : Amended ToSubclass] CIM_DeviceFile Ref Antecedent;
  [Description("The device that is accessed using the device file.") : Amended ToSubclass] CIM_LogicalDevice Ref Dependent;
};

[Description("CIM_SCSIInterface is a CIM_ControlledBy relationship indicating which devices are accessed through a SCSI controller and the characteristics of this access.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_SCSIInterface : CIM_ControlledBy
{
  [Description("The SCSI controller.") : Amended ToSubclass] CIM_SCSIController Ref Antecedent;
  [Description("The logical device.") : Amended ToSubclass] CIM_LogicalDevice Ref Dependent;
  [Description("Number of SCSI retries that have occurred since last hard or soft reset related to the controlled Device. The time of last reset is indicated in the TimeOfDeviceReset property, inherited from the ControlledBy association.") : Amended ToSubclass] UINT32 SCSIRetries;
  [Description("Number of SCSI timeouts that have occurred since last hard or soft reset related to the controlled Device. The time of last reset is indicated in the TimeOfDeviceReset property, inherited from the ControlledBy association.") : Amended ToSubclass] UINT32 SCSITimeouts;
};

[Description("CIM_SerialInterface is a CIM_ControlledBy relationship indicating which devices are accessed through the serial controller and the characteristics of this access.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_SerialInterface : CIM_ControlledBy
{
  [Description("The serial controller.") : Amended ToSubclass] CIM_SerialController Ref Antecedent;
  [Description("The logical device.") : Amended ToSubclass] CIM_LogicalDevice Ref Dependent;
  [Description("An integer enumeration indicating the flow control (Xon-Xoff and/or RTS/CTS) for transmitted data.") : Amended ToSubclass,Values{"Unknown", "Not Supported", "None", "XonXoff", "RTS/CTS", "Both XonXoff and RTS/CTS"} : Amended ToSubclass] UINT16 FlowControlInfo;
  [Description("Number of stop bits to be transmitted.") : Amended ToSubclass,Units("bits") : Amended ToSubclass] UINT16 NumberOfStopBits;
  [Description("Information on the parity setting for transmitted data. No parity (value=1), even (2) or odd (3) can be specified.") : Amended ToSubclass,Values{"Unknown", "None", "Even", "Odd"} : Amended ToSubclass] UINT16 ParityInfo;
};

[Description("An association between a service and how it is implemented. The cardinality of this association is many-to-many. A service may be provided by more than one logical device, operating in conjunction.  And, any device may provide more than one service.  When multiple devices are associated with a single service, it is assumed that these elements operate in conjunction to provide the service.  If different implementations of a service exist, each of these implementations would result in individual instantiations of the service object.  These individual instantiations would then have associations to the unique implementations.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_DeviceServiceImplementation : CIM_Dependency
{
  [Description("The logical device.") : Amended ToSubclass] CIM_LogicalDevice Ref Antecedent;
  [Description("The service implemented using the logical device.") : Amended ToSubclass] CIM_Service Ref Dependent;
};

[Description("The CIM_DeviceSoftware relationship identifies any software that is associated with a device - such as drivers, configuration or application software, or firmware.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_DeviceSoftware : CIM_Dependency
{
  [Description("The software element.") : Amended ToSubclass] CIM_SoftwareElement Ref Antecedent;
  [Description("The logical device that requires or uses the software.") : Amended ToSubclass] CIM_LogicalDevice Ref Dependent;
  [Description("An enumerated integer to indicate the role this software plays in regards to its associated device. For example, this software could be instrumentation (value=5) or firmware (6).") : Amended ToSubclass,Values{"Unknown", "Other", "Driver", "Configuration Software", "Application Software", "Instrumentation", "Firmware", "BIOS", "Boot ROM"} : Amended ToSubclass] UINT16 Purpose;
  [Description("A free-form string to provide more information for the Purpose property, e.g. \"Application Software\".") : Amended ToSubclass] STRING PurposeDescription;
};

[Description("CIM_HostedAccessPoint is an association between a serviceaccess point and the system on which it is provided.  The cardinality of this association is 1-to-many and is weak with respect to the system. Each system may host many service access points.  Heuristic:  If the implementation of the service access point is modeled, it must be implemented by a device or software feature that is part of the system hosting the service access point.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_HostedAccessPoint : CIM_Dependency
{
  [Description("The hosting system.") : Amended ToSubclass] CIM_System Ref Antecedent;
  [Description("The SAP(s) that are hosted on this system.") : Amended ToSubclass] CIM_ServiceAccessPoint Ref Dependent;
};

[Description("CIM_HostedBootSAP defines the hosting unitary computer system for a CIM_BootSAP. Since this relationship is subclassed from CIM_HostedAccessPoint, it inherits the scoping/naming scheme defined for CIM_ServiceAccessPoint - where an access point is weak to its hosting system.  In this case, CIM_BootSAP must be weak to its hosting CIM_UnitaryComputerSystem.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_HostedBootSAP : CIM_HostedAccessPoint
{
  [Description("The unitary computer system.") : Amended ToSubclass] CIM_UnitaryComputerSystem Ref Antecedent;
  [Description("The Boot SAP hosted on the unitary computer system.") : Amended ToSubclass] CIM_BootSAP Ref Dependent;
};

[Description("An association between a job destination and a system on which it resides. The cardinality of this association is 1-to-many.  A system may host many job queues. Job destinations are weak with respect to their hosting system. Heuristic: A job destination is hosted on the system where the logical devices, software features or services that implement/provide the job destination are located.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_HostedJobDestination : CIM_Dependency
{
  [Description("The hosting system.") : Amended ToSubclass] CIM_System Ref Antecedent;
  [Description("The job destination hosted on the system.") : Amended ToSubclass] CIM_JobDestination Ref Dependent;
};

[Description("CIM_HostedService is an association between a service and the system on which the functionality resides.  The cardinality of this association is 1-to-many.  A system may host many services. services are weak with respect to their hosting system. Heuristic:  A service is hosted on the system where the logical devices or software features that implement the service are located.  The model does not represent services hosted across multiple systems.  This is modeled as an application system that acts as an aggregation point for services, that are each located on a single host.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_HostedService : CIM_Dependency
{
  [Description("The hosting system.") : Amended ToSubclass] CIM_System Ref Antecedent;
  [Description("The service hosted on the system.") : Amended ToSubclass] CIM_Service Ref Dependent;
};

[Description("CIM_HostedBootService defines the hosting system for a boot service. Since this relationship is subclassed from CIM_HostedService, it inherits the scoping/naming scheme defined for service - where a service is weak to its hosting system.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_HostedBootService : CIM_HostedService
{
  [Description("The boot service hosted on the system.") : Amended ToSubclass] CIM_BootService Ref Dependent;
};

[Description("An association describing where a job is submitted for processing, i.e. to which job destination.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_JobDestinationJobs : CIM_Dependency
{
  [Description("The job destination, possibly a queue.") : Amended ToSubclass] CIM_JobDestination Ref Antecedent;
  [Description("The job that is in the job queue/Destination.") : Amended ToSubclass] CIM_Job Ref Dependent;
};

[Description("An association between a FileSystem and the StorageExtent where it is located. Typically, a FileSystem ResidesOn a LogicalDisk.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_ResidesOnExtent : CIM_Dependency
{
  [Description("The storage extent.") : Amended ToSubclass] CIM_StorageExtent Ref Antecedent;
  [Description("The file system that is located on the storage extent.") : Amended ToSubclass] CIM_FileSystem Ref Dependent;
};

[Description("CIM_RunningOS indicates the currently executing operating system. At most one operating system can execute at any time on a computer system. 'At most one' is specified, since the computer system may not be currently booted, or its operating system may be unknown.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_RunningOS : CIM_Dependency
{
  [Description("The operating system currently running on the computer system.") : Amended ToSubclass] CIM_OperatingSystem Ref Antecedent;
  [Description("The computer system.") : Amended ToSubclass] CIM_ComputerSystem Ref Dependent;
};

[Description("This relationship associates a CIM_Dependency with one or more CIM_Configuration objects. For example, a computer system's dependencies could change based on the site/network to which the system is attached.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_DependencyContext
{
  [Description("The configuration object that aggregates the dependency.") : Amended ToSubclass] CIM_Configuration Ref Context;
  [Description("An aggregated dependency.") : Amended ToSubclass] CIM_Dependency Ref Dependency;
};

[Description(" The CIM_DirectorySpecificationFile association identifies the   directorythat contains the file being specified by referencing  the CIM_DirectorySpecification class. ") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_DirectorySpecificationFile
{
  [Description("The directory specification.") : Amended ToSubclass] CIM_DirectorySpecification Ref DirectorySpecification;
  [Description("The file specification.") : Amended ToSubclass] CIM_FileSpecification Ref FileSpecification;
};

[Description("This association relates a CIM_Configuration object to one or more managed system elements. The CIM_Configuration object represents a certain behavior, or a desired functional state for the associated CIM_ManagedSystemElement.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_ElementConfiguration
{
  [Description("The CIM_Configuration object that groups the settings and dependencies associated with the managed system element.") : Amended ToSubclass] CIM_Configuration Ref Configuration;
  [Description("The managed system element.") : Amended ToSubclass] CIM_ManagedSystemElement Ref Element;
};

[Description("The CIM_FromDirectoryAction association identifies the source directory  for the file action. When this association is used, the assumption  is that the source directory was created by a previous action.  This association cannot exist with a CIM_FromDirectorySpecification  association since a file action can only  involve a single source directory. ") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_FromDirectoryAction
{
  [Description("The file name.") : Amended ToSubclass] CIM_FileAction Ref FileName;
  [Description("The source directory.") : Amended ToSubclass] CIM_DirectoryAction Ref SourceDirectory;
};

[Description("The CIM_FromDirectorySpecification association identifies the source  directory for the file action. When this association is used,  the assumption is that the source directory already existed.  This association cannot exist with a  CIM_FromDirectoryAction association since a file action  can only involve single source directory.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_FromDirectorySpecification
{
  [Description("The file name.") : Amended ToSubclass] CIM_FileAction Ref FileName;
  [Description("The source directory.") : Amended ToSubclass] CIM_DirectorySpecification Ref SourceDirectory;
};

[Description("The CIM_FRU class is a vendor-defined collection of products and/or physical elements that is associated with a product for the purpose of supporting, maintaining or upgrading that product at the customer's location. FRU is an acronym for 'field replaceable unit'. ") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_FRU
{
  [Description("A short textual description (one-line string) for the FRU.") : Amended ToSubclass] STRING Caption;
  [Description("A textual description of the FRU.") : Amended ToSubclass] STRING Description;
  [Description("FRU ordering information.") : Amended ToSubclass,Key : ToInstance ToSubclass DisableOverride] STRING FRUNumber;
  [Description("FRU identification such as a serial number on software or a die number on a hardware chip.") : Amended ToSubclass,Key : ToInstance ToSubclass DisableOverride] STRING IdentifyingNumber;
  [Description("FRU name.") : Amended ToSubclass] STRING Name;
  [Description("The FRU's revision level.") : Amended ToSubclass] STRING RevisionLevel;
  [Description("The name of the FRU's supplier.") : Amended ToSubclass,Key : ToInstance ToSubclass DisableOverride] STRING Vendor;
};

[Description("Indicates that a FRU may be composed of other product(s).") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_FRUIncludesProduct
{
  [Description("The product which is a part of the FRU.") : Amended ToSubclass] CIM_Product Ref Component;
  [Description("The FRU.") : Amended ToSubclass] CIM_FRU Ref FRU;
};

[Description("Indicates the physical elements that make up a FRU.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_FRUPhysicalElements
{
  [Description("The physical element which is a part of the FRU.") : Amended ToSubclass] CIM_PhysicalElement Ref Component;
  [Description("The FRU.") : Amended ToSubclass] CIM_FRU Ref FRU;
};

[Description("A file or data set store local to a computer system or remotely mounted from a file server.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_FileSystem : CIM_LogicalElement
{
  [Description("AvailableSpace indicates the total amount of free space for the file system, in bytes. If unknown, enter 0.") : Amended ToSubclass,Units("bytes") : Amended ToSubclass] UINT64 AvailableSpace;
  [Description("File systems can read/write data in blocks which are defined independently of the underlying storage extents. This property captures the file system's block size for data storage and retrieval.") : Amended ToSubclass,Units("bytes") : Amended ToSubclass] UINT64 BlockSize;
  [Description("Indicates that the case of file names are preserved.") : Amended ToSubclass] BOOLEAN CasePreserved;
  [Description("Indicates that case sensitive file names are supported.") : Amended ToSubclass] BOOLEAN CaseSensitive;
  [Description("Array defining the character sets or encoding supported by the FileSystem. For example, the values, \"ASCII\" (2) or \"ISO2022\" (4), may be specified.") : Amended ToSubclass,Values{"Unknown", "Other", "ASCII", "Unicode", "ISO2022", "ISO8859", "Extended UNIX Code", "UTF-8", "UCS-2"} : Amended ToSubclass] UINT16 CodeSet[];
  [Description("A free form string indicating the algorithm or tool used to compress the file system. If it is not possible or not desired to describe the compression scheme (perhaps because it is not known), recommend using the following words: \"Unknown\" to represent that it is not known whether the file system is compressed or not, \"Compressed\" to represent that the file system is compressed but either its compression scheme is not known or not disclosed, and \"Not Compressed\" to represent that the file system is not compressed.") : Amended ToSubclass] STRING CompressionMethod;
  [Description("CreationClassName indicates the name of the class or the subclass used in the creation of an instance. When used with the other key properties of this class, this property allows all instances of this class and its subclasses to be uniquely identified.") : Amended ToSubclass,Key : ToInstance ToSubclass DisableOverride] STRING CreationClassName;
  [Description("The scoping computer system's creation class name.") : Amended ToSubclass,Key : ToInstance ToSubclass DisableOverride] STRING CSCreationClassName;
  [Description("The scoping computer system's name.") : Amended ToSubclass,Key : ToInstance ToSubclass DisableOverride] STRING CSName;
  [Description("A free form string indicating the algorithm or tool used to encrypt the file system. If it is not possible or not desired to describe the encryption scheme (perhaps for security reasons), recommend using the following words: \"Unknown\" to represent that it is not known whether the file system is encrypted or not, \"Encrypted\" to represent that the file system is encrypted but either its encryption scheme is not known or not disclosed, and \"Not Encrypted\" to represent that the file system is not encrypted.") : Amended ToSubclass] STRING EncryptionMethod;
  [Description("The FileSystemSize property stores the total size of the file system in bytes. If unknown, enter 0.") : Amended ToSubclass,Units("bytes") : Amended ToSubclass] UINT64 FileSystemSize;
  [Description("Integer indicating the maximum length of a file name within the file system. 0 indicates that there is no limit on file name length.") : Amended ToSubclass] UINT32 MaxFileNameLength;
  [Description("Indicates that the file system is designated as read only.") : Amended ToSubclass] BOOLEAN ReadOnly;
  [Description("Path name or other information defining the root of the file system.") : Amended ToSubclass] STRING Root;
};

[Description("A class derived from FileSystem that represents the file store controlled by a ComputerSystem through local means (e.g., direct device driver access). In this case, the file store is managed directly by the ComputerSystem without the need for another computer to act as a file server. This definition does not breakdown in the case of a Clustered File System. In this scenario, the FileSystem is a LocalFileSystem, weak to the Cluster.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_LocalFileSystem : CIM_FileSystem
{
};

[Description("CIM_JobDestination is a logical element representing where a job is submitted for processing. It can refer to a queue that contains zero or more jobs, such as a print queue containing print jobs. job destinations are hosted on systems, similar to the way that services are hosted on systems.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_JobDestination : CIM_LogicalElement
{
  [Description("CreationClassName indicates the name of the class or the subclass used in the creation of an instance. When used with the other key properties of this class, this property allows all instances of this class and its subclasses to be uniquely identified.") : Amended ToSubclass,Key : ToInstance ToSubclass DisableOverride] STRING CreationClassName;
  [Description("The scoping system's creation class name.") : Amended ToSubclass,Key : ToInstance ToSubclass DisableOverride] STRING SystemCreationClassName;
  [Description("The scoping system's name.") : Amended ToSubclass,Key : ToInstance ToSubclass DisableOverride] STRING SystemName;
};

[Description("Capabilities and management  of a management controller.  An I2C microcontroller is a type of management controller.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_ManagementController : CIM_Controller
{
};

[Description("PCIController is a superclass for the PCIBridge and PCIDevice classes. These classes model adapters and bridges on a PCI bus. The properties in PCIController and its subclasses are defined in the various PCI Specifications published by the PCI SIG.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_PCIController : CIM_Controller
{
};

[Description("Capabilities and management  of a magneto-optical drive, a subtype of media access device.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_MagnetoOpticalDrive : CIM_MediaAccessDevice
{
};

[Description("Capabilities and management  of a WORM drive, a subtype of media access device.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_WORMDrive : CIM_MediaAccessDevice
{
};

[Description("Capabilities and management of the scanner logical device.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_Scanner : CIM_LogicalDevice
{
};

[Description("A BinarySensor provides a boolean output. Given the addition of the CurrentState and PossibleStates properties to Sensor, the BinarySensor subclass is no longer necessary, but is retained for backward compatibility. A BinarySensor can be created by instantiating a Sensor with two PossibleStates.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_BinarySensor : CIM_Sensor
{
  [Description("The current value indicated by the sensor.") : Amended ToSubclass] BOOLEAN CurrentReading;
  [Description("ExpectedReading indicates the 'normal' value for the sensor.") : Amended ToSubclass] BOOLEAN ExpectedReading;
  [Description("InterpretationOfFalse is a string indicating what a 'False' value from the binary sensor means.  This information could be displayed to a user.") : Amended ToSubclass] STRING InterpretationOfFalse;
  [Description("InterpretationOfTrue is a string indicating what a 'True' value from the Binary sensor means.  This information could be displayed to a user.") : Amended ToSubclass] STRING InterpretationOfTrue;
};

[Description("A DiscreteSensor has a set of legal string values, that it can report.  These values are enumerated in the Sensor's PossibleValues property.  A DiscreteSensor will always have a 'current reading' that corresponds to one of the enumerated values.\nGiven the addition of the CurrentState and PossibleStates properties to Sensor, the DiscreteSensor subclass is no longer necessary, but is retained for backward compatibility. Information in the CurrentReading and PossibleValues properties will typically have the same values and semantics as for the CurrentState and PossibleStates properties, inherited from Sensor.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_DiscreteSensor : CIM_Sensor
{
  [Description("The AcceptableValues property details which of the strings in the PossibleValues property are considered 'acceptable' (i.e., 'not an error').") : Amended ToSubclass] STRING AcceptableValues[];
  [Description("The current value indicated by the sensor.") : Amended ToSubclass] STRING CurrentReading;
  [Description("The PossibleValues property enumerates the string outputs that can be output by the discrete sensor.") : Amended ToSubclass] STRING PossibleValues[];
};

[Description("A multi-state sensor is a multi-member set of binary sensors, each binary sensor reporting a boolean result.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_MultiStateSensor : CIM_Sensor
{
};

[Description("This class exists for backward compatibility to earlier CIM Schema definitions. With additions to Sensor and NumericSensor in V2.2, it is no longer necessary. A Tachometer can be defined by setting the SensorType property. inherited from Sensor, to 5 (\"Tachometer\"). Other properties of this class are hard-coded to constant values to correspond to definitions in the Sensor hierarchy.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_Tachometer : CIM_NumericSensor
{
  [Units("revolutions per minute") : Amended ToSubclass] sint32 CurrentReading;
  [Units("revolutions per minute") : Amended ToSubclass] sint32 NominalReading;
  [Units("revolutions per minute") : Amended ToSubclass] sint32 NormalMax;
  [Units("revolutions per minute") : Amended ToSubclass] sint32 NormalMin;
  [Units("revolutions per minute") : Amended ToSubclass] sint32 MaxReadable;
  [Units("revolutions per minute") : Amended ToSubclass] sint32 MinReadable;
  [Units("tenths of revolutions per minute") : Amended ToSubclass] uint32 Resolution;
  [Units("revolutions per minute") : Amended ToSubclass] sint32 Tolerance;
  [Units("revolutions per minute") : Amended ToSubclass] sint32 LowerThresholdNonCritical;
  [Units("revolutions per minute") : Amended ToSubclass] sint32 UpperThresholdNonCritical;
  [Units("revolutions per minute") : Amended ToSubclass] sint32 LowerThresholdCritical;
  [Units("revolutions per minute") : Amended ToSubclass] sint32 UpperThresholdCritical;
  [Units("revolutions per minute") : Amended ToSubclass] sint32 LowerThresholdFatal;
  [Units("revolutions per minute") : Amended ToSubclass] sint32 UpperThresholdFatal;
};

[Description("CIM_AggregatePSExtent defines the number of addressable logical blocks on a single storage device, excluding any logical blocks mapped as check data. These logical blocks are contained within a single volume set (if volume sets are defined). This is an alternative grouping for CIM_ProtectedSpaceExtent, when only summary information is needed or when automatic configuration is used. Automatic configuration can result in thousands of CIM_ProtectedSpaceExtent being defined. There is no value in modeling the individual extents.  So, the CIM_AggregatePSExtent object was defined.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_AggregatePSExtent : CIM_StorageExtent
{
};

[Description("CIM_ProtectedSpaceExtent define addressable logical block addresses, treated as a single storage extent, located on a single physical extent.  Protected space extents exclude any logical blocks mapped as check data and contain user data stripe depth mapping information. An alternate possibility, if automatic configuration is used, is to instantiate or extend the CIM_AggregatePSExtent class.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_ProtectedSpaceExtent : CIM_StorageExtent
{
  [Description("For a ProtectedSpaceExtent that is allocated to a VolumeSet, (i.e. is named in a CIM_VolumeSetBasedOnPSExtent association), this property is the number of user data bytes placed on this ProtectedSpaceExtent before moving on to the next ProtectedSpaceExtent in the VolumeSet.  Otherwise, this ProtectedSpaceExtent is considered to be unallocated and this property shall be set to zero (0h.)") : Amended ToSubclass,Units("bytes") : Amended ToSubclass] UINT64 UserDataStripeDepth;
};

[Description("CIM_VolumeSet represents a contiguous range of logical blocks presented to the operating environment for reading and writing user data.  Volume sets shall not overlap one another. They are based on one or more physical extents, protected space extents, or aggregate extents (all of the same type). These based on associations should be instantiated or subclassed as needed.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_VolumeSet : CIM_StorageExtent
{
  [Description("VolumeSets in SCC have additional status information beyond that captured in the Availability and StatusInfo properties, inherited from ManagedSystemElement. This additional information (for example, \"Protection Disabled\", value=9) is captured in the VolumeStatus property.") : Amended ToSubclass] UINT64 PSExtentInterleaveDepth;
  [Description("Number of contiguous ProtectedSpaceExtents counted before looping back to the first ProtectedSpaceExtent of the current stripe. It is the number of Extents forming the user data stripe.") : Amended ToSubclass] UINT64 PSExtentStripeLength;
};

[Description("A device file is a special type of logical file that represents a device. This convention is useful for some operating systems that manage devices using a byte stream I/O model. The logical device that is associated with this file is specified using the CIM_DeviceAccessedByFile relationship.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_DeviceFile : CIM_LogicalFile
{
};

[Description("A class derived from CIM_LogicalElement that is a special collection of managed system elements. This collection indicates that the aggregated components together provide redundancy. All elements aggregated in a redundancy group should be instantiations of the same object class.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_RedundancyGroup : CIM_LogicalElement
{
  [Description("CreationClassName indicates the name of the class or the subclass used in the creation of an instance. When used with the other key properties of this class, this property allows all instances of this class and its subclasses to be uniquely identified.") : Amended ToSubclass,Key : ToInstance ToSubclass DisableOverride] STRING CreationClassName;
  [Description("RedundancyStatus provides information on the state of the redundancy group. \"Fully Redundant\" (value=2) means that all of the configured redundancy is still available; \"Degraded Redundancy\" (3) means that some failures have been experienced but some reduced amount of redundancy is still available; \"Redundancy Lost\" (4) means that a sufficient number of failures have been experienced such that no redundancy is available and the next failure experienced will cause overall failure. Also, the values, \"Other\" (1) and \"Unknown\" (0), are defined.") : Amended ToSubclass,Values{"Unknown", "Other", "Fully Redundant", "Degraded Redundancy", "Redundancy Lost"} : Amended ToSubclass] UINT16 RedundancyStatus;
};

[Description("A class derived from redundancy group indicating that the aggregated elements have more capacity or capability than is needed.  An example of this type of redundancy is the installation of N+1 power supplies or fans in a system.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_ExtraCapacityGroup : CIM_RedundancyGroup
{
  [Description("MinNumberNeeded indicates the smallest number of elements that must be operational in order to have redundancy.  For example, in an N+1 redundancy relationship, the MinNumberNeeded property should be set equal to N.") : Amended ToSubclass] UINT32 MinNumberNeeded;
};

[Description("A class derived from RedundancyGroup indicating that one or more of the aggregated elements can be spared. (The actual Spares are defined using the ActsAsSpare association.) An example is the use of redundant NICs in a ComputerSystem - where one NIC is primary and the other is Spare. The 'primary' NIC would be a member of the SpareGroup (associated using the RedundancyComponent class) and the 'other' NIC would be associated using the ActsAsSpare relationship.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_SpareGroup : CIM_RedundancyGroup
{
};

[Description("A class derived from redundancy group containing mass storage-related redundancy information. Storage redundancy groups are used to protect user data.  They are made up of one or more physical extents, or one or more aggregate physical extents. Storage redundancy groups may overlap.  However, the underlying extents within the overlap should not contain any check data.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_StorageRedundancyGroup : CIM_RedundancyGroup
{
  [Description("The TypeOfAlgorithm specifies the algorithm used for data redundancy and reconstruction. For example, \"P+Q\" (value=5) or \"P+S\" (7) may be specified. The value, 0, is not valid in the CIM Schema since in DMI it represents that no redundancy exists.  In this case, the object should not be instantiated.") : Amended ToSubclass,Values{"Undefined", "Other", "Unknown", "Copy", "XOR", "P+Q", "S", "P+S"} : Amended ToSubclass] UINT16 TypeOfAlgorithm;
};

[Description("CIM_VideoBIOSElement represents the low-level software that is loaded into non-volatile storage and used to bring up, configure and access a computer system's video controller and display.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_VideoBIOSElement : CIM_SoftwareElement
{
  [Description("If true, indicates that the video BIOS is shadowed.") : Amended ToSubclass] BOOLEAN IsShadowed;
};

[Description(" The CIM_ApplicationSystem class is used to represent an  application or a software system that supports a particular  business function and that can be managed as an independent  units. Such a system can be decomposed into its functional  components using the CIM_SoftwareFeature class. The software  features for a particular application or software system are  located using the CIM_ApplicationSystemSoftwareFeature  association.  ") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_ApplicationSystem : CIM_System
{
};

[Description("CIM_ProductFRU is an association between product and FRU that provides information regarding what product components have been or are being replaced.  The association is one to many, conveying that a product can have many FRUs, and that a particular instance of a FRU is only applied to one (instance of a) product.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_ProductFRU
{
  [Description("The FRU.") : Amended ToSubclass] CIM_FRU Ref FRU;
  [Description("The product to which the FRU is applied.") : Amended ToSubclass] CIM_Product Ref Product;
};

[Description("The CIM_ProductParentChild association defines a parent child hierarchy among products.  For example, a product may come bundled with other products. ") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_ProductParentChild
{
  [Description("The child product in the association.") : Amended ToSubclass] CIM_Product Ref Child;
  [Description("The parent product in the association.") : Amended ToSubclass] CIM_Product Ref Parent;
};

[Description("Indicates the physical elements that make up a product.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_ProductPhysicalElements
{
  [Description("The physical element which is a part of the product.") : Amended ToSubclass] CIM_PhysicalElement Ref Component;
  [Description("The product.") : Amended ToSubclass] CIM_Product Ref Product;
};

[Description("CIM_ProductProductDependency is an association between two products, indicating that one must be installed, or must be absent, for the other to function. This is conceptually equivalent to the CIM_ServiceServiceDependency association.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_ProductProductDependency
{
  [Description("The product that is dependent on another product.") : Amended ToSubclass] CIM_Product Ref DependentProduct;
  [Description("The required product.") : Amended ToSubclass] CIM_Product Ref RequiredProduct;
  [Description("The nature of the product dependency. This property describes that the associated product must be installed (value=2) or must be absent (value=3) in order for the product to function.") : Amended ToSubclass,Values{"Unknown", "Other", "Product Must Be Installed", "Product Must Not Be Installed"} : Amended ToSubclass] UINT16 TypeOfDependency;
};

[Description("CIM_ProductSupport is an association between product and support Access that conveys how support is obtained for the product.  This is a many-to-many relationship, implying that various types of support are available for a product, and that the same support object can provide assistance for multiple products.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_ProductSupport
{
  [Description("The product.") : Amended ToSubclass] CIM_Product Ref Product;
  [Description("Support for the product.") : Amended ToSubclass] CIM_SupportAccess Ref Support;
};

[Description("This relationship associates Configuration objects with Setting objects. For example, a NetworkAdapter's Settings could change based on the site/network to which its hosting ComputerSystem is attached. In this case, the ComputerSystem would have two different Configuration objects, corresponding to the differences in network configuration for the two network segments. Configuration A would aggregate a Setting object for the NetworkAdapter when operating on segment \"ANet\", whereas Configuration B would aggregate a different NetworkAdapter Setting object, specific to segment \"BNet\". Note that many Settings of the computer are independent of the network Configuration. For example, both Configurations A and B would aggregate the same Setting object for the ComputerSystem's MonitorResolution.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_SettingContext
{
  [Description("The configuration object that aggregates the setting.") : Amended ToSubclass] CIM_Configuration Ref Context;
  [Description("An aggregated setting.") : Amended ToSubclass] CIM_Setting Ref Setting;
};

[Description("The CIM_StorageDefect aggregation collects the storage errors for a storage extent.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_StorageDefect
{
  [Description("CIM_StorageError references the Error object, defining the starting and ending addresses that are 'mapped out' of the storage extent.") : Amended ToSubclass] CIM_StorageError Ref Error;
  [Description("The Extent reference defines the storage extent on which the errors occurred.") : Amended ToSubclass] CIM_StorageExtent Ref Extent;
};

[Description("CIM_StorageError defines blocks of media or memory space that are mapped 'out of use' due to errors. The Key of the class is the StartingAddress property of the bytes in error.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_StorageError
{
  [Description("The scoping storage extent's creation class name.") : Amended ToSubclass,Key : ToInstance ToSubclass DisableOverride] STRING DeviceCreationClassName;
  [Description("The scoping storage extent's DeviceID.") : Amended ToSubclass,Key : ToInstance ToSubclass DisableOverride] STRING DeviceID;
  [Description("The ending address of the bytes in error.") : Amended ToSubclass] UINT64 EndingAddress;
  [Description("The starting address of the bytes in error.") : Amended ToSubclass,Key : ToInstance ToSubclass DisableOverride] UINT64 StartingAddress;
  [Description("The scoping system's creation class name.") : Amended ToSubclass,Key : ToInstance ToSubclass DisableOverride] STRING SystemCreationClassName;
  [Description("The scoping system's name.") : Amended ToSubclass,Key : ToInstance ToSubclass DisableOverride] STRING SystemName;
};

[Description("The CIM_SupportAccess association defines how to obtain assistance for a Product.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_SupportAccess
{
  [Description("CommunicationInfo provides the details of the communication mode. For example, if the communication mode is 'Phone', CommunicationInfo specifies the phone number to be called.") : Amended ToSubclass] STRING CommunicationInfo;
  [Description("communication mode defines the form of communication in order to obtain support. For example, phone communication (value=2), fax (3) or email (8) can be specified.") : Amended ToSubclass,Values{"Other", "Phone", "Fax", "BBS", "Online Service", "Web Page", "FTP", "E-mail"} : Amended ToSubclass] UINT16 CommunicationMode;
  [Description("A textual description of the type of support provided.") : Amended ToSubclass] STRING Description;
  [Description("Locale defines the geographic region and/or language dialect to which this Support resource pertains.") : Amended ToSubclass] STRING Locale;
  [Description("SupportAccessID is an arbitrary, free form string defined by the product vendor or by the organization that deploys the product.  This property, since it is a key, should be unique throughout the enterprise.") : Amended ToSubclass,Key : ToInstance ToSubclass DisableOverride] STRING SupportAccessId;
};

[Description("The CIM_ToDirectoryAction association identifies the target directory for  the file action. When this association is used, the assumption  is that the target directory was created by a previous action.   This association cannot exist with a CIM_ToDirectorySpecification  association since a file action can only  involve a single target directory. ") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_ToDirectoryAction
{
  [Description("The destination directory.") : Amended ToSubclass] CIM_DirectoryAction Ref DestinationDirectory;
  [Description("The name of the file.") : Amended ToSubclass] CIM_CopyFileAction Ref FileName;
};

[Description("The CIM_ToDirectorySpecification association identifies the target  directory for the file action. When this association is used,  the assumption is that the target directory already existed.   This association cannot exist with a CIM_ToDirectoryAction association since a file action can only involve a  single target directory.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_ToDirectorySpecification
{
  [Description("The destination directory.") : Amended ToSubclass] CIM_DirectorySpecification Ref DestinationDirectory;
  [Description("The file name.") : Amended ToSubclass] CIM_CopyFileAction Ref FileName;
};

[Description("An association between a FileSystem and a Directory which indicates that the Directory is being attached to the FileSystem. The semantics of this relationship require that the mounted Directory be contained by a FileSystem (via the FileStorage association) that is different from the FileSystem referenced as the Dependent. The Directory's containing FileSystem could be either local or remote. For example, a LocalFileSystem on a Solaris ComputerSystem can mount a Directory from the FileSystem accessed via the machine's CDROM drive, i.e., another LocalFileSystem. On the other hand, in a 'remote' case, the Directory is first exported by its FileSystem, which is hosted on another ComputerSystem acting (for example) as a file server. In order to distinguish these two types of Mount, it is recommended that a CIM_Export association always be defined for the remotely accessed/mounted Directories.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_Mount : CIM_Dependency
{
  [Description("The directory mounted.") : Amended ToSubclass] CIM_Directory Ref Antecedent;
  [Description("The FileSystem the Directory is mounted on.") : Amended ToSubclass] CIM_NFS Ref Dependent;
};

[Description("An association between a LocalFileSystem and its Directories indicating that the specified Directories are available for mount. When exporting an entire FileSystem, the Directory should reference the topmost directory of the FileSystem.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_Export
{
  [Description("The directory exported for NFS mount.") : Amended ToSubclass] CIM_Directory Ref Directory;
  [Description("The local file system.") : Amended ToSubclass] CIM_LocalFileSystem Ref LocalFS;
  [Description("Name under which the directory is exported.") : Amended ToSubclass] STRING ExportedDirectoryName;
};

[Description("A class derived from FileSystem that represents access of the FileSystem via a network-related service. In this case, the file store is hosted by a computer, acting as a file server. For example, the file store for an NFS FileSystem is typically NOT on a ComputerSystem's locally controlled media, nor is it directly accessed through a device driver. Subclasses of RemoteFileSystem contain client-side configuration information related to the access of the FileSystem.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_RemoteFileSystem : CIM_FileSystem
{
};

[Description("A class derived from RemoteFileSystem representing that the FileSystem is mounted, using the NFS protocol, from a ComputerSystem. The properties of the NFS object deal with the operational aspects of the mount and represent the client-side configuration for NFS access. The FileSystemType (inherited from FileSystem) should be set to indicate the type of this FileSystem as it appears to the client.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_NFS : CIM_RemoteFileSystem
{
  [Description("If set to true: control attribute caching is enabled. If set to false: control attribute caching is disabled.") : Amended ToSubclass] BOOLEAN AttributeCaching;
  [Description("Maximum number of seconds that cached attributes are held after directory update.") : Amended ToSubclass,Units("seconds") : Amended ToSubclass] UINT16 AttributeCachingForDirectoriesMax;
  [Description("Minimum number of seconds that cached attributes are held after directory update.") : Amended ToSubclass,Units("seconds") : Amended ToSubclass] UINT16 AttributeCachingForDirectoriesMin;
  [Description("Maximum number of seconds that cached attributes are held after file modification.") : Amended ToSubclass,Units("seconds") : Amended ToSubclass] UINT16 AttributeCachingForRegularFilesMax;
  [Description("Minimum number of seconds that cached attributes are held after file modification.") : Amended ToSubclass,Units("seconds") : Amended ToSubclass] UINT16 AttributeCachingForRegularFilesMin;
  [Description("If set to true: retries are performed in the foreground. If set to false: if the first mount attempt fails, retries are performed in the background.") : Amended ToSubclass] BOOLEAN ForegroundMount;
  [Description("If set to true: once the file system is mounted, NFS requests are retried until the hosting system responds. If set to false: once the file system is mounted, an error is returned if the hosting system does not respond.") : Amended ToSubclass] BOOLEAN HardMount;
  [Description("If set to true: interrupts are permitted for hard mounts. If set to false: interrupts are ignored for hard mounts.") : Amended ToSubclass] BOOLEAN Interrupt;
  [Description("Maximum number of mount failure retries allowed.") : Amended ToSubclass] UINT16 MountFailureRetries;
  [Description("Read buffer size in bytes.") : Amended ToSubclass,Units("bytes") : Amended ToSubclass] UINT64 ReadBufferSize;
  [Description("Maximum number of NFS retransmissions allowed.") : Amended ToSubclass] UINT16 RetransmissionAttempts;
  [Description("NFS timeout in tenths of a second.") : Amended ToSubclass,Units("tenths of seconds") : Amended ToSubclass] UINT32 RetransmissionTimeout;
  [Description("The remote computer system's (i.e., the NFS File 'Server's) UDP port number.") : Amended ToSubclass] UINT32 ServerCommunicationPort;
  [Description("Write buffer size in bytes.") : Amended ToSubclass,Units("bytes") : Amended ToSubclass] UINT64 WriteBufferSize;
};

[Description("CIM_BootService represents the functionality provided by a device, software or via a network to load an operating system on a unitary computer system.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_BootService : CIM_Service
{
};

[Description(" The CIM_SoftwareFeature class defines a particular function  or capability of a product or application system.  This  class in intended to capture the level of granularity that  is meaningful to a consumer or user of a product rather than  the units that reflect how the product is built or packaged.  The latter detailed is captured using a CIM_SoftwareElement  class.   When a software feature can exist on multiple platforms or  operating systems (for example, a client component of a  three tiered client/server applications might run on Solaris,  Windows NT, and Windows 95), a software feature is a collection  of all the software elements for these different platforms.  In this case, the users of the model must be aware of this situation  since typically they will be interested in a sub-collection of the  software elements required for a particular platform.   Software features are always defined in the context of a  CIM_Product class using the CIM_ProductSoftwareFeatures  association since features are delivered through products.  Optionally, software features from one or more products  can be organized into application systems using the  CIM_ApplicationSystemSoftwareFeature association.  ") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_SoftwareFeature : CIM_LogicalElement
{
  [Key : ToInstance ToSubclass DisableOverride,Description("Product identification such as a serial number on software or a die number on a hardware chip") : Amended ToSubclass] string IdentifyingNumber;
  [Key : ToInstance ToSubclass DisableOverride,Description("Commonly used product name") : Amended ToSubclass] string ProductName;
  [Description("The name of the product's supplier. Corresponds to the Vendor property in the product object in the DMTF Solution Exchange Standard.") : Amended ToSubclass] string Vendor;
  [Key : ToInstance ToSubclass DisableOverride,Description("Product version information.  Corresponds to the Version property in the product object in the DMTF Solution Exchange Standard.") : Amended ToSubclass] string Version;
  [key : ToInstance ToSubclass DisableOverride,Description("The Name property defines the label by which the object is known to the world outside the data processing system. This label is a human-readable name that uniquely identifies the element in the context of the element's namespace.") : Amended ToSubclass] string Name;
};

[Description(" A check is a condition or characteristic that is  expected to be true in an environment defined or  scoped by an instance of a CIM_ComputerSystem.   The checks associated with a particular software  element are organized into one of two groups  using the Phase property of the CIM_SoftwareElementChecks  association. Conditions that are expected to be  satisfied when a software element is in a particular  environment are known as in-state conditions.  Conditions that need to be satisfied in order to  transition the current software element to its  next state are known as next-state conditions   A CIM_ComputerSystem object represents the  environment in which CIM_SoftwareElement are already  installed or in which CIM_SoftwareElement will be installed.  For the case in which a software element is already installed,  the CIM_InstalledSoftwareElement association is used to  identify the CIM_ComputerSystem object that represents  the \"environment\". When a software elements is being  distributed and installed on a different computer system, the CIM_ComputerSystem object for the targeted system  is the environment.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_Check
{
  [Description("The name used to identify this software element") : Amended ToSubclass] string Name;
  [Description("Version should be in the form <Major>.<Minor>.<Revision> or <Major>.<Minor><letter><revision>") : Amended ToSubclass] string Version;
  [Description(" The software element state of a software element ") : Amended ToSubclass,Values{"Deployable", "Installable", "Executable", "Running"} : Amended ToSubclass] uint16 SoftwareElementState;
  [Description(" This is an identifier for this software element.") : Amended ToSubclass] string SoftwareElementID;
  [Description(" The target operating system of the this software element.") : Amended ToSubclass,Values{"Unknown", "Other", "MACOS", "ATTUNIX", "DGUX", "DECNT", "Digital Unix", "OpenVMS", "HPUX", "AIX", "MVS", "OS400", "OS/2", "JavaVM", "MSDOS", "WIN3x", "WIN95", "WIN98", "WINNT", "WINCE", "NCR3000", "NetWare", "OSF", "DC/OS", "Reliant UNIX", "SCO UnixWare", "SCO OpenServer", "Sequent", "IRIX", "Solaris", "SunOS", "U6000", "ASERIES", "TandemNSK", "TandemNT", "BS2000", "LINUX", "Lynx", "XENIX", "VM/ESA", "Interactive UNIX", "BSDUNIX", "FreeBSD", "NetBSD", "GNU Hurd", "OS9", "MACH Kernel", "Inferno", "QNX", "EPOC", "IxWorks", "VxWorks", "MiNT", "BeOS", "HP MPE", "NextStep", "PalmPilot", "Rhapsody", "Windows 2000", "Dedicated", "VSE", "TPF"} : Amended ToSubclass] uint16 TargetOperatingSystem;
  [key : ToInstance ToSubclass DisableOverride,Description("An identifier used in conjunction with other keys to uniquely identify the check") : Amended ToSubclass] string CheckID;
  [Description(" A description of the objects.") : Amended ToSubclass] string Description;
  [Description(" The CheckMode property is used to indicate whether the condition is  expected to exist or not exist in the environment.  When the value is True, the condition is expected to exist  (e.g., a file is expected to be on a system) so invoke() is expected to  return True.  When the value is False, the condition is not expect to exist  (e.g., a file is not to be on a system) so invoke is expected to return false ") : Amended ToSubclass] boolean CheckMode;
  [Description(" The invoke method is to evaluate a particular check. The  details of how the method evaluates a particular check in   a CIM context is described by the non-abstract CIM_Check sub classes.  The results of the method are based on the return value.    - A 0 (zero) is returned if the condition is satisfied.   - A 1 (one) is returned if the method is not supported.    - Any other value indicates the condition is not satisfied. ") : Amended ToSubclass] uint32 Invoke();
};

[Description(" The CIM_DirectorySpecification class captures the major directory  structure of a software element.  This class is used to organize  the files of a software element into manageable units that can  be relocated on a computer system.  ") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_DirectorySpecification : CIM_Check
{
  [Description(" The DirectoryType property characterizes the type of directory being  described. ") : Amended ToSubclass,Values{"Product base directory", "Product executable directory", "Product library directory", "Product configuration directory", "Product include directory", "Product working directory", "Product log directory", "Shared base directory", "Shared executable directory", "Shared library directory", "Shared include directory", "System base directory", "System executable directory", "System library directory", "System configuration directory", "System include directory", "System log directory", "Other"} : Amended ToSubclass] uint16 DirectoryType;
  [Description("The DirectoryPath property is used to capture the name of a directory.  The value supplied by an application provider is actually a default or recommended path name.  The value can be changed for a particular environment.") : Amended ToSubclass] string DirectoryPath;
};

[Description(" A CIM_FileSpecification identifies a file that is either to  be on or off the system. The file is to be located in the  directory identified by the CIM_DirectorySpecificationFile  associations.   When the invoke() method is used, it is expected that  it will use the combination of information provided to  check for the file existence. Therefore, any of the  properties with a NULL value are not checked. So, if  only the Name and the MD5 properties have values, they  are the only ones consider by the invoke() method.  ") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_FileSpecification : CIM_Check
{
  [Description(" Either the name of the file or the name of the file with a  directory prefix.  ") : Amended ToSubclass] string Name;
  [Description("The creation date and time of the file. ") : Amended ToSubclass] datetime CreateTimeStamp;
  [units("kilobytes") : Amended ToSubclass] uint64 FileSize;
  [Description(" The Checksum property is a checksum calculated as the 16-bit  sum of the first 32 bytes of the file.") : Amended ToSubclass] uint32 CheckSum;
  [Description(" The CRC1 property is the CRC value calculated using the middle  512K bytes.") : Amended ToSubclass] uint32 CRC1;
  [Description(" The CRC2 is the CRC value for the middle 512K bytes with a  offset modulo 3 to the start of the file of zero.") : Amended ToSubclass] uint32 CRC2;
  [Description(" The MD5 algorithm is a well-known algorithm for computing a 128-bit  checksum for any file or object. The likelihood of two different   files producing the same MD5 checksum is very small  (about 1 in 2^64), and as such, the MD5 checksum of a file can be  used to construct a reliable content identifier that is very  likely to uniquely identify the file. The reverse is also true.  If two files have the same MD5 checksum, it is very likely that  the files are identical. For purposes of MOF specification  of the MD5 property, the MD5 algorithm always generates a 32  character string. For example: The string abcdefghijklmnopqrstuvwxyz  generates the string c3fcd3d76192e4007dfb496cca67e13b. See http://www. rsa.com/pub/rfc1321.txt for details on the implementation of the MD5  algorithm.") : Amended ToSubclass] string MD5Checksum;
};

[Description("A CIM_Action is an operation that is part of a process to either create a software element in its next state or to eliminate the software element in the current state. ") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_Action
{
  [Description("Name is used to identify this software element") : Amended ToSubclass] string Name;
  [Description("Version should be in the form <major>.<minor>.<revision> or <major>.<minor><letter><revision>.") : Amended ToSubclass] string Version;
  [Description(" The SoftwareElementState indicates the state of a software element ") : Amended ToSubclass,Values{"Deployable", "Installable", "Executable", "Running"} : Amended ToSubclass] uint16 SoftwareElementState;
  [Description(" The SoftwareElementID is an identifier for this software element.") : Amended ToSubclass] string SoftwareElementID;
  [Description("The TargetOperatingSystem indicates the target operating system of the owning software element.") : Amended ToSubclass,Values{"Unknown", "Other", "MACOS", "ATTUNIX", "DGUX", "DECNT", "Digital Unix", "OpenVMS", "HPUX", "AIX", "MVS", "OS400", "OS/2", "JavaVM", "MSDOS", "WIN3x", "WIN95", "WIN98", "WINNT", "WINCE", "NCR3000", "NetWare", "OSF", "DC/OS", "Reliant UNIX", "SCO UnixWare", "SCO OpenServer", "Sequent", "IRIX", "Solaris", "SunOS", "U6000", "ASERIES", "TandemNSK", "TandemNT", "BS2000", "LINUX", "Lynx", "XENIX", "VM/ESA", "Interactive UNIX", "BSDUNIX", "FreeBSD", "NetBSD", "GNU Hurd", "OS9", "MACH Kernel", "Inferno", "QNX", "EPOC", "IxWorks", "VxWorks", "MiNT", "BeOS", "HP MPE", "NextStep", "PalmPilot", "Rhapsody", "Windows 2000", "Dedicated", "VSE", "TPF"} : Amended ToSubclass] uint16 TargetOperatingSystem;
  [key : ToInstance ToSubclass DisableOverride,Description("The ActionID property is a unique identifier assigned to a particular  action for a software element. ") : Amended ToSubclass] string ActionID;
  [Description("The Direction property indicates whether a particular   CIM_Action object is part of a sequence of actions to transition the   current software element to its next state, such as \"Install\" or to  remove the current software element, such as \"Uninstall\".") : Amended ToSubclass,Values{"Install", "Uninstall"} : Amended ToSubclass] uint16 Direction;
  [Description("A description of the object.") : Amended ToSubclass] string Description;
  [Description(" The invoke method is to take a particular action. The  details of how the method performs the action is implementation  specific.  The results of the method are based on the return value.    - A 0 (zero) is returned if the condition is satisfied.   - A 1 (one) is returned if the method is not supported.    - Any other value indicates the condition is not satisfied. ") : Amended ToSubclass] uint32 Invoke();
};

[Description(" The CIM_DirectoryAction is an abstract class that is used for directories to be managed. Creation of directories is handled by CIM_CreateDirectoryAction and removal is handled by CIM_RemoveDirectoryAction. ") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_DirectoryAction : CIM_Action
{
  [Description("The DirectoryName indicates the name of the directory to which the action applies.") : Amended ToSubclass] string DirectoryName;
};

[Description(" The CIM_CreateDirectoryAction creates empty directories for  software elements to be installed locally.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_CreateDirectoryAction : CIM_DirectoryAction
{
};

[Description(" The CIM_RemoveDirectoryAction removes directories for software elements. ") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_RemoveDirectoryAction : CIM_DirectoryAction
{
  [Description("Indicates if the directory must be empty.") : Amended ToSubclass] boolean MustBeEmpty;
};

[Description(" The CIM_FileAction allows the author to locate files that  already exist on the users machine, and move or copy those  files to a new location.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_FileAction : CIM_Action
{
};

[Description(" The CIM_CopyFileAction specifies files that  exist on a computer system, and to move or copy those  files to a new location.   The to/from information for the copy is specified using  either the CIM_ToDirectorySpecification/CIM_FromDirectorySpecification  or the CIM_ToDirectoryAction/CIM_FromDirectoryAction associations.  The first set is used when the source and/or the target are to  exist before any actions are taken. The second set is  used when the source and/or target are created as a part  of a previous action. In the latter case, the action  to create the directory must occur prior to the CIM_CopyFileAction object.  ") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_CopyFileAction : CIM_FileAction
{
  [Description("The fully qualified source filename.") : Amended ToSubclass] string Source;
  [Description("The fully qualified destination filename.") : Amended ToSubclass] string Destination;
  [Description("Indicates whether to delete the source file after the copy operation.") : Amended ToSubclass] boolean DeleteAfterCopy;
};

[Description("The CIM_RemoveFileAction uninstalls files.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_RemoveFileAction : CIM_FileAction
{
  [Description("The file name.") : Amended ToSubclass] string File;
};

[Description(" This association is used to identify the actions for a software element. ") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_SoftwareElementActions
{
};

[Description(" The CIM_SoftwareFeatureSoftwareElements associations identifies the software elements that make up a particular software feature.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_SoftwareFeatureSoftwareElements : CIM_Component
{
  [Description("The group component.") : Amended ToSubclass] CIM_SoftwareFeature Ref GroupComponent;
  [Description("The part component.") : Amended ToSubclass] CIM_SoftwareElement Ref PartComponent;
};

[Description(" The CIM_ProductSoftwareFeatures association identifies the software   features for a particular product. ") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_ProductSoftwareFeatures
{
  [Description("The product.") : Amended ToSubclass] CIM_Product Ref Product;
  [Description("The component.") : Amended ToSubclass] CIM_SoftwareFeature Ref Component;
};

[Description(" The CIM_InstalledSoftwareElement association allows one to identify the computer system a particular software element is installed on. ") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_InstalledSoftwareElement
{
  [Description("References the software element that is installed.") : Amended ToSubclass] CIM_SoftwareElement Ref Software;
  [Description("References the computer system hosting a particular software element. ") : Amended ToSubclass] CIM_ComputerSystem Ref System;
};

[Description(" Since software elements in a ready to run state cannot transition into  another state, the value of the phase property is restricted to  in-state for CIM_SoftwareElement objects in a ready to run state. ") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_SoftwareElementChecks
{
  [Description("The element.") : Amended ToSubclass] CIM_SoftwareElement Ref Element;
  [Description("The check.") : Amended ToSubclass] CIM_Check Ref Check;
  [Description(" The Phase property indicates whether the referenced check is an  in-state check or a next-state check.") : Amended ToSubclass,Values{"In-State", "Next-State"} : Amended ToSubclass] uint16 Phase;
};

[Description("CIM_ServiceAccessBySAP is an association that identifies the access points for a service. For example, a printer may be accessed by NetWare, Macintosh or Windows service accesspoints, potentially hosted on different systems.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_ServiceAccessBySAP : CIM_Dependency
{
  [Description("The service. ") : Amended ToSubclass] CIM_Service Ref Antecedent;
  [Description("An access point for a service. Access points are dependent in this relationship since they have no function without a corresponding service. ") : Amended ToSubclass] CIM_ServiceAccessPoint Ref Dependent;
};

[Description(" The CIM_ExecuteProgram causes files to be executed on the system  where the software element is installed. ") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_ExecuteProgram : CIM_Action
{
  [Description("A string that can be invoked on a system command line.") : Amended ToSubclass] STRING CommandLine;
  [Description("The path to the program.") : Amended ToSubclass] STRING ProgramPath;
};

[Description("This class specifies the information to be used to modify a particular setting file for a specific entry with a specific value. The value specified is created as a new entry or appends to, replaces, removes from,  or deletes the specified entry. All additions are assumed to be case sensitive. Removes are assumed to be case insensitive.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_ModifySettingAction : CIM_Action
{
  [Description("Type of action to be performed on the specified setting entry.  Create -  Creates the specified entry. Delete - Deletes the specified entry. Append - Append to the end of the specified entry. Remove - Remove the value from the specified entry.") : Amended ToSubclass,Values{"Create", "Delete", "Append", "Remove"} : Amended ToSubclass] UINT16 ActionType;
  [Description("Name of entry to be modified.") : Amended ToSubclass] STRING EntryName;
  [Description("This is the value to be used to add, append, or replace to the specified setting.") : Amended ToSubclass] STRING EntryValue;
  [Description("File name of setting file entry to be modified.") : Amended ToSubclass] STRING FileName;
  [Description("This is the key of the section of the setting entry to be modified.") : Amended ToSubclass] STRING SectionKey;
};

[Description(" The CIM_RebootAction causes a reboot of the system where the software element is installed. ") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_RebootAction : CIM_Action
{
};

[Description(" The CIM_ActionSequence association is used to define a series of  operations that either transitions the software element, referenced  by the CIM_SoftwareElementActions association, to its next state or  removes the software element from its current environment. The CIM_Action classes participating in this association must have the same value for the Direction property since they are either part of a sequence to  transition a software element into its next state or to uninstall a  software element. The next-state actions and uninstall actions  associated with a particular software element must be a continuous  sequence. Since the CIM_ActionSequence is an association the loops on  the CIM_Action class with roles for the 'prior' action and 'next' action in a sequence, the need for a continuous sequence implies:  (1)Within the set of next-state or uninstall actions, there is one and only one action that does not have an instance of the CIM_ActionSequence  association referencing it in the 'next' role. This is the first action in the sequence. (2) Within the set of next-state or uninstall actions, there is one and only one action that does not have an instance of the CIM_ActionSequence association referencing it in the \"prior\" role. This  is the last action in the sequence. (3) All other actions within the  set of next-state and uninstall actions must participate in two  instances of the CIM_ActionSequence association, one in a  prior role and one in the next role.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_ActionSequence
{
  [Description("The next action.") : Amended ToSubclass] CIM_Action Ref Next;
  [Description("The prior action.") : Amended ToSubclass] CIM_Action Ref Prior;
};

[Description("CIM_DiskSpaceCheck checks the amount of disk space the needs  to be available on the system. The amount is specified in  the AvailableDiskSpace property.  The details of this checks are compared with the  value of the AvailableSpace property of the  CIM_FileSystem object associated with the  CIM_ComputerSystem object that describes the environment.   When the value of AvailableSpace property is greater  than or equal to the value specified in  AvailableDiskSpace, the condition is satisfied. ") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_DiskSpaceCheck : CIM_Check
{
  [units("kilobytes") : Amended ToSubclass,Description("The available disk space.") : Amended ToSubclass] UINT64 AvailableDiskSpace;
};

[Description("CIM_MemoryCheck specifies a condition for the minimum amount  of memory that needs to be available on a system.  The amount is specified in the MemorySize property.  The details of this checks are compared with the  value of the FreePhysicalMemory property of the  CIM_OperatingSystem object referenced by an CIM_InstalledOS association for the CIM_ComputerSystem object that describes  the environment.   When the value of FreePhysicalMemory property is greater  than or equal to the value specified in MemorySize, the  condition is satisfied. ") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_MemoryCheck : CIM_Check
{
  [Description("The amount of memory that needs to exist on a  computer system for a software element to executing  properly. ") : Amended ToSubclass,units("kilobytes") : Amended ToSubclass] UINT64 MemorySize;
};

[Description(" The CIM_OSVersionCheck class specifies the versions of the OS that can support this software element. This check can be for a specific, minimum, maximum or a range of releases of an OS.   To specify a specific version the minimum and maximum versions must be the same. To specify a minimum,  the minimum version needs only be specified. To specify a maximum  version, the maximum version needs only be specified. To specify  a range both minimum and maximum version need to be specified.   The type of operating system is specified in the TargetOperatingSystem property of the owning software element.  The details of this checks are compared with the  corresponding details found in a CIM_OperatingSystem  object referenced by CIM_InstalledOS association for the  CIM_ComputerSystem object that describes the environment.  As long as there is at least one CIM_OperatingSystem that  satisfies the details of the condition, the check is  satisfied. In other words, all the operating systems on  the relevant computer system do not need to satisfy the  condition. There needs to be at least one.  Also, note the OSType property of the CIM_OperatingSystem  class must match the type of the TargetOperatingSystem  property. ") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_OSVersionCheck : CIM_Check
{
  [Description(" Maximum version of required operating system. The value  is encoded as     <major>.<minor>.<revision> or     <major>.<minor><letter revision>") : Amended ToSubclass] STRING MaximumVersion;
  [Description(" Minimum version of required operating system. The value  is encoded as     <major>.<minor>.<revision> or     <major>.<minor><letter revision>") : Amended ToSubclass] STRING MinimumVersion;
};

[Description(" This class specifies information needed to check a particular setting file for a specific entry that contains  a value that is equal to, or contains, the value specified.  All compares are assumed to be case insensitive.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_SettingCheck : CIM_Check
{
  [Description("This specifies the way the setting value should be compared.") : Amended ToSubclass,Values{"Matches", "Contains"} : Amended ToSubclass] UINT16 CheckType;
  [Description("Name of the entry to be checked") : Amended ToSubclass] STRING EntryName;
  [Description("Value to be checked that is associated with the named entry.") : Amended ToSubclass] STRING EntryValue;
  [Description("File name of the setting file to be checked.") : Amended ToSubclass] STRING FileName;
  [Description("Key of section containing the settings to be checked.") : Amended ToSubclass] STRING SectionKey;
};

[Description(" The CIM_SoftwareElementVersionCheck class specifies  a type of software element that must exist in the environment. This check can be for a specific,  minimum, maximum or a range of versions. To specify a specific version the lower and upper versions must be the same. To specify a minimum the lower version  needs only be specified. To specify a maximum version the upper version needs only be specified. To specify a range both upper and lower version need to be specified. The details of this checks are compared with the corresponding details found in a CIM_SoftwareElement object referenced by an CIM_InstalledSoftwareElement association for the CIM_ComputerSystem object. As long as there is at least one CIM_SoftwareElement that satisfies the details of the condition, the check is satisfied. In other words, all the software elements on the relevant computer system do not need to satisfy the condition. There needs to be at least one.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_SoftwareElementVersionCheck : CIM_Check
{
  [Description(" The minimum version of a software elements being checked.") : Amended ToSubclass] STRING LowerSoftwareElementVersion;
  [Description(" The name of the software element being checked. ") : Amended ToSubclass] STRING SoftwareElementName;
  [Description(" The state of the software element being checked.") : Amended ToSubclass,Values{"Deployable", "Installable", "Executable", "Running"} : Amended ToSubclass] UINT16 SoftwareElementStateDesired;
  [Description(" The target operating system of the software element  being checked.") : Amended ToSubclass,Values{"Unknown", "Other", "MACOS", "ATTUNIX", "DGUX", "DECNT", "Digital Unix", "OpenVMS", "HPUX", "AIX", "MVS", "OS400", "OS/2", "JavaVM", "MSDOS", "WIN3x", "WIN95", "WIN98", "WINNT", "WINCE", "NCR3000", "NetWare", "OSF", "DC/OS", "Reliant UNIX", "SCO UnixWare", "SCO OpenServer", "Sequent", "IRIX", "Solaris", "SunOS", "U6000", "ASERIES", "TandemNSK", "TandemNT", "BS2000", "LINUX", "Lynx", "XENIX", "VM/ESA", "Interactive UNIX", "BSDUNIX", "FreeBSD", "NetBSD", "GNU Hurd", "OS9", "MACH Kernel", "Inferno", "QNX", "EPOC", "IxWorks", "VxWorks", "MiNT", "BeOS", "HP MPE", "NextStep", "PalmPilot", "Rhapsody", "Windows 2000", "Dedicated", "VSE", "TPF"} : Amended ToSubclass] UINT16 TargetOperatingSystemDesired;
  [Description(" The maximum version of a software elements being checked.") : Amended ToSubclass] STRING UpperSoftwareElementVersion;
};

[Description(" The CIM_SwapSpaceCheck class specifies the amount of swap space  that needs to be available on the system. The amount is  specified in the SwapSpaceSize property.  The details of this checks are compared with the  corresponding details found in a CIM_OperatingSystem  object referenced by CIM_InstalledOS association for the  CIM_ComputerSystem object describing the environment.  When the value of TotalSwapSpaceSize property is greater  than or equal to the value specified in  SwapSpacesize, the condition is satisfied. ") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_SwapSpaceCheck : CIM_Check
{
  [Description(" The SwapSpaceSize property specifies the minimum number of Kilobytes  of swap space that needs to be available on the target system.") : Amended ToSubclass,units("kilobytes") : Amended ToSubclass] UINT64 SwapSpaceSize;
};

[Description(" The CIM_VersionCompatibilityCheck class specifies whether it is  permissible to create the next state of a software element. ") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_VersionCompatibilityCheck : CIM_Check
{
  [Description(" The AllowDownVersion property indicates that this software element  can transition to its next state even if a higher or latter version  of the software element already exists in the  environment.") : Amended ToSubclass] BOOLEAN AllowDownVersion;
  [Description(" The AllowMultipleVersions option controls the ability to configure  multiple versions of a product on a system.") : Amended ToSubclass] BOOLEAN AllowMultipleVersions;
  [Description(" The Reinstall property indicates that this software element can  transition to its next state even if a software element of the same  version  already exists in the environment.") : Amended ToSubclass] BOOLEAN Reinstall;
};

[Description("A link between BIOS feature and its aggregated BIOS elements.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_BIOSFeatureBIOSElements : CIM_SoftwareFeatureSoftwareElements
{
  [Description("The BIOS feature.") : Amended ToSubclass] CIM_BIOSFeature Ref GroupComponent;
  [Description("The BIOS element that implements the capabilities described by BIOS feature.") : Amended ToSubclass] CIM_BIOSElement Ref PartComponent;
};

[Description("A link between video BIOS feature and its aggregated video BIOS elements.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_VideoBIOSFeatureVideoBIOSElements : CIM_SoftwareFeatureSoftwareElements
{
  [Description("The video BIOS feature.") : Amended ToSubclass] CIM_VideoBIOSFeature Ref GroupComponent;
  [Description("The video BIOS element that implements the capabilities described by video BIOS feature.") : Amended ToSubclass] CIM_VideoBIOSElement Ref PartComponent;
};

[Description(" The CIM_ApplicationSystemSoftwareFeature associations identifies the  software features that make up a particular application system.  The software features can be part of different products. ") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_ApplicationSystemSoftwareFeature : CIM_SystemComponent
{
  [Description("The parent system in the association") : Amended ToSubclass] CIM_ApplicationSystem Ref GroupComponent;
  [Description("The child element that is a component of a system") : Amended ToSubclass] CIM_SoftwareFeature Ref PartComponent;
};

[Description("An association between a service access point and how it is implemented. The cardinality of this association is many-to-many.  A SAP may be provided by more than one logical device, operating in conjunction.  And, any device may provide more than one service access point. When many logical devices are associated with a single SAP, it is assumed that these elements operate in conjunction to provide the access point.  If different implementations of a SAP exist, each of these implementations would result in individual instantiations of the service access point object.  These individual instantiations would then have associations to the unique implementations.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_DeviceSAPImplementation : CIM_Dependency
{
  [Description("The logical device.") : Amended ToSubclass] CIM_LogicalDevice Ref Antecedent;
  [Description("The service access point implemented using the logical device.") : Amended ToSubclass] CIM_ServiceAccessPoint Ref Dependent;
};

[Description(" An association between a service access point and how it is   implemented in software.  The cardinality of this association  is many-to-many.  A SAP may be provided by more than one  software feature, operating in conjunction.  And, any  software feature may provide more than one service access point. a  When many software features are associated with single SAP,  it is assumed that these elements operate in conjunction to  provide the access point.  If different implementations of a  SAP exist, each of these implementations would result in  individual instantiations of the service access point object.  These individual instantiations would then have associations  to the unique implementations. ") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_SoftwareFeatureSAPImplementation : CIM_Dependency
{
  [Description("The antecedent software feature.") : Amended ToSubclass] CIM_SoftwareFeature Ref Antecedent;
  [Description("The dependent service access point.") : Amended ToSubclass] CIM_ServiceAccessPoint Ref Dependent;
};

[Description(" An association between a service and how it is implemented in software.  The cardinality of this association is many-to-many.  A service may be  provided by more than one software feature, operating in conjunction.   And, any software Feature may provide more than one service.  When  multiple software features are associated with a single service, it is  assumed that these elements operate in conjunction to provide the  service.  If different implementations of a service exist, each of  these implementations would result in individual instantiations of the  service object.  These individual instantiations would then have  associations to the unique implementations. ") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_SoftwareFeatureServiceImplementation : CIM_Dependency
{
  [Description("The antecedent software feature.") : Amended ToSubclass] CIM_SoftwareFeature Ref Antecedent;
  [Description("The dependent service.") : Amended ToSubclass] CIM_Service Ref Dependent;
};

[Description("CIM_SAPSAPDependency is an association between a service access point and another service access point indicating that the latter is required in order for the former service access point to utilize or connect with its service. For example, to print at a network printer, local print access points must utilize underlying network-related SAPs, or protocol endpoints, in order to send the print request.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_SAPSAPDependency : CIM_Dependency
{
  [Description("The required service access point.") : Amended ToSubclass] CIM_ServiceAccessPoint Ref Antecedent;
  [Description("The service access point that is dependent on an underlying SAP.") : Amended ToSubclass] CIM_ServiceAccessPoint Ref Dependent;
};

[Description("CIM_BootServiceAccessBySAP is the relationship between a boot service and its access points.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_BootServiceAccessBySAP : CIM_ServiceAccessBySAP
{
  [Description("The boot service.") : Amended ToSubclass] CIM_BootService Ref Antecedent;
  [Description("An access point for the boot service.") : Amended ToSubclass] CIM_BootSAP Ref Dependent;
};

[Description("CIM_ClusterServiceAccessBySAP is the relationship between a clustering service and its access points.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_ClusterServiceAccessBySAP : CIM_ServiceAccessBySAP
{
  [Description("The clustering service.") : Amended ToSubclass] CIM_ClusteringService Ref Antecedent;
  [Description("An access point for the clustering service.") : Amended ToSubclass] CIM_ClusteringSAP Ref Dependent;
};

[Description("CIM_ServiceSAPDependency is an association between a service and a service access point indicating that the referenced SAP is utilized by the service to provide its functionality. For example, boot services may invoke BIOS' disk services (interrupts) in order to function.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_ServiceSAPDependency : CIM_Dependency
{
  [Description("The required service access point") : Amended ToSubclass] CIM_ServiceAccessPoint Ref Antecedent;
  [Description("The service that is dependent on an underlying SAP.") : Amended ToSubclass] CIM_Service Ref Dependent;
};

[Description("A representation of the access points of a boot service.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_BootSAP : CIM_ServiceAccessPoint
{
};

[Description("CIM_BIOSFeature represents the capabilities of the low-level software that is used to bring up and configure a computer system.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_BIOSFeature : CIM_SoftwareFeature
{
  [Description("An array of free-form strings providing more detailed explanations for any of the BIOS features indicated in the Characteristics array. Note, each entry of this array is related to the entry in the Characteristics array that is located at the same index.") : Amended ToSubclass] STRING CharacteristicDescriptions[];
  [Description("An array of integers that specify the features supported by the BIOS. For example, one can specify that PnP capabilities are provided (value=9) or that infrared devices are supported (21). The value, 3, is not valid in the CIM schema since in DMI it represents that no BIOS features are supported. In this case, this object should not be instantiated.") : Amended ToSubclass,Values{"Other", "Unknown", "Undefined", "ISA Support", "MCA Support", "EISA Support", "PCI Support", "PCMCIA Support", "PnP Support", "APM Support", "Upgradeable BIOS", "BIOS Shadowing Allowed", "VL VESA Support", "ESCD Support", "LS-120 Support", "ACPI Support", "I2O Boot Support", "USB Legacy Support", "AGP Support", "PC Card", "IR", "1394", "I2C", "Smart Battery", "PC-98"} : Amended ToSubclass] UINT16 Characteristics[];
};

[Description("CIM_VideoBIOSFeature represents the capabilities of the low-level software that is used to bring up, configure and use a computer system's video controller and display.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_VideoBIOSFeature : CIM_SoftwareFeature
{
  [Description("An array of free-form strings providing more detailed explanations for any of the video BIOS features indicated in the Characteristics array. Note, each entry of this array is related to the entry in the Characteristics array that is located at the same index.") : Amended ToSubclass] STRING CharacteristicDescriptions[];
  [Description("An array of integers that specify the features supported by the video BIOS. For example, one could indicate support for VESA power management (value=6) or video BIOS shadowing (8). The value, 3, is not valid in the CIM schema since in DMI it represents that no BIOS features are supported.  In this case, the object should not be instantiated.") : Amended ToSubclass,Values{"Other", "Unknown", "Undefined", "Standard Video BIOS", "VESA BIOS Extensions Supported", "VESA Power Management Supported", "VESA Display Data Channel Supported", "Video BIOS Shadowing Allowed", "Video BIOS Upgradeable"} : Amended ToSubclass] UINT16 Characteristics[];
};

[Description("The management characterisitics of a USB Device. These ") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409")] 
class CIM_USBDevice : CIM_LogicalDevice
{
  [Description("Indicates the latest USB Version supported by the USB Device. The property is expressed as a Binary-Coded Decimal (BCD) where a decimal point is implied between the 2nd and 3rd digits. For example, a value of 0x201 indicates that version 2.01 is supported.") : Amended ToSubclass] uint16 USBVersion;
  [Description("Indicates the USB class code.") : Amended ToSubclass] uint8 ClassCode;
  [Description("Indicates the USB subclass code.") : Amended ToSubclass] uint8 SubclassCode;
  [Description("Indicates the USB protocol code.") : Amended ToSubclass] uint8 ProtocolCode;
  [Description("Number of device configurations that are defined for the Device.") : Amended ToSubclass] uint8 NumberOfConfigs;
  [Description("Indicates the configuration currently selected for the Device. If this value is zero, the Device is unconfigured.") : Amended ToSubclass] uint8 CurrentConfigValue;
  [Description("An array of USB 'alternate settings' for each interface in the currently selected configuration (indicated by the CurrentConfigValue property). This array has one entry for each interface in the configuration. If the property, CurrentConfigValue, is zero (indicating the Device is not configured), the array is undefined. To understand how to parse this octet string, refer to the USB Specification.") : Amended ToSubclass] uint8 CurrentAlternateSettings[];
  [Description("This method returns the USBDevice Descriptor as specified by the input parameters. Each parameter is briefly described here with more detail in its Qualifier list. RequestType is an input parameter that defines whether the request is for standard, class or vendor-specific information, as well as specifying the recipient. RequestValue is also an input parameter and defines the USB Descriptor Type and Index. RequestIndex is an input parameter which describes the language used to return a string Descriptor. RequestLength is both an input and output parameter. It specifies the length of the Descriptor that should be returned (on input) and what is actually returned in the Buffer parameter (on output). Buffer is an output parameter, containing the Descriptor data. The GetDescriptor method returns an integer value of 0 if the USB Descriptor is successfully returned, 1 if the request is not supported and any other number to indicate an error.\nIn a subclass, the set of possible return codes could be specified, using a ValueMap qualifier on the method. The strings to which the ValueMap contents are 'translated' may also be specified in the subclass as a Values array qualifier.") : Amended ToSubclass] uint32 GetDescriptor([IN,Description("RequestType is bit-mapped and identifies the type of Descriptor request and the recipient. The type of request may be 'standard', 'class' or 'vendor-specific'. The recipient may be 'device', 'interface', 'endpoint' or 'other'. Refer to the USB Specification for the appropriate values for each bit.") : Amended ToSubclass] uint8 RequestType,[IN,Description("RequestValue contains the Descriptor Type in the high byte and the Descriptor Index (for example, index or offset into the Descriptor array) in the low byte. Refer to the USB Specification for more information.") : Amended ToSubclass] uint16 RequestValue,[IN,Description("RequestIndex defines the 2 byte Language ID code used by the USBDevice when returning string Descriptor data. The parameter is typically 0 for non-string Descriptors. Refer to the USB Specification for more information.") : Amended ToSubclass] uint16 RequestIndex,[IN,OUT,Description("On input, RequestLength is the length (in octets) of the Descriptor that should be returned. If this value is less than the actual length of the Descriptor, only the requested length will be returned. If it is more than the actual length, the actual length is returned. On output, this parameter is the length, in octets, of the Buffer being returned. If the requested Descriptor does not exist, the contents of this parameter are undefined.") : Amended ToSubclass] uint16 RequestLength,[OUT,Description("Buffer returns the requested Descriptor information. If the Descriptor does not exist, the contents of the Buffer are undefined.") : Amended ToSubclass] uint8 Buffer[]);
};

[Description("USB Hub Device.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409")] 
class CIM_USBHub : CIM_USBDevice
{
  [Description("Indicates whether power to the Hub Ports is individually or gang-switched. If this value is FALSE, power is switched individually for each Port. If this value is TRUE, power is switched to all Ports on the Hub at once.") : Amended ToSubclass] boolean GangSwitched;
  [Description("Number of downstream Ports on the Hub, including those embedded in the Hub's silicon. Individual USBPorts are associated with the Hub using the USBPortOnHub association.") : Amended ToSubclass] uint8 NumberOfPorts;
};

[Description("USBControllerHasHub defines the Hub(s) that are downstream of the USBController.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409")] 
class CIM_USBControllerHasHub : CIM_ControlledBy
{
  [Description("The USBController.") : Amended ToSubclass] CIM_USBController Ref Antecedent;
  [Description("The USBHub that is associated with the Controller.") : Amended ToSubclass] CIM_USBHub Ref Dependent;
};

[Description("This is an abstract base class for Hiperf provider") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_Perf : CIM_StatisticalInformation
{
};

[Description("This is an abstract base class for Hiperf provider") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_PerfRawData : Win32_Perf
{
};

[Description("This is an abstract base class for Hiperf provider / cooked counter provider") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_PerfFormattedData : Win32_Perf
{
};

[Description("The Win32_PrivilegesStatus class reports information about privileges required to complete an operation.  It may be returned when an operation failed, or when a partially populated instance has been returned.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_PrivilegesStatus : __ExtendedStatus
{
  [Description("The PrivilegesNotHeld property indicates required access privileges missing in order to complete an operation.  The types ofaccess privileges can be found under the Windows NT Privileges.  Example: SE_SHUTDOWN_NAME") : Amended ToSubclass] string PrivilegesNotHeld[];
  [Description("The PrivilegesRequired property indicates all privileges required to perform an operation.  This includes values from the PrivilegesNotHeld property.\nExample: SE_SHUTDOWN_NAME") : Amended ToSubclass] string PrivilegesRequired[];
};

[Description("The Win32_MethodParameter class is a base class forimplementation of method parameters derived from this class.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_MethodParameterClass
{
};

[Description("The Win32_WMISetting class is a Singleton class that contains the operational parameters for the WMI service. Win32_WMISetting can only have one instance. This single instance always exists for each Win32 system, and cannot be deleted. Additional instances cannot be created.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_WMISetting : CIM_Setting
{
  [Description("The InstallationDirectory property contains the directory path where the WMI software has been installed. The default location is: \\system32\\wbem.") : Amended ToSubclass] string InstallationDirectory;
  [Description("The BuildVersion property contains version information for the currently installed WMI service.") : Amended ToSubclass] string BuildVersion;
  [Description("The MofSelfInstallDirectory property contains the directory path for applications that install MOF files to the CIM repository. WMI automatically compiles any MOF files placed in this directory and, depending on its success, moves the MOF to a subdirectory labeled \"good\" or \"bad\". If the \"autorecover\" pragma is included, the fully qualified file name is added to the AutorecoverMofs list used when WMI is initializing or recovering the repository. The list determines the order in which MOFs are compiled.") : Amended ToSubclass] string MofSelfInstallDirectory;
  [Description("The AutoRecoverMofs property contains a list of fully qualified MOF file names used to initialize or recover the WMI repository. The list determines the order in which MOFs are compiled.") : Amended ToSubclass] string AutorecoverMofs[];
  [Description("The AutoStartWin9X property indicates the circumstances under which WMI will start on Win9X systems.") : Amended ToSubclass,Values{"Don't start", "Autostart", "Start on reboot"} : Amended ToSubclass] uint32 AutoStartWin9X;
  [Description("The EnableAnonWin9xConnections indicates whether remote access without security checking is permitted. This property only applies to Windows 95 and Windows 98 systems.") : Amended ToSubclass] boolean EnableAnonWin9xConnections;
  [Units("bytes") : Amended ToSubclass,Description("The MaxLogFileSize property indicates the maximum size of the log files produced by the WMI service.") : Amended ToSubclass] uint32 MaxLogFileSize;
  [Description("The LoggingLevel property indicates whether event logging is enabled and the verbosity level of logging used.") : Amended ToSubclass,Values{"Off", "Error logging", "Verbose Error logging"} : Amended ToSubclass] uint32 LoggingLevel;
  [Description("The LoggingDirectory property specifies the directory path containing the location of the WMI system log files.") : Amended ToSubclass] string LoggingDirectory;
  [Description("The DatabaseDirectory property specifies the directory path containing the WMI repository.") : Amended ToSubclass] string DatabaseDirectory;
  [Units("kilobytes") : Amended ToSubclass,Description("The DatabaseMaxSize property specifies the maximum size of the WMI repository.") : Amended ToSubclass] uint32 DatabaseMaxSize;
  [Units("minutes") : Amended ToSubclass,Description("The BackupInterval property specifies the length of time that will elapse between backups of the WMI database.") : Amended ToSubclass] uint32 BackupInterval;
  [Description("The BackupLastTime property specifies the date and time the last backup was performed.") : Amended ToSubclass] datetime BackupLastTime;
  [Description("The ASPScriptEnabled property indicates whether WMI scripting can be used on Active Server Pages (ASP). This property is valid on Windows NT 4.0 systems only. For Windows 2000 systems, WMI scripting is always allowed on ASP.") : Amended ToSubclass] boolean ASPScriptEnabled;
  [Description("The ASPScriptDefaultNamespace property contains the namespace used by calls from the script API if none is specified by the caller.") : Amended ToSubclass] string ASPScriptDefaultNamespace;
  [Description("The EnableEvents property indicates whether the WMI event subsystem should be enabled.\nValues: TRUE or FALSE, If TRUE,then the event subsystem is enabled.") : Amended ToSubclass] boolean EnableEvents;
  [Units("objects per second") : Amended ToSubclass,Description("The HighThresholdOnClientObjects property specifies the maximum rate provider created objects can be delivered to clients. To accommodate speed differentials between providers and clients, WMI holds objects in queues before delivering them to consumers.. WMI slows down the addition of new objects into the queue when the low threshold is reached. If this does not help, and high threshold (specified by this property) is reached, WMI will accept no more objects from providers and return WBEM_E_OUT_OF_MEMORY to the clients.") : Amended ToSubclass] uint32 HighThresholdOnClientObjects;
  [Units("objects per second") : Amended ToSubclass,Description("The LowThresholdOnClientObjects property specifies the rate at which WMI will start to slow the creation of new objects created for clients. To accommodate speed differentials between providers and clients, WMI holds objects in queues before delivering them to consumers.. If the rate of requests for objects grows out of control, WMI gradually slows down the creation of new objects to match the client's rate of use. This slowdown starts when the rate at which objects are being created exceeds the value of this property. The slowdown continues until equilibrium is achieved, or the high threshold is reached.") : Amended ToSubclass] uint32 LowThresholdOnClientObjects;
  [Units("milliseconds") : Amended ToSubclass,Description("The MaxWaitOnClientObjects property specifies the amount of time a newly created object waits to be used by the client before it is discarded and an error value is returned.") : Amended ToSubclass] uint32 MaxWaitOnClientObjects;
  [Units("events per second") : Amended ToSubclass,Description("The HighThresholdOnEvents property specifies the maximum rate at which events are to be delivered to clients. To accommodate speed differentials between providers and clients, WMI queues events before delivering them to consumers.. WMI slows down the addition of new events into the queue when the low threshold is reached. If this does not help, and high threshold (specified by this property) is reached, WMI will accept no more events from providers and return WBEM_E_OUT_OF_MEMORY to the clients.") : Amended ToSubclass] uint32 HighThresholdOnEvents;
  [Units("events per second") : Amended ToSubclass,Description("The LowThresholdOnEvents property specifies the rate at which  WMI will start to slow the delivery of new events. to accommodate speed differentials between providers and clients, WMI queues events before delivering them to consumers. If the queue grows out of control, WMI slows down the delivery of events gradually to get them in line with the client's rate . This slowdown starts when the rate at which events are generated exceeds the value of the this property. The slowdown continues until either the equilibrium is achieved, or the high threshold is reached.") : Amended ToSubclass] uint32 LowThresholdOnEvents;
  [Units("milliseconds") : Amended ToSubclass,Description("The MaxWaitOnEvents property specifies the amount of time an event sent to a client is queued before being discarded.") : Amended ToSubclass] uint32 MaxWaitOnEvents;
  [Description("The EnableStartupHeapPreallocation property indicates whether WMI will start with a pre-allocated heap.\nValues: TRUE or FALSE. If TRUE, then a pre-allocated heap with the size of LastStartupHeapPreallocation is created when WMI is initialized.") : Amended ToSubclass] boolean EnableStartupHeapPreallocation;
  [Units("bytes") : Amended ToSubclass,Description("The LastStartupHeapPreallocation property specifies the size of the pre-allocated heap created by WMI during initialization.") : Amended ToSubclass] uint32 LastStartupHeapPreallocation;
};

[Description("The Win32_WMIElementSetting class represents an association between a service running in the Win32 system, and the WMI settings it can use.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_WMIElementSetting : CIM_ElementSetting
{
  [key : ToInstance ToSubclass DisableOverride,Description("The Element reference in the Win32_WMIElementSetting association, represents the Win32 service using or surfacing WMI properties.") : Amended ToSubclass] Win32_Service Ref Element;
  [key : ToInstance ToSubclass DisableOverride,Description("The Setting reference in the Win32_WMIElementSetting association, represents the WMI settings available to the Win32 service.") : Amended ToSubclass] Win32_WMISetting Ref Setting;
};

[Description("The Win32_ComputerSystem class represents a computer system operating in a Win32 environment.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_ComputerSystem : CIM_UnitaryComputerSystem
{
  [Description("The AutomaticResetBootOption property determines whether the automatic reset boot option is enabled, i.e. whether the machine will try to reboot after a system failure.\nValues: TRUE or FALSE. If TRUE, the automatic reset boot option is enabled.") : Amended ToSubclass] boolean AutomaticResetBootOption;
  [Description("The AutomaticManagedPagefile property determines whether the system managed pagefile is enabled. This capability is notAvailable on windows server 2003,XP and lower versions.\nValues: TRUE or FALSE. If TRUE, the automatic managed pagefile is enabled.") : Amended ToSubclass] boolean AutomaticManagedPagefile;
  [Description("The AutomaticResetCapability property determines whether the auto reboot feature is available with this machine. This capability is available on Windows NT but not on Windows 95.\nValues: TRUE or FALSE. If TRUE, the automatic reset is enabled.") : Amended ToSubclass] boolean AutomaticResetCapability;
  [Description("The BootROMSupported property determines whether a boot ROM is supported.\nValues are TRUE or FALSE. If BootROMSupported equals TRUE, then a boot ROM is supported.") : Amended ToSubclass] boolean BootROMSupported;
  [Description("The BootupState property specifies how the system was started. Fail-safe boot (also called SafeBoot) bypasses the user's startup files. \nConstraints: Must have a value.") : Amended ToSubclass,Values{"Normal boot", "Fail-safe boot", "Fail-safe with network boot"} : Amended ToSubclass] string BootupState;
  [Units("minutes") : Amended ToSubclass,Description("The CurrentTimeZone property  indicates the amount of time the unitary computer system is offset from Coordinated Universal Time.") : Amended ToSubclass] sint16 CurrentTimeZone;
  [Description("The DNSHostName property indicates the DNS host name of the local computer.") : Amended ToSubclass] string DNSHostName;
  [Description("The Domain property indicates the name of the domain to which the computer belongs.") : Amended ToSubclass] string Domain;
  [Description("The InfraredSupported property determines whether an infrared (IR) port exists on the computer system.\nValues are TRUE or FALSE. If InfraredSupported equals TRUE, then an IR port exists.") : Amended ToSubclass] boolean InfraredSupported;
  [Description("The Manufacturer property indicates the name of the computer manufacturer.\nExample: Acme") : Amended ToSubclass] string Manufacturer;
  [Description("The Model property indicates the product name of the computer given by the manufacturer.") : Amended ToSubclass] string Model;
  [Description("The NetworkServerModeEnabled property determines whether Network Server Mode is enabled.\nValues: TRUE or FALSE.  If TRUE, Network Server Mode is enabled.") : Amended ToSubclass] boolean NetworkServerModeEnabled;
  [Description("The OEMLogoBitmap array holds the data for a bitmap created by the OEM.") : Amended ToSubclass] uint8 OEMLogoBitmap[];
  [Description("The SupportContactDescription property is an array that indicates the support contact information for the Win32 computer system.") : Amended ToSubclass] string SupportContactDescription[];
  [units("seconds") : Amended ToSubclass,Description("The SystemStartupDelay property indicates the time to delay before starting the operating system\n\nNote:  The SE_SYSTEM_ENVIRONMENT privilege is required on IA64bit machines. This privilege is not required for 32bit systems.") : Amended ToSubclass] uint16 SystemStartupDelay;
  [Description("The SystemStartupOptions property array indicates the options for starting up the computer system. Note that this property is not writable on IA64 bit machines. \nConstraints: Must have a value.\n\nNote:  The SE_SYSTEM_ENVIRONMENT privilege is required on IA64bit machines. This privilege is not required for other systems.") : Amended ToSubclass] string SystemStartupOptions[];
  [Description("The SystemStartupSetting property indicates the index of the default start profile. This value is 'calculated' so that it usually returns zero (0) because at write-time, the profile string is physically moved to the top of the list. (This is how Windows NT determines which value is the default.)\n\nNote:  The SE_SYSTEM_ENVIRONMENT privilege is required on IA64bit machines. This privilege is not required for 32bit systems.") : Amended ToSubclass] uint8 SystemStartupSetting;
  [Description("The SystemType property indicates the type of system running on the Win32 computer.\nConstraints: Must have a value") : Amended ToSubclass,Values{"X86-based PC", "MIPS-based PC", "Alpha-based PC", "Power PC", "SH-x PC", "StrongARM PC", "64-bit Intel PC", "x64-based PC", "Unknown", "X86-Nec98 PC"} : Amended ToSubclass] string SystemType;
  [Description("The UserName property indicates the name of the currently-logged-on user.\nConstraints: Must have a value. \nExample: johnsmith") : Amended ToSubclass] string UserName;
  [Description("The DomainRole property indicates the role this computer plays within its assigned domain-workgroup. The domain-workgroup is a collection of computers on the same network.  For example, the DomainRole property may show this computer is a \"Member Workstation\" (value of [1]).") : Amended ToSubclass,Values{"Standalone Workstation", "Member Workstation", "Standalone Server", "Member Server", "Backup Domain Controller", "Primary Domain Controller"} : Amended ToSubclass] uint16 DomainRole;
  [Description("The WakeUpType property indicates the event that caused the system to power up.") : Amended ToSubclass,Values{"Reserved", "Other", "Unknown", "APM Timer", "Modem Ring", "LAN Remote", "Power Switch", "PCI PME#", "AC Power Restored"} : Amended ToSubclass] uint16 WakeUpType;
  [Description("This structure contains free form strings defined by the OEM. Examples of this are: Part Numbers for Reference Documents for the system, contact information for the manufacturer, etc.") : Amended ToSubclass] string OEMStringArray[];
  [Description("Boot Option on Limit. Identifies the system action to be taken when the Reset Limit is reached.") : Amended ToSubclass,Values{"Reserved", "Operating system", "System utilities", "Do not reboot"} : Amended ToSubclass] uint16 BootOptionOnLimit;
  [Description("The BootOptionOnWatchDog Property indicates the type of re-boot action to be taken after the time on the watchdog timer has elapsed.") : Amended ToSubclass,Values{"Reserved", "Operating system", "System utilities", "Do not reboot"} : Amended ToSubclass] uint16 BootOptionOnWatchDog;
  [Description("The ResetCount property indicates the number of automatic resets since the last intentional reset.  A value of -1 indicates that the count is unknown.") : Amended ToSubclass] sint16 ResetCount;
  [Description("The ResetLimit property indicates the number of consecutive time the system reset will be attempted. A value of -1 indicates that the limit is unknown") : Amended ToSubclass] sint16 ResetLimit;
  [Units("milliseconds") : Amended ToSubclass,Description("The PauseAfterReset property identifies the time delay before the reboot is initiated.  It is used after a system power cycle, system reset (local or remote), and automatic system reset.  A value of -1 indicates that the pause value is unknown") : Amended ToSubclass] sint64 PauseAfterReset;
  [Description("The PowerOnPasswordStatus property identifies the system-wide hardware security settings for Power On Password Status.") : Amended ToSubclass,Values{"Disabled", "Enabled", "Not Implemented", "Unknown"} : Amended ToSubclass] uint16 PowerOnPasswordStatus;
  [Description("The KeyboardPasswordStatus property identifies the system-wide hardware security settings for Keyboard Password Status.") : Amended ToSubclass,Values{"Disabled", "Enabled", "Not Implemented", "Unknown"} : Amended ToSubclass] uint16 KeyboardPasswordStatus;
  [Description("The AdminPasswordStatus property identifies the system-wide hardware security settings for Administrator Password Status.") : Amended ToSubclass,Values{"Disabled", "Enabled", "Not Implemented", "Unknown"} : Amended ToSubclass] uint16 AdminPasswordStatus;
  [Description("The FrontPanelResetStatus property identifies the hardware security settings for the reset button on the machine.") : Amended ToSubclass,Values{"Disabled", "Enabled", "Not Implemented", "Unknown"} : Amended ToSubclass] uint16 FrontPanelResetStatus;
  [Description("The ChassisBootupState property indicates the enclosure's bootup state.") : Amended ToSubclass,Values{"Other", "Unknown", "Safe", "Warning", "Critical", "Non-recoverable"} : Amended ToSubclass] uint16 ChassisBootupState;
  [Description("The PowerSupplyState identifies the state of the enclosure's power supply (or supplies) when last booted.") : Amended ToSubclass,Values{"Other", "Unknown", "Safe", "Warning", "Critical", "Non-recoverable"} : Amended ToSubclass] uint16 PowerSupplyState;
  [Description("The ThermalState property identifies the enclosure's thermal state when last booted.") : Amended ToSubclass,Values{"Other", "Unknown", "Safe", "Warning", "Critical", "Non-recoverable"} : Amended ToSubclass] uint16 ThermalState;
  [Description("The DaylightInEffect property specifies if the daylight savings is in effect. \nValues: TRUE or FALSE.  If TRUE, daylight savings is presently being observed.  In most cases this means that the current time is one hour earlier than the standard time.") : Amended ToSubclass] boolean DaylightInEffect;
  [Description("The EnableDaylightSavingsTime property indicates whether Daylight Savings Time is recognized on this machine.  FALSE - time does not move an hour ahead or behind in the year.  NULL - the status of DST is unknown on this system") : Amended ToSubclass] boolean EnableDaylightSavingsTime;
  [Description("The NumberOfProcessors property indicates the number of physical processors currently available on the system. This is the number of processors whose status is \"enabled\" - versus simply the number of processors for the computer system. The former can be determined by enumerating the number of processor instances associated with the computer system object, using the Win32_ComputerSystemProcessor association.") : Amended ToSubclass] uint32 NumberOfProcessors;
  [Description("The NumberOfLogicalProcessors property indicates the number of logical processors currently available on the system.") : Amended ToSubclass] uint32 NumberOfLogicalProcessors;
  [Units("bytes") : Amended ToSubclass,Description("The TotalPhysicalMemory property indicates the total size of physical memory.\nExample: 67108864") : Amended ToSubclass] uint64 TotalPhysicalMemory;
  [Description("The PartOfDomain property indicates whether the computer is part of a domain or workgroup.  If TRUE, the computer is part of a domain.  If FALSE, the computer is part of a workgroup.  If NULL, the computer is not part of a network group, or is unknown.") : Amended ToSubclass] boolean PartOfDomain;
  [Description("The PCSystemType property indicates the nature of the PC a user is working with like Laptop, Desktop, Tablet-PC etc. ") : Amended ToSubclass,Values{"Unspecified", "Desktop", "Mobile", "Workstation", "Enterprise Server", "SOHO Server", "Appliance PC", "Performance Server", "Maximum"} : Amended ToSubclass] uint16 PCSystemType;
  [Description("The Workgroup property contains the name of the workgroup.  This value is only valid if the PartOfDomain property is FALSE.") : Amended ToSubclass] string Workgroup;
  [Description("The Rename method is used to change the name of a computer either in a workgroup or a domain.  When working remotely, the Rename method does not function for Windows XP Home Edition or on Professional Edition (workgroup only).  It should be noted that, for any computer in a domain (except the Domain Controller, since it can authenticate itself), delegation is required as a second hop is needed from the machine being remoted over to the Domain Controller for authentication.  There are no restrictions for local cases. \nIf the Password and Username parameters are specified, then the connection to winmgmt must use a high authentication level (i.e. no less than RPC_C_AUTHN_LEVEL_PKT_PRIVACY) when they connect to winmgmt (i.e. in the call to obtain the IWbemServices interface) or SetProxyBlanket on their IWbemServices ptr. If they are local to winmgmt then this is not a concern because their authentication level is as good as RPC_C_AUTHN_LEVEL_PKT_PRIVACY as well as their client request never goes over the wire to get to the winmgmt. \nIf Password and Username are left null, the provider does not care. \nIf the provider determines that the authentication level is too low and a Password or Username has been specified then WBEM_E_ENCRYPTED_CONNECTION_REQUIRED will be returned. \nThe method can return the following values:  \n0 - Success. Reboot required. \nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Success", "Other"} : Amended ToSubclass] uint32 Rename([In,Description("The Name parameter specifies the new name. The name cannot include control characters, leading or trailing spaces, or any of the following characters:  / \\ [ ] : | < > + = ; , ? ") : Amended ToSubclass] string Name,[In,Description("If the UserName parameter specifies an account name, the Password parameter must point to the password to use when connecting to the domain controller. Otherwise, this parameter must be NULL. \nPassword and Username must use a high authentication level (i.e. no less than RPC_C_AUTHN_LEVEL_PKT_PRIVACY) when they connect to winmgmt (i.e. in the call to obtain the IWbemServices interface) or SetProxyBlanket on their IWbemServices ptr. If they are local to winmgmt then this is not a concern because their authentication level is as good as RPC_C_AUTHN_LEVEL_PKT_PRIVACY as well as their client request never goes over the wire to get to the winmgmt. \nIf Password and Username are left null, the provider does not care. \nIf the provider determines that the authentication level is too low and a Password or Username has been specified then WBEM_E_ENCRYPTED_CONNECTION_REQUIRED will be returned. \nThis parameter is only used for domain renames on Windows 2000 platforms and beyond. ") : Amended ToSubclass] string Password,[In,Description("The Username parameter is a pointer to a constant null-terminated character string that specifies the account name to use when connecting to the domain controller. The string must specify either a domain NetBIOS name and user account (for example, \"REDMOND\\user\") or the user principal name (UPN) of the user in the form of an Internet-style login name (for example, \"someone@microsoft.com\"). If this parameter is NULL, the caller's context is used. \nPassword and Username must use a high authentication level (i.e. no less than RPC_C_AUTHN_LEVEL_PKT_PRIVACY) when they connect to winmgmt (i.e. in the call to obtain the IWbemServices interface) or SetProxyBlanket on their IWbemServices ptr. If they are local to winmgmt then this is not a concern because their authentication level is as good as RPC_C_AUTHN_LEVEL_PKT_PRIVACY as well as their client request never goes over the wire to get to the winmgmt. \nIf Password and Username are left null, the provider does not care. \nIf the provider determines that the authentication level is too low and a Password or Username has been specified then WBEM_E_ENCRYPTED_CONNECTION_REQUIRED will be returned. \nThis parameter is only used for domain renames on Windows 2000 platforms and beyond. ") : Amended ToSubclass] string UserName);
  [Description("The JoinDomainOrWorkgroup method joins computer systems to a domain or workgroup.  This method is only available on Windows 2000 platforms and beyond. The method can return the following values:\n0 - Success.\nOther - For integer values other than those listed above, refer to Win32 error code documentation.\nNote: If moving a computer from a Domain to a WorkGroup, the computer must first be removed from the domain before running this method to join the Workgroup. \nPassword and Username must use a high authentication level (i.e. no less than RPC_C_AUTHN_LEVEL_PKT_PRIVACY) when they connect to winmgmt (i.e. in the call to obtain the IWbemServices interface) or SetProxyBlanket on their IWbemServices ptr. If they are local to winmgmt then this is not a concern because their authentication level is as good as RPC_C_AUTHN_LEVEL_PKT_PRIVACY as well as their client request never goes over the wire to get to the winmgmt. \nIf Password and Username are left null, the provider does not care. \nIf the provider determines that the authentication level is too low and a Password or Username has been specified then WBEM_E_ENCRYPTED_CONNECTION_REQUIRED will be returned. ") : Amended ToSubclass,Values{"Success", "Other"} : Amended ToSubclass] uint32 JoinDomainOrWorkgroup([In,Description("The Name parameter specifies the domain or workgroup to join. This parameter cannot be NULL.") : Amended ToSubclass] string Name,[In,Description("If the UserName parameter specifies an account name, the Password parameter must point to the password to use when connecting to the domain controller. Otherwise, this parameter must be NULL. \nPassword and Username must use a high authentication level (i.e. no less than RPC_C_AUTHN_LEVEL_PKT_PRIVACY) when they connect to winmgmt (i.e. in the call to obtain the IWbemServices interface) or SetProxyBlanket on their IWbemServices ptr. If they are local to winmgmt then this is not a concern because their authentication level is as good as RPC_C_AUTHN_LEVEL_PKT_PRIVACY as well as their client request never goes over the wire to get to the winmgmt. \nIf Password and Username are left null, the provider does not care. \nIf the provider determines that the authentication level is too low and a Password or Username has been specified then WBEM_E_ENCRYPTED_CONNECTION_REQUIRED will be returned. ") : Amended ToSubclass] string Password,[In,Description("The Username parameter is a pointer to a constant null-terminated character string that specifies the account name to use when connecting to the domain controller. The string must specify either a domain NetBIOS name and user account (for example, \"REDMOND\\user\") or the user principal name (UPN) of the user in the form of an Internet-style login name (for example, \"someone@microsoft.com\"). If this parameter is NULL, the caller's context is used. \nPassword and Username must use a high authentication level (i.e. no less than RPC_C_AUTHN_LEVEL_PKT_PRIVACY) when they connect to winmgmt (i.e. in the call to obtain the IWbemServices interface) or SetProxyBlanket on their IWbemServices ptr. If they are local to winmgmt then this is not a concern because their authentication level is as good as RPC_C_AUTHN_LEVEL_PKT_PRIVACY as well as their client request never goes over the wire to get to the winmgmt. \nIf Password and Username are left null, the provider does not care. \nIf the provider determines that the authentication level is too low and a Password or Username has been specified then WBEM_E_ENCRYPTED_CONNECTION_REQUIRED will be returned. ") : Amended ToSubclass] string UserName,[In,Description("The AccountOU optionally specifies the pointer to a constant null-terminated character string that contains the RFC 1779 format name of the organizational unit (OU) for the computer account. If you specify this parameter, the string must contain a full path, for example, OU=testOU, DC=domain, DC=Domain,DC=com. Otherwise, this parameter must be NULL. ") : Amended ToSubclass] string AccountOU,[In,Description("The FJoinOptions parameter contains a set of bit flags defining the join options. This parameter can be one or more of the following values: \nJoin Domain -  Joins the computer to a domain. If this value is not specified, joins the computer to a workgroup. 0 bit - Join Domain - If not present, a workgroup is joined. \n1 bit - Acct Create - Creates the account on the domain. \n2 bit - Acct Delete - Delete the account when a domain is left. \n4 bit - Win9X Upgrade - The join operation is occurring as part of an upgrade of Windows 95/98 to Windows NT/Windows 2000.  \n5 bit - Domain Join If Joined - Allows a join to a new domain even if the computer is already joined to a domain. \n6 bit - Join Unsecure -  Performs an unsecured join.\n7 bit - Machine Password Passed - Indicates that the machine (not user) password is passed. This option is only valid for unsecure joins \n8 bit - Deferred SPN Set - Specifies that writing SPN and DnsHostName attributes on the computer object should be deferred until the rename that will follow the join. \n18 bit - Install Invocation - The APIs were invoked during install. \n\nThe method returns a 0 if no options are involved.") : Amended ToSubclass,BitValues{"Join Domain", "Acct Create", "Acct Delete", "Win9X Upgrade", "Domain Join If Joined", "Join Unsecure", "Machine Password Passed", "Deferred SPN Set", "Install Invocation"} : Amended ToSubclass] uint32 FJoinOptions);
  [Description("The UnjoinDomainOrWorkgroup method un-joins or removes a computer system from a domain or workgroup.  This method is only available on Windows 2000 platforms and beyond. The method can return the following values:\n0 - Success.\nOther - For integer values other than those listed above, refer to Win32 error code documentation.\nPassword and Username must use a high authentication level (i.e. no less than RPC_C_AUTHN_LEVEL_PKT_PRIVACY) when they connect to winmgmt (i.e. in the call to obtain the IWbemServices interface) or SetProxyBlanket on their IWbemServices ptr. If they are local to winmgmt then this is not a concern because their authentication level is as good as RPC_C_AUTHN_LEVEL_PKT_PRIVACY as well as their client request never goes over the wire to get to the winmgmt. \nIf Password and Username are left null, the provider does not care. \nIf the provider determines that the authentication level is too low and a Password or Username has been specified then WBEM_E_ENCRYPTED_CONNECTION_REQUIRED will be returned. ") : Amended ToSubclass,Values{"Success", "Other"} : Amended ToSubclass] uint32 UnjoinDomainOrWorkgroup([In,Description("If the UserName parameter specifies an account name, the Password parameter must point to the password to use when connecting to the domain controller. Otherwise, this parameter must be NULL. \nPassword and Username must use a high authentication level (i.e. no less than RPC_C_AUTHN_LEVEL_PKT_PRIVACY) when they connect to winmgmt (i.e. in the call to obtain the IWbemServices interface) or SetProxyBlanket on their IWbemServices ptr. If they are local to winmgmt then this is not a concern because their authentication level is as good as RPC_C_AUTHN_LEVEL_PKT_PRIVACY as well as their client request never goes over the wire to get to the winmgmt. \nIf Password and Username are left null, the provider does not care. \nIf the provider determines that the authentication level is too low and a Password or Username has been specified then WBEM_E_ENCRYPTED_CONNECTION_REQUIRED will be returned. ") : Amended ToSubclass] string Password,[In,Description("The Username parameter is a pointer to a constant null-terminated character string that specifies the account name to use when connecting to the domain controller. The string must specify either a domain NetBIOS name and user account (for example, \"REDMOND\\user\") or the user principal name (UPN) of the user in the form of an Internet-style login name (for example, \"someone@microsoft.com\"). If this parameter is NULL, the caller's context is used. Blank password is passed by using an empty string \nPassword and Username must use a high authentication level (i.e. no less than RPC_C_AUTHN_LEVEL_PKT_PRIVACY) when they connect to winmgmt (i.e. in the call to obtain the IWbemServices interface) or SetProxyBlanket on their IWbemServices ptr. If they are local to winmgmt then this is not a concern because their authentication level is as good as RPC_C_AUTHN_LEVEL_PKT_PRIVACY as well as their client request never goes over the wire to get to the winmgmt. \nIf Password and Username are left null, the provider does not care. \nIf the provider determines that the authentication level is too low and a Password or Username has been specified then WBEM_E_ENCRYPTED_CONNECTION_REQUIRED will be returned. ") : Amended ToSubclass] string UserName,[In,Description("The FUnjoinOptions parameter specifies the unjoin options. If this parameter is NETSETUP_ACCT_DELETE, the account is disabled when the unjoin occurs. Note that this option does not delete the account. Currently, there are no other unjoin options defined.  \n\n2 bit - Acct Delete - Delete the account when a domain is left. \nThe method returns a 0 if no options are involved.") : Amended ToSubclass,BitValues{"Acct Delete"} : Amended ToSubclass] uint32 FUnjoinOptions);
};

[Description("The Win32_ProgramGroupOrItem class represents a logical grouping of programs on the user's Start|Programs menu.  It contains program groups and program group items.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_ProgramGroupOrItem : CIM_LogicalElement
{
};

[Description("The Win32_LogicalProgramGroup class represents a program group in a Win32 system.\nExample: Accessories or Startup.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_LogicalProgramGroup : Win32_ProgramGroupOrItem
{
  [Description("The GroupName property indicates the name of the Win32 program group. Program groups are implemented as file folders in Win32.\nExample: Accessories\\System Tools") : Amended ToSubclass] string GroupName;
  [key : ToInstance ToSubclass DisableOverride,Description("The Name property indicates the user assigned name followed by the group name. Program groups are implemented as file folders in Win32.\nExample: All Users:Accessories\\System Tools") : Amended ToSubclass] string Name;
  [Description("The UserName property indicates the users who can access the Win32 program group. Program groups are implemented as file folders in Win32.\nExample: All Users") : Amended ToSubclass] string UserName;
};

[Description("The Win32_LogicalProgramGroupItem class represents an element contained by a Win32_ProgramGroup, that is not itself another Win32_ProgramGroup.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_LogicalProgramGroupItem : Win32_ProgramGroupOrItem
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The inherited Name property serves as key of a Win32_LogicalProgramGroupItem instance within a computer system.  Program Groups are implemented as file folders in Win32.  Full path names should be provided. Example: f:\\WINNT\\Profiles\\a-kevhu.000\\ Start Menu\\Programs\\Accessories\\WordPad.Lnk") : Amended ToSubclass] string Name;
};

[Description("The Win32_Processor class represents a device that is capable of interpreting a sequence of machine instructions on a Win32 computer system. On a multiprocessor machine, there will exist one instance of this class for each processor.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_Processor : CIM_Processor
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The DeviceID property contains a string uniquely identifying the processor with other devices on the system.") : Amended ToSubclass] string DeviceID;
  [Description("The Version property specifies an architecture-dependent processor revision number. Note: This member is not used in Windows 95.\nExample: Model 2, Stepping 12.") : Amended ToSubclass] string Version;
  [Description("The Manufacturer property specifies the name of the processor's manufacturer.\nExample: GenuineSilicon") : Amended ToSubclass] string Manufacturer;
  [Units("kilobytes") : Amended ToSubclass,Description("The L2CacheSize property specifies the size of the processor's Level 2 cache. A Level 2 cache is an external memory area that has a faster access times than the main RAM memory.") : Amended ToSubclass] uint32 L2CacheSize;
  [Units("megahertz") : Amended ToSubclass,Description("The L2CacheSpeed property specifies the clockspeed of the processor's Level 2 cache. A Level 2 cache is an external memory area that has a faster access times than the main RAM memory.") : Amended ToSubclass] uint32 L2CacheSpeed;
  [Units("kilobytes") : Amended ToSubclass,Description("The L3CacheSize property specifies the size of the processor's Level 3 cache. A Level 3 cache is an external memory area that has a faster access times than the main RAM memory.") : Amended ToSubclass] uint32 L3CacheSize;
  [Units("megahertz") : Amended ToSubclass,Description("The L3CacheSpeed property specifies the clockspeed of the processor's Level 3 cache. A Level 3 cache is an external memory area that has a faster access times than the main RAM memory.") : Amended ToSubclass] uint32 L3CacheSpeed;
  [Description("The Architecture property specifies the processor architecture used by this platform. It returns one of the following        integer values:\n0 - x86 \n1 - MIPS \n2 - Alpha \n3 - PowerPC \n6 - ia64 \n9 - x64 \n") : Amended ToSubclass,Values{"x86", "MIPS", "Alpha", "PowerPC", "ia64", "x64"} : Amended ToSubclass] uint16 Architecture;
  [Description("The Level property further defines the processor type. The value  depends on the architecture of the processor.") : Amended ToSubclass] uint16 Level;
  [Description("The Revision property specifies the system's architecture-dependent revision level. The meaning of this value depends on the architecture of the processor. It contains the same values as the \"Version\" member, but in a numerical format.") : Amended ToSubclass] uint16 Revision;
  [Description("The CpuStatus property specifies the current status of the processor. Changes in status arise from processor usage, not the physical condition of the processor.") : Amended ToSubclass,Values{"Unknown", "CPU Enabled", "CPU Disabled by User via BIOS Setup", "CPU Disabled By BIOS (POST Error)", "CPU is Idle", "Reserved", "Reserved", "Other"} : Amended ToSubclass] uint16 CpuStatus;
  [Units("tenth-volts") : Amended ToSubclass,Description("The CurrentVoltage specifies the voltage of the processor. bits 0-6 of the field contain the processor's current voltage times 10. This value is only set when SMBIOS designates a voltage value. For specific values, see VoltageCaps.\nExample: field value for a processor voltage of 1.8 volts would be 92h = 80h + (1.8 x 10) = 80h + 18 = 80h + 12h.") : Amended ToSubclass] uint16 CurrentVoltage;
  [Units("megahertz") : Amended ToSubclass,Description("The ExtClock property specifies the external clock frequency. If the frequency is unknown this property is set to null.") : Amended ToSubclass] uint32 ExtClock;
  [Description("The ProcessorId property contains processor-specific information that describes the processor's features. For x86 class CPUs, the field's format depends on the processor's support of the CPUID instruction. If the instruction is supported, the ProcessorId property contains two DWORD-formatted values. The first (offsets 08h-0Bh) is the EAX value returned by a CPUID instruction with input EAX set to 1. The second (offsets 0Ch-0Fh) is the EDX value returned by that instruction. Only the first two bytes of the ProcessorID property are significant (all others are set to 0) and contain (in WORD-format) the contents of the DX register at CPU reset.") : Amended ToSubclass] string ProcessorId;
  [Description("The ProcessorType property specifies the processor's primary function.") : Amended ToSubclass,Values{"Other", "Unknown", "Central Processor", "Math Processor", "DSP Processor", "Video Processor"} : Amended ToSubclass] uint16 ProcessorType;
  [Description("The NumberOfLogicalProcessors property specifies the total number of logical processors.") : Amended ToSubclass] uint32 NumberOfLogicalProcessors;
  [Description("The NumberOfCores property contains a Processor's total number of cores. e.g dual core machine will have NumberOfCores = 2.") : Amended ToSubclass] uint32 NumberOfCores;
  [Description("The SocketDesignation property contains the type of chip socket used on the circuit.\nExample: J202") : Amended ToSubclass] string SocketDesignation;
  [Units("volts") : Amended ToSubclass,Description("The VoltageCaps property specifies the voltage capabilities of the processor. Bits 0-3 of the field represent specific voltages that the processor socket can accept. All other bits should be set to zero. The socket is configurable if multiple bits are being set. For a range of voltages see CurrentVoltage. If the property is NULL, then the voltage capabilities are unknown.") : Amended ToSubclass,BitValues{"5", "3.3", "2.9"} : Amended ToSubclass] uint32 VoltageCaps;
  [Units("percent") : Amended ToSubclass,Description("The LoadPercentage property specifies each processor's load capacity averaged over the last second. The term 'processor loading' refers to the total computing burden each processor carries at one time.") : Amended ToSubclass] uint16 LoadPercentage;
};

[Description("The Win32_ShortcutFile class represent files that are shortcuts to other files, directories, and commands.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_ShortcutFile : CIM_DataFile
{
  [Description("The Target property indicates the name of the object that this is a shortcut to.") : Amended ToSubclass] string Target;
};

[Description("The Win32_CodecFile class represents the audio or video codec installed on the computer system. Codecs convert one media format type to another, typically a compressed format to an uncompressed format. The name \"codec\" is derived from a combination of \"compress\" and \"decompress.\"  For example, a codec can convert a compressed format such as MS-ADPCM to an uncompressed format such as PCM, which most audio hardware can play directly.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_CodecFile : CIM_DataFile
{
  [Description("The Group property indicates the type of codec represented by this class.") : Amended ToSubclass,Values{"Audio", "Video"} : Amended ToSubclass] string Group;
  [Description("The Description property indicates the full name of the codec driver. This string is intended to be displayed in large (descriptive) spaces.\nExample: Microsoft PCM Converter.") : Amended ToSubclass] string Description;
};

[DisplayName("System Drivers and Services") : Amended,Description("The Win32_BaseService class represents executable objects that are installed in a registry database maintained by the Service Control Manager. The executable file associated with a service can be started at boot time by a boot program or by the system. It can also be started on-demand by the Service Control Manager. Any service or process that is not owned by a specific user, and that provides an interface to some functionality supported by the computer system, is a descendent (or member) of this class.\nExample: The dynamic host configuration protocol (DHCP) client service on a Windows NT/Windows 2000 computer system.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_BaseService : CIM_Service
{
  [DisplayName("Service Accepts Pause") : Amended,Description("The AcceptPause property indicates whether the service can be paused.\nValues: TRUE or FALSE. A value of TRUE indicates the service can be paused.") : Amended ToSubclass] boolean AcceptPause;
  [DisplayName("Service Accepts Stop") : Amended,Description("The AcceptStop property indicates whether the service can be stopped.\nValues: TRUE or FALSE. A value of TRUE indicates the service can be stopped.") : Amended ToSubclass] boolean AcceptStop;
  [DisplayName("Interacts With Desktop") : Amended,Description("The DesktopInteract property indicates whether the service can create or communicate with windows on the desktop.\nValues: TRUE or FALSE. A value of TRUE indicates the service can create or communicate with windows on the desktop.") : Amended ToSubclass] boolean DesktopInteract;
  [DisplayName("Display Name") : Amended,Description("The DisplayName property indicates the display name of the service. This string has a maximum length of 256 characters. The name is case-preserved in the Service Control Manager. DisplayName comparisons are always case-insensitive. \nConstraints: Accepts the same value as the Name property.\nExample: Atdisk.") : Amended ToSubclass] string DisplayName;
  [DisplayName("Severity Of Startup Failure") : Amended,Description("If this service fails to start during startup, the ErrorControl property specifies the severity of the error. The value indicates the action taken by the startup program if failure occurs. All errors are logged by the computer system. The computer system does not notify the user of \"Ignore\" errors. With \"Normal\" errors the user is notified. With \"Severe\" errors, the system is restarted with the last-known-good configuration. Finally, on\"Critical\" errors the system attempts to restart with a good configuration.") : Amended ToSubclass,Values{"Ignore", "Normal", "Severe", "Critical", "Unknown"} : Amended ToSubclass] string ErrorControl;
  [DisplayName("File Path Name") : Amended,Description("The PathName property contains the fully qualified path to the service binary file that implements the service.\nExample: \\SystemRoot\\System32\\drivers\\afd.sys") : Amended ToSubclass] string PathName;
  [DisplayName("Service Type") : Amended,Description("The ServiceType property supplies the type of service provided to calling processes.") : Amended ToSubclass,Values{"Kernel Driver", "File System Driver", "Adapter", "Recognizer Driver", "Own Process", "Share Process", "Interactive Process"} : Amended ToSubclass] string ServiceType;
  [DisplayName("Starting Account Name") : Amended,Description("The StartName property indicates the account name under which the service runs. Depending on the service type, the account name may be in the form of \"DomainName\\Username\".  The service process will be logged using one of these two forms when it runs. If the account belongs to the built-in domain, \".\\Username\" can be specified. If NULL is specified, the service will be logged on as the LocalSystem account. For kernel or system level drivers, StartName contains the driver object name (that is, \\FileSystem\\Rdr or \\Driver\\Xns) which the input and output (I/O) system uses to load the device driver. Additionally, if NULL is specified, the driver runs with a default object name created by the I/O system based on the service name.\nExample: DWDOM\\Admin.") : Amended ToSubclass] string StartName;
  [DisplayName("Start Mode") : Amended,Description("The StartMode property indicates the start mode of the Win32 base service. \"Boot\" specifies a device driver started by the operating system loader. This value is valid only for driver services. \"System\" specifies a device driver started by the IoInitSystem function. This value is valid only for driver services. \"Automatic\" specifies a service to be started automatically by the service control manager during system startup. \"Manual\" specifies a service to be started by the service control manager when a process calls the StartService function. \"Disabled\" specifies a service that can no longer be started.") : Amended ToSubclass,Values{"Boot", "System", "Auto", "Manual", "Disabled"} : Amended ToSubclass] string StartMode;
  [DisplayName("State") : Amended,Description("The State property indicates the current state of the base service.") : Amended ToSubclass,Values{"Stopped", "Start Pending", "Stop Pending", "Running", "Continue Pending", "Pause Pending", "Paused", "Unknown"} : Amended ToSubclass] string State;
  [DisplayName("Tag Id") : Amended,Description("The TagId property specifies a unique tag value for this service in the group. A value of 0 indicates that the service has not been assigned a tag. A tag can be used for ordering service startup within a load order group by specifying a tag order vector in the registry located at: HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\GroupOrderList. Tags are only evaluated for Kernel Driver and File System Driver start type services that have \"Boot\" or \"System\" start modes.") : Amended ToSubclass] uint32 TagId;
  [Description("The StartService method attempts to place the service into its startup state. It returns one of the following integer values: \n0 - The request was accepted.\n1 - The request is not supported.\n2 - The user did not have the necessary access.\n3 - The service cannot be stopped because other services that are running are dependent on it.\n4 - The requested control code is not valid, or it is unacceptable to the service.\n5 - The requested control code cannot be sent to the service because the state of the service (Win32_BaseService:State) is equal to 0, 1, or 2.\n6 - The service has not been started.\n7 - The service did not respond to the start request in a timely fashion.\n8 - Unknown failure when starting the service.\n9 - The directory path to the service executable was not found.\n10 - The service is already running.\n11 - The database to add a new service is locked.\n12 - A dependency for which this service relies on has been removed from the system.\n13 - The service failed to find the service needed from a dependent service.\n14 - The service has been disabled from the system.\n15 - The service does not have the correct authentication to run on the system.\n16 - This service is being removed from the system.\n17 - There is no execution thread for the service.\n18 - There are circular dependencies when starting the service.\n19 - There is a service running under the same name.\n20 - There are invalid characters in the name of the service.\n21 - Invalid parameters have been passed to the service.\n22 - The account, which this service is to run under is either invalid or lacks the permissions to run the service.\n23 - The service exists in the database of services available from the system.\n24 - The service is currently paused in the system.\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Success", "Not Supported", "Access Denied", "Dependent Services Running", "Invalid Service Control", "Service Cannot Accept Control", "Service Not Active", "Service Request Timeout", "Unknown Failure", "Path Not Found", "Service Already Running", "Service Database Locked", "Service Dependency Deleted", "Service Dependency Failure", "Service Disabled", "Service Logon Failed", "Service Marked For Deletion", "Service No Thread", "Status Circular Dependency", "Status Duplicate Name", "Status Invalid Name", "Status Invalid Parameter", "Status Invalid Service Account", "Status Service Exists", "Service Already Paused", "Other"} : Amended ToSubclass] uint32 StartService();
  [Description("The StopService method places the service in the stopped state. It returns an integer value of 0 if the service was successfully stopped, 1 if the request is not supported, and any other number to indicate an error. It returns one of the following integer values:\n0 - The request was accepted.\n1 - The request is not supported.\n2 - The user did not have the necessary access.\n3 - The service cannot be stopped because other services that are running are dependent on it.\n4 - The requested control code is not valid, or it is unacceptable to the service.\n5 - The requested control code cannot be sent to the service because the state of the service (Win32_BaseService:State) is equal to 0, 1, or 2.\n6 - The service has not been started.\n7 - The service did not respond to the start request in a timely fashion.\n8 - Unknown failure when starting the service.\n9 - The directory path to the service executable was not found.\n10 - The service is already running.\n11 - The database to add a new service is locked.\n12 - A dependency for which this service relies on has been removed from the system.\n13 - The service failed to find the service needed from a dependent service.\n14 - The service has been disabled from the system.\n15 - The service does not have the correct authentication to run on the system.\n16 - This service is being removed from the system.\n17 - There is no execution thread for the service.\n18 - There are circular dependencies when starting the service.\n19 - There is a service running under the same name.\n20 - There are invalid characters in the name of the service.\n21 - Invalid parameters have been passed to the service.\n22 - The account, which this service is to run under is either invalid or lacks the permissions to run the service.\n23 - The service exists in the database of services available from the system.\n24 - The service is currently paused in the system.\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Success", "Not Supported", "Access Denied", "Dependent Services Running", "Invalid Service Control", "Service Cannot Accept Control", "Service Not Active", "Service Request Timeout", "Unknown Failure", "Path Not Found", "Service Already Running", "Service Database Locked", "Service Dependency Deleted", "Service Dependency Failure", "Service Disabled", "Service Logon Failed", "Service Marked For Deletion", "Service No Thread", "Status Circular Dependency", "Status Duplicate Name", "Status Invalid Name", "Status Invalid Parameter", "Status Invalid Service Account", "Status Service Exists", "Service Already Paused", "Other"} : Amended ToSubclass] uint32 StopService();
  [Description("The PauseService method attempts to place the service in the paused state. It returns an integer value of 0 if the PauseService request was accepted, 1 if the request is not supported, and any other number to indicate an error. It returns one of the following integer values:\n0 - The request was accepted.\n1 - The request is not supported.\n2 - The user did not have the necessary access.\n3 - The service cannot be stopped because other services that are running are dependent on it.\n4 - The requested control code is not valid, or it is unacceptable to the service.\n5 - The requested control code cannot be sent to the service because the state of the service (Win32_BaseService:State) is equal to 0, 1, or 2.\n6 - The service has not been started.\n7 - The service did not respond to the start request in a timely fashion.\n8 - Unknown failure when starting the service.\n9 - The directory path to the service executable was not found.\n10 - The service is already running.\n11 - The database to add a new service is locked.\n12 - A dependency for which this service relies on has been removed from the system.\n13 - The service failed to find the service needed from a dependent service.\n14 - The service has been disabled from the system.\n15 - The service does not have the correct authentication to run on the system.\n16 - This service is being removed from the system.\n17 - There is no execution thread for the service.\n18 - There are circular dependencies when starting the service.\n19 - There is a service running under the same name.\n20 - There are invalid characters in the name of the service.\n21 - Invalid parameters have been passed to the service.\n22 - The account, which this service is to run under is either invalid or lacks the permissions to run the service.\n23 - The service exists in the database of services available from the system.\n24 - The service is currently paused in the system.\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Success", "Not Supported", "Access Denied", "Dependent Services Running", "Invalid Service Control", "Service Cannot Accept Control", "Service Not Active", "Service Request Timeout", "Unknown Failure", "Path Not Found", "Service Already Running", "Service Database Locked", "Service Dependency Deleted", "Service Dependency Failure", "Service Disabled", "Service Logon Failed", "Service Marked For Deletion", "Service No Thread", "Status Circular Dependency", "Status Duplicate Name", "Status Invalid Name", "Status Invalid Parameter", "Status Invalid Service Account", "Status Service Exists", "Service Already Paused", "Other"} : Amended ToSubclass] uint32 PauseService();
  [Description("The ResumeService method attempts to place the service in the resumed state. It returns one of the following integer values:\n0 - The request was accepted.\n1 - The request is not supported.\n2 - The user did not have the necessary access.\n3 - The service cannot be stopped because other services that are running are dependent on it.\n4 - The requested control code is not valid, or it is unacceptable to the service.\n5 - The requested control code cannot be sent to the service because the state of the service (Win32_BaseService:State) is equal to 0, 1, or 2.\n6 - The service has not been started.\n7 - The service did not respond to the start request in a timely fashion.\n8 - Unknown failure when starting the service.\n9 - The directory path to the service executable was not found.\n10 - The service is already running.\n11 - The database to add a new service is locked.\n12 - A dependency for which this service relies on has been removed from the system.\n13 - The service failed to find the service needed from a dependent service.\n14 - The service has been disabled from the system.\n15 - The service does not have the correct authentication to run on the system.\n16 - This service is being removed from the system.\n17 - There is no execution thread for the service.\n18 - There are circular dependencies when starting the service.\n19 - There is a service running under the same name.\n20 - There are invalid characters in the name of the service.\n21 - Invalid parameters have been passed to the service.\n22 - The account, which this service is to run under is either invalid or lacks the permissions to run the service.\n23 - The service exists in the database of services available from the system.\n24 - The service is currently paused in the system.\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Success", "Not Supported", "Access Denied", "Dependent Services Running", "Invalid Service Control", "Service Cannot Accept Control", "Service Not Active", "Service Request Timeout", "Unknown Failure", "Path Not Found", "Service Already Running", "Service Database Locked", "Service Dependency Deleted", "Service Dependency Failure", "Service Disabled", "Service Logon Failed", "Service Marked For Deletion", "Service No Thread", "Status Circular Dependency", "Status Duplicate Name", "Status Invalid Name", "Status Invalid Parameter", "Status Invalid Service Account", "Status Service Exists", "Service Already Paused", "Other"} : Amended ToSubclass] uint32 ResumeService();
  [Description("The InterrogateService method requests that the service update its state to the service manager. It returns one of the following integer values:\n0 - The request was accepted.\n1 - The request is not supported.\n2 - The user did not have the necessary access.\n3 - The service cannot be stopped because other services that are running are dependent on it.\n4 - The requested control code is not valid, or it is unacceptable to the service.\n5 - The requested control code cannot be sent to the service because the state of the service (Win32_BaseService:State) is equal to 0, 1, or 2.\n6 - The service has not been started.\n7 - The service did not respond to the start request in a timely fashion.\n8 - Unknown failure when starting the service.\n9 - The directory path to the service executable was not found.\n10 - The service is already running.\n11 - The database to add a new service is locked.\n12 - A dependency for which this service relies on has been removed from the system.\n13 - The service failed to find the service needed from a dependent service.\n14 - The service has been disabled from the system.\n15 - The service does not have the correct authentication to run on the system.\n16 - This service is being removed from the system.\n17 - There is no execution thread for the service.\n18 - There are circular dependencies when starting the service.\n19 - There is a service running under the same name.\n20 - There are invalid characters in the name of the service.\n21 - Invalid parameters have been passed to the service.\n22 - The account, which this service is to run under is either invalid or lacks the permissions to run the service.\n23 - The service exists in the database of services available from the system.\n24 - The service is currently paused in the system.\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Success", "Not Supported", "Access Denied", "Dependent Services Running", "Invalid Service Control", "Service Cannot Accept Control", "Service Not Active", "Service Request Timeout", "Unknown Failure", "Path Not Found", "Service Already Running", "Service Database Locked", "Service Dependency Deleted", "Service Dependency Failure", "Service Disabled", "Service Logon Failed", "Service Marked For Deletion", "Service No Thread", "Status Circular Dependency", "Status Duplicate Name", "Status Invalid Name", "Status Invalid Parameter", "Status Invalid Service Account", "Status Service Exists", "Service Already Paused", "Other"} : Amended ToSubclass] uint32 InterrogateService();
  [Description("The UserControlService method attempts to send a user-defined control code to a service. It returns one of the following integer values:\n0 - The request was accepted.\n1 - The request is not supported.\n2 - The user did not have the necessary access.\n3 - The service cannot be stopped because other services that are running are dependent on it.\n4 - The requested control code is not valid, or it is unacceptable to the service.\n5 - The requested control code cannot be sent to the service because the state of the service (Win32_BaseService:State) is equal to 0, 1, or 2.\n6 - The service has not been started.\n7 - The service did not respond to the start request in a timely fashion.\n8 - Unknown failure when starting the service.\n9 - The directory path to the service executable was not found.\n10 - The service is already running.\n11 - The database to add a new service is locked.\n12 - A dependency for which this service relies on has been removed from the system.\n13 - The service failed to find the service needed from a dependent service.\n14 - The service has been disabled from the system.\n15 - The service does not have the correct authentication to run on the system.\n16 - This service is being removed from the system.\n17 - There is no execution thread for the service.\n18 - There are circular dependencies when starting the service.\n19 - There is a service running under the same name.\n20 - There are invalid characters in the name of the service.\n21 - Invalid parameters have been passed to the service.\n22 - The account, which this service is to run under is either invalid or lacks the permissions to run the service.\n23 - The service exists in the database of services available from the system.\n24 - The service is currently paused in the system.\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Success", "Not Supported", "Access Denied", "Dependent Services Running", "Invalid Service Control", "Service Cannot Accept Control", "Service Not Active", "Service Request Timeout", "Unknown Failure", "Path Not Found", "Service Already Running", "Service Database Locked", "Service Dependency Deleted", "Service Dependency Failure", "Service Disabled", "Service Logon Failed", "Service Marked For Deletion", "Service No Thread", "Status Circular Dependency", "Status Duplicate Name", "Status Invalid Name", "Status Invalid Parameter", "Status Invalid Service Account", "Status Service Exists", "Service Already Paused", "Other"} : Amended ToSubclass] uint32 UserControlService([In : ToSubclass,Description("The ControlCode parameter specifies defined values(from 128 to 255) that provide control commands specific to a user.") : Amended ToSubclass] uint8 ControlCode);
  [DisplayName("Exit Code") : Amended,Description("The ExitCode property specifies a Win32 error code defining any problems encountered in starting or stopping the service. This property is set to ERROR_SERVICE_SPECIFIC_ERROR (1066) when the error is unique to the service represented by this class, and information about the error is available in the ServiceSpecificExitCode member. The service sets this value to NO_ERROR when running, and again upon normal termination.") : Amended ToSubclass] uint32 ExitCode;
  [DisplayName("Server Specific Exit Code") : Amended,Description("The ServiceSpecificExitCode property specifies a service-specific error code for errors that occur while the service is either starting or stopping. The exit codes are defined by the service represented by this class. This value is only set when the ExitCodeproperty value is ERROR_SERVICE_SPECIFIC_ERROR, 1066.") : Amended ToSubclass] uint32 ServiceSpecificExitCode;
  [Description("The Create method creates a new service. The Win32_LoadOrderGroup parameter represents a grouping of system services defining execution dependencies. The services must be initiated in the order specified by the Load Order Group, as the services are dependent on each other. These dependent services require the presence of the antecedent services in order to function correctly. It returns one of the following integer values:\n0 - The request was accepted.\n1 - The request is not supported.\n2 - The user did not have the necessary access.\n3 - The service cannot be stopped because other services that are running are dependent on it.\n4 - The requested control code is not valid, or it is unacceptable to the service.\n5 - The requested control code cannot be sent to the service because the state of the service (Win32_BaseService:State) is equal to 0, 1, or 2.\n6 - The service has not been started.\n7 - The service did not respond to the start request in a timely fashion.\n8 - Unknown failure when starting the service.\n9 - The directory path to the service executable was not found.\n10 - The service is already running.\n11 - The database to add a new service is locked.\n12 - A dependency for which this service relies on has been removed from the system.\n13 - The service failed to find the service needed from a dependent service.\n14 - The service has been disabled from the system.\n15 - The service does not have the correct authentication to run on the system.\n16 - This service is being removed from the system.\n17 - There is no execution thread for the service.\n18 - There are circular dependencies when starting the service.\n19 - There is a service running under the same name.\n20 - There are invalid characters in the name of the service.\n21 - Invalid parameters have been passed to the service.\n22 - The account, which this service is to run under is either invalid or lacks the permissions to run the service.\n23 - The service exists in the database of services available from the system.\n24 - The service is currently paused in the system.\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Success", "Not Supported", "Access Denied", "Dependent Services Running", "Invalid Service Control", "Service Cannot Accept Control", "Service Not Active", "Service Request Timeout", "Unknown Failure", "Path Not Found", "Service Already Running", "Service Database Locked", "Service Dependency Deleted", "Service Dependency Failure", "Service Disabled", "Service Logon Failed", "Service Marked For Deletion", "Service No Thread", "Status Circular Dependency", "Status Duplicate Name", "Status Invalid Name", "Status Invalid Parameter", "Status Invalid Service Account", "Status Service Exists", "Service Already Paused", "Other"} : Amended ToSubclass] uint32 Create([In : ToSubclass,Description("The Name parameter passes the name of the service to install to the Create method. The maximum string length is 256 characters. The service control manager database preserves the case of the characters, but service name comparisons are always case insensitive. Forward-slashes (/) and double back-slashes (\\) are invalid service name characters.") : Amended ToSubclass] string Name,[In : ToSubclass,Description("The DisplayName parameter passes the display name of the service. This string has a maximum length of 256 characters. The name is case-preserved in the service control manager. DisplayName comparisons are always case-insensitive. \nConstraints: Accepts the same value as the Name parameter.\nExample: Atdisk.") : Amended ToSubclass] string DisplayName,[In : ToSubclass,Description("The PathName parameter passes the fully qualified path to the executable file that implements the service.\nExample: \\SystemRoot\\System32\\drivers\\afd.sys") : Amended ToSubclass] string PathName,[In : ToSubclass,Description("The ServiceType parameter passes the type of services provided to processes that call them.") : Amended ToSubclass,BitValues{"Kernel Driver", "File System Driver", "Adapter", "Recognizer Driver", "Own Process", "Share Process"} : Amended ToSubclass] uint8 ServiceType,[In : ToSubclass,Description("If the Create method fails to start, the ErrorControl parameter passes the severity of the error. The value indicates the action taken by the startup program if failure occurs. All errors are logged by the system. The system does not notify the user of \"Ignore\" errors. With \"Normal\" errors the user is notified. With \"Severe\" errors, the system is restarted with the last-known-good configuration. Finally, on \"Critical\" errors, the system attempts to restart with a good configuration.") : Amended ToSubclass,Values{"Ignore", "Normal", "Severe", "Critical"} : Amended ToSubclass] uint8 ErrorControl,[In : ToSubclass,Description("The StartMode parameter passes the start mode of the Win32 base service. \"Boot\" specifies a device driver started by the operating system loader. This value is valid only for driver services. \"System\" specifies a device driver started by the IoInitSystem function. This value is valid only for driver services. \"Automatic\" specifies a service to be started automatically by the service control manager during system startup. \"Manual\" specifies a service to be started by the service control manager when a process calls the StartService function. \"Disabled\" specifies a service that can no longer be started.") : Amended ToSubclass,Values{"Boot Start", "System Start", "Auto Start", "Demand Start", "Disabled"} : Amended ToSubclass] string StartMode,[In : ToSubclass,Description("The DesktopInteract parameter passes the value that indicates whether the service can create or communicate with windows on the desktop.\nValues: TRUE or FALSE. A value of TRUE indicates the service can create or communicate with windows on the desktop.") : Amended ToSubclass] boolean DesktopInteract,[In : ToSubclass,Description("The StartName parameter passes the account name the service runs under. Depending on the service type, the account name may be in the form of \"DomainName\\Username\".The service process will be logged using one of these two forms when it runs.  If the account belongs to the built-in domain, \".\\Username\" can be specified. If NULL is specified, the service will be logged on as the LocalSystem account. For a kernel or system-level drivers, StartName contains the driver object name (that is, \\FileSystem\\Rdr or \\Driver\\Xns) which the input and output (I/O) system uses to load the device driver. If NULL is specified, the driver runs with a default object name created by the I/O system based on the service name.\nExample: DWDOM\\Admin.") : Amended ToSubclass] string StartName,[In : ToSubclass,Description("The StartPassword parameter passes the password to the account name specified by the StartName parameter. Specify NULL if you are not changing the password. Specify an empty string if the service has no password. ") : Amended ToSubclass] string StartPassword,[In : ToSubclass,Description("The LoadOrderGroup parameter passes the group name associated with the new service. Load order groups are contained in the registry, and determine the sequence in which services are loaded into the operating system. If the pointer is NULL or if it points to an empty string, the service does not belong to a group. Dependencies between groups should be listed in the LoadOrderGroupDependencies parameter. Services in the load-ordering group list are started first, followed by services in groups not in the load-ordering group list, followed by services that do not belong to a group. The registry has a list of load ordering groups located at:\nHKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\ServiceGroupOrder.") : Amended ToSubclass] string LoadOrderGroup,[In : ToSubclass,Description("The LoadOrderGroupDependencies parameter passes a list of load ordering groups that must start before this service. The array is doubly null-terminated. If the pointer is NULL or if it points to an empty string, the service has no dependencies.  Group names must be prefixed by the SC_GROUP_IDENTIFIER (defined in the WINSVC.H file) character to differentiate it from a service name, because services and service groups share the same name space.  Dependency on a group means that this service can run if at least one member of the group is running after an attempt to start all members of the group.") : Amended ToSubclass] string LoadOrderGroupDependencies[],[In : ToSubclass,Description("The ServiceDependencies parameter passes a list containing names of services that must start before this service starts. The array is doubly null-terminated. If the pointer is NULL, or if it points to an empty string, the service has no dependencies. Dependency on a service means that this service can only run if the service it depends on is running.") : Amended ToSubclass] string ServiceDependencies[]);
  [Description("The Change method modifies a service. The Win32_LoadOrderGroup parameter represents a grouping of system services defining execution dependencies. The services must be initiated in the order specified by the Load Order Group as the services are dependent on each other. These dependent services require the presence of the antecedent services in order to function correctly. \nNote: In order to use the Change method to change a service from network service to local system, the StartName and StartPassword input parameters should be given the following values: \nstartname = \"localsystem\"  \nstartpassword = \"\"   this is important, it needs to be an empty string, NOT null  \nTo change to network service:  \nstartname = \"NT AUTHORITY\\NetworkService\" \nstartpassword = \"\" \nThe method returns one of the following integer values:\n0 - The request was accepted.\n1 - The request is not supported.\n2 - The user did not have the necessary access.\n3 - The service cannot be stopped because other services that are running are dependent on it.\n4 - The requested control code is not valid, or it is unacceptable to the service.\n5 - The requested control code cannot be sent to the service because the state of the service (Win32_BaseService:State) is equal to 0, 1, or 2.\n6 - The service has not been started.\n7 - The service did not respond to the start request in a timely fashion.\n8 - Unknown failure when starting the service.\n9 - The directory path to the service executable was not found.\n10 - The service is already running.\n11 - The database to add a new service is locked.\n12 - A dependency for which this service relies on has been removed from the system.\n13 - The service failed to find the service needed from a dependent service.\n14 - The service has been disabled from the system.\n15 - The service does not have the correct authentication to run on the system.\n16 - This service is being removed from the system.\n17 - There is no execution thread for the service.\n18 - There are circular dependencies when starting the service.\n19 - There is a service running under the same name.\n20 - There are invalid characters in the name of the service.\n21 - Invalid parameters have been passed to the service.\n22 - The account, which this service is to run under is either invalid or lacks the permissions to run the service.\n23 - The service exists in the database of services available from the system.\n24 - The service is currently paused in the system.\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Success", "Not Supported", "Access Denied", "Dependent Services Running", "Invalid Service Control", "Service Cannot Accept Control", "Service Not Active", "Service Request Timeout", "Unknown Failure", "Path Not Found", "Service Already Running", "Service Database Locked", "Service Dependency Deleted", "Service Dependency Failure", "Service Disabled", "Service Logon Failed", "Service Marked For Deletion", "Service No Thread", "Status Circular Dependency", "Status Duplicate Name", "Status Invalid Name", "Status Invalid Parameter", "Status Invalid Service Account", "Status Service Exists", "Service Already Paused", "Other"} : Amended ToSubclass] uint32 Change([In : ToSubclass,Description("The DisplayName parameter passes the display name of the service.  This string has a maximum length of 256 characters. The name is case-preserved in the service control manager. DisplayName comparisons are always case-insensitive. \nConstraints: Accepts the same value as the Name parameter.\nExample: Atdisk ") : Amended ToSubclass] string DisplayName,[In : ToSubclass,Description("The PathName parameter passes the fully qualified path of the service binary file that implements the service.\nExample: \\SystemRoot\\System32\\drivers\\afd.sys") : Amended ToSubclass] string PathName,[In : ToSubclass,Description("The ServiceType parameter passes the type of service provided to processes calling the service.") : Amended ToSubclass,BitValues{"Kernel Driver", "File System Driver", "Adapter", "Recognizer Driver", "Own Process", "Share Process"} : Amended ToSubclass] uint8 ServiceType,[In : ToSubclass,Description("If this service fails to start during startup, the ErrorControl parameter passes the severity of the error. The value indicates the action taken by the startup program if failure occurs. All errors are logged by the system. The system does not notify the user of \"Ignore\" errors. With \"Normal\" errors the user is notified. With \"Severe\" errors, the system is restarted with the last-known-good configuration. Finally, on \"Critical\" errors, the system attempts to restart with a good configuration.") : Amended ToSubclass,Values{"Ignore", "Normal", "Severe", "Critical"} : Amended ToSubclass] uint8 ErrorControl,[In : ToSubclass,Description("The StartMode property indicates the start mode of the Win32 base service. \"Boot\" specifies a device driver started by the operating system loader. This value is valid only for driver services. \"System\" specifies a device driver started by the IoInitSystem function. This value is valid only for driver services. \"Automatic\" specifies a service to be started automatically by the service control manager during system startup. \"Manual\" specifies a service to be started by the service control manager when a process calls the StartService function. \"Disabled\" specifies a service that can no longer be started.") : Amended ToSubclass,Values{"Boot Start", "System Start", "Auto Start", "Demand Start", "Disabled"} : Amended ToSubclass] string StartMode,[In : ToSubclass,Description("The DesktopInteract parameter passes the value that indicates whether the service can create or communicate with windows on the desktop.\nValues: TRUE or FALSE. A value of TRUE indicates the service can create or communicate with windows on the desktop.") : Amended ToSubclass] boolean DesktopInteract,[In : ToSubclass,Description("The StartName property indicates the account name the service runs under. Depending on the service type, the account name may be in the form of \"DomainName\\Username\", The service process will be logged using one of these two forms when it runs. If the account belongs to the built-in domain, \".\\Username\" can be specified. If NULL is specified, the service will be logged on as the LocalSystem account. For kernel or system-level drivers, StartName contains the driver object name (that is, \\FileSystem\\Rdr or \\Driver\\Xns) that the input and output (I/O) system uses to load the device driver. If NULL is specified, the driver runs with a default object name created by the I/O system based on the service name.\nExample: DWDOM\\Admin.") : Amended ToSubclass] string StartName,[In : ToSubclass,Description("The StartPassword parameter passes the password to the account name specified by the StartName parameter. Specify NULL if you are not changing the password. Specify an empty string if the service has no password. ") : Amended ToSubclass] string StartPassword,[In : ToSubclass,Description("The LoadOrderGroup parameter passes the group name that it is associated with. Load order groups are contained in the system registry, and determine the sequence in which services are loaded into the operating system. If the pointer is NULL, or if it points to an empty string, the service does not belong to a group. Dependencies between groups should be listed in the LoadOrderGroupDependencies parameter. Services in the load-ordering group list are started first, followed by services in groups not in the load-ordering group list, followed by services that do not belong to a group. The system registry has a list of load ordering groups located at:\nHKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\ServiceGroupOrder.") : Amended ToSubclass] string LoadOrderGroup,[In : ToSubclass,Description("The LoadOrderGroupDependencies parameter passes a list of load ordering groups that must start before this service starts. The array is doubly null-terminated. If the pointer is NULL, or if it points to an empty string, the service has no dependencies. Group names must be prefixed by the SC_GROUP_IDENTIFIER (defined in the WINSVC.H file) character to differentiate them from service names because services and service groups share the same name space. Dependency on a group means that this service can run if at least one member of the group is running after an attempt to start all members of the group.") : Amended ToSubclass] string LoadOrderGroupDependencies[],[In : ToSubclass,Description("The ServiceDependencies parameter passes a list containing names of services that must start before this service starts. The array is doubly null-terminated. If the pointer is NULL, or if it points to an empty string, the service has no dependencies. Dependency on a service means that this service can run only if the service it depends on is running.") : Amended ToSubclass] string ServiceDependencies[]);
  [Description("The ChangeStartMode method modifies the StartMode of a service. It returns one of the following integer values:\n0 - The request was accepted.\n1 - The request is not supported.\n2 - The user did not have the necessary access.\n3 - The service cannot be stopped because other services that are running are dependent on it.\n4 - The requested control code is not valid, or it is unacceptable to the service.\n5 - The requested control code cannot be sent to the service because the state of the service (Win32_BaseService:State) is equal to 0, 1, or 2.\n6 - The service has not been started.\n7 - The service did not respond to the start request in a timely fashion.\n8 - Unknown failure when starting the service.\n9 - The directory path to the service executable was not found.\n10 - The service is already running.\n11 - The database to add a new service is locked.\n12 - A dependency for which this service relies on has been removed from the system.\n13 - The service failed to find the service needed from a dependent service.\n14 - The service has been disabled from the system.\n15 - The service does not have the correct authentication to run on the system.\n16 - This service is being removed from the system.\n17 - There is no execution thread for the service.\n18 - There are circular dependencies when starting the service.\n19 - There is a service running under the same name.\n20 - There are invalid characters in the name of the service.\n21 - Invalid parameters have been passed to the service.\n22 - The account, which this service is to run under is either invalid or lacks the permissions to run the service.\n23 - The service exists in the database of services available from the system.\n24 - The service is currently paused in the system.\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Success", "Not Supported", "Access Denied", "Dependent Services Running", "Invalid Service Control", "Service Cannot Accept Control", "Service Not Active", "Service Request Timeout", "Unknown Failure", "Path Not Found", "Service Already Running", "Service Database Locked", "Service Dependency Deleted", "Service Dependency Failure", "Service Disabled", "Service Logon Failed", "Service Marked For Deletion", "Service No Thread", "Status Circular Dependency", "Status Duplicate Name", "Status Invalid Name", "Status Invalid Parameter", "Status Invalid Service Account", "Status Service Exists", "Service Already Paused", "Other"} : Amended ToSubclass] uint32 ChangeStartMode([In : ToSubclass,Description("The StartMode parameter passes the start mode of the Win32 base service. \"Boot\" specifies a device driver started by the operating system loader. This value is valid only for driver services. \"System\" specifies a device driver started by the IoInitSystem function. This value is valid only for driver services. \"Automatic\" specifies a service to be started automatically by the service control manager during system startup. \"Manual\" specifies a service to be started by the service control manager when a process calls the StartService function. \"Disabled\" specifies a service that can no longer be started.") : Amended ToSubclass,Values{"Boot Start", "System Start", "Auto Start", "Demand Start", "Disabled"} : Amended ToSubclass] string StartMode);
  [Description("The Delete method deletes an existing service. It returns one of the following integer values:\n0 - The request was accepted.\n1 - The request is not supported.\n2 - The user did not have the necessary access.\n3 - The service cannot be stopped because other services that are running are dependent on it.\n4 - The requested control code is not valid, or it is unacceptable to the service.\n5 - The requested control code cannot be sent to the service because the state of the service (Win32_BaseService:State) is equal to 0, 1, or 2.\n6 - The service has not been started.\n7 - The service did not respond to the start request in a timely fashion.\n8 - Unknown failure when starting the service.\n9 - The directory path to the service executable was not found.\n10 - The service is already running.\n11 - The database to add a new service is locked.\n12 - A dependency for which this service relies on has been removed from the system.\n13 - The service failed to find the service needed from a dependent service.\n14 - The service has been disabled from the system.\n15 - The service does not have the correct authentication to run on the system.\n16 - This service is being removed from the system.\n17 - There is no execution thread for the service.\n18 - There are circular dependencies when starting the service.\n19 - There is a service running under the same name.\n20 - There are invalid characters in the name of the service.\n21 - Invalid parameters have been passed to the service.\n22 - The account, which this service is to run under is either invalid or lacks the permissions to run the service.\n23 - The service exists in the database of services available from the system.\n24 - The service is currently paused in the system.\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Success", "Not Supported", "Access Denied", "Dependent Services Running", "Invalid Service Control", "Service Cannot Accept Control", "Service Not Active", "Service Request Timeout", "Unknown Failure", "Path Not Found", "Service Already Running", "Service Database Locked", "Service Dependency Deleted", "Service Dependency Failure", "Service Disabled", "Service Logon Failed", "Service Marked For Deletion", "Service No Thread", "Status Circular Dependency", "Status Duplicate Name", "Status Invalid Name", "Status Invalid Parameter", "Status Invalid Service Account", "Status Service Exists", "Service Already Paused", "Other"} : Amended ToSubclass] uint32 Delete();
};

[Description("The Win32_SystemDriver class represents the system driver for a base service.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_SystemDriver : Win32_BaseService
{
};

[Description("The Win32_Directory class represents a directory entry on a Win32 computer system. Directory is a type of file that logically groups data files 'contained' in it and provides path information for the grouped files.\nExample: C:\\TEMP.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_Directory : CIM_Directory
{
};

[Description("The Win32_PageFile class has been Deprecated in favor of the Win32_PageFileUsage and Win32_PageFileSetting. These classes respectively correspond to the runtime and persisted states of pagefiles. The Win32_PageFile represents the file used for handling virtual memory file swapping on a Win32 system.\nExample: C:\\PAGEFILE.SYS \n\nNote:  The SE_CREATE_PAGEFILE privilege is required for Windows XP") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_PageFile : CIM_DataFile
{
  [Description("The Name property indicates the name of the page file.\nExample: C:\\PAGEFILE.SYS  \nThe name property has been deprecated in favor of the corresponding property contained in the Win32_PageFileUsage and the Win32_PageFileSetting.") : Amended ToSubclass] string Name;
  [Units("megabytes") : Amended ToSubclass,Description("The FreeSpace property indicates the space available in the paging file. The operating system can enlarge the paging file as necessary up to the limit imposed by the user.  This member shows the difference between the size of current committed memory and the current size of the paging file - it does not show the largest possible size of the paging file.  \nThis property has been deprecated in favor of a corresponding property(s) contained in the Win32_PageFileUsage and//or the Win32_PageFileSetting.") : Amended ToSubclass] uint32 FreeSpace;
  [Units("megabytes") : Amended ToSubclass,Description("The InitialSize property indicates the initial size of the page file.  \nThis property has been deprecated in favor of the corresponding property in the Win32_PageFileSetting class.") : Amended ToSubclass] uint32 InitialSize;
  [units("megabytes") : Amended ToSubclass,Description("The MaximumSize property indicates the maximum size of the page file as set by the user.  The operating system will not allow the page file to exceed this limit.  \nThis property has been deprecated in favor of the corresponding property in the Win32_PageFileSetting class.") : Amended ToSubclass] uint32 MaximumSize;
};

[Description("The Win32_PageFileUsage class represents the file used for handling virtual memory file swapping on a Win32 system. Information contained within objects instantiated from this class specify the runtime state of the page file. \n\nNote:  The SE_CREATE_PAGEFILE privilege is required for Windows XP") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_PageFileUsage : CIM_LogicalElement
{
  [units("megabytes") : Amended ToSubclass,Description("The AllocatedBaseSize property indicates the actual amount of disk space allocated for use with this page file. This value corresponds to the range established in Win32_PageFileSetting under the InitialSize and MaximumSize properties, set at system startup.\nExample: 178MB") : Amended ToSubclass] uint32 AllocatedBaseSize;
  [Key : ToInstance ToSubclass DisableOverride,Description("The Name property indicates the name of the page file.\nExample: C:\\PAGEFILE.SYS") : Amended ToSubclass] string Name;
  [units("megabytes") : Amended ToSubclass,Description("The CurrentUsage property indicates how much of the total reserved page file is currently in use. ") : Amended ToSubclass] uint32 CurrentUsage;
  [units("megabytes") : Amended ToSubclass,Description("The PeakUsage property indicates the highest use page file.") : Amended ToSubclass] uint32 PeakUsage;
  [Description("The TempPageFile property specifies whether a temporary page file has been created, usually because there is no permanent page file on the current computer system.") : Amended ToSubclass] boolean TempPageFile;
};

[Description("The Win32_PageFileSetting class represents the settings of a page file. Information contained within objects instantiated from this class specify the page file parameters used when the file is created at system startup. The properties in this class can be modified and deferred until startup. These settings are different from the run time state of a page file expressed through the associated class Win32_PageFileUsage.\n\nNote:  The SE_CREATE_PAGEFILE privilege is required for Windows XP") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_PageFileSetting : CIM_Setting
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The Name property indicates the path and file name of the page file.\nExample: C:\\PAGEFILE.SYS") : Amended ToSubclass] string Name;
  [Units("megabytes") : Amended ToSubclass,Description("The InitialSize property indicates the initial size of the page file.\nExample: 139") : Amended ToSubclass] uint32 InitialSize;
  [Units("megabytes") : Amended ToSubclass,Description("The MaximumSize property indicates the maximum size of the page file.\nExample: 178") : Amended ToSubclass] uint32 MaximumSize;
};

[Description("The Win32_PageFileElementSetting class represents an association between the initial settings of a page file and the state of those setting during normal use.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_PageFileElementSetting : CIM_ElementSetting
{
  [key : ToInstance ToSubclass DisableOverride,Description("The Element reference represents the properties of a page file while the Win32 system is in use.") : Amended ToSubclass] Win32_PageFileUsage Ref Element;
  [key : ToInstance ToSubclass DisableOverride,Description("The Setting reference represents the initial settings of a page file when the Win32 system is starting up.") : Amended ToSubclass] Win32_PageFileSetting Ref Setting;
};

[Description("The Win32_Registry class represents the system registry on a Win32 computer system.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_Registry : CIM_LogicalElement
{
  [Units("megabytes") : Amended ToSubclass,Description("The CurrentSize property indicates the current physical size of the Win32 registry.\nExample 10.") : Amended ToSubclass] uint32 CurrentSize;
  [Units("megabytes") : Amended ToSubclass,Description("The ProposedSize property indicates the proposed size of the Win32 registry. It is the only registry setting that can be modified, and its proposal is attempted the next time the system boots.") : Amended ToSubclass] uint32 ProposedSize;
  [Units("megabytes") : Amended ToSubclass,Description("The MaximumSize property indicates the maximum size of the Win32 registry. If the system is successful in using the ProposedSize member, MaximumSize should contain the same value.") : Amended ToSubclass] uint32 MaximumSize;
  [key : ToInstance ToSubclass DisableOverride,Description("The Name property indicates the name of the Win32 Registry. Maximum length is 256 characters.\nExample: Microsoft Windows NT Workstation|C:\\WINNT40|\\Device\\Harddisk0\\partition1") : Amended ToSubclass] string Name;
};

[Description("The Win32_ScheduledJob class represents a job scheduled using the network management schedule service functions (also known as \"Job\" and \"AT command\" functions). Note that this is different from the tasks scheduled using the Windows 2000 Task Scheduler. This class is only instrumented on Windows NT 4.0 and later.  Each job scheduled against the schedule service is stored persistently (the scheduler will know to start the job even after a reboot) and is executed at the specified time and day of the week and/or month.  If the computer is not active or if the scheduled service is not running at the specified job time the schedule service will run the specified job on the next day at the specified time.  Scheduled jobs are scheduled with respect to Universal Coordinated Time (UTC), i.e. with bias offset from GMT.  This means that a job can be specified using any time zone specification.  The Win32_ScheduledJob class will return the local time with UTC offset when enumerating an object and convert to local time when creating new jobs.  For example a job specified to run on a computer in Boston at 10:30 pm Monday PST time will be scheduled to run locally at 1:30am Tuesday EST.  It should be noted that a client must take into account whether daylight savings time is in operation on the local computer and if so subtract a bias of 60 minutes from the UTC offset.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_ScheduledJob : CIM_Job
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The JobId property indicates the identifier number of the job.  It is used by methods as a handle to a single job being scheduled on this computer.") : Amended ToSubclass] uint32 JobId;
  [Description("The Command property contains the name of the command, batch program, or binary file (along with command line arguments) that the schedule service will use to invoke the job.\nExample: defrag /q /f") : Amended ToSubclass] string Command;
  [Description("The StartTime property represents the UTC time to run the job, in the form of YYYYMMDDHHMMSS.MMMMMM(+-)OOO, where YYYYMMDD must be replaced by ********.  The replacement is necessary because the scheduling service only allows jobs to be configured on a day of the month, day of the week, or run once. A job cannot be run on a specific date.\nExample: ********123000.000000-420 which implies 12:30 pm PST with daylight savings time in effect.") : Amended ToSubclass] datetime StartTime;
  [Description("The RunRepeatedly property indicates whether the scheduled job should run repeatedly on the days that the job is scheduled.\nValues: TRUE or FALSE.  If TRUE, then the job is run repeatedly.  If FALSE, then the job is run once.") : Amended ToSubclass] boolean RunRepeatedly;
  [Description("The InteractWithDesktop property allows the specified job to be interactive (meaning a user can give input to a scheduled job while it is executing).\nValues TRUE or FALSE.  If TRUE, then the job will be interactive.  If FALSE, then the job will not be interactive.") : Amended ToSubclass] boolean InteractWithDesktop;
  [Description("The DaysOfWeek property indicates the days of the week when the job is scheduled to run.") : Amended ToSubclass,BitValues{"Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"} : Amended ToSubclass] uint32 DaysOfWeek;
  [Description("The DaysOfMonth property indicates the days of the month when the job is scheduled to run.") : Amended ToSubclass,BitValues{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31"} : Amended ToSubclass] uint32 DaysOfMonth;
  [Description("The JobStatus property indicates whether a scheduled service executed successfully the last time this job was supposed to run.") : Amended ToSubclass,Values{"Success", "Failure"} : Amended ToSubclass] string JobStatus;
  [Description("The Create function submits a job to the operating system for execution at a specified future time and date.  This function requires that the schedule service be started at the computer towhich the job is submitted. The method returns an integer value which can be interpretted as follows: \n0 - Successful completion\n1 - Not supported\n2 - Access denied\n8 - Unknown failure\n9 - Path not found\n21 - Invalid parameter\n22 - Service not started\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Successful completion", "Not supported", "Access denied", "Unknown failure", "Path not found", "Invalid parameter", "Service not started", "Other"} : Amended ToSubclass] uint32 Create([In : ToSubclass,Description("The Command parameter contains the name of the command, batch program, or binary file (along with command line parameters) that the schedule service will use to invoke the job.\nExample: defrag /q /f") : Amended ToSubclass] string Command,[In : ToSubclass,Description("The StartTime parameter represents the UTC time to run the job.  This is of the form YYYYMMDDHHMMSS.MMMMMM(+-)OOO, where YYYYMMDD must be replaced by ********.\nExample: ********123000.000000-420 which implies 12:30 pm PST with daylight savings time in effect.") : Amended ToSubclass] datetime StartTime,[In : ToSubclass,Description("The RunRepeatedly parameter indicates whether the scheduled job should run repeatedly on the days that the job is scheduled.\nValues: TRUE or FALSE.  If TRUE, then the job is run repeatedly according to the DaysOfWeek and DaysOfMonth parameter. If no value is supplied the parameter defaults to FALSE.") : Amended ToSubclass] boolean RunRepeatedly,[In : ToSubclass,Description("The DaysOfWeek parameter indicates the days of the week when the job is scheduled to run, and is used only when the RunRepeatedly parameter is TRUE.") : Amended ToSubclass,BitValues{"Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"} : Amended ToSubclass] uint32 DaysOfWeek,[In : ToSubclass,Description("The DaysOfMonth parameter indicates the days of the month when the job is scheduled to run, and is used only when the RunRepeatedly parameter is TRUE.") : Amended ToSubclass,BitValues{"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31"} : Amended ToSubclass] uint32 DaysOfMonth,[In : ToSubclass,Description("The InteractWithDesktop parameter indicates whether the specified job should be interactive (meaning a user can give input to the scheduled job while it is executing).\nValues TRUE or FALSE.  If TRUE, then the job will be interactive.  The default value of this parameter is FALSE.") : Amended ToSubclass] boolean InteractWithDesktop,[Out : ToSubclass,Description("The JobId parameter indicates the identifier number of the job.  This parameter is a handle to the job being scheduled on this computer.") : Amended ToSubclass] uint32 JobId);
  [Description("The Delete method deletes a scheduled job. The method returns an integer value which can be interpretted as follows: \n0 - Successful completion\n1 - Not supported\n2 - Access denied\n8 - Unknown failure\n9 - Path not found\n21 - Invalid parameter\n22 - Service not started\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Successful completion", "Not supported", "Access denied", "Unknown failure", "Path not found", "Invalid parameter", "Service not started", "Other"} : Amended ToSubclass] uint32 Delete();
};

[DisplayName("Services") : Amended,Description("The Win32_Service class represents a service on a Win32 computer system. A service application conforms to the interface rules of the Service Control Manager (SCM) and can be started by a user automatically at system boot through the Services control panel utility, or by an application that uses the service functions included in the Win32 API. Services can execute even when no user is logged on to the system.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_Service : Win32_BaseService
{
  [DisplayName("Check Point Count") : Amended,Description("The CheckPoint property specifies a value that the service increments periodically to report its progress during a lengthy start, stop, pause, or continue operation. For example, the service should increment this value as it completes each step of its initialization when it is starting up. The user interface program that invoked the operation on the service uses this value to track the progress of the service during a lengthy operation. This value is not valid and should be zero when the service does not have a start, stop, pause, or continue operation pending.") : Amended ToSubclass] uint32 CheckPoint;
  [DisplayName("Estimated Wait Time") : Amended,Description("The WaitHint property specifies the estimated time required (in milliseconds) for a pending start, stop, pause, or continue operation. After the specified amount of time has elapsed, the service makes its next call to the SetServiceStatus function with either an incremented CheckPoint value or a change in Current State. If the amount of time specified by WaitHint passes, and CheckPoint has not been incremented, or the Current State has not changed, the service control manager or service control program assumes that an error has occurred.") : Amended ToSubclass] uint32 WaitHint;
  [DisplayName("Process Id") : Amended,Description("The ProcessId property specifies the process identifier of the service.\nExample: 324") : Amended ToSubclass] uint32 ProcessId;
  [description("Retrieves a structural representation of the service's security descriptor.\nThe method returns an integer value that can be interpreted as follows: \n0 - Successful completion.\n2 - The user does not have access to the requested information.\n8 - Unknown failure.\n9 - The user does not have adequate privileges.\n21 - The specified parameter is invalid.\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Success", "Access denied", "Unknown failure", "Privilege missing", "Invalid parameter", "Other"} : Amended ToSubclass] uint32 GetSecurityDescriptor([out] Win32_SecurityDescriptor Descriptor);
  [description("Sets security descriptor on the service to the specified structure. \nThe method returns an integer value that can be interpreted as follows: \n0 - Successful completion.\n2 - The user does not have access to the requested information.\n8 - Unknown failure.\n9 - The user does not have adequate privileges.\n21 - The specified parameter is invalid.\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Success", "Access denied", "Unknown failure", "Privilege missing", "Invalid parameter", "Other"} : Amended ToSubclass] uint32 SetSecurityDescriptor([in] Win32_SecurityDescriptor Descriptor);
};

[Description("The Win32_Share class represents a shared resource on a Win32 system. This may be a disk drive, printer, interprocess communication, or other shareable device.\nExample: C:\\PUBLIC.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_Share : CIM_LogicalElement
{
  [Description("The AllowMaximum property indicates whether the number of concurrent users for this resource has been limited.\nValues: TRUE or FALSE. A value of TRUE indicates the number of concurrent users of this resource has not been limited and the value in the MaximumAllowed property is ignored.") : Amended ToSubclass] boolean AllowMaximum;
  [Description("The MaximumAllowed property indicates the limit on the maximum number of users allowed to use this resource concurrently. The value is only valid if the AllowMaximum member set to FALSE \nExample: 10.") : Amended ToSubclass] uint32 MaximumAllowed;
  [key : ToInstance ToSubclass DisableOverride,Description("The Name property indicates the alias given to a path set up as a share on a  Win32 system.\nExample: public.") : Amended ToSubclass] string Name;
  [Description("The Path property indicates the local path of the Win32 share.\nExample: C:\\Program Files") : Amended ToSubclass] string Path;
  [Description("The Type property specifies the type of resource being shared. Types include disk drives, print queues, interprocess communications (IPC), and general devices.") : Amended ToSubclass,Values{"Disk Drive", "Print Queue", "Device", "IPC", "Disk Drive Admin", "Print Queue Admin", "Device Admin", "IPC Admin"} : Amended ToSubclass] uint32 Type;
  [Description("This property has been deprecated in favour of the GetAccessMask method of this class due to the expense of calling GetEffectiveRightsFromAcl. The value will be set to NULL") : Amended ToSubclass] uint32 AccessMask;
};

[Description("The Win32_ClusterShare class represents a shared resource on a cluster.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_ClusterShare : Win32_Share
{
  [Description("The ServerName property indicates the cluster server on which the share is hosted ") : Amended ToSubclass] string ServerName;
};

[Description("The Win32_ShareToDirectory class represents an association between a shared resource on the computer system and the directory to which it is mapped.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_ShareToDirectory
{
  [key : ToInstance ToSubclass DisableOverride,Description("The Share reference represents the properties of a shared resource available through the directory.") : Amended ToSubclass] Win32_Share Ref Share;
  [key : ToInstance ToSubclass DisableOverride,Description("The SharedElement reference represents the properties of the directory that has been mapped to a shared resource.") : Amended ToSubclass] CIM_Directory Ref SharedElement;
};

[Description("The Win32_AssociatedProcessorMemory class represents an association between a processor and its cache memory.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_AssociatedProcessorMemory : CIM_AssociatedProcessorMemory
{
  [key : ToInstance ToSubclass DisableOverride,Description("The Antecedent reference represents cache memory available to the processor.") : Amended ToSubclass] Win32_CacheMemory Ref Antecedent;
  [key : ToInstance ToSubclass DisableOverride,Description("The Dependent reference represents the processor that is using the cache memory.") : Amended ToSubclass] Win32_Processor Ref Dependent;
};

[Description("The Win32_BaseBoard class represents a base board (also known as a motherboard or system board).") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_BaseBoard : CIM_Card
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The Tag property uniquely identifies the base board of the system.\nExample: Base Board") : Amended ToSubclass] string Tag;
  [Description("The Product property indicates the base board part number defined by the manufacturer.") : Amended ToSubclass] string Product;
  [Description("The ConfigOptions property contains strings that describe the configuration of the jumpers and switches located on the base board.\nExamples: JP2: 1-2 Cache Size is 256K, 2-3 Cache Size is 512K, SW1-1: Close to Disable On Board Video") : Amended ToSubclass] string ConfigOptions[];
};

[Description("The Win32_BIOS class represents the attributes of the computer system's basic input/output services (BIOS) that are installed on the computer.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_BIOS : CIM_BIOSElement
{
  [Description("The ReleaseDate property indicates the release date of the Win32 BIOS in the Coordinated Universal Time (UTC) format of YYYYMMDDHHMMSS.MMMMMM(+-)OOO.") : Amended ToSubclass] datetime ReleaseDate;
  [Description("The Version property contains the version of the BIOS. This string is created by the BIOS manufacturer. ") : Amended ToSubclass] string Version;
  [Description("The BiosCharacteristics property identifies the BIOS characteristics supported by the system as defined by the System Management BIOS Reference Specification") : Amended ToSubclass,Values{"Reserved", "Reserved", "Unknown", "BIOS Characteristics Not Supported", "ISA is supported", "MCA is supported", "EISA is supported", "PCI is supported", "PC Card (PCMCIA) is supported", "Plug and Play is supported", "APM is supported", "BIOS is Upgradeable (Flash)", "BIOS shadowing is allowed", "VL-VESA is supported", "ESCD support is available", "Boot from CD is supported", "Selectable Boot is supported", "BIOS ROM is socketed ", "Boot From PC Card (PCMCIA) is supported", "EDD (Enhanced Disk Drive) Specification is supported", "Int 13h - Japanese Floppy for NEC 9800 1.2mb (3.5\", 1k Bytes/Sector, 360 RPM) is supported", "Int 13h - Japanese Floppy for Toshiba 1.2mb (3.5\", 360 RPM) is supported", "Int 13h - 5.25\" / 360 KB Floppy Services are supported", "Int 13h - 5.25\" /1.2MB Floppy Services are supported", "Int 13h - 3.5\" / 720 KB Floppy Services are  supported", "Int 13h - 3.5\" / 2.88 MB Floppy Services are supported", "Int 5h, Print Screen Service is supported", "Int 9h, 8042 Keyboard services are supported", "Int 14h, Serial Services are supported", "Int 17h, printer services are supported", "Int 10h, CGA/Mono Video Services are supported", "NEC PC-98", "ACPI supported", "USB Legacy is supported", "AGP is supported", "I2O boot is supported", "LS-120 boot is supported", "ATAPI ZIP Drive boot is supported", "1394 boot is supported", "Smart Battery supported"} : Amended ToSubclass] uint16 BiosCharacteristics[];
  [Description("The InstallableLanguages property indicates the number of languages available for installation on this system. Language may determine properties such as the need for Unicode and bi-directional text.") : Amended ToSubclass] uint16 InstallableLanguages;
  [Description("The ListOfLanguages property contains a list of namesof available BIOS-installable languages.") : Amended ToSubclass] string ListOfLanguages[];
  [Description("The CurrentLanguage property shows the name of the current BIOS language.") : Amended ToSubclass] string CurrentLanguage;
  [Description("The SMBIOSPresent property indicates whether the SMBIOS is available on this computer system.\nValues: TRUE or FALSE. If TRUE, SMBIOS is on this computer.") : Amended ToSubclass] boolean SMBIOSPresent;
  [Description("The SMBIOSMajorVersion property contains the major SMBIOS version number. This property will be NULL if SMBIOS not found.") : Amended ToSubclass] uint16 SMBIOSMajorVersion;
  [Description("The SMBIOSMinorVersion property contains the minor SMBIOS Version number. This property will be NULL if SMBIOS not found.") : Amended ToSubclass] uint16 SMBIOSMinorVersion;
  [Description("The SMBIOSBIOSVersion property contains the BIOS version as reported by SMBIOS.") : Amended ToSubclass] string SMBIOSBIOSVersion;
  [Description("The BIOSVersion array property contains the complete System BIOS information. In many machines, there can be several version strings stored in the Registry representing the system BIOS info.  The property contains the complete set. ") : Amended ToSubclass] string BIOSVersion[];
};

[Description("The Win32_BootConfiguration class represents the boot configuration of a Win32 system.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_BootConfiguration : CIM_Setting
{
  [Description("The BootDirectory property indicates the path to the system files required for booting the system. \nExample: C:\\Windows.") : Amended ToSubclass] string BootDirectory;
  [Description("The ConfigurationPath property indicates the path to the configuration files. This value may be similar to the value in the BootDirectory.") : Amended ToSubclass] string ConfigurationPath;
  [Description("The LastDrive property indicates the last drive letter to which a physical drive is assigned.\nExample: E:") : Amended ToSubclass] string LastDrive;
  [key : ToInstance ToSubclass DisableOverride,Description("The Name property indicates the name of the boot configuration. It is an identifier for the boot configuration.") : Amended ToSubclass] string Name;
  [Description("The ScratchDirectory property indicates the directory where temporary files can reside during boot time.") : Amended ToSubclass] string ScratchDirectory;
  [Description("The TempDirectory property indicates the directory where temporary files are stored.\nExample: C:\\TEMP") : Amended ToSubclass] string TempDirectory;
};

[Description("The Win32_Desktop class represents the common characteristics of a user's desktop. The properties of this class can be modified by the user to customize the desktop.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_Desktop : CIM_Setting
{
  [Description("The BorderWidth property sets the width of the borders around all windows with adjustable borders.\nExample: 3.") : Amended ToSubclass] uint32 BorderWidth;
  [Description("The CoolSwitch property indicates whether fasttask switching is turned on. Fast task switching allows the user to switch between windows using the ALT+TAB keyboard combination.") : Amended ToSubclass] boolean CoolSwitch;
  [Units("milliseconds") : Amended ToSubclass,Description("The CursorBlinkRate property indicates the length of time between successive cursor blinks.\nExample: 530.") : Amended ToSubclass] uint32 CursorBlinkRate;
  [Description("The DragFullWindows property indicates whether the contents of a window are shown when a user moves the window.\nValues: TRUE or FALSE. A value of TRUE indicates the content of the window is displayed while the user moves the window.") : Amended ToSubclass] boolean DragFullWindows;
  [Units("8 pixels") : Amended ToSubclass,Description("The GridGranularity property indicates the spacing of the grid that windows are bound to on the desktop. This makes organizing windows easier. The spacing is usually fine enough that the user does not notice it.\nExample: 1.") : Amended ToSubclass] uint32 GridGranularity;
  [Units("pixels") : Amended ToSubclass,Description("The IconSpacing property specifies the spacing between icons.\nExample: 75") : Amended ToSubclass] uint32 IconSpacing;
  [Description("The IconTitleFaceName property indicates the nameof the font used for the names of the icons.\nExample: MS San Serif.") : Amended ToSubclass] string IconTitleFaceName;
  [Units("point") : Amended ToSubclass,Description("The IconTitleSize property indicates the icon font size.\nExample: 9.") : Amended ToSubclass] uint32 IconTitleSize;
  [Description("The IconTitleWrap property indicates whether the icon's title text wraps to the next line.\nValues: TRUE or FALSE. A value of TRUE indicates the title wraps to the next line.") : Amended ToSubclass] boolean IconTitleWrap;
  [key : ToInstance ToSubclass DisableOverride,Description("The Name property indicates the name that identifies the current desktop profile.\nExample: MainProf") : Amended ToSubclass] string Name;
  [Description("The Pattern property indicates the name of the pattern used as the background for the desktop") : Amended ToSubclass] string Pattern;
  [Description("The ScreenSaverActive property indicates whether the screen saver is active.\nValues: TRUE or FALSE. A value of TRUE indicates the screen saver is active.") : Amended ToSubclass] boolean ScreenSaverActive;
  [Description("The ScreenSaverExecutable property indicates the name of the current screen saver executable file.\nExample: LOGON.SCR.") : Amended ToSubclass] string ScreenSaverExecutable;
  [Description("The ScreenSaverSecure property determines whether the password is enabled for the screen saver.\nValues: TRUE or FALSE.  If TRUE, the screen saver password is enabled.") : Amended ToSubclass] boolean ScreenSaverSecure;
  [Units("seconds") : Amended ToSubclass,Description("The ScreenSaverTimeout property indicates the amount of time that passes before the screen saver starts.") : Amended ToSubclass] uint32 ScreenSaverTimeout;
  [Description("The Wallpaper property indicates the file name for the wallpaper design on the background of the desktop.\nExample: WINNT.BMP") : Amended ToSubclass] string Wallpaper;
  [Description("The WallpaperTiled property indicates whether the wallpaper is tiled or centered.\nValues: TRUE or FALSE. A value of TRUE indicates the wallpaper is tiled.") : Amended ToSubclass] boolean WallpaperTiled;
  [Description("The WallpaperStretched property indicates whether the wallpaper is stretched to fill the entire screen. Microsoft Plus! must be installed before this option is available.\nValues: TRUE and FALSE. A value of TRUE indicates the wallpaper is stretched to fit the entire screen. If FALSE, the wallpaper retains its original dimensions on the desktop background.") : Amended ToSubclass] boolean WallpaperStretched;
};

[Description("The Win32_SystemDevices class represents an association between a computer system and a logical device installed on that system.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_SystemDevices : CIM_SystemDevice
{
  [key : ToInstance ToSubclass DisableOverride,Description("The GroupComponent reference represents the properties of the computer system where the logical device exists.") : Amended ToSubclass] Win32_ComputerSystem Ref GroupComponent;
  [key : ToInstance ToSubclass DisableOverride,Description("The PartComponent reference represents the properties of a logical device that exists on the computer system.") : Amended ToSubclass] CIM_LogicalDevice Ref PartComponent;
};

[Description("The Win32_ComputerSystemProcessor class represents an association between a computer system and a processor running on that system.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_ComputerSystemProcessor : Win32_SystemDevices
{
  [Description("The GroupComponent reference represents the Win32_ComputerSystem containing the properties of the computer system on which the processor is running.") : Amended ToSubclass] Win32_ComputerSystem Ref GroupComponent;
  [Description("The PartComponent reference represents the Win32_Processor containing the properties of a processor which is running the computer system.") : Amended ToSubclass] Win32_Processor Ref PartComponent;
};

[Description("The Win32_ComputerSystemProduct class represents a product. This includes software and hardware used on this computer system.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_ComputerSystemProduct : CIM_Product
{
  [Description("The UUID property contains the Universally Unique Identifier (UUID) for this product. A UUID is a 128-bit identifier that is guaranteed to be different from other generated UUIDs. If a UUID is not available, a UUID of all zeros is used.") : Amended ToSubclass] String UUID;
};

[Description("The Win32_DependentService class represents an association between two interdependent base services.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_DependentService : CIM_ServiceServiceDependency
{
  [key : ToInstance ToSubclass DisableOverride,Description("The Dependent reference represents the Win32_BaseService containing a base service that is dependent on the Antecedent property of this class.") : Amended ToSubclass] Win32_BaseService Ref Dependent;
  [key : ToInstance ToSubclass DisableOverride,Description("The Antecedent reference represents the Win32_BaseService containing the base service relied upon by the Dependent property of this class.") : Amended ToSubclass] Win32_BaseService Ref Antecedent;
};

[Description("The Win32_DMAChannel class represents a direct memory access (DMA) channel on a Win32 computer system. DMA is a method of moving data from a device to memory (or vice versa) without the help of the microprocessor. The system board uses a DMA controller to handle a fixed number of channels, each of which can be used by one (and only one) device at a time.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_DMAChannel : CIM_DMA
{
  [Description("The Port property specifies the DMA port used by the host bus adapter. This is meaningful for MCA-type buses.\nExample: 12") : Amended ToSubclass] uint32 Port;
};

[Description("The Win32_Environment class represents an environment or system environment setting on a Win32 computer system.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_Environment : CIM_SystemResource
{
  [key : ToInstance ToSubclass DisableOverride,Description("The Name property contains a character string specifying the name of a Win32 environment variable. By specifying the name of a variable that does not yet exist, an application can create a new environment variable. \nExample: Path.") : Amended ToSubclass] string Name;
  [Description("The SystemVariable property indicates whether the variable is a system variable. A system variable is set by the operating system, and is independent from user environment settings.\nValues: TRUE or FALSE. A value of TRUE indicates the variable is a system variable.") : Amended ToSubclass] boolean SystemVariable;
  [key : ToInstance ToSubclass DisableOverride,Description("The UserName property indicates the owner of the environment setting. It is set to \"<SYSTEM>\" for settings that are specific to the Win32 system (as opposed to a specific user) and \"<DEFAULT>\" for default user settings.\nExample: Jsmith.") : Amended ToSubclass] string UserName;
  [Description("The VariableValue property contains the placeholder variable of a Win32 environment variable. Information like the file system directory can change from machine to machine. The operating system substitutes placeholders for these.\nExample: %SystemRoot%.") : Amended ToSubclass] string VariableValue;
};

[Description("The Win32_IRQResource class represents an interrupt request line (IRQ) number on a Win32 computer system. An interrupt request is a signal sent to the CPU by a device or program for time critical events. IRQ can be hardware or software based.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_IRQResource : CIM_IRQ
{
  [Description("The Vector property indicates the vector of the Win32 IRQ resource. A vector contains the memory address to the function that will execute once the CPU acknowledges the interrupt request.") : Amended ToSubclass] uint32 Vector;
  [Description("The Hardware property indicates whether the interrupt is hardware or software based. A hardware IRQ is a physical wire from the peripheral to the programmable interrupt controller (PIC) chip through which the CPU can be notified of time critical events. Some IRQ lines are reserved for standard devices such as the keyboard, floppy disk drives, and the system clock. A software interrupt allows applications to get the attention of the processor.\nValues: TRUE or FALSE. A value of TRUE indicates the interrupt is hardware based.") : Amended ToSubclass] boolean Hardware;
};

[Description("The Win32_LoadOrderGroup class represents a group of system services that define execution dependencies. The services must be initiated in the order specified by the Load Order Group, as the services are dependent on each other. These dependent services require the presence of the antecedent services in order to function correctly.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_LoadOrderGroup : CIM_LogicalElement
{
  [Description("The GroupOrder property indicates the sequence in which this group of services will be loaded onto the operating system.\nExample: 2") : Amended ToSubclass] uint32 GroupOrder;
  [key : ToInstance ToSubclass DisableOverride,Description("The Name property indicates the name of the load order group.\nExample: Primary disk") : Amended ToSubclass] string Name;
  [Description("The DriverEnabled property indicates whether this load order group can include drivers along with system services.\nValues:  TRUE or FALSE. If TRUE, the load order group can includedrivers.") : Amended ToSubclass] boolean DriverEnabled;
};

[Description("The Win32_LoadOrderGroupServiceMembers class represents an association between a load order group and a base service. Note: Win32_SystemDriver objects are members of that load order group. Not all services are members of groups, and not all groups have services within them.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_LoadOrderGroupServiceMembers : CIM_Component
{
  [key : ToInstance ToSubclass DisableOverride,Description("The GroupComponent reference represents the Win32_LoadOrderGroup containing the load order group properties associated with the base service.") : Amended ToSubclass] Win32_LoadOrderGroup Ref GroupComponent;
  [key : ToInstance ToSubclass DisableOverride,Description("The PartComponent reference represents the Win32_BaseService containing the base service that is a member of a load order group") : Amended ToSubclass] Win32_BaseService Ref PartComponent;
};

[Description("The Win32_LoadOrderGroupServiceDependencies class represents an association between a base service and a load order group that the service depends on to start running.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_LoadOrderGroupServiceDependencies : CIM_Dependency
{
  [key : ToInstance ToSubclass DisableOverride,Description("The Antecedent reference represents the Win32_LoadOrderGroup containing the properties of the load order group that must start before the dependent base service of this class can start.") : Amended ToSubclass] Win32_LoadOrderGroup Ref Antecedent;
  [key : ToInstance ToSubclass DisableOverride,Description("The Dependent reference represents the Win32_BaseService containing the properties of the base service that is dependent upon the load order group in order to start running.") : Amended ToSubclass] Win32_BaseService Ref Dependent;
};

[Description("The Win32_LogicalDiskRootDirectory class represents an association between a logical disk and its directory structure.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_LogicalDiskRootDirectory : CIM_Component
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The GroupComponent reference represents the properties of the logical disk in the Win32_LogicalDiskRootDirectory association.") : Amended ToSubclass] Win32_LogicalDisk Ref GroupComponent;
  [Key : ToInstance ToSubclass DisableOverride,Description("The PartComponent reference represents the properties of the file directory structure in the Win32_LogicalDiskRootDirectory association.") : Amended ToSubclass] Win32_Directory Ref PartComponent;
};

[Description("The Win32_OperatingSystem class represents an operating system installed on a Win32 computer system. Any operating system that can be installed on a Win32 system is a descendent (or member) of this class.\nExample: Microsoft Windows 95.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_OperatingSystem : CIM_OperatingSystem
{
  [Description("The BootDevice property indicates the name of the disk drive from which the Win32 operating system boots. \nExample: \\\\Device\\Harddisk0.") : Amended ToSubclass] string BootDevice;
  [Description("The MUILanguages property indicates the MUI Languages installed in the system. \n Example: en-us.") : Amended ToSubclass] string MUILanguages[];
  [Description("The BuildNumber property indicates the build number of the operating system.  It can be used for more precise versioning information than product release version numbers\nExample: 1381") : Amended ToSubclass] string BuildNumber;
  [Description("The OSArchitecture property indicates the Architecture of the operating system.Example: 32-bit, 64-bit Intel, 64-bit AMD ") : Amended ToSubclass] string OSArchitecture;
  [Description("The BuildType property indicates the type of build used for the operating system. Examples are retail build and checked build.") : Amended ToSubclass] string BuildType;
  [Description("The CodeSet property indicates the code page value used by the operating system. A code page contains a character table used by the operating system to translate strings for different languages. The American National Standards Institute (ANSI) lists values that represent defined code pages. If the operating system does not use an ANSI code page, this member will be set to 0. The CodeSet string can use up to six characters to define the code page value.\nExample: 1255.") : Amended ToSubclass] string CodeSet;
  [Description("The CountryCode property indicates the code for the country/regionused by the operating system. Values are based on international phone dialing prefixes (also referred to as IBM country/region codes). The CountryCode string can use up to six characters to define the country/region code value.\nExample: 1 for the United States)") : Amended ToSubclass] string CountryCode;
  [Description("The CSDVersion property contains a null-terminated string, that indicates the latest Service Pack installed on the computer system. If no Service Pack is installed, the string is NULL. For computer systems running Windows 95, this property contains a null-terminated string that provides arbitrary additional information about the operating system.\nExample: Service Pack 3.") : Amended ToSubclass] string CSDVersion;
  [Description("If true, indicates that the hardware supports Windows Data Execution Prevention (DEP) technology. DEP ensures that all memory locations are marked with a non-executable attribute unless the memory location explicitly contains executable code.  This can help mitigate certain types of buffer overrun security exploits.  If DEP is available, 64-bit applications are automatically protected.  To determine if DEP has been enabled for 32-bit applications and drivers, use the DataExecutionPrevention_ properties ") : Amended ToSubclass] boolean DataExecutionPrevention_Available;
  [Description("If true, indicates that 32-bit applications are running with Data Execution Prevention (DEP) applied. (false if DataExecutionPrevention_Available = false)") : Amended ToSubclass] boolean DataExecutionPrevention_32BitApplications;
  [Description("If true, indicates that drivers are running with Data Execution Prevention (DEP) applied. (false if DataExecutionPrevention_Available = false)") : Amended ToSubclass] boolean DataExecutionPrevention_Drivers;
  [Description("The DataExecutionPrevention_SupportPolicy indicates which one of four Data Execution Prevention (DEP) settings is applied. Each setting varies by the extent to which DEP is applied to 32-bit applications.  Note that DEP is always applied to the Windows kernel. Always On (not available in the user interface) indicates that DEP is enabled for all 32-bit applications on the machine with no exceptions. OptOut indicates DEP is on by default for all 32-bit applications and that a user or administrator must explicitly remove support for a 32-bit application by adding to an exceptions list. OptIn indicates DEP is on for a limited number of binaries, the kernel, and all Windows services but it is off by default for all 32-bit applications; a user or administrator must explicitly choose the AlwaysOn (not available in the user interface) or OptOut setting before DEP can be applied to 32-bit applications.  AlwaysOff (not available in the user interface) indicates DEP is turned off for all 32-bit applications on the machine. ") : Amended ToSubclass,Values{"Always Off", "Always On", "Opt In", "Opt Out"} : Amended ToSubclass] uint8 DataExecutionPrevention_SupportPolicy;
  [Description("The Debug property indicates whether the operating system is a checked (debug) build. Checked builds provide error checking, argument verification, and system debugging code. Additional code in a checked binary generates a kernel debugger error message and breaks into the debugger. This helps  immediately determine the cause and location of the error. Performance suffers in the checked build due to the additional code that is executed.\nValues: TRUE or FALSE, A value of TRUE indicates the debugging version of User.exe is installed.") : Amended ToSubclass] boolean Debug;
  [Description("The ForegroundApplicationBoost property indicates the increase in priority given to the foreground application. On computer systems running Windows NT 4.0 and Windows 2000, application boost is implemented by giving an application more execution time slices (quantum lengths). A ForegroundApplicationBoost value of 0 indicates the system boosts the quantum length by 6; if 1, then 12; and if 2 then 18. On Windows NT 3.51 and earlier, application boost is implemented by increasing the scheduling priority. For these systems, the scheduling priority is increased by the value of this property. The default value is 2.") : Amended ToSubclass,Values{"None", "Minimum", "Maximum"} : Amended ToSubclass] uint8 ForegroundApplicationBoost;
  [Description("The Locale property indicates the language identifier used by the operating system. A language identifier is a standard international numeric abbreviation for a country or region. Each language has a unique language identifier (LANGID), a 16-bit value that consists of a primary language identifier and a secondary language identifier.") : Amended ToSubclass] string Locale;
  [Description("The Manufacturer property indicates the name of the operating system manufacturer.  For Win32 systems this value will be Microsoft Corporation.") : Amended ToSubclass] string Manufacturer;
  [Description("The Organization property indicates the registered user's (of the operating system) company name.\nExample: Microsoft Corporation.") : Amended ToSubclass] string Organization;
  [Description("The OSLanguage property indicates which language version of the operating system is installed.\nExample: 0x0807 (German, Switzerland)") : Amended ToSubclass] uint32 OSLanguage;
  [Description("The OSProductSuite property identifies installed and licensed system product additions to the operating system.") : Amended ToSubclass,BitValues{"Small Business", "Enterprise", "BackOffice", "Communication Server", "Terminal Server", "Small Business(Restricted)", "Embedded NT", "Data Center"} : Amended ToSubclass] uint32 OSProductSuite;
  [Description("The OperatingSystemSKU property identifies the SKU of the operating system.") : Amended ToSubclass,Values{"Undefined", "Ultimate Edition", "Home Basic Edition", "Home Premium Edition", "Enterprise Edition", "Home Basic N Edition", "Business Edition", "Standard Server Edition", "Datacenter Server Edition", "Small Business Server Edition", "Enterprise Server Edition", "Starter Edition", "Datacenter Server Core Edition", "Standard Server Core Edition", "Enterprise Server Core Edition", "Enterprise Server IA64 Edition", "Business N Edition", "Web Server Edition", "Cluster Server Edition", "Home Server Edition", "Storage Express Server Edition", "Storage Standard Server Edition", "Storage Workgroup Server Edition", "Storage Enterprise Server Edition", "Server For Small Business Edition", "Small Business Server Premium Edition"} : Amended ToSubclass] uint32 OperatingSystemSKU;
  [Description("The PlusProductID property contains the product identification number for the Windows Plus! operating system enhancement software (if installed).") : Amended ToSubclass] string PlusProductID;
  [Description("The PlusVersionNumber property contains the version number of the Windows Plus! operating system enhancement software (if installed).") : Amended ToSubclass] string PlusVersionNumber;
  [Description("The Primary property determines whether this is the primary operating system.\nValues: TRUE or FALSE. A value of TRUE indicates this is the primary operating system.") : Amended ToSubclass] boolean Primary;
  [Description("The RegisteredUser property indicates the name of the registered user of the operating system.\nExample: Jane Doe") : Amended ToSubclass] string RegisteredUser;
  [Description("The SerialNumber property indicates the operating system product serial identification number.\nExample:10497-OEM-0031416-71674.") : Amended ToSubclass] string SerialNumber;
  [Description("The ServicePackMajorVersion property indicates the major version number of the service pack installed on the computer system. If no service pack has been installed, the value is zero. ServicePackMajorVersion is valid for computers running Windows 2000 and later (NULL otherwise).") : Amended ToSubclass] uint16 ServicePackMajorVersion;
  [Description("The ServicePackMinorVersion property indicates the minor version number of the service pack installed on the computer system. If no service pack has been installed, the value is zero. ServicePackMinorVersion is valid for computers running Windows 2000 and later (NULL otherwise).") : Amended ToSubclass] uint16 ServicePackMinorVersion;
  [Description("The SystemDevice property indicates the physical disk partition the operating system is installed on.") : Amended ToSubclass] string SystemDevice;
  [Description("The SystemDirectory property indicates the system directory of the operating system.\nExample: C:\\WINDOWS\\SYSTEM32") : Amended ToSubclass] string SystemDirectory;
  [Description("The SystemDrive property contains the letter of the disk drive that the operating system resides on.\nExample: C:") : Amended ToSubclass] string SystemDrive;
  [Description("The Version property indicates the version number of the operating system.\nExample: 4.0") : Amended ToSubclass] string Version;
  [Description("The WindowsDirectory property indicates the Windows directory of the operating system.\nExample: C:\\WINDOWS") : Amended ToSubclass] string WindowsDirectory;
  [Description("The Description property provides a description of the Windows operating system. Some user interfaces (those that allow editing of this description) limit its length to 48 characters.") : Amended ToSubclass] string Description;
  [Description("The EncryptionLevel property specifies if the encryption level for secure transactions is 40-bit, 128-bit, or n-bit encryption.") : Amended ToSubclass,Values{"40-bit", "128-bit", "n-bit"} : Amended ToSubclass] uint32 EncryptionLevel;
  [Description("The LargeSystemCache property indicates whether to optimize memory for applications (value=0) or for system performance (value=1).") : Amended ToSubclass,Values{"Optimize for Applications", "Optimize for System Performance"} : Amended ToSubclass] uint32 LargeSystemCache;
  [Description("The SuiteMask property indicates a set of bit flags that identify the product suites available on the system. This member can be a combination of the following values: \n0 - Windows Server 2003, Small Business Edition \n1 - Windows Server 2003, Enterprise Edition \n2 - Windows Server 2003, Backoffice Edition \n3 - Windows Server 2003, Communications Edition \n4 - Microsoft Terminal Services \n5 - Windows Server 2003, Small Business Edition Restricted \n6 - Windows XP Embedded \n7 - Windows Server 2003, Datacenter Edition \n8 - Single User \n9 - Windows XP Home Edition \n10 - Windows Server 2003, Web Edition") : Amended ToSubclass,BitValues{"Windows Server 2003, Small Business Edition", "Windows Server 2003, Enterprise Edition", "Windows Server 2003, Backoffice Edition", "Windows Server 2003, Communications Edition", "Microsoft Terminal Services", "Windows Server 2003, Small Business Edition Restricted", "Windows XP Embedded", "Windows Server 2003, Datacenter Edition", "Single User", "Windows XP Home Edition", "Windows Server 2003, Web Edition"} : Amended ToSubclass] uint32 SuiteMask;
  [Description("The ProductType property indicates additional information about the system. This member can be one of the following values: \n1 - Work Station \n2 - Domain Controller \n3 - Server") : Amended ToSubclass,Values{"Work Station", "Domain Controller", "Server"} : Amended ToSubclass] uint32 ProductType;
  [Description("The Reboot method shuts down the computer system, then restarts it. On computers running Windows NT/2000, the calling process must have the SE_SHUTDOWN_NAME privilege.\nThe method returns an integer value that can be interpretted as follows: \n0 - Successful completion.\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Success", "Other"} : Amended ToSubclass] uint32 Reboot();
  [Description("The Shutdown method unloads programs and DLLs to the point where it is safe to turn off the computer. All file buffers are flushed to disk, and all running processes are stopped. On computer systems running Windows NT/2000, the calling process must have the SE_SHUTDOWN_NAME privilege.\nThe method returns an integer value that can be interpretted as follows: \n0 - Successful completion.\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Success", "Other"} : Amended ToSubclass] uint32 Shutdown();
  [Description("The Win32Shutdown method provides the full set of shutdown options supported by Win32 operating systems.\nThe method returns an integer value that can be interpretted as follows: \n0 - Successful completion.\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Success", "Other"} : Amended ToSubclass] uint32 Win32Shutdown([in : ToSubclass,Description("The Flags parameter contains a set of flags to shut the computer down.  Setting this parameter to 0 is the command to logoff.") : Amended ToSubclass,BitValues{"Shutdown", "Reboot", "Force", "Power Off", "Force If Hung"} : Amended ToSubclass] sint32 Flags,[in : ToSubclass,Description("The Reserved parameter provides a way to extend Win32Shutdown. Presently, the Reserved parameter is ignored.") : Amended ToSubclass] sint32 Reserved);
  [Description("The Win32ShutdownTracker method provides the full set of shutdown options supported by Win32 operating systems.\n Comments, reason for shutdown and timeout can be specifiedwhich is not available in Win32Shutdown method.The method returns an integer value that can be interpretted as follows: \n0 - Successful completion.\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Success", "Other"} : Amended ToSubclass] uint32 Win32ShutdownTracker([in : ToSubclass,Description("The Timeout parameter is the time in seconds before shutdown take place. The default value is 0.") : Amended ToSubclass] uint32 Timeout,[in : ToSubclass,Description("The Comment parameter specifies a message   to display in the shutdown dialog box and also stored as a comment in the event log entry.") : Amended ToSubclass] string Comment,[in : ToSubclass,Description("The ReasonCode parameter specifies the reason for initiating the shutdown.") : Amended ToSubclass] uint32 ReasonCode,[in : ToSubclass,Description("The Flags parameter contains a set of flags to shut the computer down.  Setting this parameter to 0 is the command to logoff.") : Amended ToSubclass,BitValues{"Shutdown", "Reboot", "Force", "Power Off", "Force If Hung"} : Amended ToSubclass] sint32 Flags);
  [Description("The SetDateTime method sets the current system time on the computer.  On computer systems running Windows NT/2000, the calling process must have the SE_SYSTEMTIME_NAME privilege.\nThe method returns an integer value that can be interpretted as follows: \n0 - Successful completion.\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Success", "Other"} : Amended ToSubclass] uint32 SetDateTime([in : ToSubclass,Description("The LocalDateTime parameter is the time to set.  This property may not be NULL.") : Amended ToSubclass] DateTime LocalDateTime);
};

[Description("The Win32_OperatingSystemQFE class represents an association between an operating system and product updates applied as represented in Win32_QuickFixEngineering.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_OperatingSystemQFE : CIM_Dependency
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The Win32_OperatingSystem antecedent reference represents the Win32_OperatingSystem effected by the product update in this association.") : Amended ToSubclass] Win32_OperatingSystem Ref Antecedent;
  [Key : ToInstance ToSubclass DisableOverride,Description("The Win32_QuickFixEngineering dependent reference represents the Win32_QuickFixEngineering applied to the operating system in this association.") : Amended ToSubclass] Win32_QuickFixEngineering Ref Dependent;
};

[Description("The Win32_OSRecoveryConfiguration class represents the types of information that will be gathered from memory when the operating system fails. This includes boot failures and system crashes.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_OSRecoveryConfiguration : CIM_Setting
{
  [Description("The AutoReboot property determines whether the system will automatically reboot during a recovery operation.\nValues: TRUE or FALSE. If TRUE, the system will automatically rebooted.") : Amended ToSubclass] boolean AutoReboot;
  [Description("The DebugFilePath property indicates the path to the debug file. A debug file is created with the memory state of the machine after a machine failure.\nExample: %systemRoot%\\Memory.dmp") : Amended ToSubclass] string DebugFilePath;
  [Description("The ExpandedDebugFilePath property is an expanded version of the DebugFilePath property. \nExample: C:\\WinNT\\Memory.dmp") : Amended ToSubclass] string ExpandedDebugFilePath;
  [Description("The MiniDumpDirectory property indicates the directory where small memory dump files will be recorded and accumulated. \nExample: %systemRoot%\\MiniDump") : Amended ToSubclass] string MiniDumpDirectory;
  [Description("The ExpandedMiniDumpDirectory property is an expanded version of the MiniDumpDirectory property. \nExample: C:\\WinNT\\MiniDump") : Amended ToSubclass] string ExpandedMiniDumpDirectory;
  [key : ToInstance ToSubclass DisableOverride,Description("The Name property contains an identifying name for this instance of the Win32_OSRecoveryConfiguration class.") : Amended ToSubclass] string Name;
  [Description("The OverwriteExistingDebugFile property indicates whether a new log file will overwrite an existing one. \nValues: TRUE or FALSE. If TRUE, the existing debug file will be overwritten. If FALSE, a log file is not written if the filename already exists.") : Amended ToSubclass] boolean OverwriteExistingDebugFile;
  [Description("The SendAdminAlert property indicates whether or not an alert message will be sent to the system administrator in the event of an operating system failure.\nValues: TRUE or FALSE. If TRUE, the system will send an alert to the system administrator.") : Amended ToSubclass] boolean SendAdminAlert;
  [Description("The WriteDebugInfo property has been deprecated in favor of the DebugInfoType property in the same class.  All future work should use this new property.  \nThe WriteDebugInfo property indicates whether or not debugging information is to be written to a log file.\nValues: TRUE or FALSE. If TRUE, debug information is written to a file.") : Amended ToSubclass] boolean WriteDebugInfo;
  [Description("The DebugInfoType property indicates what type of debugging information is to be written to the log file.\nValues: 0 = None \n1 = Complete memory dump \n2 = Kernel memory dump \n3 = Small memory dump (64KB)") : Amended ToSubclass,Values{"None", "Complete memory dump", "Kernel memory dump", "Small memory dump"} : Amended ToSubclass] uint32 DebugInfoType;
  [Description("The WriteToSystemLog property indicates whether or not events will be written to a system log.  \nValues: TRUE or FALSE. If TRUE, information will be written to a system log file.") : Amended ToSubclass] boolean WriteToSystemLog;
  [Description("The KernelDumpOnly property has been deprecated in favor of the DebugInfoType property in the same class.  All future work should use this new property.  \nThe KernelDumpOnly property indicates whether only kernel debug information will be written to the debug log file. \nValues TRUE or FALSE. If TRUE, then only the state of kernel is written to a file in the event of a system failure. If FALSE, the system will try to log the state of the memory and any devices that can provide information about the system when it failed.") : Amended ToSubclass] boolean KernelDumpOnly;
};

[Description("The Win32_SystemMemoryResource class represents a system memory resource on a Win32 system.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_SystemMemoryResource : CIM_MemoryMappedIO
{
};

[Description("The Win32_DeviceMemoryAddress class represents a device memory address on a Win32 system.\nExample: ScsiPort0 device memory address.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_DeviceMemoryAddress : Win32_SystemMemoryResource
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The StartingAddress property contains the starting address of memory mapped I/O. The hardware resource identifier property should be set to this value to construct the mapped I/O resource key.") : Amended ToSubclass] uint64 StartingAddress;
  [Description("The MemoryType property indicates the characteristics of the memory resource on the Win32 system.\nExample: ReadWrite.") : Amended ToSubclass,Values{"ReadWrite", "ReadOnly", "WriteOnly", "Prefetchable", "CombinedWrite", "Type24", "Cacheable", "WindowDecode", "Bar"} : Amended ToSubclass] string MemoryType;
};

[Description("The Win32_PortResource class represents an I/O port on a Win32 computer system.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_PortResource : Win32_SystemMemoryResource
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The StartingAddress property contains the starting address of memory mapped I/O. The hardware resource identifier property should be set to this value to construct the mapped I/O resource key.") : Amended ToSubclass] uint64 StartingAddress;
  [Description("The Alias property indicates whether this instance represents the base port address or one of the ranges with an alias. A base port address is a predetermined port address dedicated to a specific service or device. A port alias address is one that a device responds to as if it were the actual address of an I/O port. \nValues: TRUE or FALSE. A value of TRUE indicates this instance represents an address alias.") : Amended ToSubclass] boolean Alias;
};

[Description("The Win32_ProcessStartup class represents the startup configuration of a Win32 process. The class is defined as a Method Type definition, which means that it is used only for passing information to a method (a procedure that provides access to an object's data).") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_ProcessStartup : Win32_MethodParameterClass
{
  [Description("The CreateFlags property specifies additional values that control the priority class and the creation of the process. The following creation values can be specified in any combination, except as noted:\nCreate_Default_Error_Mode - Newly created processes are given the system default error mode of the calling process instead of inheriting the error mode of the parent process.  This flag is useful for multi-threaded shell applications that run with hard errors disabled.\nCreate_New_Console - The new process has a new console, instead of inheriting the parent's console. This flag cannot be used with the Detached_Process flag.\nCreate_New_Process_Group - The new process is the root process of a new process group. The process group includes all processes that are descendants of this root process. The process identifier of the new process group is the same as the process identifier (returned in the ProcessID property of the Win32_Process class).  Process groups are used by the GenerateConsoleCtrlEvent function to enable sending a CTRL+C or CTRL+BREAK signal to a group of console processes.\nCreate_Suspended - The primary thread of the new process is created in a suspended state and does not run until the ResumeThread function is called.\nCreate_Unicode_Environment - The environment settings listed in the EnvironmentVariables property use Unicode characters. If clear, the environment block uses ANSI characters.\nDebug_Process - If this flag is set, the calling process is treated as a debugger, and the new process is a process being debugged.  The system notifies the debugger of all debug events that occur in the process being debugged.  On Windows 95 and Windows 98 systems, this flag is not valid if the new process is a 16-bit application.\nDebug_Only_This_Process - If not set and the calling process is being debugged, the new process becomes another process being debugged by the process of the calling debugger. If the calling process is not a process being debugged, no debugging related actions occur.\nDetached_Process - For console processes, the new process does not have access to the console of the parent process.  This flag cannot be used if the Create_New_Console flag is set.") : Amended ToSubclass,BitValues{"Debug_Process", "Debug_Only_This_Process", "Create_Suspended", "Detached_Process", "Create_New_Console", "Create_New_Process_Group", "Create_Unicode_Environment", "Create_Default_Error_Mode"} : Amended ToSubclass] uint32 CreateFlags;
  [Description("The PriorityClass property controls the priority class of the new process (used to determine the scheduling priorities of the threads in the process).  If the PriorityClass property is left null, the priority class defaults to Normal unless the priority class of the creating process is Idle or Below_Normal. In these cases, the child process receives the default priority class of the calling process. One of the following values can be specified:\nHigh - Indicates a process that performs time-critical tasks that must be executed immediately for it to run correctly. The threads of a high-priority class process preempt the threads of normal-priority or idle-priority class processes. An example is Windows Task List, which must respond quickly when called by the user, regardless of the load on the operating system. Use extreme care when using the high-priority class, because a high-priority class CPU-bound application can use nearly all available cycles.  Only Realtime priority will preempt threads set to this level\nIdle - Indicates a process whose threads run only when the system is idle and are preempted by the threads of any process running in a higher priority class. An example is a screen saver. The idle priority class is inherited by child processes.\nNormal - Indicates a normal process with no special scheduling needs.\nRealtime - Indicates a process that has the highest possible priority. The threads of a real-time priority class process preempt the threads of all other processes, including operating system processes performing important tasks, and high priority threads. For example, a real-time process that executes for more than a very brief interval can cause disk caches not to flush or cause the mouse to be unresponsive.\nAbove_Normal - (Windows 2000 and later) Indicates a process that has priority higher than Normal but lower than High.\nBelow_Normal - (Windows 2000 and later): Indicates a process that has priority higher than Idle but lower than Normal.") : Amended ToSubclass,Values{"Normal", "Idle", "High", "Realtime", "Below_Normal", "Above_Normal"} : Amended ToSubclass] uint32 PriorityClass;
  [Description("The EnvironmentVariables property contains a list of settings for the configuration of a computer.  Environment variables specify search paths for files, directories for temporary files, application-specific options, and other similar information.  The system maintains a block of environment settings for each user and one for the computer.  The system environment block represents environment variables for all users of the particular computer.  A user's environment block represents the environment variables the system maintains for that particular user, including the set of system environment variables.  By default, each process receives a copy of the environment block for its parent process.  Typically, this is the environment block for the user who is logged on.  A process can specify different environment blocks for its child processes.") : Amended ToSubclass] string EnvironmentVariables[];
  [Description("(For Windows NT only) The WinstationDesktop property specifies either the name of the desktop only or the name of both the desktop and window station for the process.  A backslash in the string indicates that the string includes both desktop and window station names.  If WinstationDesktop is NULL, the new process inherits the desktop and window station of its parent process.  If WinstationDesktop is an empty string, the process does not inherit the desktop and window station of its parent process; instead, the system determines if a new desktop and window station need to be created.  A window station is a secure object that contains a clipboard, a set of global atoms and a group of desktop objects. The interactive window station assigned to the logon session of the interactive user also contains the keyboard, mouse, and display device. A desktop is a secure object contained within a window station.  A desktop has a logical display surface and contains windows, menus, and hooks.  A window station can have multiple desktops. Only the desktops of the interactive window station can be visible and receive user input. ") : Amended ToSubclass] string WinstationDesktop;
  [Description("The Title property used for console processes contains the string displayed in the title bar if a new console window is created.  If NULL, the name of the executable file is used as the window title instead.  This property must be NULL for GUI or console processes that do not create a new console window.") : Amended ToSubclass] string Title;
  [Description("The X property specifies the x offset, in pixels, of the upper left corner of a window if a new window is created.  The offsets are from the upper left corner of the screen.  For GUI processes, the specified position is used the first time the new process calls CreateWindow to create an overlapped window if the x parameter of CreateWindow is CW_USEDEFAULT.  Note, X and Y cannot be specified independently.") : Amended ToSubclass] uint32 X;
  [Description("The Y property specifies the y offset, in pixels, of the upper left corner of a window if a new window is created. The offsets are from the upper left corner of the screen.  For GUI processes, the specified position is used the first time the new process calls CreateWindow to create an overlapped window if the y parameter of CreateWindow is CW_USEDEFAULT.  Note, X and Y cannot be specified independently.") : Amended ToSubclass] uint32 Y;
  [Description("The XSize property specifies the width, in pixels, of the window if a new window is created. For GUI processes, this is used only the first time the new process calls CreateWindow to create an overlapped window if the nWidth parameter of CreateWindow is CW_USEDEFAULT.  Note, XSize and YSize cannot be specified independently.") : Amended ToSubclass] uint32 XSize;
  [Description("The YSize property specifies the height, in pixels, of the window if a new window is created. For GUI processes, this is used only the first time the new process calls CreateWindow to create an overlapped window if the nWidth parameter of CreateWindow is CW_USEDEFAULT.  Note, XSize and YSize cannot be specified independently.") : Amended ToSubclass] uint32 YSize;
  [Description("The XCountChars property, used for processes creating a console window, specifies the screen buffer width in character columns. These values are ignored in GUI processes.  Note, XCountChars and YCountChars cannot be specified independently.") : Amended ToSubclass] uint32 XCountChars;
  [Description("The YCountChars property, used for processes creating a console window, specifies the screen buffer height in character rows.  These values are ignored in GUI processes.  Note, XCountChars and YCountChars cannot be specified independently.") : Amended ToSubclass] uint32 YCountChars;
  [Description("The FillAttribute property specifies the initial text and background colors if a new console window is created in a console application.  These values are ignored in GUI applications.") : Amended ToSubclass,BitValues{"Foreground_Blue", "Foreground_Green", "Foreground_Red", "Foreground_Intensity", "Background_Blue", "Background_Green", "Background_Red", "Background_Intensity"} : Amended ToSubclass] uint32 FillAttribute;
  [Description("The ShowWindow property specifies how the window is to be displayed to the user.") : Amended ToSubclass,Values{"SW_HIDE", "SW_NORMAL", "SW_SHOWMINIMIZED", "SW_SHOWMAXIMIZED", "SW_SHOWNOACTIVATE", "SW_SHOW", "SW_MINIMIZE", "SW_SHOWMINNOACTIVE", "SW_SHOWNA", "SW_RESTORE", "SW_SHOWDEFAULT", "SW_FORCEMINIMIZE"} : Amended ToSubclass] uint16 ShowWindow;
  [Description("The ErrorMode property controls how the operating system handles several types of serious errors.  You can specify that the operating system handle these errors or that the application receives and handles them.  On some non-x86 processors, misaligned memory references cause an alignment fault exception.  The No_Alignment_Fault_Except flag lets you control whether the system automatically fixes such alignment faults or makes them visible to an application.  On a MIPS platform, an application must explicitly call SetErrorMode with the No_Alignment_Fault_Except flag to have the operating system automatically fix alignment faults.  The default setting is for the operating system to make alignment faults visible to an application.  Since the x86 platform does not make alignment faults visible to an application, the No_Alignment_Fault_Except flag will not make the operating system raise an alignment fault error even if the flag is not set.  The default state for ErrorMode is to set all flags to 0.  Defined values for this flag are are:\nFail_Critical_Errors - If this flag is set, the operating system does not display the critical-error-handler message box when such an error occurs. Instead, the operating system sends the error to the calling process.\nNo_Alignment_Fault_Except - (RISC only) If this flag is set, the operating system automatically fixes memory alignment faults and makes them invisible to the application. It does this for the calling process and any descendant processes.  This flag has no effect on x86 processors.\nNo_GP_Fault_Error_Box - If this flag is set, the operating system does not display the general-protection-fault message box when such an error occurs. This flag should only be set by debugging applications that handle general protection (GP) faults themselves via an appropriate exception handler.\nNo_Open_File_Error_Box - If this flag is set, the operating system does not display a message box when it fails to find a file.  Instead, the error is returned to the calling process.  Note, this flag is currently ignored.") : Amended ToSubclass,BitValues{"Fail_Critical_Errors", "No_GP_Fault_Error_Box", "No_Alignment_Fault_Except", "No_Open_File_Error_Box"} : Amended ToSubclass] uint16 ErrorMode;
};

[DisplayName("Processes") : Amended,Description("The Win32_Process class represents a sequence of events on a Win32 system. Any sequence consisting of the interaction of one or more processors or interpreters, some executable code, and a set of inputs, is a descendent (or member) of this class.\nExample: A client application running on a Win32 system.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_Process : CIM_Process
{
  [DisplayName("Executable Path") : Amended,Description("The ExecutablePath property indicates the path to the executable file of the process.\nExample: C:\\WINDOWS\\EXPLORER.EXE") : Amended ToSubclass] string ExecutablePath;
  [DisplayName("Maximum Working Set Size") : Amended,Units("kilobytes") : Amended ToSubclass,Description("The MaximumWorkingSetSize property indicates the maximum working set size of the process. The working set of a process is the set of memory pages currently visible to the process in physical RAM. These pages are resident and available for an application to use without triggering a page fault.\nExample: 1413120.") : Amended ToSubclass] uint32 MaximumWorkingSetSize;
  [DisplayName("Minimum Working Set Size") : Amended,Units("kilobytes") : Amended ToSubclass,Description("The MinimumWorkingSetSize property indicates the minimum working set size of the process. The working set of a process is the set of memory pages currently visible to the process in physical RAM. These pages are resident and available for an application to use without triggering a page fault.\nExample: 20480.") : Amended ToSubclass] uint32 MinimumWorkingSetSize;
  [DisplayName("Number Of Page Faults") : Amended,Description("The PageFaults property indicates the number of page faults generated by the process.\nExample: 10") : Amended ToSubclass] uint32 PageFaults;
  [DisplayName("Page File Usage") : Amended,Units("kilobytes") : Amended ToSubclass,Description("The PageFileUsage property indicates the amountof page file space currently being used by the process.\nExample: 102435") : Amended ToSubclass] uint32 PageFileUsage;
  [DisplayName("Peak Page File Usage") : Amended,Units("kilobytes") : Amended ToSubclass,Description("The PeakPageFileUsage property indicates the maximum amount of page file space  used during the life of the process.\nExample: 102367") : Amended ToSubclass] uint32 PeakPageFileUsage;
  [DisplayName("Peak Working Set Size") : Amended,Units("kilobytes") : Amended ToSubclass,Description("The PeakWorkingSetSize property indicates the peak working set size of the process.\nExample: 1413120") : Amended ToSubclass] uint32 PeakWorkingSetSize;
  [DisplayName("Process Id") : Amended,Description("The ProcessId property contains the global process identifier that can be used to identify a process. The value is valid from the creation of the process until the process is terminated.") : Amended ToSubclass] uint32 ProcessId;
  [DisplayName("Non-Paged Pool Usage Quota") : Amended,Description("The QuotaNonPagedPoolUsage property indicates the quota amount of non-paged pool usage for the process.\nExample: 15") : Amended ToSubclass] uint32 QuotaNonPagedPoolUsage;
  [DisplayName("Paged Pool Usage Quota") : Amended,Description("The QuotaPagedPoolUsage property indicates the quota amount of paged pool usage for the process.\nExample: 22") : Amended ToSubclass] uint32 QuotaPagedPoolUsage;
  [DisplayName("Peak Non-Paged Pool Usage Quota") : Amended,Description("The QuotaPeakNonPagedPoolUsage property indicates the peak quota amount of non-paged pool usage for the process.\nExample: 31") : Amended ToSubclass] uint32 QuotaPeakNonPagedPoolUsage;
  [DisplayName("Peak Paged Pool Usage Quota") : Amended,Description("The QuotaPeakPagedPoolUsage property indicates the peak quota amount of paged pool usage for the process.\n Example: 31") : Amended ToSubclass] uint32 QuotaPeakPagedPoolUsage;
  [DisplayName("Windows Version") : Amended,Description("The WindowsVersion property indicates the version of Windows in which the process is running.\nExample: 4.0") : Amended ToSubclass] string WindowsVersion;
  [DisplayName("Priority") : Amended,Description("The Priority property indicates the scheduling priority of the process within the operating system. The higher the value, the higher priority the process receives. Priority values can range from 0 (lowest priority) to 31 (highest priority).\nExample: 7.") : Amended ToSubclass] uint32 Priority;
  [DisplayName("Thread Count") : Amended,Description("The ThreadCount property specifies the number of active threads in this process. An instruction is the basic unit of execution in a processor, and a thread is the object that executes instructions. Every running process has at least one thread. This property is for computers running Windows NT only.") : Amended ToSubclass] uint32 ThreadCount;
  [DisplayName("Handle Count") : Amended,Description("The HandleCount property specifies the total number of handles currently open by this process. This number is the sum of the handles currently open by each thread in this process. A handle is used to examine or modify the system resources. Each handle has an entry in an internally maintained table. These entries contain the addresses of the resources and the means to identify the resource type.") : Amended ToSubclass] uint32 HandleCount;
  [DisplayName("Parent Process Id") : Amended,Description("The ParentProcessId property specifies the unique identifier of the process that created this process. Process identifier numbers are reused, so they only identify a process for the lifetime of that process. It is possible that the process identified by ParentProcessId has terminated, so ParentProcessId may not refer to an running process. It is also possible that ParentProcessId incorrectly refers to a process which re-used that process identifier. The CreationDate property can be used to determine whether the specified parent was created after this process was created.") : Amended ToSubclass] uint32 ParentProcessId;
  [DisplayName("Session Id") : Amended,Description("The SessionId property specifies the unique identifier that is generated by the operating system when the session is created. A session spans a period of time from log in to log out on a particular system.") : Amended ToSubclass] uint32 SessionId;
  [DisplayName("Private Page Count") : Amended,Description("The PrivatePageCount property specifies the current number of pages allocated that are accessible only to this process ") : Amended ToSubclass] uint64 PrivatePageCount;
  [DisplayName("Peak Virual Address Space Usage") : Amended,Units("bytes") : Amended ToSubclass,Description("The PeakVirtualSize property specifies the maximum virtual address space the process has used at any one time. Use of virtual address space does not necessarily imply corresponding use of either disk or main memory pages. However, virtual space is finite, and by using too much, the process might limit its ability to load libraries.") : Amended ToSubclass] uint64 PeakVirtualSize;
  [DisplayName("Virtual Address Space Usage") : Amended,Units("bytes") : Amended ToSubclass,Description("The VirtualSize property specifies the current size in bytes of the virtual address space the process is using. Use of virtual address space does not necessarily imply corresponding use of either disk or main memory pages. Virtual space is finite, and by using too much, the process can limit its ability to load libraries.") : Amended ToSubclass] uint64 VirtualSize;
  [DisplayName("Read Operation Count") : Amended,Description("The ReadOperationCount property specifies the number of read operations performed.") : Amended ToSubclass] uint64 ReadOperationCount;
  [DisplayName("Write Operation Count") : Amended,Description("The WriteOperationCount property specifies the number of write operations performed.") : Amended ToSubclass] uint64 WriteOperationCount;
  [DisplayName("Other Operation Count") : Amended,Description("The OtherOperationCount property specifies the number of I/O operations performed, other than read and write operations.") : Amended ToSubclass] uint64 OtherOperationCount;
  [DisplayName("Read Transfer Count") : Amended,Units("bytes") : Amended ToSubclass,Description("The ReadTransferCount property specifies the amount of data read.") : Amended ToSubclass] uint64 ReadTransferCount;
  [DisplayName("Write Transfer Count") : Amended,Units("bytes") : Amended ToSubclass,Description("The WriteTransferCount property specifies the amount of data written.") : Amended ToSubclass] uint64 WriteTransferCount;
  [DisplayName("Other Transfer Count") : Amended,Units("bytes") : Amended ToSubclass,Description("The OtherTransferCount property specifies the amount of data transferred during operations other than read and write operations.") : Amended ToSubclass] uint64 OtherTransferCount;
  [DisplayName("Command Line To Start Process") : Amended,Description("The CommandLine property specifies the command line used to start a particular process, if applicable.") : Amended ToSubclass] string CommandLine;
  [Description("Time in kernel mode, in 100 nanoseconds. If this information is not available, a value of 0 should be used.") : Amended ToSubclass,Units("100 nanoseconds") : Amended ToSubclass] uint64 KernelModeTime;
  [Description("Time in user mode, in 100 nanoseconds. If this information is not available, a value of 0 should be used.") : Amended ToSubclass,Units("100 nanoseconds") : Amended ToSubclass] uint64 UserModeTime;
  [Description("The Create method creates a new process. \nThe method returns an integer value that can be interpretted as follows: \n0 - Successful completion.\n2 - The user does not have access to the requested information.\n3 - The user does not have sufficient privilge.\n8 - Unknown failure.\n9 - The path specified does not exist.\n21 - The specified parameter is invalid.\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Successful completion", "Access denied", "Insufficient privilege", "Unknown failure", "Path not found", "Invalid parameter", "Other"} : Amended ToSubclass] uint32 Create([In : ToSubclass,Description("The CommandLine parameter specifies the command line to execute.  The system adds a null character to the command line, trimming the string if necessary, to indicate which file was actually used. A fully qualified path must be specified in cases where the program to be launched is not in the search path of Winmgmt (not the user's path).") : Amended ToSubclass] string CommandLine,[In : ToSubclass,Description("The CurrentDirectory parameter specifies the current drive and directory for the child process. The string requires that the current directory resolves to a known path. A user can specify an absolute path or a path relative to the current working directory. If this parameter is NULL, the new process will have the same path as the calling process. This option is provided primarily for shells that must start an application and specify the application's initial drive and working directory.") : Amended ToSubclass] string CurrentDirectory,[In : ToSubclass,Description("The ProcessStartupInformation parameter represents the startup configuration of a Win32 process. It includes information about displaying the window, characteristics of a console application, and handling errors. \n\nNote that in Windows XP and beyond, the WinstationDesktop string property (which previously defaulted to \"winsta0\\default\") is ignored in all cases. The value used in place of this parameter is an empty string (\"\").") : Amended ToSubclass] Win32_ProcessStartup ProcessStartupInformation,[Out : ToSubclass,Description("The ProcessId parameter returns a global process identifier that can be used to identify a process. The value is valid from the time the process is created until the time the process is terminated. ") : Amended ToSubclass] uint32 ProcessId);
  [Description("The Terminate method terminates a process and all of its threads. The method returns an integer value that can be interpretted as follows: \n0 - Successful completion.\n2 - The user does not have access to the requested information.\n3 - The user does not have sufficient privilge.\n8 - Unknown failure.\n9 - The path specified does not exist.\n21 - The specified parameter is invalid.\nOther - For integer values other than those listed above, refer to Win32 error code documentation.\n\nNote:  The  SE_DEBUG_PRIVILEGE privilege is required to invoke this method") : Amended ToSubclass,Values{"Successful completion", "Access denied", "Insufficient privilege", "Unknown failure", "Path not found", "Invalid parameter", "Other"} : Amended ToSubclass] uint32 Terminate([In : ToSubclass,Description("The Reason parameter specifies the exit code for the process and for all threads terminated as a result of this call. ") : Amended ToSubclass] uint32 Reason);
  [Description("The GetOwner method retrieves the user name and domain name under which the process is running. \nThe method returns an integer value that can be interpretted as follows: \n0 - Successful completion.\n2 - The user does not have access to the requested information.\n3 - The user does not have sufficient privilge.\n8 - Unknown failure.\n9 - The path specified does not exist.\n21 - The specified parameter is invalid.\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Successful completion", "Access denied", "Insufficient privilege", "Unknown failure", "Path not found", "Invalid parameter", "Other"} : Amended ToSubclass] uint32 GetOwner([Out : ToSubclass,Description("The User parameter returns the user name of the owner of this process.") : Amended ToSubclass] string User,[Out : ToSubclass,Description("The Domain parameter returns the domain name under which this process is running.") : Amended ToSubclass] string Domain);
  [Description("The GetOwnerSid method retrieves the security identifier (SID) for the owner of this process.\nThe method returns an integer value that can be interpretted as follows: \n0 - Successful completion.\n2 - The user does not have access to the requested information.\n3 - The user does not have sufficient privilge.\n8 - Unknown failure.\n9 - The path specified does not exist.\n21 - The specified parameter is invalid.\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Successful completion", "Access denied", "Insufficient privilege", "Unknown failure", "Path not found", "Invalid parameter", "Other"} : Amended ToSubclass] uint32 GetOwnerSid([Out : ToSubclass,Description("The Sid property returns the security identifier descriptor for this process.") : Amended ToSubclass] string Sid);
  [Description("The SetPriority method attempts to change the execution priority of the process. In order to set the priority to Realtime, the caller must hold the SeIncreaseBasePriorityPrivilege.  Without this privilege, the highest the priority can be set to is High priority.\nThe method returns an integer value that can be interpretted as follows: \n0 - Successful completion.\n2 - The user does not have access to the requested information.\n3 - The user does not have sufficient privilge.\n8 - Unknown failure.\n9 - The path specified does not exist.\n21 - The specified parameter is invalid.\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Successful completion", "Access denied", "Insufficient privilege", "Unknown failure", "Path not found", "Invalid parameter", "Other"} : Amended ToSubclass] uint32 SetPriority([in,Description("The Priority parameter specifies the new priority class for the process.  Values:\nIdle - Specified for a process whose threads run only when the system is idle. The threads of the process are preempted by the threads of any process running in a higher priority class. An example is a screen saver. The idle-priority class is inherited by child processes.\nBelow Normal - Indicates a process that has priority above IDLE_PRIORITY_CLASS but below NORMAL_PRIORITY_CLASS. For Windows 2000.\nNormal - Specified for a process with no special scheduling needs.\nAbove Normal - Indicates a process that has priority above NORMAL_PRIORITY_CLASS but below HIGH_PRIORITY_CLASS. For Windows 2000.\nHigh Priority - Specified for a process that performs time-critical tasks that must be executed immediately. The threads of the process preempt the threads of normal or idle priority class processes. An example is the Task List, which must respond quickly when called by the user, regardless of the load on the operating system. Use extreme care when using the high-priority class, because a high-priority class application can use nearly all available CPU time.\nRealtime - Specified for a process that has the highest possible priority. The threads of the process preempt the threads of all other processes, including operating system processes performing important tasks. For example, a real-time process that executes for more than a very brief interval can cause disk caches not to flush or cause the mouse to be unresponsive.\n") : Amended ToSubclass,Values{"Idle", "Below Normal", "Normal", "Above Normal", "High Priority", "Realtime"} : Amended ToSubclass] sint32 Priority);
  [Description("The AttachDebugger method launches the currently registered debugger for this process.  Dr. Watson, however, is not supported. \nThe method returns a 'generic failure' if it finds an invalid string in the registry key or an integer value that can be interpretted as follows: \n0 - Successful completion.\n2 - The user does not have access to the requested information.\n3 - The user does not have sufficient privilge.\n8 - Unknown failure.\n9 - The path specified does not exist.\n21 - The specified parameter is invalid.\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Successful completion", "Access denied", "Insufficient privilege", "Unknown failure", "Path not found", "Invalid parameter", "Other"} : Amended ToSubclass] uint32 AttachDebugger();
};

[Description("The Win32_StartupCommand class represents a command that runs automatically when a user logs onto the computer system.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_StartupCommand : CIM_Setting
{
  [key : ToInstance ToSubclass DisableOverride,Description("The User property indicates the user name for whom this startup command will run.\nExample: mydomain\\myname.") : Amended ToSubclass] string User;
  [Description("The UserSID property indicates the SID of the user for whom this startup command will run. That User property may be empty but UserSID still has a value if the user name can't be resolved (like in the case of a deleted user). The property is helpful to distinguish between commands associated w/ two different users with unresolved names. It may be NULL when the command is associated with items not actually identifying a user like All Users.\nExample:S-1-5-21-1579938362-1064596589-3161144252-1006") : Amended ToSubclass] string UserSID;
  [key : ToInstance ToSubclass DisableOverride,Description("The Name property indicates the filename of the startup command.\nExample: FindFast") : Amended ToSubclass] string Name;
  [key : ToInstance ToSubclass DisableOverride,Description("The Location property indicates the path where the startup command resides on the disk file system.") : Amended ToSubclass,Values{"Startup", "Common Startup", "HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run", "HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunServices"} : Amended ToSubclass] string Location;
  [key : ToInstance ToSubclass DisableOverride,Description("The Command property indicates the string representing the command line run by the startup command.\nExample: c:\\winnt\\notepad.exe myfile.txt.") : Amended ToSubclass] string Command;
};

[Description("The Win32_Subdirectory class represents an association between a directory (folder) and one of its subdirectories (subfolders).") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_SubDirectory : CIM_Component
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The GroupComponent reference represents the Win32_Directory that contains the properties of the parent directory (folder) in this association.") : Amended ToSubclass] Win32_Directory Ref GroupComponent;
  [Key : ToInstance ToSubclass DisableOverride,Description("The PartComponent reference represents the Win32_Directory that contains the subdirectory (subfolder) part of the association.") : Amended ToSubclass] Win32_Directory Ref PartComponent;
};

[Description("The Win32_SystemBIOS class represents an association between a computer system (including data such as startup properties, time zones, boot configurations, or administrative passwords) and a system BIOS (services, languages, system management properties).") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_SystemBIOS : CIM_SystemComponent
{
  [key : ToInstance ToSubclass DisableOverride,Description("The GroupComponent reference represents the Win32_ComputerSystem containing the BIOS of the association.") : Amended ToSubclass] Win32_ComputerSystem Ref GroupComponent;
  [key : ToInstance ToSubclass DisableOverride,Description("The PartComponent reference represents Win32_BIOS contained in the computer system of this association.") : Amended ToSubclass] Win32_BIOS Ref PartComponent;
};

[Description("The Win32_SystemOperatingSystem class represents an association between a computer system and its operating system.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_SystemOperatingSystem : CIM_InstalledOS
{
  [key : ToInstance ToSubclass DisableOverride,Description("The GroupComponent reference represents the properties of the computer system upon which the operating system is installed.") : Amended ToSubclass] Win32_ComputerSystem Ref GroupComponent;
  [key : ToInstance ToSubclass DisableOverride,Description("The PartComponent reference represents the properties of the operating system running on this computer system.") : Amended ToSubclass] Win32_OperatingSystem Ref PartComponent;
};

[Description("The Win32_SystemSystemDriver class represents an association between a computer system and a system driver running on that computer system.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_SystemSystemDriver : CIM_SystemComponent
{
  [key : ToInstance ToSubclass DisableOverride,Description("The GroupComponent reference represents the properties of the computer system upon which the driver is running.") : Amended ToSubclass] Win32_ComputerSystem Ref GroupComponent;
  [key : ToInstance ToSubclass DisableOverride,Description("The PartComponent reference represents the system driver running on the computer system.") : Amended ToSubclass] Win32_SystemDriver Ref PartComponent;
};

[Description("The Win32_SystemUsers class represents an association between a computer system and a user account on that system.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_SystemUsers : CIM_SystemComponent
{
  [key : ToInstance ToSubclass DisableOverride,Description("The GroupComponent reference represents the computer system containing the user account.") : Amended ToSubclass] Win32_ComputerSystem Ref GroupComponent;
  [key : ToInstance ToSubclass DisableOverride,Description("The PartComponent reference represents the user account on the computer system.") : Amended ToSubclass] Win32_UserAccount Ref PartComponent;
};

[Description("The Win32_SystemProcesses class represents an association between a computer system and a process running on that system.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_SystemProcesses : CIM_SystemComponent
{
  [key : ToInstance ToSubclass DisableOverride,Description("The GroupComponent reference represents the computer system upon which the process is running.") : Amended ToSubclass] Win32_ComputerSystem Ref GroupComponent;
  [key : ToInstance ToSubclass DisableOverride,Description("The PartComponent reference represents the process running on the computer system.") : Amended ToSubclass] Win32_Process Ref PartComponent;
};

[Description("The Win32_SystemPartitions class represents an association between a computer system and a disk partition on that system.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_SystemPartitions : Win32_SystemDevices
{
  [Description("The GroupComponent reference represents the Win32_ComputerSystem containing the properties of the computer system where the disk partition is located.") : Amended ToSubclass] Win32_ComputerSystem Ref GroupComponent;
  [Description("The PartComponent reference represents the Win32_DiskPartition containing the properties of a disk partition that exists on the computer system.") : Amended ToSubclass] Win32_DiskPartition Ref PartComponent;
};

[Description("The Win32_SystemServices class represents an association between a computer system and a service program that exists on the system.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_SystemServices : CIM_SystemComponent
{
  [key : ToInstance ToSubclass DisableOverride,Description("The GroupComponent reference represents the Win32_ComputerSystem containing the properties of the computer system on which the service exists.") : Amended ToSubclass] Win32_ComputerSystem Ref GroupComponent;
  [key : ToInstance ToSubclass DisableOverride,Description("The PartComponent reference represents theWin32_Service containing the service that exists on the computer system.") : Amended ToSubclass] Win32_Service Ref PartComponent;
};

[Description("The Win32_SystemNetworkConnections class represents an association between a network connection and the computer system on which it resides.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_SystemNetworkConnections : CIM_SystemComponent
{
  [key : ToInstance ToSubclass DisableOverride,Description("The GroupComponent reference represents the computer system connected to the network.") : Amended ToSubclass] Win32_ComputerSystem Ref GroupComponent;
  [key : ToInstance ToSubclass DisableOverride,Description("The PartComponent reference represents the network connection (to this computer system).") : Amended ToSubclass] Win32_NetworkConnection Ref PartComponent;
};

[Description("The Win32_SystemResources class represents an association between a system resource and the computer system it resides on.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_SystemResources : CIM_ComputerSystemResource
{
  [key : ToInstance ToSubclass DisableOverride,Description("The GroupComponent reference represents the computer system where the resource is located.") : Amended ToSubclass] Win32_ComputerSystem Ref GroupComponent;
  [key : ToInstance ToSubclass DisableOverride,Description("The PartComponent reference represents the the resource (such as I/O services, memory resources) available on the computer system.") : Amended ToSubclass] CIM_SystemResource Ref PartComponent;
};

[Description("The Win32_SystemSetting class represents an association between a computer system and a general setting on that system.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_SystemSetting : CIM_ElementSetting
{
  [key : ToInstance ToSubclass DisableOverride,Description("The Element reference represents the properties of a computer system where this setting can be applied.") : Amended ToSubclass] Win32_ComputerSystem Ref Element;
  [key : ToInstance ToSubclass DisableOverride,Description("The Setting reference represents the properties of the setting that can be applied to the computer system.") : Amended ToSubclass] CIM_Setting Ref Setting;
};

[Description("The Win32_SystemDesktop class represents an association between a computer system and its desktop configuration.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_SystemDesktop : Win32_SystemSetting
{
  [Description("The Element reference represents the computer system where the desktop configuration exists.") : Amended ToSubclass] Win32_ComputerSystem Ref Element;
  [Description("The Setting reference represents a desktop configuration existing on the computer system.") : Amended ToSubclass] Win32_Desktop Ref Setting;
};

[Description("The Win32_SystemBootConfiguration class represents an association between a computer system and its boot configuration.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_SystemBootConfiguration : Win32_SystemSetting
{
  [Description("The Element reference represents the computer system using the boot configuration.") : Amended ToSubclass] Win32_ComputerSystem Ref Element;
  [Description("The Setting reference represents a boot configuration for the computer system.") : Amended ToSubclass] Win32_BootConfiguration Ref Setting;
};

[Description("The Win32_SystemEnclosure class represents the properties associated with a physical system enclosure.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_SystemEnclosure : CIM_Chassis
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The Tag property is a string that uniquely identifies the system enclosure.\nExample: System Enclosure 1") : Amended ToSubclass] string Tag;
  [Description("The SMBIOSAssetTag property indicates the asset tag number of the system enclosure.") : Amended ToSubclass] string SMBIOSAssetTag;
  [Description("The SecurityStatus property indicates the security setting for external input (such as a keyboard) to this computer.") : Amended ToSubclass,Values{"Other", "Unknown", "None", "External interface locked out", "External interface enabled"} : Amended ToSubclass] uint16 SecurityStatus;
};

[Description("The Win32_SystemLoadOrderGroups class represents an association between a computer system and a load order group.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_SystemLoadOrderGroups : CIM_SystemComponent
{
  [key : ToInstance ToSubclass DisableOverride,Description("The GroupComponent reference represents the computer system where the load order group exists.") : Amended ToSubclass] Win32_ComputerSystem Ref GroupComponent;
  [key : ToInstance ToSubclass DisableOverride,Description("The PartComponent reference represents a load order group existing on the computer system.") : Amended ToSubclass] Win32_LoadOrderGroup Ref PartComponent;
};

[Description("The Win32_SystemTimeZone class represents an association between a computer system and a time zone.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_SystemTimeZone : Win32_SystemSetting
{
  [Description("The Element reference represents the computer system keeping track of the system time zone.") : Amended ToSubclass] Win32_ComputerSystem Ref Element;
  [Description("The Setting reference represents the time zone properties tracked by the computer system.") : Amended ToSubclass] Win32_TimeZone Ref Setting;
};

[Description("The Win32_SystemProgramGroups class represents an association between a computer system and a logical program group.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_SystemProgramGroups : Win32_SystemSetting
{
  [Description("The Element reference represents the computer system containing the logical program group.") : Amended ToSubclass] Win32_ComputerSystem Ref Element;
  [Description("The Setting reference represents a logical program group on the computer system.") : Amended ToSubclass] Win32_LogicalProgramGroup Ref Setting;
};

[Description("The Win32_SystemSlot class represents physical connection points including ports, motherboard slots and peripherals, and proprietary connections points.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_SystemSlot : CIM_Slot
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The Tag property uniquely identifies the system slot represented by an instance of this class.\nExample: System Slot 1") : Amended ToSubclass] string Tag;
  [Description("The SlotDesignation property contains an SMBIOS string that identifies the system slot designation of the slot on the motherboard.\nExample: PCI-1") : Amended ToSubclass] string SlotDesignation;
  [Description("The ConnectorType property indicates the physical attributes of the connector used by this slot.\nExample: 2 25 (Male RS-232)") : Amended ToSubclass,Values{"Unknown", "Other", "Male", "Female", "Shielded", "Unshielded", "SCSI (A) High-Density (50 pins)", "SCSI (A) Low-Density (50 pins)", "SCSI (P) High-Density (68 pins)", "SCSI SCA-I (80 pins)", "SCSI SCA-II (80 pins)", "SCSI Fibre Channel (DB-9, Copper)", "SCSI Fibre Channel (Fibre)", "SCSI Fibre Channel SCA-II (40 pins)", "SCSI Fibre Channel SCA-II (20 pins)", "SCSI Fibre Channel BNC", "ATA 3-1/2 Inch (40 pins)", "ATA 2-1/2 Inch (44 pins)", "ATA-2", "ATA-3", "ATA/66", "DB-9", "DB-15", "DB-25", "DB-36", "RS-232C", "RS-422", "RS-423", "RS-485", "RS-449", "V.35", "X.21", "IEEE-488", "AUI", "UTP Category 3", "UTP Category 4", "UTP Category 5", "BNC", "RJ11", "RJ45", "Fiber MIC", "Apple AUI", "Apple GeoPort", "PCI", "ISA", "EISA", "VESA", "PCMCIA", "PCMCIA Type I", "PCMCIA Type II", "PCMCIA Type III", "ZV Port", "CardBus", "USB", "IEEE 1394", "HIPPI", "HSSDC (6 pins)", "GBIC", "DIN", "Mini-DIN", "Micro-DIN", "PS/2", "Infrared", "HP-HIL", "Access.bus", "NuBus", "Centronics", "Mini-Centronics", "Mini-Centronics Type-14", "Mini-Centronics Type-20", "Mini-Centronics Type-26", "Bus Mouse", "ADB", "AGP", "VME Bus", "VME64", "Proprietary", "Proprietary Processor Card Slot", "Proprietary Memory Card Slot", "Proprietary I/O Riser Slot", "PCI-66MHZ", "AGP2X", "AGP4X", "PC-98", "PC-98-Hireso", "PC-H98", "PC-98Note", "PC-98Full", "PCI-X", "Sbus IEEE 1396-1993 32 bit", "Sbus IEEE 1396-1993 64 bit", "MCA", "GIO", "XIO", "HIO", "NGIO", "PMC", "Future I/O", "InfiniBand", "AGP8X", "PCI-E"} : Amended ToSubclass] uint16 ConnectorType[];
  [Description("The CurrentUsage property indicates the current usage of the system slot.  \nValues are:  \"Reserved\" (0), \"Other\" (1), \"Unknown\" (2), \"Available\" (3), \"In Use\" (4)") : Amended ToSubclass,Values{"Reserved", "Other", "Unknown", "Available", "In use"} : Amended ToSubclass] uint16 CurrentUsage;
  [Description("The PMESignal property indicates whether the PCI bus Power Management Enabled signal is supported by this slot. PMESignal will be FALSE for non-PCI slots. If TRUE, then the Power Management Enabled signal is supported.") : Amended ToSubclass] boolean PMESignal;
  [Description("The Shared property indicates whether the two or more slots shared a location on the base board such as a PCI/EISA shared slot.\nValues: TRUE or FALSE. If TRUE, the slot is shared.") : Amended ToSubclass] boolean Shared;
  [Description("The MaxDataWidth property returns the maximum bus width of adapter cards that can be inserted into this slot, in bits. The value of the property is to be interpreted as follows:\n0 for 8 \n1 for 16 \n2 for 32 \n3 for 64 \n4 for 128 ") : Amended ToSubclass,Units("bits") : Amended ToSubclass,Values{"8", "16", "32", "64", "128"} : Amended ToSubclass] uint16 MaxDataWidth;
};

[Description("The Win32_Thread class represents a thread of execution.While a process must have one thread of execution, the process can create other threads to execute tasks in parallel.  Threads share the process environment, thus multiple threads under the same process use less memory than the same number of processes.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_Thread : CIM_Thread
{
  [Description("The ProcessHandle property indicates the process that created the thread. The contents of this property can be used by Win32 API elements.") : Amended ToSubclass] string ProcessHandle;
  [Description("The Handle property represents a handle to a thread. The handle has full access rights by default. With the correct security access, the handle can be used in any function that accepts a thread handle. Depending on the inheritance flag specified when it is created, this handle can be inherited by child processes.") : Amended ToSubclass] string Handle;
  [Units("milliseconds") : Amended ToSubclass,Description("The ElapsedTime property indicates the total execution time given to this thread since its creation.") : Amended ToSubclass] uint64 ElapsedTime;
  [Description("The PriorityBase property indicates the current base priority of a thread. The operating system may raise the thread's dynamic priority above the base priority if the thread is handling user input, or lower it toward the base priority if the thread becomes compute-bound. The PriorityBase propertycan have a value between 0 and 31") : Amended ToSubclass] uint32 PriorityBase;
  [Description("The Priority property indicates the dynamic priority of the thread. Each thread has a dynamic priority that the scheduler uses to determine which thread to execute. Initially, a thread's dynamic priority is the same as its base priority. The system can raise and lower the dynamic priority, to ensure that it is responsive (guaranteeing that no threads are starved for processor time). The system does not boost the priority of threads with a base priority level between 16 and 31. Only threads with a base priority between 0 and 15 receive dynamic priority boosts. Higher numbers indicate higher priorities.") : Amended ToSubclass] uint32 Priority;
  [Description("The StartAddress property indicates the starting address of the thread. Because any application with appropriate access to the thread can change the thread's context, this value may only be an approximation of the thread's starting address.") : Amended ToSubclass] uint32 StartAddress;
  [Description("The ThreadState property indicates the current execution state for the thread. A thread can have one of eight values: Initialized (recognized by the microkernel), Ready (prepared to run on next available processor), Running (executing), Standby (about to run, only one thread may be in this state at a time), Terminated (finished executing), Waiting (not ready for the processor, when ready, it will be rescheduled), Transition (thread is waiting for resources other than the processor), and Unknown (the thread state is unknown).") : Amended ToSubclass,Values{"Initialized", "Ready", "Running", "Standby", "Terminated", "Waiting", "Transition", "Unknown"} : Amended ToSubclass] uint32 ThreadState;
  [Description("The ThreadWaitReason property indicates why the thread is waiting. The value is only valid if the ThreadState member is set to Waiting. Values of 0 or 7 denote that the thread is waiting for the Executive, 1 or 8 for a Free Page, 2 or 9 for a Page In, 3 or 10 for a Pool Allocation, 4 or 11 for an Execution Delay, 5 or 12 for a Suspended condition, 6 or 13 for a User Request, 14 for an Event Pair High, 15 for an Event Pair Low, 16 for an Local Procedure Call (LPC) Receive, 17 for an LPC Reply, 18 for Virtual Memory, 19 for a Page Out. 20 and higher are not assigned. Event Pairs allow communication with protected subsystems (see Context Switches).") : Amended ToSubclass,Values{"Executive", "FreePage", "PageIn", "PoolAllocation", "ExecutionDelay", "FreePage", "PageIn", "Executive", "FreePage", "PageIn", "PoolAllocation", "ExecutionDelay", "FreePage", "PageIn", "EventPairHigh", "EventPairLow", "LPCReceive", "LPCReply", "VirtualMemory", "PageOut", "Unknown"} : Amended ToSubclass] uint32 ThreadWaitReason;
  [Description("The KernelModeTime property indicates the raw counter data from the performance counter type \nPERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_RATE | PERF_TIMER_100NS | PERF_DELTA_COUNTER | PERF_DISPLAY_PERCENT\nThe counter data is in 100 nanosecond units.") : Amended ToSubclass,Units("100 nanoseconds") : Amended ToSubclass] uint64 KernelModeTime;
  [Description("The UserModeTime property indicates the raw counter data from the performance counter type \nPERF_SIZE_LARGE | PERF_TYPE_COUNTER | PERF_COUNTER_RATE | PERF_TIMER_100NS | PERF_DELTA_COUNTER | PERF_DISPLAY_PERCENT\nThe counter data is in 100 nanosecond units.") : Amended ToSubclass,Units("100 nanoseconds") : Amended ToSubclass] uint64 UserModeTime;
};

[Description("The Win32_TimeZone class represents the time zone information for a Win32 system. This includes changes needed for the transition to and from daylight savings time.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_TimeZone : CIM_Setting
{
  [Units("minutes") : Amended ToSubclass,Description("The Bias property specifies the current bias for local time translation. The bias is the difference between Coordinated Universal Time (UTC) and local time. All translations between UTC and local time are based on the following formula: UTC = local time + bias. This member is required.") : Amended ToSubclass] sint32 Bias;
  [Units("minutes") : Amended ToSubclass,Description("The DaylightBias property specifies a bias value to be used during local time translations that occur during daylight time. This member is ignored if a value for the DaylightDay member is not supplied. The value of this member is added to the Bias member to form the bias used during daylight time. In most time zones, the value of this member is -60.") : Amended ToSubclass] sint32 DaylightBias;
  [Description("The DaylightDay property specifies the DaylightDayOfWeek ofthe DaylightMonth when the transition from standard time to daylight savingstime occurs on this operating system. \n\nExample: 15 \nIf  the transition day DaylightDayOfWeek occurs on a Sunday, then the value 1 denotes the first Sunday of the DaylightMonth, 2 denotesthe second Sunday, and so forth, and 5 denotes the last Sunday of theDaylightMonth. ") : Amended ToSubclass] uint32 DaylightDay;
  [Description("The DaylightDayOfWeek property specifies the day of the week when the transition from standard time to daylight savings time occurs on this operating system.\nExample: 1") : Amended ToSubclass,Values{"Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"} : Amended ToSubclass] uint8 DaylightDayOfWeek;
  [Description("The DaylightHour property specifies the hour of the day when the transition from standard time to daylight savings time occurs on this operating system.\nExample: 2") : Amended ToSubclass] uint32 DaylightHour;
  [Description("The DaylightMillisecond property specifies the millisecond of the DaylightSecond when the transition from standard time to daylight savings time occurs on this operating system.") : Amended ToSubclass] uint32 DaylightMillisecond;
  [Description("The DaylightMinute property specifies the minute of the DaylightHour when the transition from standard time to daylight savings time occurs on this operating system.\nExample: 59") : Amended ToSubclass] uint32 DaylightMinute;
  [Description("The DaylightMonth property specifies the month when the transition from standard time to daylight savings time occurs on this operating system.\nExample: 1 = January") : Amended ToSubclass,Values{"January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"} : Amended ToSubclass] uint32 DaylightMonth;
  [Description("The DaylightName property indicates the name of the time zone being represented when daylight savings time is in effect.\nExample: EDT = Eastern Daylight Time. ") : Amended ToSubclass] string DaylightName;
  [Description("The DaylightSecond property specifies the second of of the DaylightMinute when the transition from standard time to daylight savings time occurs on this operating system.\nExample: 59") : Amended ToSubclass] uint32 DaylightSecond;
  [Description("The DaylightYear property indicates the year when daylight saving time is in effect. This member is not required.\nExample: 1997") : Amended ToSubclass] uint32 DaylightYear;
  [Units("minutes") : Amended ToSubclass,Description("The StandardBias property specifies a bias value to be used when daylight savings time is not in effect. This member is ignored if a value for the StandardDay member is not supplied. The value of this member is added to the Bias member to form the bias during standard time.\nExample: 0") : Amended ToSubclass] uint32 StandardBias;
  [Description("The StandardDay property specifies the StandardDayOfWeekof the StandardMonth when the transition from daylight saving time to standardtime occurs on this operating system.\n\nExample: 31 \nIf  the transition day StandardDayOfWeek  occurs on a Sunday, then thevalue 1 denotes the first Sunday of the StandardMonth, 2 denotes the secondSunday, and so forth, and 5 denotes the last Sunday of the StandardMonth.") : Amended ToSubclass] uint32 StandardDay;
  [Description("The StandardDayOfWeek property specifies the day of the week when the transition from daylight savings time to standard time occurs on this operating system.\nExample: 1") : Amended ToSubclass,Values{"Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"} : Amended ToSubclass] uint8 StandardDayOfWeek;
  [Description("The StandardHour property specifies the hour of the day when the transition from daylight savings time to standard time occurs on this operating system.\nExample: 11") : Amended ToSubclass] uint32 StandardHour;
  [Description("The StandardMillisecond property specifies the millisecond of the StandardSecond when the transition from daylight savings time to standard time occurs on this operating system.") : Amended ToSubclass] uint32 StandardMillisecond;
  [Description("The StandardMinute property specifies the minute of the StandardDay when the transition from daylight savings time to standard time occurs on this operating system.\nExample: 59") : Amended ToSubclass] uint32 StandardMinute;
  [Description("The StandardMonth property specifies the month when the transition from daylight savings time to standard time occurs on this operating system.\nExample: 12") : Amended ToSubclass,Values{"January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"} : Amended ToSubclass] uint32 StandardMonth;
  [key : ToInstance ToSubclass DisableOverride,Description("The StandardName property indicates the name of the time zone being represented when standard time is in effect.\nExample: EST = Eastern Standard Time. ") : Amended ToSubclass] string StandardName;
  [Description("The StandardSecond property specifies the second of the StandardMinute when the transition from daylight savings time to standard time occurs on this operating system.\nExample: 59") : Amended ToSubclass] uint32 StandardSecond;
  [Description("The StandardYear property indicates the year when standard time is in effect. This member is not required.\nExample: 1997") : Amended ToSubclass] uint32 StandardYear;
};

[Description("The Win32_UserDesktop class represents an association between a user account and desktop settings that are specific to it.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_UserDesktop : CIM_ElementSetting
{
  [key : ToInstance ToSubclass DisableOverride,Description("The Element reference represents the user account whose desktop can be customized by the Settings property of this class.") : Amended ToSubclass] Win32_UserAccount Ref Element;
  [key : ToInstance ToSubclass DisableOverride,Description("The Setting reference represents the desktop settings that serve to customize a specific user account desktop.") : Amended ToSubclass] Win32_Desktop Ref Setting;
};

[Description("The Win32_QuickFixEngineering class represents system-wide Quick Fix Engineering (QFE) or updates that have been applied to the current operating system.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_QuickFixEngineering : CIM_LogicalElement
{
  [key : ToInstance ToSubclass DisableOverride,Description("The HotFixID property specifies the unique identifier associated with a particular QFE.") : Amended ToSubclass] string HotFixID;
  [key : ToInstance ToSubclass DisableOverride,Description("The ServicePackInEffect property specifies what servicepack was in effect when the update was applied. If no service pack has been applied, the property takes on the value SP0. If it can not be determined what service pack was in effect, this property will be NULL.") : Amended ToSubclass] string ServicePackInEffect;
  [Description("The CSName property contains the local name of the computer system. The value for this member comes from the CIM_ComputerSystem class.") : Amended ToSubclass] string CSName;
  [Description("The FixComments property contains additional comments relating to the update.") : Amended ToSubclass] string FixComments;
  [Description("The InstalledBy property identifies who installed the update. If this value is unknown, the property will be empty.") : Amended ToSubclass] string InstalledBy;
  [Description("The InstalledOn property provides the date and time when the update was installed. If this value is unknown, the property will be empty.") : Amended ToSubclass] string InstalledOn;
};

[Description("This class represents status of the Optional Features present on the operating system") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_OptionalFeature : CIM_LogicalElement
{
  [key : ToInstance ToSubclass DisableOverride,Description("This property represents the name of the optional feature") : Amended ToSubclass] string Name;
  [Description("Caption property is a optional feature display name") : Amended ToSubclass] string Caption;
  [Description("This identifies the state of the optional feature. It shows if the Optional feature is enabled, disabled, absent or unknown") : Amended ToSubclass,Values{"Enabled", "Disabled", "Absent", "Unknown"} : Amended ToSubclass] uint32 InstallState;
};

[Description("The Win32_LogicalProgramGroupDirectory class represents an association between logical program groups (groupings in the start menu) and the file directories in which they are stored.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_LogicalProgramGroupDirectory : CIM_Dependency
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The Antecedent reference represents the Win32_LogicalProgramGroup associated with the file directory.") : Amended ToSubclass] Win32_LogicalProgramGroup Ref Antecedent;
  [Key : ToInstance ToSubclass DisableOverride,Description("The Dependent reference represents the Win32_Directory that contains the file directory for thelogical program group.") : Amended ToSubclass] Win32_Directory Ref Dependent;
};

[Description("The Win32_LogicalProgramGroupItemDataFile class represents an association between the program group items of the start menu and the files in which they are stored.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_LogicalProgramGroupItemDataFile : CIM_Dependency
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The Antecedent reference represents the Win32_LogicalProgramGroupItem that represents program groupings in the start menu.") : Amended ToSubclass] Win32_LogicalProgramGroupItem Ref Antecedent;
  [Key : ToInstance ToSubclass DisableOverride,Description("The Dependent reference represents the CIM_DataFile class associated with the program group.") : Amended ToSubclass] CIM_DataFile Ref Dependent;
};

[Description("The Win32_ProgramGroupContents class represents an association between a program group order and an individual program group or item contained in it.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_ProgramGroupContents : CIM_Component
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The PartComponent reference represents the Win32_ProgramGroupOrItem containing a start menu group or item for this association") : Amended ToSubclass] Win32_ProgramGroupOrItem Ref PartComponent;
  [Key : ToInstance ToSubclass DisableOverride,Description("The GroupComponent reference represents the Win32_LogicalProgramGroup that contains the logical program group for this association.") : Amended ToSubclass] Win32_LogicalProgramGroup Ref GroupComponent;
};

[Description("The Win32_FloppyDrive class manages the capabilities of a floppy disk drive.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_FloppyDrive : CIM_DisketteDrive
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The DeviceID property contains a string uniquely identifying the floppy disk drive from other devices on the system.") : Amended ToSubclass] string DeviceID;
  [Description("The Manufacturer property indicates the name of the floppy disk drive manufacturer.\nExample: Acme") : Amended ToSubclass] string Manufacturer;
};

[Description("The Win32_TapeDrive class represents a tape drive on a Win32 computer.  Tape drives are primarily distinguished by the fact that they can be accessed only sequentially.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_TapeDrive : CIM_TapeDrive
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The DeviceID property contains a string uniquely identifying the tape drive with other devices on the system.") : Amended ToSubclass] string DeviceID;
  [Description("The Compression property specifies whether hardware data compression is enabled or disabled.\nValues: 1 (true) or 0 (false). If true, hardware data compression is enabled.") : Amended ToSubclass] uint32 Compression;
  [Description("The ECC property specifies whether the device supports hardware error correction.\nValues: 1 (true) or 0 (false). If true, hardware error correction is supported.") : Amended ToSubclass,Values{"False", "True"} : Amended ToSubclass] uint32 ECC;
  [Description("The FeaturesHigh property specifies the high-order 32 bits of the device features flag.") : Amended ToSubclass] uint32 FeaturesHigh;
  [Description("The FeaturesLow property specifies the low-order 32 bits of the device features flag.") : Amended ToSubclass] uint32 FeaturesLow;
  [Description("The MediaType property specifies the media type used by (or accessed by) this device. In this case, it is set to \"Tape Drive\".") : Amended ToSubclass] string MediaType;
  [Description("The ReportSetMarks property specifies whether setmark reporting is enabled. Setmark reporting makes use of a specialized recorded element that does not contain user data. This recorded element is used to provide a segmentation scheme. This segmentation scheme is hierarchically superior to filemarks. Setmarks provide faster positioning on high-capacity tapes.\nValues: 1 (true) or 0 (false). If true, setmark reporting is enabled.") : Amended ToSubclass] uint32 ReportSetMarks;
  [Description("The Id property indicates the manufacturer's identifying name of the Win32 CD ROM drive.\nExample: PLEXTOR CD-ROM PX-12CS 1.01") : Amended ToSubclass] string Id;
  [Description("The Manufacturer property indicates the manufacturer of the Win32 CD-ROM drive.\nExample: PLEXTOR") : Amended ToSubclass] string Manufacturer;
};

[Description("The Win32_DiskDrive class represents a physical disk drive as seen by a computer running the Win32 operating system. Any interface to a Win32 physical disk drive is a descendent (or member) of this class. The features of the disk drive seen through this object correspond to the logical and management characteristics of the drive. In some cases, this may not reflect the actual physical characteristics of the device. Any object based on another logical device would not be a member of this class.\nExample: IDE Fixed Disk.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_DiskDrive : CIM_DiskDrive
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The DeviceID property contains a string uniquely identifying the disk drive with other devices on the system.") : Amended ToSubclass] string DeviceID;
  [units("bytes") : Amended ToSubclass,Description("The BytesPerSector property indicates the number of bytes in each sector for the physical disk drive.\nExample: 512") : Amended ToSubclass] uint32 BytesPerSector;
  [Description("The InterfaceType property indicates the interface type of physical disk drive.\nExample: SCSI") : Amended ToSubclass] string InterfaceType;
  [Description("The Partitions property indicates the number of partitions on this physical disk drive that are recognized by the operating system.\nExample: 2") : Amended ToSubclass] uint32 Partitions;
  [Description("The SectorsPerTrack property indicates the number of sectors in each track for this physical disk drive.\nExample: 63") : Amended ToSubclass] uint32 SectorsPerTrack;
  [Description("The TotalCylinders property indicates the total number of cylinders on the physical disk drive. Note: the value for this property is obtained through extended functions of BIOS interrupt 13h. The value may be inaccurate if the drive uses a translation scheme to support high capacity disk sizes. Consult the manufacturer for accurate drive specifications.\nExample: 657") : Amended ToSubclass] uint64 TotalCylinders;
  [Description("The TotalHeads property indicates the total number of heads on the disk drive. Note: the value for this property is obtained through extended functions of BIOS interrupt 13h. The value may be inaccurate if the drive uses a translation scheme to support high capacity disk sizes. Consult the manufacturer for accurate drive specifications.") : Amended ToSubclass] uint32 TotalHeads;
  [Description("The TotalSectors property indicates the total number of sectors on the physical disk drive.  Note: the value for this property is obtained through extended functions of BIOS interrupt 13h. The value may be inaccurate if the drive uses a translation scheme to support high capacity disk sizes. Consult the manufacturer for accurate drive specifications.\nExample: 2649024") : Amended ToSubclass] uint64 TotalSectors;
  [Description("The TotalTracks property indicates the total number of tracks on the physical disk drive. Note: the value for this property is obtained through extended functions of BIOS interrupt 13h. The value may be inaccurate if the drive uses a translation scheme to support high capacity disk sizes. Consult the manufacturer for accurate drive specifications.\nExample: 42048") : Amended ToSubclass] uint64 TotalTracks;
  [Description("The TracksPerCylinder property indicates the number of tracks in each cylinder on the physical disk drive. Note: the value for this property is obtained through extended functions of BIOS interrupt 13h. The value may be inaccurate if the drive uses a translation scheme to support high capacity disk sizes. Consult the manufacturer for accurate drive specifications.\nExample: 64") : Amended ToSubclass] uint32 TracksPerCylinder;
  [Description("The Index property indicates the physical drive number of the given drive. This member is filled by Get Drive Map Info.  A value of 0xFF indicates that the given drive does not map to a physical drive.\nExample: 1") : Amended ToSubclass] uint32 Index;
  [Description("The Manufacturer property indicates the name of the disk drive manufacturer.\nExample: Seagate") : Amended ToSubclass] string Manufacturer;
  [Description("The MediaLoaded property determines whether the media for a disk drive is loaded.  For fixed disk drives, this property will always be TRUE \nValues: TRUE or FALSE. If TRUE, the media is loaded.") : Amended ToSubclass] boolean MediaLoaded;
  [Description("The MediaType property is the type of media used or accessed by this device.\nExample: Removable media") : Amended ToSubclass,Values{"Removable media", "Fixed hard disk", "Unknown"} : Amended ToSubclass] string MediaType;
  [Description("The Model property indicates the manufacturer's model number of the disk drive.\nExample: ST32171W") : Amended ToSubclass] string Model;
  [Description("The SCSIBus property indicates the SCSI bus number of the disk drive.\nExample: 0") : Amended ToSubclass] uint32 SCSIBus;
  [Description("The SCSILogicalUnit property indicates the SCSI logical unit number (LUN) of the disk drive.\nExample: 0") : Amended ToSubclass] uint16 SCSILogicalUnit;
  [Description("The SCSIPort property indicates the SCSI port number of the disk drive.\nExample: 0") : Amended ToSubclass] uint16 SCSIPort;
  [Description("The SCSITargetId property indicates the SCSI ID number of the disk drive.\nExample: 0") : Amended ToSubclass] uint16 SCSITargetId;
  [units("bytes") : Amended ToSubclass,Description("The Size property indicates the size of the disk drive. It is calculated by multiplying the total number of cylinders, tracks in each cylinder, sectors in each track, and bytes in each sector.") : Amended ToSubclass] uint64 Size;
  [Description("The Signature property is used to identify a disk. It can be used to identify a shared resource. ") : Amended ToSubclass] uint32 Signature;
  [Description("The Serial number property is a manufacturer-allocated number used to identify the physicalmedia.  \nExample: WD-WM3493798728 for a disk serial number.") : Amended ToSubclass] string SerialNumber;
  [Description("The Firmware Revision property is a manufacturer-allocated number used to identify the physicalmedia.") : Amended ToSubclass] string FirmwareRevision;
};

[Description("The Win32_CDROMDrive class represents a CD-ROM drive on a Win32_ComputerSystem. \n\nNote: The name of the drive does not correspond to the logical drive letter assigned to device.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_CDROMDrive : CIM_CDROMDrive
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The DeviceID property contains a string to uniquely identify this CD-ROM drive.") : Amended ToSubclass] string DeviceID;
  [Description("The Drive property indicates the drive letter of the CD ROM drive.\nExample: d:\\") : Amended ToSubclass] string Drive;
  [Description("The FileSystemFlags property is deprecated in favor of FileSystemFlagsEx") : Amended ToSubclass] uint16 FileSystemFlags;
  [Description("The FileSystemFlagsEx property indicates the file system flags associated with the Win32 CD-ROM drive. This parameter can be any combination of flags. FS_FILE_COMPRESSION and FS_VOL_IS_COMPRESSED are mutually exclusive.\nExample: 0.") : Amended ToSubclass,BitValues{"Case Sensitive Search", "Case Preserved Names", "Unicode On Disk", "Persistent ACLs", "File Compression", "Volume Quotas", "Supports Sparse Files", "Supports Reparse Points", "Supports Remote Storage", "Supports Long Names", "Volume Is Compressed", "Supports Object IDs", "Supports Encryption", "Supports Named Streams"} : Amended ToSubclass] uint32 FileSystemFlagsEx;
  [Description("The Id property indicates the driver letter uniquely identifying this CD-ROM drive.\nExample: d:\\ ") : Amended ToSubclass] string Id;
  [Description("The Manufacturer property indicates the manufacturer of the Win32 CD-ROM drive.\nExample: PLEXTOR") : Amended ToSubclass] string Manufacturer;
  [Description("The MaximumComponentLength property indicates the maximum length of a filename component supported by the Win32 CD-ROM drive. A filename component the portion of a filename between backslashes. The value can be used to indicate that long names are supported by the specified file system. For example, for a FAT file system supporting long names, the function stores the value 255, rather than the previous 8.3 indicator. Long names can also be supported on systems that use the NTFS file system.\nExample: 255.") : Amended ToSubclass] uint32 MaximumComponentLength;
  [Description("The MediaType property indicates the type of media used or accessed by this device. In this class, the value will always be \"CD-ROM\".") : Amended ToSubclass,Values{"Random Access", "Supports Writing", "Removable Media", "CD-ROM"} : Amended ToSubclass] string MediaType;
  [Description("The RevisionLevel property indicates the firmware revision level of the Win32 CD-ROM drive.") : Amended ToSubclass] string RevisionLevel;
  [Description("The MfrAssignedRevisionLevel property indicates the manufacturer assigned firmware revision level of the CDROM drive.\n") : Amended ToSubclass] string MfrAssignedRevisionLevel;
  [Description("The SCSITargetId property indicates the SCSI ID number of the Win32 CD-ROM drive.\nExample: 0.") : Amended ToSubclass] uint16 SCSITargetId;
  [Description("The VolumeName property indicates the volume name of the Win32 CD-ROM drive.") : Amended ToSubclass] string VolumeName;
  [Description("The VolumeSerialNumber property indicates the volume serial number of the media in the CD-ROM drive.\nExample: A8C3-D032") : Amended ToSubclass] string VolumeSerialNumber;
  [Units("kilobytes per second") : Amended ToSubclass,Description("The TransferRate property indicates the CD-ROM drive's transfer rate. A value of -1 indicates that the rate could not be determined. This could potentially happen, for example, if the CD is not in the drive.") : Amended ToSubclass] Real64 TransferRate;
  [Description("The DriveIntegrity property indicates whether files can be accurately read from the CD device. This is achieved by reading a block of data twice and comparing the data against itself.") : Amended ToSubclass] boolean DriveIntegrity;
  [Description("The MediaLoaded property indicates whether a CD-ROM is in the drive.\nValues: TRUE or FALSE. If TRUE, the CD is in the drive.") : Amended ToSubclass] boolean MediaLoaded;
  [Description("The SCSIBus property indicates the SCSI bus number for the disk drive.\nExample: 0") : Amended ToSubclass] uint32 SCSIBus;
  [Description("The SCSILogicalUnit property indicates the SCSI logical unit number (LUN) of the disk drive.  The LUN is used to designate which SCSI controller is being accessed in a system with more than one controller being used. The SCSI device ID is similar, but is the designation for multiple devices on one controller.\nExample: 0") : Amended ToSubclass] uint16 SCSILogicalUnit;
  [Description("The SCSIPort property indicates the SCSI port number of the disk drive.\nExample: 1") : Amended ToSubclass] uint16 SCSIPort;
  [units("bytes") : Amended ToSubclass,Description("The Size property indicates the size of the disk drive.") : Amended ToSubclass] uint64 Size;
  [Description("The Serial number property is a manufacturer-allocated number used to identify the physicalmedia.  \nExample: WD-WM3493798728 for a disk serial number.") : Amended ToSubclass] string SerialNumber;
};

[Description("The Win32_FloppyController class represents the capabilities and management capacity of a floppy disk drive controller.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_FloppyController : CIM_Controller
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The DeviceID property contains a string uniquely identifying the floppy controller with other devices on the system.") : Amended ToSubclass] string DeviceID;
  [Description("The Manufacturer property indicates the name of the manufacturer (of the floppy controller). \nExample: Acme.") : Amended ToSubclass] string Manufacturer;
};

[Description("The Win32_LogicalDisk class represents a data source that resolves to an actual local storage device on a Win32 system.\nThe class returns both local as well as mapped logical disks. However, the recommended approach is to use this class for obtaining information on local disks and to use the Win32_MappedLogicalDisk class for information on mapped logical disk.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_LogicalDisk : CIM_LogicalDisk
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The DeviceID property contains a string uniquely identifying the logical disk from other devices on the system.") : Amended ToSubclass] string DeviceID;
  [Description("The Compressed property indicates whether the logical volume exists as a single compressed entity, such as a DoubleSpace volume.  If file based compression is supported (such as on NTFS), this property will be FALSE.") : Amended ToSubclass] boolean Compressed;
  [Description("The DriveType property contains a numeric value corresponding to the type of disk drive this logical disk represents.  Please refer to the Platform SDK documentation for additional values.\nExample: A CD-ROM drive would return 5.") : Amended ToSubclass,Values{"Unknown", "No Root Directory", "Removable Disk", "Local Disk", "Network Drive", "Compact Disc", "RAM Disk"} : Amended ToSubclass] uint32 DriveType;
  [Description("The FileSystem property indicates the file system on the logical disk.\nExample: NTFS") : Amended ToSubclass] string FileSystem;
  [Description("The MaximumComponentLength property contains the maximum length of a filename component supported by the Win32 drive. A filename component is that portion of a filename between backslashes.  The value can be used to indicate that long names are supported by the specified file system. For example, for a FAT file system supporting long names, the function stores the value 255, rather than the previous 8.3 indicator. Long names can also be supported on systems that use the NTFS file system.\nExample: 255") : Amended ToSubclass] uint32 MaximumComponentLength;
  [Description("The ProviderName property indicates the network path name to the logical device.") : Amended ToSubclass] string ProviderName;
  [Description("The SupportsFileBasedCompression property indicates whether the logical disk partition supports file based compression, such as is the case with NTFS. This property is FALSE, when the Compressed property is TRUE.\nValues: TRUE or FALSE. If TRUE, the logical disk supports file based compression.") : Amended ToSubclass] boolean SupportsFileBasedCompression;
  [Description("The VolumeName property indicates the volume name of the logical disk.\nConstraints: Maximum 32 characters") : Amended ToSubclass] string VolumeName;
  [Description("The VolumeSerialNumber property indicates the volume serial number of the logical disk.\nConstraints: Maximum 11 characters\nExample: A8C3-D032") : Amended ToSubclass] string VolumeSerialNumber;
  [Description("The MediaType property indicates the type of media currently present in the logical drive. This value will be one of the values of the MEDIA_TYPE enumeration defined in winioctl.h.\n<B>Note:</B> The value may not be exact for removable drives if currently there is no media in the drive.") : Amended ToSubclass,Values{"Format is unknown", "5-Inch Floppy Disk", "3-Inch Floppy Disk", "3-Inch Floppy Disk", "3-Inch Floppy Disk", "3-Inch Floppy Disk", "5-Inch Floppy Disk", "5-Inch Floppy Disk", "5-Inch Floppy Disk", "5-Inch Floppy Disk", "5-Inch Floppy Disk", "Removable media other than floppy", "Fixed hard disk media", "3-Inch Floppy Disk", "3-Inch Floppy Disk", "5-Inch Floppy Disk", "5-Inch Floppy Disk", "3-Inch Floppy Disk", "3-Inch Floppy Disk", "5-Inch Floppy Disk", "3-Inch Floppy Disk", "3-Inch Floppy Disk", "8-Inch Floppy Disk"} : Amended ToSubclass] uint32 MediaType;
  [Description("The SupportsDiskQuotas property indicates whether this volume supports disk Quotas") : Amended ToSubclass] boolean SupportsDiskQuotas;
  [Description("The QuotasDisabled property indicates that Quota management is not enabled on this volume.") : Amended ToSubclass] boolean QuotasDisabled;
  [Description("The QuotasIncomplete property indicates that Quota management was used but has been disabled.  Incomplete refers to the information left in the file system  after quota management has been disabled.") : Amended ToSubclass] boolean QuotasIncomplete;
  [Description("The QuotasRebuilding property indicates an active state signifying that the file system is in process of compiling information and setting the disk up for quota management.") : Amended ToSubclass] boolean QuotasRebuilding;
  [Description("This method invokes the chkdsk operation on the disk. The method is applicable to only those instances of logical disk that represent a physical disk in the machine. It is not applicable to mapped logical drives. The return value of the method will indicate one of the following - Success - Chkdsk completed, Success - Locked and chkdsk scheduled on reboot, Failure - Unknown file system, Failure - Unknown error, Failure - Unsupported File System.") : Amended ToSubclass,Values{"Success - Chkdsk completed", "Success - Locked and chkdsk scheduled on reboot", "Failure - Unknown file system", "Failure - Unknown error", "Failure - Unsupported File System"} : Amended ToSubclass] uint32 Chkdsk([Description("This parameter indicates what should be done to errors found on the disk. If true, then errors are fixed.") : Amended ToSubclass,in] boolean FixErrors,[Description("This parameter indicates whether a vigorous check of index entries should be performed.") : Amended ToSubclass,in] boolean VigorousIndexCheck,[Description("This parameter indicates whether the folder cycle checking should be skipped or not.") : Amended ToSubclass,in] boolean SkipFolderCycle,[Description("This parameter indicates whether the drive should be forced to dismount before checking.") : Amended ToSubclass,in] boolean ForceDismount,[Description("This parameter indicates whether the bad sectors should be located and the readable information should be recovered from these sectors.") : Amended ToSubclass,in] boolean RecoverBadSectors,[Description("This parameter indicates whether the chkdsk operation should be performed at next boot up time, in case the operation could not be performed because the disk was locked at time the method was called.") : Amended ToSubclass,in] boolean OkToRunAtBootUp);
  [Description("The VolumeDirty property indicates whether the disk requires chkdsk to be run at next boot up time. The property is applicable to only those instances of logical disk that represent a physical disk in the machine. It is not applicable to mapped logical drives. ") : Amended ToSubclass] boolean VolumeDirty;
  [Description("This method is used schedule chkdsk to be run at the next reboot if the dirty bit has been set.  The method is applicable to only those instances of logical disk that represent a physical disk in the machine. It is not applicable to mapped logical drives. ") : Amended ToSubclass,Values{"No Error", "Error - Remote Drive", "Error - Removable Drive", "Error - Drive Not Root Directory", "Error - Unknown Drive"} : Amended ToSubclass] uint32 ScheduleAutoChk([in,Description("This parameter is used to specify the list of drives that should be scheduled for autochk at next reboot. The string syntax consists of the the drive letter for the logical disk.") : Amended ToSubclass] string LogicalDisk[]);
  [Description("This method is used exclude disks from the chkdsk operation to be run at the next reboot. If not excluded, chkdsk is performed on the disk if the dirty bit has been set for the disk. Note that the calls to exclude disks are not cumulative. That is, if a call is made to excluded some disks, then the new list is not added to the list of ones that were already marked for exclusion, instead the new list of disks overwrites the previous one. The method is applicable to only those instances of logical disk that represent a physical disk in the machine and is not applicable to mapped logical drives. \nFor example, a valid specification of drives would be \"C:\", \"d:\",\"G:\"  Note that the colon is required with the drive letter.") : Amended ToSubclass,Values{"Success", "Error - Remote Drive", "Error - Removable Drive", "Error - Drive Not Root Directory", "Error - Unknown Drive"} : Amended ToSubclass] uint32 ExcludeFromAutochk([in,Description("This parameter is used to specify the list of drives that should be excluded from autochk at next reboot. The string syntax consists of the the drive letter followed by a colon for the logical disk.") : Amended ToSubclass] string LogicalDisk[]);
};

[Description("The Win32_DiskPartition class represents the capabilities and management capacity of a partitioned area of a physical disk on a Win32 system.\nExample: Disk #0, Partition #1.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_DiskPartition : CIM_DiskPartition
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The DeviceID property contains a string that uniquely identifies the disk drive and partition from the rest of the system") : Amended ToSubclass] string DeviceID;
  [Description("The BootPartition property determines whether the partition is the active partition. The operating system uses the active partition when booting from a hard disk.\nValues: TRUE or FALSE. If TRUE, the partition is active.") : Amended ToSubclass] boolean BootPartition;
  [Description("The DiskIndex property indicates the index number of the disk containing this partition.\nExample: 0.") : Amended ToSubclass] uint32 DiskIndex;
  [Description("The HiddenSectors property indicates the number of hidden sectors in the partition.\nExample: 63") : Amended ToSubclass] uint32 HiddenSectors;
  [Description("The Index property indicates the index number of the partition.\nExample: 1") : Amended ToSubclass] uint32 Index;
  [Description("The RewritePartition property specifies whether the partition information has changed. When you change a partition (with IOCTL_DISK_SET_DRIVE_LAYOUT), the system uses this property member to determine which partitions have changed and need their information rewritten.\nValues: TRUE or FALSE. If TRUE, the partition needs to be rewritten.") : Amended ToSubclass] boolean RewritePartition;
  [units("bytes") : Amended ToSubclass,Description("The Size property indicates the total size (in bytes) of the partition.\nExample: 1059045376") : Amended ToSubclass] uint64 Size;
  [units("bytes") : Amended ToSubclass,Description("The StartingOffset property indicates the starting offset (in bytes) of the partition.\nExample: 32256") : Amended ToSubclass] uint64 StartingOffset;
  [Description("The Type property indicates the type of the partition.") : Amended ToSubclass,Values{"Unused", "12-bit FAT", "Xenix Type 1", "Xenix Type 2", "16-bit FAT", "Extended Partition", "MS-DOS V4 Huge", "Installable File System", "PowerPC Reference Platform", "UNIX", "NTFS", "Win95 w/Extended Int 13", "Extended w/Extended Int 13", "Logical Disk Manager", "Unknown"} : Amended ToSubclass] string Type;
};

[Description("The Win32_DiskDriveToDiskPartition class represents an association between a disk drive and a partition existing on it.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_DiskDriveToDiskPartition : CIM_MediaPresent
{
  [key : ToInstance ToSubclass DisableOverride,Description("The Antecedent reference represents the Win32_DiskDrive containing the properties of the disk drive where the partition exists.") : Amended ToSubclass] Win32_DiskDrive Ref Antecedent;
  [key : ToInstance ToSubclass DisableOverride,Description("The Dependent reference represents the Win32_DiskPartition containing the properties of a disk partition residing on the disk drive.") : Amended ToSubclass] Win32_DiskPartition Ref Dependent;
};

[Description("The Win32_LogicalDiskToPartition class represents an association between a logical disk drive and the disk partition it resides on.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_LogicalDiskToPartition : CIM_LogicalDiskBasedOnPartition
{
  [key : ToInstance ToSubclass DisableOverride,Description("The Dependent reference represents the Win32_LogicalDisk containing the properties of a logical disk that resides on a physical disk partition.") : Amended ToSubclass] Win32_LogicalDisk Ref Dependent;
  [key : ToInstance ToSubclass DisableOverride,Description("The Antecedent reference represents the Win32_DiskPartition containing the properties of a disk partition where the logical disk resides.") : Amended ToSubclass] Win32_DiskPartition Ref Antecedent;
};

[Description("This class represents the settings for the autochk operation for a disk. The setting applies to all disks on the computer system. Note that the settings are applicable only to instances of logical disk that represent physical disks on the machine and not to mapped drives.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_AutochkSetting : CIM_Setting
{
  [Description(" The UserInputDelay property indicates the time to wait, in seconds, for the user to hit any key before it begins to autochk the disks.") : Amended ToSubclass,Units("seconds") : Amended ToSubclass] uint32 UserInputDelay;
};

[Description("This class represents the association between an operating system and the autochk settings that apply to the disks on the machine.Note that the setting is associated to operating system rather than computer system since there can be one or more operating systems installed on the machine, each with its own autochk settings.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_OperatingSystemAutochkSetting : CIM_ElementSetting
{
};

[Description("The Win32_MappedLogicalDisk class represents a network storage devices that are mapped as logical disks on the computer system. The instances returned for this class will be as follows.\nIf user A is enumerating the instances, then the provider will look for a logon session of user A on that machine. If there is one (and only one) such logon session, then the provider will return the mapped drives of that session. If there is more than one session that user A has on the machine, then no mapped drive instances will be returned (since the provider has no reasonable way of deciding which session to use). If there are no sessions of user A running, and there is a locally logged on user B, then the provider will impersonate A and return the mapped drives of user B. This case supports the scenario of helpdesk wanting to see the instances of a locally logged on user. Again, if there is more than one session of user B running on the machine, then the provider has no way of deciding which to use. In this case no mapped drive instances will be returned.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_MappedLogicalDisk : CIM_LogicalDisk
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The SessionId property indicates the id of the session used by the user connected to the computer system. The user may be connected to the system via a local logon or via a terminal session.") : Amended ToSubclass] string SessionID;
  [Description("The Compressed property indicates whether the logical volume exists as a single compressed entity, such as a DoubleSpace volume.  If file based compression is supported (such as on NTFS), this property will be FALSE.") : Amended ToSubclass] boolean Compressed;
  [Description("The FileSystem property indicates the file system on the logical disk.\nExample: NTFS") : Amended ToSubclass] string FileSystem;
  [Description("The MaximumComponentLength property contains the maximum length of a filename component supported by the Win32 drive. A filename component is that portion of a filename between backslashes.  The value can be used to indicate that long names are supported by the specified file system. For example, for a FAT file system supporting long names, the function stores the value 255, rather than the previous 8.3 indicator. Long names can also be supported on systems that use the NTFS file system.\nExample: 255") : Amended ToSubclass] uint32 MaximumComponentLength;
  [Description("The SupportsFileBasedCompression property indicates whether the logical disk partition supports file based compression, such as is the case with NTFS. This property is FALSE, when the Compressed property is TRUE.\nValues: TRUE or FALSE. If TRUE, the logical disk supports file based compression.") : Amended ToSubclass] boolean SupportsFileBasedCompression;
  [Description("The VolumeName property indicates the volume name of the logical disk.\nConstraints: Maximum 32 characters") : Amended ToSubclass] string VolumeName;
  [Description("The VolumeSerialNumber property indicates the volume serial number of the logical disk.\nConstraints: Maximum 11 characters\nExample: A8C3-D032") : Amended ToSubclass] string VolumeSerialNumber;
  [Description("The SupportsDiskQuotas property indicates whether this volume supports disk Quotas") : Amended ToSubclass] boolean SupportsDiskQuotas;
  [Description("The QuotasDisabled property indicates that Quota management is not enabled on this volume.") : Amended ToSubclass] boolean QuotasDisabled;
  [Description("The QuotasIncomplete property indicates that Quota management was used but has been disabled.  Incomplete refers to the information left in the file system  after quota management has been disabled.") : Amended ToSubclass] boolean QuotasIncomplete;
  [Description("The QuotasRebuilding property indicates an active state signifying that the file system is in process of compiling information and setting the disk up for quota management.") : Amended ToSubclass] boolean QuotasRebuilding;
  [Description("The ProviderName property indicates the network path name to the logical device.") : Amended ToSubclass] string ProviderName;
};

[Description("The Win32_LogonSessionMappedDisk class represents an association between a logon session and the mapped logical disks defined within the session.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_LogonSessionMappedDisk : CIM_Dependency
{
  [Description("The Antecedent property references a logon session.") : Amended ToSubclass,Key : ToInstance ToSubclass DisableOverride] Win32_LogonSession Ref Antecedent;
  [Description("The Dependent property references a mapped logical disk defined within the session referenced by the Antecedent property.") : Amended ToSubclass,Key : ToInstance ToSubclass DisableOverride] Win32_MappedLogicalDisk Ref Dependent;
};

[Description("The Win32_DesktopMonitor class represents the type of monitor or display device attached to the computer system.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_DesktopMonitor : CIM_DesktopMonitor
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The DeviceID property contains a string that uniquely identifies a desktop monitor.\nExample: DesktopMonitor1") : Amended ToSubclass] string DeviceID;
  [Description("The MonitorManufacturer property indicates the name of the monitor manufacturer. \nExample: NEC") : Amended ToSubclass] string MonitorManufacturer;
  [Description("The MonitorType property indicates the type of monitor. \nExample: NEC 5FGp") : Amended ToSubclass] string MonitorType;
  [Units("pixels per logical inch") : Amended ToSubclass,Description("The PixelsPerXLogicalInch property indicates the resolution along the X axis (horizontal direction) of the monitor.") : Amended ToSubclass] uint32 PixelsPerXLogicalInch;
  [Units("pixels per logical inch") : Amended ToSubclass,Description("The PixelsPerYLogicalInch property indicates the resolution along the Y axis (vertical direction) of the monitor.") : Amended ToSubclass] uint32 PixelsPerYLogicalInch;
};

[Description("The Win32_PointingDevice class represents an input device used to point to and select  regions on the display of a Win32 computer system. Any device used to manipulate a pointer, or point to the display on a Win32 computer system is a member of this class.\nExample: A mouse, touch pad, or stylus/tablet.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_PointingDevice : CIM_PointingDevice
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The DeviceID property contains a string uniquely identifying the pointing device with other devices on the system.") : Amended ToSubclass] string DeviceID;
  [Description("The HardwareType property indicates the type of hardware type used for the Win32 pointing device. \nExample: MICROSOFT PS2 MOUSE") : Amended ToSubclass] string HardwareType;
  [Description("The InfFileName property indicates the name of the .inf file for the Win32 pointing device.\nExample: ab.inf") : Amended ToSubclass] string InfFileName;
  [Description("The InfSection property indicates the section of the .inf file that holds configuration information for the Win32 pointing device.") : Amended ToSubclass] string InfSection;
  [Units("hertz") : Amended ToSubclass,Description("The SampleRate property indicates the rate at which the pointing device is polled for input information.") : Amended ToSubclass] uint32 SampleRate;
  [Units("100 nanoseconds") : Amended ToSubclass,Description("The Synch property specifies the length of time after which the next interrupt is assumed to indicate the start of a new device packet (partial packets are discarded). In the event that an interrupt is lost, this allows the pointing device driver to synchronize its internalrepresentation of the packet state with the hardware state.") : Amended ToSubclass] uint32 Synch;
  [Units("mickeys") : Amended ToSubclass,Description("The DoubleSpeedThreshold property contains one of two acceleration values. The sensitivity of the pointing device doubles (toggles from the first to the second value) when the pointing device moves a distance greater than this threshold value.") : Amended ToSubclass] uint32 DoubleSpeedThreshold;
  [Units("mickeys") : Amended ToSubclass,Description("The QuadSpeedThreshold property contains the one of two acceleration threshold values.  The system doubles the speed of the pointer movement when the pointer device moves a distance greater than this value.  Since this speed increase occurs after the DoubleSpeedThreshold has been met, pointer effectively moves at four times it original speed") : Amended ToSubclass] uint32 QuadSpeedThreshold;
  [Description("The DeviceInterface property indicates the type of interface used for the pointing device.") : Amended ToSubclass,Values{"Other", "Unknown", "Serial", "PS/2", "Infrared", "HP-HIL", "Bus mouse", "ADB (Apple Desktop Bus)", "Bus mouse DB-9", "Bus mouse micro-DIN", "USB"} : Amended ToSubclass] uint16 DeviceInterface;
  [Description("The Manufacturer property specifies the name of the processor's manufacturer.\nExample: GenuineSilicon") : Amended ToSubclass] string Manufacturer;
};

[Description("The Win32_Keyboard class represents a keyboard installed on a Win32 system.\nExample: A Microsoft Natural(R) keyboard") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_Keyboard : CIM_Keyboard
{
  [Description("DeviceID is an address or other identifying information to uniquely name the logical device.") : Amended ToSubclass,Key : ToInstance ToSubclass DisableOverride] string DeviceID;
};

[Description("The Win32_VideoController class represents the capabilities and management capacity of the video controller on a Win32 computer system. \nExamples: Video adapter manufacturer, chipset version, display resolution, and number of colors.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_VideoController : CIM_PCVideoController
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The DeviceID property contains a identifier (unique to the computer system) for this video controller.") : Amended ToSubclass] string DeviceID;
  [Description("The AdapterCompatibility properties contains the general chip set used for this controller in order to compare compatibilities with the system") : Amended ToSubclass] string AdapterCompatibility;
  [Description("The AdapterDACType property contains a string of the Digital-to-Analog converter (DAC) chip name or ID.\nCharacter Set: Alphanumeric") : Amended ToSubclass] string AdapterDACType;
  [Units("bytes") : Amended ToSubclass,Description("The AdapterRAM property indicates the memory size of the video adapter. \nExample: 64000") : Amended ToSubclass] uint32 AdapterRAM;
  [Units("hertz") : Amended ToSubclass,Description("The CurrentRefreshRate property specifies the frequency at which the video controller refreshes the image for the monitor. A value of 0 indicates the default rate is being used, while 0xFFFFFFFF indicates the optimal rate is being used.") : Amended ToSubclass] uint32 CurrentRefreshRate;
  [Description("The Monochrome property indicates whether gray scale or color is used to display images.") : Amended ToSubclass] boolean Monochrome;
  [Description("The DitherType property indicates the dither type of the video controller.  The property can be one of the following predefined values, or a driver-defined value greater than or equal to 256: Value Meaning :-1\t-\tNo dithering. 2\t-\tDithering with a coarse brush. 3\t-\tDithering with a fine brush. 4\t-\tLine art dithering; a special dithering \t\tmethod that produces well defined borders \t\tbetween black, white, and gray scalings. \t\tIt is not suitable for images that include \t\tcontinuous graduations in intensity and \t\thue such as scanned photographs. 5\t-\tDevice does grayscaling. ") : Amended ToSubclass,Values{"No dithering", "Dithering with a coarse brush", "Dithering with a fine brush", "Line art dithering", "Device does gray scaling"} : Amended ToSubclass] uint32 DitherType;
  [Description("The InfFilename property indicates the path to the video adapter's .INF file. \nExample: C:\\WINNT\\SYSTEM32\\DRIVERS") : Amended ToSubclass] string InfFilename;
  [Description("The InfSection property indicates the section of the .INF file where the Win32 video information resides.") : Amended ToSubclass] string InfSection;
  [Description("The InstalledDisplayDrivers property indicates the name of the installed display device driver.") : Amended ToSubclass] string InstalledDisplayDrivers;
  [Description("The DriverDate property indicates the last modification date and time of the currently-installed video driver.") : Amended ToSubclass] datetime DriverDate;
  [Description("The DriverVersion property indicates the version number of the video driver.") : Amended ToSubclass] string DriverVersion;
  [Description("The ICMIntent ( Image Color Matching Intent ) property indicates the specific value of one of the three possible color matching methods, (or intents) that should be used by default. This property is primarily for non-ICM applications. ICM applications establish intents by using the ICM functions. This property can be one of the following predefined values, or a driver defined value greater than or equal to 256.Value Meaning :-1\t-\tColor matching should optimize for color saturation. This value \t\tis the most appropriate choice for business graphs when dithering \t\tis not desired. 2\t-\tColor matching should optimize for color contrast. This value \t\tis the most appropriate choice for scanned or photographic images \t\twhen dithering is desired. 3\t-\tColor matching should optimize to match the exact color requested. \t\tThis value is most appropriate for use with business logos or other \t\timages when an exact color match is required. ") : Amended ToSubclass,Values{"Saturation", "Contrast", "Exact Color"} : Amended ToSubclass] uint32 ICMIntent;
  [Description("The ICMMethod ( Image Color Matching Method ) property specifies how ICM is handled. For a non-ICM application, this property shows howICM is enabled. For ICM applications, the system examines this member to determine how to handle ICM support. This property can be one of the following predefined values, or a driver-defined value greater than or equal to 256.Value Meaning :-1\t-\tSpecifies that ICM is disabled. 2\t-\tSpecifies that ICM is handled by Windows. 3\t-\tSpecifies that ICM is handled by the device driver. 4\t-\tSpecifies that ICM is handled by the destination device. ") : Amended ToSubclass,Values{"Disabled", "Windows", "Device Driver", "Destination Device"} : Amended ToSubclass] uint32 ICMMethod;
  [Description("The SpecificationVersion property indicates the version number of the initialization data specification (upon which the structure is based).") : Amended ToSubclass] uint32 SpecificationVersion;
  [Description("The ColorTableEntries property indicates the size of the system's color table, if the device has a color depth of no more than 8 bits per pixel, null otherwise. <P>Example: 256") : Amended ToSubclass] uint32 ColorTableEntries;
  [Description("The DeviceSpecificPens property indicates the current number of device-specific pens.  0xffff means the device does not support pens. \nExample: 3") : Amended ToSubclass] uint32 DeviceSpecificPens;
  [Description("The ReservedSystemPaletteEntries property indicates the current number of reserved entries in a system's color table. The operating system may reserve entries to support standard colors for task bars and other desktop display items. If the system is not using a palette, then ReservedSystemPaletteEntries is null.<P>Example: 24.") : Amended ToSubclass] uint32 ReservedSystemPaletteEntries;
  [Description("The SystemPaletteEntries property indicates the current number of entries in a system's color table. If the system is not using a palette then SystemPaletteEntries is null.<P>Example: 256") : Amended ToSubclass] uint32 SystemPaletteEntries;
  [Description("The VideoModeDescription property indicates the current resolution, color, and scan mode settings of the video controller. \nExample: 1024 x 768 x 256 colors.") : Amended ToSubclass] string VideoModeDescription;
};

[Description("The Win32_DisplayConfiguration class represents configuration information for the display device on a Win32 system. This class is being deprecated in favor of the properties in Win32_VideoController, Win32_DesktopMonitor, and CIM_VideoControllerResolution") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_DisplayConfiguration : CIM_Setting
{
  [Description("The BitsPerPel property indicates the number of bits used to represent the color in this configuration (the bits per pixel).\nExample: 8.  \nThis property has been deprecated in favor of a corresponding property(s) contained in the Win32_VideoController, Win32_DesktopMonitor and//or CIM_VideoControllerResolution") : Amended ToSubclass] uint32 BitsPerPel;
  [key : ToInstance ToSubclass DisableOverride,Description("The DeviceName property indicates the name of the display device.  \nThis property has been deprecated in favor of a corresponding property(s) contained in the Win32_VideoController, Win32_DesktopMonitor and//or CIM_VideoControllerResolution") : Amended ToSubclass] string DeviceName;
  [Description("The DisplayFlags property indicates whether the display device is color (versus monochrome), and non-interlaced (versus interlaced). By masking its value with the DM_GRAYSCALE and DM_INTERLACED masks respectively, DisplayFlags indicates whether the display device is color (versus monochrome), and non-interlaced (versus interlaced). The DisplayFlags property contains two bits of information about the display.  \nThis property has been deprecated in favor of a corresponding property(s) contained in the Win32_VideoController, Win32_DesktopMonitor and//or CIM_VideoControllerResolution") : Amended ToSubclass] uint32 DisplayFlags;
  [Units("hertz") : Amended ToSubclass,Description("The DisplayFrequency property indicates the display's vertical refresh rate. The refresh rate for a monitor is the number of times the screen is redrawn per second (frequency).  \nThis property has been deprecated in favor of a corresponding property(s) contained in the Win32_VideoController, Win32_DesktopMonitor and//or CIM_VideoControllerResolution") : Amended ToSubclass] uint32 DisplayFrequency;
  [Description("The DitherType property indicates the dither type of the display. This property can assume predefined values of 1 to 5, or driver-defined values from 6 to 256. Line art dithering is a special dithering method that produces well-defined borders between black, white, and gray scalings. It is not suitable for images that include continuous graduations in intensity and hue (such as scanned photographs).  \nThis property has been deprecated in favor of a corresponding property(s) contained in the Win32_VideoController, Win32_DesktopMonitor and//or CIM_VideoControllerResolution") : Amended ToSubclass,Values{"No Dithering", "Coarse Brush", "Fine Brush", "Line Art", "Greyscale"} : Amended ToSubclass] uint32 DitherType;
  [Description("The DriverVersion property indicates the release version of the display driver.  \nThis property has been deprecated in favor of a corresponding property(s) contained in the Win32_VideoController, Win32_DesktopMonitor and//or CIM_VideoControllerResolution") : Amended ToSubclass] string DriverVersion;
  [Description("The ICMIntent (Image Color Matching Intent) property indicates the value of one of the three possible color matching methods (intents) that should be used by default. This property is used primarily for non-ICM applications. ICM applications establish intents by using the ICM functions. This property can assume predefined values of 1 to 3, or driver-defined values from 4 to 256.  \nThis property has been deprecated in favor of a corresponding property(s) contained in the Win32_VideoController, Win32_DesktopMonitor and//or CIM_VideoControllerResolution") : Amended ToSubclass,Values{"Saturation", "Contrast", "Exact Color"} : Amended ToSubclass] uint32 ICMIntent;
  [Description("The ICMMethod (Image Color Matching Method) property indicates how ICM is handled. For a non-ICM application, this property indicates if ICM is enabled or disabled. For ICM applications, the system examines this member to determine which part of the computer system handles ICM support.  \nThis property has been deprecated in favor of a corresponding property(s) contained in the Win32_VideoController, Win32_DesktopMonitor and//or CIM_VideoControllerResolution") : Amended ToSubclass,Values{"Disabled", "Windows", "Device Driver", "Device"} : Amended ToSubclass] uint32 ICMMethod;
  [Units("pixels") : Amended ToSubclass,Description("The LogPixels property contains the number of pixels per logical inch. This property is valid only with devices that work with pixels (this excludes devices such as printers).  \nThis property has been deprecated in favor of a corresponding property(s) contained in the Win32_VideoController, Win32_DesktopMonitor and//or CIM_VideoControllerResolution") : Amended ToSubclass] uint32 LogPixels;
  [Units("pixels") : Amended ToSubclass,Description("The PelsHeight property indicates the height of the displayable surface.  \nThis property has been deprecated in favor of a corresponding property(s) contained in the Win32_VideoController, Win32_DesktopMonitor and//or CIM_VideoControllerResolution") : Amended ToSubclass] uint32 PelsHeight;
  [Units("pixels") : Amended ToSubclass,Description("The PelsWidth property indicates the width of the displayable surface.  \nThis property has been deprecated in favor of a corresponding property(s) contained in the Win32_VideoController, Win32_DesktopMonitor and//or CIM_VideoControllerResolution") : Amended ToSubclass] uint32 PelsWidth;
  [Description("The SpecificationVersion property indicates the version number of the initialization data for the Win32 display device.  \nThis property has been deprecated in favor of a corresponding property(s) contained in the Win32_VideoController, Win32_DesktopMonitor and//or CIM_VideoControllerResolution") : Amended ToSubclass] uint32 SpecificationVersion;
};

[Description("The Win32_DisplayControllerConfiguration class represents the video adapter configuration information of a Win32 system.  This class has been deprecated in favor of Win32_VideoController, Win32_DesktopMonitor, and CIM_VideoControllerResolution classes") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_DisplayControllerConfiguration : CIM_Setting
{
  [Description("The BitsPerPixel property indicates either the number of bits used to represent the color in this configuration, or the bits in each pixel.\nExample: 8  \nThis property has been deprecated in favor of a corresponding property(s) contained in the Win32_VideoController, Win32_DesktopMonitor and//or CIM_VideoControllerResolution") : Amended ToSubclass] uint32 BitsPerPixel;
  [Description("The ColorPlanes property indicates the current number ofcolor planes used in the display configuration. A color plane is another way to represent pixel colors. Instead of assigning a single RGB value to each pixel, color planes separate the graphic into each of the primary color components (red, green, blue), and store them in their own planes. This allows for greater color depths on 8- and 16-bit video systems. Present graphics systems have the bitwidth large enough to store color depth information; meaningonly one color plane is needed.\nExample: 1  \nThis property has been deprecated in favor of a corresponding property(s) contained in the Win32_VideoController, Win32_DesktopMonitor and//or CIM_VideoControllerResolution") : Amended ToSubclass] uint32 ColorPlanes;
  [Description("The DeviceEntriesInAColorTable property indicates the number of color indexes in a color table of a display device. If the device has a color depth of no more than 8 bits per pixel. For devices with greater color depths, -1 is returned.\nExample: 256  \nThis property has been deprecated in favor of a corresponding property(s) contained in the Win32_VideoController, Win32_DesktopMonitor and//or CIM_VideoControllerResolution") : Amended ToSubclass] uint32 DeviceEntriesInAColorTable;
  [Description("The DeviceSpecificPens property indicates the current number of device-specific pens. A value of 0xFFFFFFFF means the device does not support pens. Pens are logical properties that can be assigned by the display controller to display devices, and are used to draw lines, borders of polygons, and text.\nExample: 3  \nThis property has been deprecated in favor of a corresponding property(s) contained in the Win32_VideoController, Win32_DesktopMonitor and//or CIM_VideoControllerResolution") : Amended ToSubclass] uint32 DeviceSpecificPens;
  [Units("pixels") : Amended ToSubclass,Description("The HorizontalResolution property indicates the current number of pixels in the horizontal direction (X axis) of the display.\nExample: 1024  \nThis property has been deprecated in favor of a corresponding property(s) contained in the Win32_VideoController, Win32_DesktopMonitor and//or CIM_VideoControllerResolution") : Amended ToSubclass] uint32 HorizontalResolution;
  [key : ToInstance ToSubclass DisableOverride,Description("The Name property contains the name of the adapter used in this configuration.  \nThis property has been deprecated in favor of a corresponding property(s) contained in the Win32_VideoController, Win32_DesktopMonitor and//or CIM_VideoControllerResolution") : Amended ToSubclass] string Name;
  [Units("hertz") : Amended ToSubclass,Description("The RefreshRate property indicates the refresh rate of the video adapter. A value of 0 or 1 indicates a default rate is being used. A value of -1 indicates that an optimal rate is being used.\nExample: 72  \nThis property has been deprecated in favor of a corresponding property(s) contained in the Win32_VideoController, Win32_DesktopMonitor and//or CIM_VideoControllerResolution") : Amended ToSubclass] sint32 RefreshRate;
  [Description("The ReservedSystemPaletteEntries property indicates the current number of color index entries reserved for system use. This value is only valid for display settings that use an indexed palette. Indexed palettes are not used for color depths greater than 8 bits per pixel. If the color depth is more than 8 bits per pixel, this value is set to NULL.\nExample: 20  \nThis property has been deprecated in favor of a corresponding property(s) contained in the Win32_VideoController, Win32_DesktopMonitor and//or CIM_VideoControllerResolution") : Amended ToSubclass] uint32 ReservedSystemPaletteEntries;
  [Description("The SystemPaletteEntries property indicates the current number of color index entries reserved for system use. This value is only valid for display settings that use an indexed palette . Indexed palettes are not used for color depths greater than 8 bits per pixel. If the color depth is more than 8 bits per pixel, this value is set to NULL.\nExample: 20  \nThis property has been deprecated in favor of a corresponding property(s) contained in the Win32_VideoController, Win32_DesktopMonitor and//or CIM_VideoControllerResolution") : Amended ToSubclass] uint32 SystemPaletteEntries;
  [Units("pixels") : Amended ToSubclass,Description("The VerticalResolution property indicates the current number of pixels in the vertical direction (Y axis) of the display.\nExample: 768  \nThis property has been deprecated in favor of a corresponding property(s) contained in the Win32_VideoController, Win32_DesktopMonitor and//or CIM_VideoControllerResolution") : Amended ToSubclass] uint32 VerticalResolution;
  [Description("The VideoMode property contains a user readable description of the current screen resolution and color setting of the display.\nExample: 1024 X 768 with 256 colors.  \nThis property has been deprecated in favor of a corresponding property(s) contained in the Win32_VideoController, Win32_DesktopMonitor and//or CIM_VideoControllerResolution") : Amended ToSubclass] string VideoMode;
};

[Description("The Win32_VideoConfiguration class is not active in releases after Windows 2000. It will not return any instances as there is no provider backing it.  \nThe Win32_VideoConfiguration class represents a configuration of a video subsystem.  This class has been deprecated in favor of the properties contained in the Win32_VideoController, Win32_DesktopMonitor, and CIM_VideoControllerResolution classes") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_VideoConfiguration : CIM_Setting
{
  [Units("bits per pixel") : Amended ToSubclass,Description("The ActualColorResolution property indicates the current color depth of the video display.  \nThis property has been deprecated in favor of a corresponding property(s) contained in the Win32_VideoController, Win32_DesktopMonitor and//or CIM_VideoControllerResolution") : Amended ToSubclass] uint32 ActualColorResolution;
  [Description("The AdapterChipType property contains the name of the adapter chip.\nExample: s3  \nThis property has been deprecated in favor of a corresponding property(s) contained in the Win32_VideoController, Win32_DesktopMonitor and//or CIM_VideoControllerResolution") : Amended ToSubclass] string AdapterChipType;
  [key : ToInstance ToSubclass DisableOverride,Description("The AdapterCompatibility property specifies the name of the manufacturer of the adapter.  This name can be used to compare the compatibility of this device with the needs of the computer system.  \nThis property has been deprecated in favor of a corresponding property(s) contained in the Win32_VideoController, Win32_DesktopMonitor and//or CIM_VideoControllerResolution") : Amended ToSubclass] string AdapterCompatibility;
  [Description("The AdapterDACType property indicates the name of the digital-to-analog chip (DAC) used in the adapter.  \nThis property has been deprecated in favor of a corresponding property(s) contained in the Win32_VideoController, Win32_DesktopMonitor and//or CIM_VideoControllerResolution") : Amended ToSubclass] string AdapterDACType;
  [Description("The AdapterDescription property contains a description or descriptive name of the video adapter.  \nThis property has been deprecated in favor of a corresponding property(s) contained in the Win32_VideoController, Win32_DesktopMonitor and//or CIM_VideoControllerResolution") : Amended ToSubclass] string AdapterDescription;
  [Units("bytes") : Amended ToSubclass,Description("The AdapterRAM property indicates the memory size of the video adapter.\nExample: 16777216  \nThis property has been deprecated in favor of a corresponding property(s) contained in the Win32_VideoController, Win32_DesktopMonitor and//or CIM_VideoControllerResolution") : Amended ToSubclass] uint32 AdapterRAM;
  [Description("The AdapterType property indicates the type of video adapter.\nCharacter Set: Alphanumeric  \nThis property has been deprecated in favor of a corresponding property(s) contained in the Win32_VideoController, Win32_DesktopMonitor and//or CIM_VideoControllerResolution") : Amended ToSubclass] string AdapterType;
  [Description("The BitsPerPixel property indicates the actual number of bits per pixel representing the display.  This may be scaled to the current video setting (represented by the ActualColorResolution property) of the user.\nExample: 8  \nThis property has been deprecated in favor of a corresponding property(s) contained in the Win32_VideoController, Win32_DesktopMonitor and//or CIM_VideoControllerResolution") : Amended ToSubclass] uint32 BitsPerPixel;
  [Description("The ColorPlanes property indicates the current number of color planes used in the video display.  A color plane is another way to represent pixel colors; instead of assigning a single RGB value to each a pixel, color planes separate the graphic into each of the primary color components (red green blue), and store them in their own planes.  This allows for greater color depths on 8 and 16 bit video systems.   Present graphics systems have the bitwidth large enough to store color depth information, making only one color plane necessary.\nExample: 1  \nThis property has been deprecated in favor of a corresponding property(s) contained in the Win32_VideoController, Win32_DesktopMonitor and//or CIM_VideoControllerResolution") : Amended ToSubclass] uint32 ColorPlanes;
  [Description("The ColorTableEntries property indicates the number of color indexes in a color table for a video display. This property is used if the device has a color depth of no more than 8 bits per pixel. For devices with greater color depths, -1 is returned.\nExample: 256  \nThis property has been deprecated in favor of a corresponding property(s) contained in the Win32_VideoController, Win32_DesktopMonitor and//or CIM_VideoControllerResolution") : Amended ToSubclass] uint32 ColorTableEntries;
  [Description("The DeviceSpecificPens property indicates the current number of device-specific pens.  A value of 0xFFFFFFFF means the device does not support pens.  Pens are used to draw lines and theborders of polygonal objects.\nExample: 3  \nThis property has been deprecated in favor of a corresponding property(s) contained in the Win32_VideoController, Win32_DesktopMonitor and//or CIM_VideoControllerResolution") : Amended ToSubclass] uint32 DeviceSpecificPens;
  [Description("The DriverDate property indicates the date and time the current video driver was installed.  \nThis property has been deprecated in favor of a corresponding property(s) contained in the Win32_VideoController, Win32_DesktopMonitor and//or CIM_VideoControllerResolution") : Amended ToSubclass] datetime DriverDate;
  [Description("The HorizontalResolution property indicates the current number of pixels in the horizontal direction (X axis) of the display.\nExample: 1024  \nThis property has been deprecated in favor of a corresponding property(s) contained in the Win32_VideoController, Win32_DesktopMonitor and//or CIM_VideoControllerResolution") : Amended ToSubclass] uint32 HorizontalResolution;
  [Description("The InfFilename property specifies the path to the .inf file of the video driver.\nExample: C:\\WINNT\\SYSTEM32\\DRIVERS  \nThis property has been deprecated in favor of a corresponding property(s) contained in the Win32_VideoController, Win32_DesktopMonitor and//or CIM_VideoControllerResolution") : Amended ToSubclass] string InfFilename;
  [Description("The InfSection property indicates the section of the .inf file where the Win32 video information resides.  \nThis property has been deprecated in favor of a corresponding property(s) contained in the Win32_VideoController, Win32_DesktopMonitor and//or CIM_VideoControllerResolution") : Amended ToSubclass] string InfSection;
  [Description("The InstalledDisplayDrivers property indicates the name of the installed video driver.  \nThis property has been deprecated in favor of a corresponding property(s) contained in the Win32_VideoController, Win32_DesktopMonitor and//or CIM_VideoControllerResolution") : Amended ToSubclass] string InstalledDisplayDrivers;
  [Description("The MonitorManufacturer property indicates the name of the manufacturer of the display device.\nExample: NEC  \nThis property has been deprecated in favor of a corresponding property(s) contained in the Win32_VideoController, Win32_DesktopMonitor and//or CIM_VideoControllerResolution") : Amended ToSubclass] string MonitorManufacturer;
  [Description("The MonitorType property indicates the model name of the display device.\nExample: NEC 5FGp  \nThis property has been deprecated in favor of a corresponding property(s) contained in the Win32_VideoController, Win32_DesktopMonitor and//or CIM_VideoControllerResolution") : Amended ToSubclass] string MonitorType;
  [key : ToInstance ToSubclass DisableOverride,Description("The Name property contains an identifying name for the video configuration class.  \nThis property has been deprecated in favor of a corresponding property(s) contained in the Win32_VideoController, Win32_DesktopMonitor and//or CIM_VideoControllerResolution") : Amended ToSubclass] string Name;
  [Description("The PixelsPerXLogicalInch property indicates the number of pixels per logical inch along the X axis (horizontal direction) of the display.  \nThis property has been deprecated in favor of a corresponding property(s) contained in the Win32_VideoController, Win32_DesktopMonitor and//or CIM_VideoControllerResolution") : Amended ToSubclass] uint32 PixelsPerXLogicalInch;
  [Description("The PixelsPerYLogicalInch property indicates the number of pixels per logical inch along the Y axis (vertical direction) of the display.  \nThis property has been deprecated in favor of a corresponding property(s) contained in the Win32_VideoController, Win32_DesktopMonitor and//or CIM_VideoControllerResolution") : Amended ToSubclass] uint32 PixelsPerYLogicalInch;
  [Description("The RefreshRate property indicates the refresh rate of the video configuration.  A value of 0 or 1 indicates a default rate is being used.\nExample: 72  \nThis property has been deprecated in favor of a corresponding property(s) contained in the Win32_VideoController, Win32_DesktopMonitor and//or CIM_VideoControllerResolution") : Amended ToSubclass] uint32 RefreshRate;
  [Description("The ScanMode property determines whether the display device is interlaced.  \nThis property has been deprecated in favor of a corresponding property(s) contained in the Win32_VideoController, Win32_DesktopMonitor and//or CIM_VideoControllerResolution") : Amended ToSubclass,Values{"Non Interlaced", "Interlaced"} : Amended ToSubclass] string ScanMode;
  [Units("millimeters") : Amended ToSubclass,Description("The ScreenHeight property specifies the height of the physical screen.  \nThis property has been deprecated in favor of a corresponding property(s) contained in the Win32_VideoController, Win32_DesktopMonitor and//or CIM_VideoControllerResolution") : Amended ToSubclass] uint32 ScreenHeight;
  [Units("millimeters") : Amended ToSubclass,Description("The ScreenWidth property specifies the width of the physical screen.   \nThis property has been deprecated in favor of a corresponding property(s) contained in the Win32_VideoController, Win32_DesktopMonitor and//or CIM_VideoControllerResolution") : Amended ToSubclass] uint32 ScreenWidth;
  [Description("The SystemPaletteEntries property indicates the current number of color index entries reserved for system use. This value is only valid for display settings that use an indexed palette . Indexed palettes are not used for color depths greater than 8 bits per pixel. If the color depth is more than 8 bits per pixel, this value is set to NULL.\nExample: 20  \nThis property has been deprecated in favor of a corresponding property(s) contained in the Win32_VideoController, Win32_DesktopMonitor and//or CIM_VideoControllerResolution") : Amended ToSubclass] uint32 SystemPaletteEntries;
  [Description("The VerticalResolution property indicates the current number of pixels in the vertical direction (Y axis) of the display.\nExample: 768  \nThis property has been deprecated in favor of a corresponding property(s) contained in the Win32_VideoController, Win32_DesktopMonitor and//or CIM_VideoControllerResolution") : Amended ToSubclass] uint32 VerticalResolution;
};

[Description("The WIn32_VideoSettings class represents an association between a video controller and video settings that can be applied to it.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_VideoSettings : CIM_VideoSetting
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The Element reference represents the Win32_VideoController containing the properties of the video controller that a video setting can be used on.") : Amended ToSubclass] Win32_VideoController Ref Element;
  [Key : ToInstance ToSubclass DisableOverride,Description("The Setting reference represents a CIM_VideoControllerResolution containing settings that can be applied to the video controller.") : Amended ToSubclass] CIM_VideoControllerResolution Ref Setting;
};

[Description("The Win32_SoundDevice class represents the properties of a sound device on a Win32 computer system.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_SoundDevice : CIM_LogicalDevice
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The DeviceID property contains information that uniquely identifies the sound device.") : Amended ToSubclass] string DeviceID;
  [Units("kilobytes") : Amended ToSubclass,Description("The DMABufferSize property indicates the size of the Direct Memory Access buffer.\nExample: 4") : Amended ToSubclass] uint16 DMABufferSize;
  [Description("The Manufacturer property names the manufacturer of the sound device.\nExample: Creative Labs") : Amended ToSubclass] string Manufacturer;
  [Description("The MPU401Address property indicates the starting I/O address assigned to the MPU-401 port of the sound device.\nExample: 300") : Amended ToSubclass] uint32 MPU401Address;
  [Description("The ProductName property indicates the product name of the sound device.\nExample: Creative Labs SoundBlaster AWE64PNP") : Amended ToSubclass] string ProductName;
};

[Description("The Win32_Battery class represents a battery connected to the computer system. This class applies to both batteries in Laptop Systems and other internal/external batteries.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_Battery : CIM_Battery
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The DeviceID property contains a string identifying the battery.\nExample: Internal Battery") : Amended ToSubclass] string DeviceID;
  [Units("minutes") : Amended ToSubclass,Description("The ExpectedBatteryLife property indicates the amount of time it takes to completely drain the battery after it has been fully charged. \nThe ExpectedBatteryLife property has been deprecated.  There is no replacementvalue and this property is now considered obsolete.") : Amended ToSubclass] uint32 ExpectedBatteryLife;
  [Units("minutes") : Amended ToSubclass,Description("The BatteryRechargeTime property indicates the time required to fully charge the battery. \nThe BatteryRechargeTime property has been deprecated.  There is no replacementvalue and this property is now considered obsolete.") : Amended ToSubclass] uint32 BatteryRechargeTime;
};

[Description("The Win32_PortableBattery class contains the  the population of the DMTF|Portable Battery group, as defined in the DMTF Mobile Supplement to Standard Groups, v1.0 (section 3.3.23 of the SMBIOS spec) and describes the attributes of the portable battery(s) for the system.  The class contains the static attributes for the group and describes a single battery packs attributes.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_PortableBattery : CIM_Battery
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The DeviceID property contains a string identifying the portable battery.\nExample: Portable Battery") : Amended ToSubclass] string DeviceID;
  [Description("The Location property indicates the physical location of the battery. This property is filled by the computer manufacturer.\nExample: In the back, on the left-hand side") : Amended ToSubclass] string Location;
  [Description("The ManufactureDate property identifies the date when the battery was manufactured.") : Amended ToSubclass] string ManufactureDate;
  [Description("The Manufacturer property indicates the manufacturer of the battery.") : Amended ToSubclass] string Manufacturer;
  [Units("percent") : Amended ToSubclass,Description("The MaxBatteryError property indicates the difference between the highest estimated amount of energy left in the battery and the current amount reported by the battery.") : Amended ToSubclass] uint16 MaxBatteryError;
  [Description("The CapacityMultiplier property contains the multiplication factor of the Design Capacity value to ensure that the milliwatt hour value does not overflow for Smart Battery Data Specification (SBDS) implementations.") : Amended ToSubclass] uint16 CapacityMultiplier;
};

[Description("The Win32_PowerManagementEvent class represents power management events resulting from power state changes. These state changes are associated with either the Advanced Power Management(APM) or the Advanced Configuration and Power Interface(ACPI) system management protocols.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_PowerManagementEvent : __ExtrinsicEvent
{
  [Description("The EventType property indicates the type of change in the system power state.") : Amended ToSubclass,Values{"Entering Suspend", "Resume from Suspend", "Power Status Change", "OEM Event", "Resume Automatic"} : Amended ToSubclass] uint16 EventType;
  [Description("The OEMEventCode property indicates the system power state defined by the original equipment manufacturer (OEM) when the EventType property of this class is set to \"OEM Event\", otherwise, this property is set to NULL. OEM events are generated when an APM BIOS signals an APM OEM event. OEM event codes are in the range 0x0200h - 0x02FFh.") : Amended ToSubclass] uint16 OEMEventCode;
};

[Description("The Win32_PCMCIAController class manages the capabilities of a Personal Computer Memory Card Interface Adapter (PCMCIA of PC card) controller device.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_PCMCIAController : CIM_PCMCIAController
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The DeviceID property indicates the number that uniquely identifies this device with other peripherals using the Plug and Play BIOS. This property is derived from CIM_LogicalDevice.") : Amended ToSubclass] string DeviceID;
};

[Description("The Win32_1394Controller class represents the capabilities and management of a 1394 controller.  IEEE 1394 is a specification for a high speed serial bus.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_1394Controller : CIM_Controller
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The DeviceID property contains a string uniquely identifying the 1394 controller with other devices on the system.") : Amended ToSubclass] string DeviceID;
  [Description("The Manufacturer property indicates the name of the manufacturer of the 1394 controller. \nExample: Acme") : Amended ToSubclass] string Manufacturer;
};

[Description("The Win32_MotherboardDevice class represents a device that contains the central components of the Win32 computer system.\nExample: A single piece of hardware containing a processor, bus, memory, and basic system interfaces") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_MotherboardDevice : CIM_LogicalDevice
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The DeviceID property contains a string that uniquely identifies this motherboard.") : Amended ToSubclass] string DeviceID;
  [Description("The PrimaryBusType property indicates the primary bus type of the motherboard.\nExample: PCI") : Amended ToSubclass] string PrimaryBusType;
  [Description("The RevisionNumber property indicates the revision number of the motherboard.\nExample: 00") : Amended ToSubclass] string RevisionNumber;
  [Description("The SecondaryBusType property indicates the secondary bus type of the motherboard.\nExample: ISA") : Amended ToSubclass] string SecondaryBusType;
};

[Description("The Win32_1394ControllerDevice class represents an association between the high-speed serial bus (IEEE 1394 Firewire) Controller and the CIM_LogicalDevice connected to it. This serial bus provides enhanced connectivity for a wide range of devices, including consumer audio/video components, storage peripherals, other computers, and portable devices. IEEE 1394 has been adopted by the consumer electronics industry and provides a Plug and Play-compatible expansion interface.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_1394ControllerDevice : CIM_ControlledBy
{
  [key : ToInstance ToSubclass DisableOverride,Description("The CIM_LogicalDevice dependent reference represents the CIM_LogicalDevice connected to the 1394 controller.") : Amended ToSubclass] CIM_LogicalDevice Ref Dependent;
  [key : ToInstance ToSubclass DisableOverride,Description("The Win32_1394Controller antecedent reference represents the 1394 controller associated with this device.") : Amended ToSubclass] Win32_1394Controller Ref Antecedent;
};

[Description("The Win32_IDEController class manages the capabilities of an IDE controller device.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_IDEController : CIM_Controller
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The DeviceID property indicates a string that uniquely identifies the IDE controller with other devices on the system.") : Amended ToSubclass] string DeviceID;
  [Description("The Manufacturer property indicates the manufacturer of the IDE controller device.") : Amended ToSubclass] string Manufacturer;
};

[Description("The Win32_IDEControllerDevice class represents an association between an Integrated Drive Electronics (IDE) controller and the logical device, for example, a disk drive, connected to it.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_IDEControllerDevice : CIM_ControlledBy
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The Dependent reference represents the CIM_LogicalDevice connected to the IDE controller.") : Amended ToSubclass] CIM_LogicalDevice Ref Dependent;
  [Key : ToInstance ToSubclass DisableOverride,Description("The Antecedent reference represents the IDE controller associated with this device.") : Amended ToSubclass] Win32_IDEController Ref Antecedent;
};

[Description("The Win32_DeviceSettings class represents an association between a logical device and a setting that can be applied to it.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_DeviceSettings : CIM_ElementSetting
{
  [key : ToInstance ToSubclass DisableOverride,Description("The Element reference represents properties of the logical device on which the settings can be applied.") : Amended ToSubclass] CIM_LogicalDevice Ref Element;
  [key : ToInstance ToSubclass DisableOverride,Description("The Setting reference represents settings that can be applied to the logical device.") : Amended ToSubclass] CIM_Setting Ref Setting;
};

[Description("The Win32_AllocatedResource class represents an association between logical devices and system resources. This class is used to discover which resources, such as IRQs, or DMA channels, are in-use by a specific device.  This class has been deprecated in favor of the Win32_PNPAllocatedResource class.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_AllocatedResource : CIM_Dependency
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The Antecedent reference represents the properties of a system resource available to the logical device.") : Amended ToSubclass] CIM_SystemResource Ref Antecedent;
  [Key : ToInstance ToSubclass DisableOverride,Description("The Dependent reference represents the properties of the logical device that is using the system resources assigned to it.") : Amended ToSubclass] CIM_LogicalDevice Ref Dependent;
};

[Description("The Win32_AllocatedResource class represents an association between logical devices and system resources. This class is used to discover which resources, such as IRQs, or DMA channels, are in-use by a specific device.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_PNPAllocatedResource : CIM_AllocatedResource
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The Antecedent reference represents the properties of a system resource available to the logical device.") : Amended ToSubclass] CIM_SystemResource Ref Antecedent;
  [Key : ToInstance ToSubclass DisableOverride,Description("The Dependent reference represents the properties of the logical device that is using the system resources assigned to it.") : Amended ToSubclass] Win32_PNPEntity Ref Dependent;
};

[Description("The Win32_Bus class represents a physical bus as seen by a Win32 operating system. Any instance of a Win32 bus is a descendent (or member) of this class.\nExample: USB Bus.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_Bus : CIM_LogicalDevice
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The DeviceID property contains a unique name that identifies the bus.") : Amended ToSubclass] string DeviceID;
  [Description("The BusNum property indicates the logical number assigned to the physical bus.\nExample: 1") : Amended ToSubclass] uint32 BusNum;
  [Description("The BusType property indicates the type of the physical bus. This value will be one of the values in the INTERFACE_TYPE enumeration defined in bus.h.\nExample: PCIBus") : Amended ToSubclass,Values{"Undefined", "Internal", "ISA", "EISA", "MicroChannel", "TurboChannel", "PCI Bus", "VME Bus", "NuBus", "PCMCIA Bus", "C Bus", "MPI Bus", "MPSA Bus", "Internal Processor", "Internal Power Bus", "PNP ISA Bus", "PNP Bus", "Maximum Interface Type"} : Amended ToSubclass] uint32 BusType;
};

[Description("The Win32_DeviceBus class represents an association between a system bus and a logical device using the bus. This class is used to discover which devices are on which bus.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_DeviceBus : CIM_Dependency
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The Antecedent reference represents the properties of the system bus that is used by the logical device.") : Amended ToSubclass] Win32_Bus Ref Antecedent;
  [Key : ToInstance ToSubclass DisableOverride,Description("The Dependent reference represents the properties of the logical device that is using the system bus.") : Amended ToSubclass] CIM_LogicalDevice Ref Dependent;
};

[Description("The Win32_CIMLogicalDeviceCIMDataFile class represents an association between logical devices and data files, indicating the driver files used by the device. This class is used to discover which device drivers a device uses.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_CIMLogicalDeviceCIMDataFile : CIM_Dependency
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The Antecedent reference represents the properties of the logical device that is being used by the data file.") : Amended ToSubclass] CIM_LogicalDevice Ref Antecedent;
  [Key : ToInstance ToSubclass DisableOverride,Description("The Dependent reference represents the properties of the data file assigned to the logical device.") : Amended ToSubclass] CIM_DataFile Ref Dependent;
  [Description("The Purpose property indicates the role that the data file plays with regard to its associated logical device.") : Amended ToSubclass,Values{"Unknown", "Other", "Driver", "Configuration Software", "Application Software", "Instrumentation", "Firmware"} : Amended ToSubclass] uint16 Purpose;
  [Description("The PurposeDescription property provides a description that extends the value of the Purpose property of this class.\nExample: Floppy Disk Driver") : Amended ToSubclass] string PurposeDescription;
};

[Description("The Win32_OnBoardDevice class represents common adapter devices built into the motherboard (system board).") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_OnBoardDevice : CIM_PhysicalComponent
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The Tag property uniquely identifies the on-board device connected to the system.\nExample: On Board Device 1") : Amended ToSubclass] string Tag;
  [Description("The DeviceType property indicates the type of device being represented.") : Amended ToSubclass,Values{"Other", "Unknown", "Video", "SCSI Controller", "Ethernet", "Token Ring", "Sound"} : Amended ToSubclass] uint16 DeviceType;
  [Description("The Enabled property indicates whether or not the on-board device is available for use.\nValues: TRUE or FALSE. A value of TRUE indicates the device is enabled for use.") : Amended ToSubclass] boolean Enabled;
  [Description("The Description property describes the on-board device and is filled by the manufacturer of the device.") : Amended ToSubclass] string Description;
};

[Description("The Win32_VoltageProbe class represents the properties of a voltage sensor (electronic voltmeter).") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_VoltageProbe : CIM_VoltageSensor
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The DeviceID property contains a string identifying the voltage probe.") : Amended ToSubclass] string DeviceID;
};

[Description("The Win32_CurrentProbe class represents the properties of a current monitoring sensor (ammeter).") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_CurrentProbe : CIM_CurrentSensor
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The DeviceID property contains a string identifying the current probe.") : Amended ToSubclass] string DeviceID;
};

[Description("The Win32_TemperatureProbe class represents the properties of a temperature sensor (electronic thermometer).") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_TemperatureProbe : CIM_TemperatureSensor
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The DeviceID property contains a string identifying the temperature probe.") : Amended ToSubclass] string DeviceID;
};

[Description("The Win32_Fan class represents the properties of a fan device in the computer system. For example, the CPU cooling fan.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_Fan : CIM_Fan
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The DeviceID property contains a string identifying the fan device.") : Amended ToSubclass] string DeviceID;
};

[Description("The Win32_Refrigeration class represents the properties of a refrigeration device.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_Refrigeration : CIM_Refrigeration
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The DeviceID property contains a string identifying the refrigeration device.") : Amended ToSubclass] string DeviceID;
};

[Description("The Win32_HeatPipe class represents the properties of a heat pipe cooling device.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_HeatPipe : CIM_HeatPipe
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The DeviceID property contains a string identifying the heat pipe.") : Amended ToSubclass] string DeviceID;
};

[Description("The Win32_PnPEntity class represents the properties of a Plug and Play device. Plug and Play entities are shown as entries in the Device Manager located in the Control Panel.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_PnPEntity : CIM_LogicalDevice
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The DeviceID property contains a string identifying the Plug and Play device.") : Amended ToSubclass] string DeviceID;
  [Description("List of Hardware IDs associated with the device. A hardware ID is a vendor-defined identification string that Setup uses to match a device to an INF file.") : Amended ToSubclass] string HardwareID[];
  [Description("List of Compatible IDs for the device. If Setup cannot locate an INF file that matches one of a device's hardware IDs, it uses compatible IDs to locate an INF file.") : Amended ToSubclass] string CompatibleID[];
  [Description("The Manufacturer property contains the name of the manufacturer of the Plug and Play device.\nExample: Acme") : Amended ToSubclass] string Manufacturer;
  [Description("The Service property contains the name of the service that supports this Plug and Play device. See also: Win32_SystemDriverPNPEntity class.\nExample: atapi") : Amended ToSubclass] string Service;
  [Description("The ClassGuid property contains the Globally Unique Identifier (GUID) that uniquely identifies this Plug and Play device.") : Amended ToSubclass] string ClassGuid;
};

[Description("The Win32_PnPDevice represents an association between a device (known to Config Manager as a PnPEntity), and the function it performs. Its function is represented by a subclass of the logical device that describes its use. For example, a Win32_Keyboard or Win32_DiskDrive. Both referenced objects represent the same underlying system device - changes to resource allocation on the PnPEntity side will effect the associated Device.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_PnPDevice
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The SystemElement reference represents the the Plug and Play device associated with the logical device.") : Amended ToSubclass] Win32_PnPEntity Ref SystemElement;
  [Key : ToInstance ToSubclass DisableOverride,Description("The SameElement reference represents the logical device properties that are associated with the Plug and Play device.") : Amended ToSubclass] CIM_LogicalDevice Ref SameElement;
};

[Description("The Win32_SystemDriverPNPEntity class represents an association between a Plug and Play device on the Win32 computer system and the driver that supports the Plug and Play device.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_SystemDriverPNPEntity : CIM_Dependency
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The Dependent reference represents the driver that supports the Plug and Play device.") : Amended ToSubclass] Win32_SystemDriver Ref Dependent;
  [Key : ToInstance ToSubclass DisableOverride,Description("The Antecedent reference represents the Plug and Play device controlled by the driver.") : Amended ToSubclass] Win32_PNPEntity Ref Antecedent;
};

[Description("The Win32_DeviceChangeEvent class represents device change events resulting from the addition, removal or modification of devices on the computer system.  This includes changes in the hardware configuration (docking and undocking), the hardware state, or newly mapped devices (mapping of a network drive).  For example, a device has changed when a WM_DEVICECHANGE message is sent.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_DeviceChangeEvent : __ExtrinsicEvent
{
  [Description("The EventType property indicates what type of device change notification event has occurred.") : Amended ToSubclass,Values{"Configuration Changed", "Device Arrival", "Device Removal", "Docking"} : Amended ToSubclass] uint16 EventType;
};

[Description("The Win32_VolumeChangeEvent class represents a local drive event resulting from the addition of a drive letter or mounted drive on the computer system (e.g. CDROM). Network drives are not currently supported.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_VolumeChangeEvent : Win32_DeviceChangeEvent
{
  [Description("The DriveName property contains the drive name (letter) from the volume that has been added or removed from the system.") : Amended ToSubclass] string DriveName;
};

[Description("The Win32_SystemConfigurationChangeEvent is an event class which indicates that the device list on the system has been refreshed.  Refreshed meaning: a device has been added, removed, or the configuration changed.  This event is fired when the windows message 'DevMgrRefreshOn<ComputerName>' is sent. The exact change to the device list is not contained in the message and therefore a device refresh is required in order to obtain the current system\tsettings. Examples of configuration changes affected are IRQ settings, COM ports and BIOS version, to name a few.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_SystemConfigurationChangeEvent : Win32_DeviceChangeEvent
{
};

[Description("The Win32_POTSModem class represents the services and characteristics of a Plain Old Telephone Service (POTS) modem on a Win32 system.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_POTSModem : CIM_PotsModem
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The DeviceID property contains a string uniquely identifying this POTS modem from other devices on the system.") : Amended ToSubclass] string DeviceID;
  [Description("The AttachedTo property indicates the port to which the POTS modem is attached.\nExample: COM1.") : Amended ToSubclass] string AttachedTo;
  [Description("The BlindOff property contains the command string used to detect a dial tone before dialing.\nExample: X4.") : Amended ToSubclass] string BlindOff;
  [Description("The BlindOn property contains the command string used to dial whether or not there is a dial tone.\nExample: X3.") : Amended ToSubclass] string BlindOn;
  [Description("The CompatibilityFlags property lists all modem connection protocols with which this modem device is compatible.") : Amended ToSubclass] string CompatibilityFlags;
  [Description("The CompressionOff property contains the command string used to disable hardware data compression.\nExample: S46=136.") : Amended ToSubclass] string CompressionOff;
  [Description("The CompressionOn property contains the command string used to enable hardware data compression.\nExample: S46=138.") : Amended ToSubclass] string CompressionOn;
  [Description("The ConfigurationDialog property contains the modem initialization string. This property is comprised of command strings from other members of this class.") : Amended ToSubclass] string ConfigurationDialog;
  [Description("The Device Control Block (DCB) property contains the control settings for a serial communications device, in this case, the modem device.") : Amended ToSubclass] uint8 DCB[];
  [Description("The Default property indicates whether this POTS modem is the default modem on the Win32 computer system.") : Amended ToSubclass] uint8 Default[];
  [Description("The DeviceLoader property indicates the name of the device loader for the modem. A device loader loads and manages device drivers and enumerators for a given device.") : Amended ToSubclass] string DeviceLoader;
  [Description("The DeviceType property indicates the physical type of the modem.") : Amended ToSubclass,Values{"Null Modem", "Internal Modem", "External Modem", "PCMCIA Modem", "Unknown"} : Amended ToSubclass] string DeviceType;
  [Description("The DriverDate property indicates the date of the modem driver.") : Amended ToSubclass] datetime DriverDate;
  [Description("The ErrorControlForced property contains the command string used to enable error correction control when establishing a connection. This increases the reliability of the connection.\nExample: +Q5S36=4S48=7.") : Amended ToSubclass] string ErrorControlForced;
  [Description("The ErrorControlOff property contains the command string used to disable error control.\nExample: +Q6S36=3S48=128.") : Amended ToSubclass] string ErrorControlOff;
  [Description("The ErrorControlOn property contains the command string used to enable error control.\nExample: +Q5S36=7S48=7.") : Amended ToSubclass] string ErrorControlOn;
  [Description("The FlowControlHard property contains the command string used to enable hardware flow control. Flow control consists of signals sent between computers that verify that both computers are ready to transmit or receive data.\nExample: &K1.") : Amended ToSubclass] string FlowControlHard;
  [Description("The FlowControlSoft property contains the command string used to enable software flow control. Flow control consists of signals sent between computers that verify that both computers are ready to transmit or receive data.\nExample: &K2.") : Amended ToSubclass] string FlowControlSoft;
  [Description("The FlowControlOff property contains the command string used to disable flow control. Flow control consists of signals sent between computers that verify that both computers are ready to transmit or receive data.\nExample: &K0.") : Amended ToSubclass] string FlowControlOff;
  [Description("The InactivityScale property is a multiplier used with the InactivityTimeout property to calculate the timeout period of a connection.") : Amended ToSubclass] string InactivityScale;
  [Description("The Index property indicates the index number for this POTS modem.\nExample: 0") : Amended ToSubclass] uint32 Index;
  [Description("The Model property indicates the model of this POTS modem.\nExample: Sportster 56K External.") : Amended ToSubclass] string Model;
  [Description("The ModemInfPath property indicates the path to this modem's .inf file. This file contains initialization information for the modem and its driver.\nExample: C:\\WINNT\\INF.") : Amended ToSubclass] string ModemInfPath;
  [Description("The ModemInfSection property indicates the name of the section in the modem's .inf file that contains information about the modem.") : Amended ToSubclass] string ModemInfSection;
  [Description("The ModulationBell property contains the command string used to instruct the modem to use Bell modulations for 300 and 1200 bps.\nExample: B1.") : Amended ToSubclass] string ModulationBell;
  [Description("The ModulationCCITT property contains the command string used to instruct the modem to use CCITT modulations for 300 and 1200 bps.\nExample: B0.") : Amended ToSubclass] string ModulationCCITT;
  [Description("The PortSubClass property contains the string definingthe port used for this modem.") : Amended ToSubclass] string PortSubClass;
  [Description("The Prefix property indicates the dialing prefix used to access an outside line.") : Amended ToSubclass] string Prefix;
  [Description("The Properties property is a string array that lists all the properties (and their values) for this modem.") : Amended ToSubclass] uint8 Properties[];
  [Description("The ProviderName property indicates the network path to the computer that provides the modem services.") : Amended ToSubclass] string ProviderName;
  [Description("The Pulse property contains the command string used to instruct the modem to use pulse mode for dialing. Pulse dialing is necessary for phone lines that are unable to handle tone dialing.\nExample: P.") : Amended ToSubclass] string Pulse;
  [Description("The Reset property contains the command string used to reset the modem for the next call.\nExample: AT&F.") : Amended ToSubclass] string Reset;
  [Description("The ResponsesKeyName property contains the response this modem might report to the operating system during the connection process. The first two characters specify the type of response. The second two characters specify information about the connection being made. The second two characters are used only for Negotiation Progress or Connect response codes. The next eight characters specify the modem-to-modem line speed negotiated in bits per second (bps). The characters represent a 32-bit integer doubleword format (byte and word reversed). The last eight characters indicate that the modem is changing to a different port or Data Terminal Equipment (DTE) speed. Usually this field is not used because modems make connections at a \"locked\" port speed regardless of the modem-to-modem or Data Communications Equipment (DCE) speed.") : Amended ToSubclass] string ResponsesKeyName;
  [Description("The SpeakerModeDial property contains the command string used to turn the modem speaker on after dialing a number, and turning the speaker off when a connection has been established.\nExample: M1.") : Amended ToSubclass] string SpeakerModeDial;
  [Description("The SpeakerModeOff property contains the command string used to turn the modem speaker off.\nExample: M0.") : Amended ToSubclass] string SpeakerModeOff;
  [Description("The SpeakerModeOn property contains the command string used to turn the modem speaker on.\nExample: M2.") : Amended ToSubclass] string SpeakerModeOn;
  [Description("The SpeakerModeSetup property contains the command string used to instruct the modem to turn the speaker on (until a connection is established).\nExample: M3.") : Amended ToSubclass] string SpeakerModeSetup;
  [Description("The SpeakerVolumeHigh property contains the command string used to set the modem speaker to the highest volume.\nExample: L3.") : Amended ToSubclass] string SpeakerVolumeHigh;
  [Description("The SpeakerVolumeLow property contains the command string used to set the modem speaker to the lowest volume.\nExample: L1.") : Amended ToSubclass] string SpeakerVolumeLow;
  [Description("The SpeakerVolumeMed property contains the command string used to set the modem speaker to a medium volume.\nExample: L2.") : Amended ToSubclass] string SpeakerVolumeMed;
  [Description("The StringFormat property describes the type of characters used for text passed through the modem.") : Amended ToSubclass,Values{"ASCII string format", "DBCS string format", "UNICODE string format"} : Amended ToSubclass] string StringFormat;
  [Description("The Terminator property contains the string that marks the end of a command string.\nExample: <cr>") : Amended ToSubclass] string Terminator;
  [Description("The Tone property contains the command string that instructs the modem to use tone mode for dialing. The phone line must support tone dialing.\nExample: T.") : Amended ToSubclass] string Tone;
  [Description("The VoiceSwitchFeature property contains the command strings used to activate the voice capabilities of a voice modem.\nExample: AT+V.") : Amended ToSubclass] string VoiceSwitchFeature;
};

[Description("The Win32_POTSModemToSerialPort class represents an association between a modem and the serial port the modem uses.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_POTSModemToSerialPort : CIM_ControlledBy
{
  [key : ToInstance ToSubclass DisableOverride,Description("The Antecedent reference represents the serial port used by the modem.") : Amended ToSubclass] Win32_SerialPort Ref Antecedent;
  [key : ToInstance ToSubclass DisableOverride,Description("The Dependent reference represents the POTS modem using the serial port.") : Amended ToSubclass] Win32_POTSModem Ref Dependent;
};

[Description("The Win32_NetworkAdapter class represents a network adapter on a Win32 system.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_NetworkAdapter : CIM_NetworkAdapter
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The DeviceID property contains a string uniquely identifying the network adapter from other devices on the system.") : Amended ToSubclass] string DeviceID;
  [Description("The ProductName property indicates the product name of the network adapter.\nExample: Fast EtherLink XL") : Amended ToSubclass] string ProductName;
  [Description("The AdapterType property reflects the network medium in use. This property may not be applicable to all types of network adapters listed within this class. Windows NT only.") : Amended ToSubclass,Values{"Ethernet 802.3", "Token Ring 802.5", "Fiber Distributed Data Interface (FDDI)", "Wide Area Network (WAN)", "LocalTalk", "Ethernet using DIX header format", "ARCNET", "ARCNET (878.2)", "ATM", "Wireless", "Infrared Wireless", "Bpc", "CoWan", "1394"} : Amended ToSubclass] string AdapterType;
  [Description("The AdapterTypeId property reflects the network medium in use. This property gives the same information as the AdapterType property, except that the the information is returned in the form of an integer value that corresponds to the following: \n0 - Ethernet 802.3\n1 - Token Ring 802.5\n2 - Fiber Distributed Data Interface (FDDI)\n3 - Wide Area Network (WAN)\n4 - LocalTalk\n5 - Ethernet using DIX header format\n6 - ARCNET\n7 - ARCNET (878.2)\n8 - ATM\n9 - Wireless\n10 - Infrared Wireless\n11 - Bpc\n12 - CoWan\n13 - 1394\nThis property may not be applicable to all types of network adapters listed within this class. Windows NT only.") : Amended ToSubclass,Values{"Ethernet 802.3", "Token Ring 802.5", "Fiber Distributed Data Interface (FDDI)", "Wide Area Network (WAN)", "LocalTalk", "Ethernet using DIX header format", "ARCNET", "ARCNET (878.2)", "ATM", "Wireless", "Infrared Wireless", "Bpc", "CoWan", "1394"} : Amended ToSubclass] uint16 AdapterTypeId;
  [Description("The MACAddress property indicates the media access control address for this network adapter. A MAC address is a unique 48-bit number assigned to the network adapter by the manufacturer. It uniquely identifies this network adapter and is used for mapping TCP/IP network communications.") : Amended ToSubclass] string MACAddress;
  [Description("The ServiceName property indicates the service name of the network adapter. This name is usually shorter that the full product name. \nExample: Elnkii.") : Amended ToSubclass] string ServiceName;
  [Description("The Manufacturer property indicates the name of the network adapter's manufacturer.\nExample: 3COM.") : Amended ToSubclass] string Manufacturer;
  [Description("The Installed property determines whether the network adapter is installed in the system.\nValues: TRUE or FALSE. A value of TRUE indicates the network adapter is installed.  \nThe Installed property has been deprecated.  There is no replacementvalue and this property is now considered obsolete.") : Amended ToSubclass] boolean Installed;
  [Description("The Index property indicates the network adapter's  index number, which is stored in the system registry. \nExample: 0.") : Amended ToSubclass] uint32 Index;
  [Description("The InterfaceIndex property contains the index value that uniquely identifies the local interface.") : Amended ToSubclass] uint32 InterfaceIndex;
  [Description("The MaxNumberControlled property indicates the maximum number of directly addressable ports supported by this network adapter. A value of zero should be used if the number is unknown.") : Amended ToSubclass] uint32 MaxNumberControlled;
  [Description("The TimeOfLastReset property indicates when the network adapter was last reset.") : Amended ToSubclass] datetime TimeOfLastReset;
  [Description("The NetConnectionID property specifies the name of the network connection as it appears in the 'Network Connections' folder.") : Amended ToSubclass] string NetConnectionID;
  [Description("NetConnectionStatus is a string indicating the state of the network adapter's connection to the network. The value of the property is to be interpreted as follows:\n0 - Disconnected\n1 - Connecting\n2 - Connected\n3 - Disconnecting\n4 - Hardware not present\n5 - Hardware disabled\n6 - Hardware malfunction\n7 - Media disconnected\n8 - Authenticating\n9 - Authentication succeeded\n10 - Authentication failed\n11 - Invalid Address\n12 - Credentials Required\n.. - Other - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Disconnected", "Connecting", "Connected", "Disconnecting", "Hardware Not Present", "Hardware Disabled", "Hardware Malfunction", "Media Disconnected", "Authenticating", "Authentication Succeeded", "Authentication Failed", "Invalid Address", "Credentials Required", "Other"} : Amended ToSubclass] uint16 NetConnectionStatus;
  [Description("The NetEnabled property specifies whether the network connection is enabled or not.") : Amended ToSubclass] boolean NetEnabled;
  [Description("The GUID property specifies the Globally-unique identifier for the connection.") : Amended ToSubclass] string GUID;
  [Description("The PhysicalAdapter property specifies whether the adapter is physical adapter or logical adapter.") : Amended ToSubclass] boolean PhysicalAdapter;
  [Description("The Enable method enables the network adapter on the target computer. ") : Amended ToSubclass] uint32 Enable();
  [Description("The Disable method disables the network adapter on the target computer. ") : Amended ToSubclass] uint32 Disable();
};

[Description("The Win32_NetworkConnection class represents an active network connection in a Win32 environment.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_NetworkConnection : CIM_LogicalElement
{
  [Description("The Comment property contains a comment supplied by the network provider.") : Amended ToSubclass] string Comment;
  [Description("The ConnectionType property indicates the persistence type of the connection used for connecting to the network.\nExample: Permanent.") : Amended ToSubclass,Values{"Current Connection", "Persistent Connection"} : Amended ToSubclass] string ConnectionType;
  [Description("The ConnectionState property indicates the current state of the network connection.") : Amended ToSubclass,Values{"Connected", "Error", "Paused", "Disconnected", "Connecting", "Reconnecting"} : Amended ToSubclass] string ConnectionState;
  [Description("The DisplayType property indicates how the network object should be displayed in a network browsing user interface.\nExample: Generic.") : Amended ToSubclass,Values{"Domain", "Generic", "Server", "Share"} : Amended ToSubclass] string DisplayType;
  [Description("The LocalName property indicates the local name of the connected network device.\nExample: c:\\public.") : Amended ToSubclass] string LocalName;
  [key : ToInstance ToSubclass DisableOverride,Description("The Name property indicates the name of the current network connection. It is the combination of the value in the RemoteName property and the value in the LocalName property.\nExample: \\\\NTRELEASE (c:\\public).") : Amended ToSubclass] string Name;
  [Description("The Persistent property determines whether this connection will be reconnected automatically by the operating system on the next logon.\nValues: TRUE or FALSE. A value of TRUE indicates the network connection will be automatically connected.") : Amended ToSubclass] boolean Persistent;
  [Description("The ProviderName property contains the name of the provider that owns the resource. This property can be NULL if the provider name is unknown.") : Amended ToSubclass] string ProviderName;
  [Description("The RemoteName property contains the remote network resource name for a network resource. For a current or persistent connection, RemoteName contains the network name associated with the name of the value in the LocalName property. The name in RemoteName must follow the network provider's naming conventions. \nExample: \\\\NTRELEASE.") : Amended ToSubclass] string RemoteName;
  [Description("The RemotePath property contains the full path to the network resource.\nExample: \\\\infosrv1\\public") : Amended ToSubclass] string RemotePath;
  [Description("The ResourceType property identifies the type of resource to enumerate or connect to.") : Amended ToSubclass,Values{"Disk", "Print", "Any"} : Amended ToSubclass] string ResourceType;
  [Description("The UserName property contains the user name or the default user name used to establish a network connection. \nExample: SYSTEM.") : Amended ToSubclass] string UserName;
  [Description("The AccessMask property is a bit array representing the access rights as set remotely on the network share held by the user or group on whose behalf the instance is returned. This property is only supported under Windows NT and Windows 2000. ") : Amended ToSubclass,BitValues{"FILE_READ_DATA (file) or FILE_LIST_DIRECTORY (directory)", "FILE_WRITE_DATA (file) or FILE_ADD_FILE (directory)", "FILE_APPEND_DATA (file) or FILE_ADD_SUBDIRECTORY (directory)", "FILE_READ_EA", "FILE_WRITE_EA", "FILE_EXECUTE (file) or FILE_TRAVERSE (directory)", "FILE_DELETE_CHILD (directory)", "FILE_READ_ATTRIBUTES", "FILE_WRITE_ATTRIBUTES", "DELETE", "READ_CONTROL", "WRITE_DAC", "WRITE_OWNER", "SYNCHRONIZE"} : Amended ToSubclass] uint32 AccessMask;
};

[Description("The Win32_NetworkClient class represents a network client on a Win32 system. Any computer system on the network with a client relationship to the system is a descendent (or member) of this class.\nExample: A computer running Windows 2000 workstation or Windows 98 that is part of a Windows 2000 domain.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_NetworkClient : CIM_LogicalElement
{
  [Description("The Manufacturer property indicates the name of the manufacturer of the network client running on the Win32 system.\nExample: Microsoft Corporation") : Amended ToSubclass] string Manufacturer;
  [key : ToInstance ToSubclass DisableOverride,Description("The Name property identifies the network name of thenetwork client running on a Win32 system.\nExample: Microsoft Windows Network") : Amended ToSubclass] string Name;
};

[Description("The Win32_NetworkProtocol class represents a protocol and its network characteristics on a Win32 computer system.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_NetworkProtocol : CIM_LogicalElement
{
  [Description("The ConnectionlessService property indicates whether the protocol supports connectionless service. A connectionless (datagram) service describes a communications protocol or transport in which data packets are routed independently of each other and may follow different routes and arrive in a different order from that in which they were sent. Conversely, a connection-oriented service provides a virtual circuit through which data packets are received in the same order they were transmitted. If the connection between machines fails, the application is notified.\nValues: TRUE or FALSE. A value of TRUE indicates the protocol uses aconnectionless service.") : Amended ToSubclass] boolean ConnectionlessService;
  [Description("The GuaranteesDelivery property indicates whether the protocol guarantees that all data sent will reach the intended destination. If this flag is FALSE, there is no such guarantee. \nValues: TRUE or FALSE. A value of TRUE indicates the protocol supports guaranteed delivery of data packets.") : Amended ToSubclass] boolean GuaranteesDelivery;
  [Description("The GuaranteesSequencing property indicates whether the protocol guarantees that data will arrive in the order in which it was sent. Note that this characteristic does not guarantee delivery of the data, only its order. \nValues: TRUE or FALSE. A value of TRUE indicates the order of data sent is guaranteed.") : Amended ToSubclass] boolean GuaranteesSequencing;
  [units("characters") : Amended ToSubclass,Description("The MaximumAddressSize property indicates the maximum length of a socket address supported by the protocol.  Socket addresses may be items like URLs (www.microsoft.com) or IP addresses (130.215.24.1).") : Amended ToSubclass] uint32 MaximumAddressSize;
  [units("characters") : Amended ToSubclass,Description("The MaximumMessageSize property indicates the maximum message size supported by the protocol. This is the maximum size of a message that can be sent from or received by the host. For protocols that do not support message framing, the actual maximum size of a message that can be sent to a given address may be less than this value. There are two special values defined for this property:\n0  - The protocol is stream-oriented; the concept of message size is not relevant.\n1  - The maximum outbound (send) message size is dependent on the underlying network MTU (maximum sized transmission unit) and hence cannot be known until after a socket is bound. Applications should use getsockopt to retrieve the value of SO_MAX_MSG_SIZE after the socket has been bound to a local address.\n 0xFFFFFFFF - There is no specified maximum message size defined.\n") : Amended ToSubclass] uint32 MaximumMessageSize;
  [Description("The MessageOriented property indicates whether the protocol is message-oriented. A message-oriented protocol uses packets of data to transfer information. Conversely, stream-oriented protocols transfer data as a continuous stream of bytes.\nValues: TRUE or FALSE. A value of TRUE indicates the protocol is message oriented.") : Amended ToSubclass] boolean MessageOriented;
  [units("characters") : Amended ToSubclass,Description("The MinimumAddressSize property specifies the minimum length of a socket address supported by the protocol. ") : Amended ToSubclass] uint32 MinimumAddressSize;
  [key : ToInstance ToSubclass DisableOverride,Description("The Name property contains the name for the protocol.\nExample: TCP/IP") : Amended ToSubclass] string Name;
  [Description("The PseudoStreamOriented property indicates whether the protocol is a message-oriented protocol that can receive variable-length data packets or streamed data for all receive operations. This optional capability is useful when an application does not want the protocol to frame messages, and requires stream-oriented characteristics.\nValues: TRUE or FALSE. A value of TRUE indicates the protocol is pseudo stream-oriented.") : Amended ToSubclass] boolean PseudoStreamOriented;
  [Description("The SupportsBroadcasting property indicates whether the protocol supports a mechanism for broadcasting messages across the network.\nValues: TRUE or FALSE. A value of TRUE indicates the protocol supports broadcasting.") : Amended ToSubclass] boolean SupportsBroadcasting;
  [Description("The SupportsConnectData property indicates whether the protocol allows data to be connected across the network.\nValues: TRUE or FALSE. A value of TRUE indicates the protocol allows data to be connected.") : Amended ToSubclass] boolean SupportsConnectData;
  [Description("The SupportsDisconnectData property indicates whether the protocol allows data to be disconnected across the network.\nValues: TRUE or FALSE. A value of TRUE indicates the protocol allows data to be disconnected.") : Amended ToSubclass] boolean SupportsDisconnectData;
  [Description("The SupportsEncryption property indicates whether the protocol supports data encryption.\nValues: TRUE or FALSE. A value of TRUE indicates the protocol supports data encryption.") : Amended ToSubclass] boolean SupportsEncryption;
  [Description("The SupportsExpeditedData property indicates whether the protocol supports expedited data (also known as urgent data) across the network. Expedited data can bypass flow control and receive priority over normal data packets.\nValues: TRUE or FALSE.  A value of TRUE indicates the protocol supports expedited data.") : Amended ToSubclass] boolean SupportsExpeditedData;
  [Description("The SupportsFragmentation property indicates whether the protocol supports transmitting the data in fragments. Physical network Maximum Transfer Unit (MTU) is hidden from applications. Each media type has a maximum frame size that cannot be exceeded. The link layer is responsible for discovering the MTU and reporting it to the protocols being used. \nValues: TRUE or FALSE. A value of TRUE indicates the protocol supports transmitting the data in fragments.") : Amended ToSubclass] boolean SupportsFragmentation;
  [Description("The SupportsGracefulClosing property indicates whether the protocol supports two-phase close operations - also known as graceful close operations. If not, the protocol supports only abortive close operations. \nValues: TRUE or FALSE. A value of TRUE indicates the protocol supports graceful closing of network connections.") : Amended ToSubclass] boolean SupportsGracefulClosing;
  [Description("The SupportsGuaranteedBandwidth property indicates whether the protocol has a mechanism to establish and maintain a guaranteed bandwidth.\nValues: TRUE or FALSE. A value of TRUE indicates the protocol supports a guaranteed bandwidth.") : Amended ToSubclass] boolean SupportsGuaranteedBandwidth;
  [Description("The SupportsMulticasting property indicates whether the protocol supports multicasting.\nValues: TRUE or FALSE. A value of TRUE indicates the protocol supports multicasting.") : Amended ToSubclass] boolean SupportsMulticasting;
  [Description("The SupportsQualityofService property indicates whether the protocol is capable of Quality of Service (QOS) support via the underlying layered service provider or transport carrier. QOS is a collection of components that enable differentiation and preferential treatment for subsets of data transmitted over the network. QOS loosely means subsets of data get higher priority or guaranteed service when traversing a network. \nValues:TRUE or FALSE. A value of TRUE indicates the protocol supports QOS.") : Amended ToSubclass] boolean SupportsQualityofService;
};

[Description("The Win32_ProtocolBinding class represents an association among a system level driver, network protocol, and network adapter.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_ProtocolBinding
{
  [key : ToInstance ToSubclass DisableOverride,Description("The Antecedent reference represents the network protocol that is used with the system driver and on the network adapter.") : Amended ToSubclass] Win32_NetworkProtocol Ref Antecedent;
  [key : ToInstance ToSubclass DisableOverride,Description("The Device reference represents the properties of the network adapter being used on the computer system.") : Amended ToSubclass] Win32_NetworkAdapter Ref Device;
  [Description("The Dependent reference represents the system driver that uses the network adapter through the network protocol of this class.") : Amended ToSubclass] Win32_SystemDriver Ref Dependent;
};

[Description("The Win32_NetworkAdapterConfiguration class represents the attributes and behaviors of a network adapter. This class has been extended to include extra properties and methods that support the management of the TCP/IPprotocols (and are independent of the network adapter).") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_NetworkAdapterConfiguration : CIM_Setting
{
  [Description("The GatewayCostMetric reflects an integer cost metric (ranging from 1 to 9999) to be used in calculating the fastest, most reliable, and/or least expensive routes. This argument has a one to one correspondence with the DefaultIPGateway. Windows 2000 only.") : Amended ToSubclass] uint16 GatewayCostMetric[];
  [Description("The DefaultIPGateway property contains a list of IP addresses of default gateways used by the computer system.\nExample: 194.161.12.1 194.162.46.1") : Amended ToSubclass] string DefaultIPGateway[];
  [Description("The DHCPEnabled property indicates whether the dynamic host configuration protocol  (DHCP) server automatically assigns an IP address to the computer system when establishing a network connection.\nValues: TRUE or FALSE. If TRUE, DHCP is enabled.") : Amended ToSubclass] boolean DHCPEnabled;
  [Description("The DHCPLeaseExpires property indicates the expiration date and time for a leased IP address that was assigned to the computer by the dynamic host configuration protocol (DHCP) server.\nExample: 20521201000230.000000000") : Amended ToSubclass] datetime DHCPLeaseExpires;
  [Description("The DHCPLeaseObtained property indicates the date and time the lease was obtained for the IP address assigned to the computer by the dynamic host configuration protocol (DHCP) server. \nExample: 19521201000230.000000000") : Amended ToSubclass] datetime DHCPLeaseObtained;
  [Description("The DHCPServer property indicates the IP address of the dynamic host configuration protocol (DHCP) server.\nExample: 154.55.34") : Amended ToSubclass] string DHCPServer;
  [key : ToInstance ToSubclass DisableOverride,Description("The Index property specifies the index number of the Win32 network adapter configuration. The index number is used when there is more than one configuration available.") : Amended ToSubclass] uint32 Index;
  [Description("The InterfaceIndex property contains the index value that uniquely identifies the local interface.") : Amended ToSubclass] uint32 InterfaceIndex;
  [Description("The IPAddress property contains a list of all of the IP addresses associated with the current network adapter.\nExample: 155.34.22.0") : Amended ToSubclass] string IPAddress[];
  [Description("The IPSubnet property contains a list of all the subnet masks associated with the current network adapter.\nExample: 255.255.0") : Amended ToSubclass] string IPSubnet[];
  [Description("The IPXAddress property indicates the Internetworking Packet Exchange (IPX) address of the network adapter. The IPX address identifies a computer system on a network using the IPX protocol.") : Amended ToSubclass] string IPXAddress;
  [Description("The MACAddress property indicates the Media Access Control (MAC) address of the network adapter. A MAC address is assigned by the manufacturer to uniquely identify the network adapter.\nExample: 00:80:C7:8F:6C:96") : Amended ToSubclass] string MACAddress;
  [Description("The ServiceName property indicates the service name of the network adapter. This name is usually shorter than the full product name. \nExample: Elnkii.") : Amended ToSubclass] string ServiceName;
  [Description("The IPEnabled property indicates whether TCP/IP is bound and enabled on this network adapt.") : Amended ToSubclass] boolean IPEnabled;
  [Description("The IPXEnabled property determines whether the or Internetwork Packet Exchange (IPX) protocol is bound and enabled for this adapter.") : Amended ToSubclass] boolean IPXEnabled;
  [Description("The FullDNSRegistrationEnabled property specifies whether the IP addresses for this connection are registered in DNS under the computer's full DNS name. The full DNS name of the computer is displayed on the Network Identification tab of the System Control Panel. Windows 2000 only.") : Amended ToSubclass] boolean FullDNSRegistrationEnabled;
  [Description("The DomainDNSRegistrationEnabled property specifies whether the IP addresses for this connection are registered in DNS under the domain name of this connection, in addition to registering under the computer's full DNS name. The domain name of this connection is either set via the method SetDNSDomain() or assigned by DHCP. The registered name is the host name of the computer with the domain name appended. Windows 2000 only.") : Amended ToSubclass] boolean DomainDNSRegistrationEnabled;
  [Description("The IPConnectionMetric indicates the cost of using the configured routes for this IP bound adapter and is the weighted value for those routes in the IP routing table. If there are multiple routes to a destination in the IP routing table, the route with the lowest metric is used. The default value is 1.Windows 2000 only.") : Amended ToSubclass] uint32 IPConnectionMetric;
  [Description("The DatabasePath property indicates a valid Windows file path to standard Internet database files (HOSTS, LMHOSTS, NETWORKS, PROTOCOLS).  The file path is used by the Windows Sockets interface. This property is only available on Windows NT/Windows 2000 systems.") : Amended ToSubclass] string DatabasePath;
  [Description("The IPUseZeroBroadcast property indicates whether IP zeros-broadcasts are used. If this parameter is set TRUE, then IP uses zeros-broadcasts (0.0.0.0), and the system uses ones-broadcasts (255.255.255.255). Computer systems generally use ones-broadcasts, but those derived from BSD implementations use zeros-broadcasts. Systems that do not use that same broadcasts will not interoperate on the same network. Default: FALSE.") : Amended ToSubclass] boolean IPUseZeroBroadcast;
  [Description("The ArpAlwaysSourceRoute property indicates whether the Address Resolution Protocol (ARP) must always use source routing. If this property is TRUE, TCP/IP will transmit ARP queries with source routing enabled on Token Ring networks. By default, ARP first queries without source routing, and retries with source routing enabled if no reply was received. Source routing allows the routing of network packets across different types of networks. Default: FALSE.") : Amended ToSubclass] boolean ArpAlwaysSourceRoute;
  [Description("The ArpUseEtherSNAP property indicates whether Ethernet packets follow the IEEE 802.3 Sub-Network Access Protocol (SNAP) encoding. Setting this parameter to 1 will force TCP/IP to transmit Ethernet packets using 802.3 SNAP encoding. By default, the stack transmits packets in DIX Ethernet format. Windows NT/Windows 2000 systems are able to receive both formats. Default: FALSE.") : Amended ToSubclass] boolean ArpUseEtherSNAP;
  [Description("The DefaultTOS property indicates the default Type Of Service (TOS) value set in the header of outgoing IP packets. RFC 791 defines the values. Default: 0, Valid Range: 0 - 255.") : Amended ToSubclass] uint8 DefaultTOS;
  [Description("The DefaultTTL property indicates the default Time To Live (TTL) value set in the header of outgoing IP packets. The TTL specifies the number of routers an IP packet may pass through to reach its destination before being discarded. Each router decrements the TTL count of a packet by one as it passes through and discards the packets if the TTL is 0. Default: 32, Valid Range: 1 - 255.") : Amended ToSubclass] uint8 DefaultTTL;
  [Description("The DeadGWDetectEnabled property indicates whether dead gateway detection occurs. Setting this parameter to TRUE causes TCP to perform Dead Gateway Detection. With this feature enabled, TCP will ask IP to change to a backup gateway if it retransmits a segment several times without receiving a response. Default: TRUE.") : Amended ToSubclass] boolean DeadGWDetectEnabled;
  [Description("The PMTUBHDetectEnabled property indicates whether detection of black hole routers occurs. Setting this parameter to TRUE causes TCP to try to detect black hole routers while discovering the path of the Maximum Transmission Unit. A black hole router does not return ICMP Destination Unreachable messages when it needs to fragment an IP datagram with the Don't Fragment bit set. TCP depends on receiving these messages to perform Path MTU Discovery. With this feature enabled, TCP will try to send segments without the Don't Fragment bit set if several retransmissions of a segment go unacknowledged. If the segment is acknowledged as a result, the MSS will be decreased and the Don't Fragment bit will be set in future packets on the connection. Enabling black hole detection increases the maximum number of retransmissions performed for a given segment. The default value of this property is FALSE.") : Amended ToSubclass] boolean PMTUBHDetectEnabled;
  [Description("The PMTUDiscoveryEnabled property indicates whether the Maximum Transmission Unit (MTU) path is discovered. Setting this parameter to TRUE causes TCP to attempt to discover the MTU (the largest packet size) over the path to a remote host. By discovering the MTU path and limiting TCP segments to this size, TCP can eliminate fragmentation at routers along the path that connect networks with different MTUs. Fragmentation adversely affects TCP throughput and network congestion. Setting this parameter to FALSE causes an MTU of 576 bytes to be used for all connections that are not to machines on the local subnet. Default: TRUE.") : Amended ToSubclass] boolean PMTUDiscoveryEnabled;
  [Units("bytes") : Amended ToSubclass,Description("The ForwardBufferMemory property indicates how much memory IP allocates to store packet data in the router packet queue. When this buffer space is filled, the router begins discarding packets at random from its queue. Packet queue data buffers are 256 bytes in length, so the value of this parameter should be a multiple of 256. Multiple buffers are chained together for larger packets. The IP header for a packet is stored separately. This parameter is ignored and no buffers are allocated if the IP router is not enabled. The buffer size can range from the network MTU to the a value smaller than 0xFFFFFFFF. Default: 74240 (fifty 1480-byte packets, rounded to a multiple of 256).") : Amended ToSubclass] uint32 ForwardBufferMemory;
  [Description("The IGMPLevel property indicates the extent to which the system supports IP multicast and participates in the Internet Group Management Protocol. At level 0, the system provides no multicast support. At level 1, the system may only send IP multicast packets. At level 2, the system may send IP multicast packets and fully participate in IGMP to receive multicast packets. Default: 2") : Amended ToSubclass,Values{"No Multicast", "IP Multicast", "IP & IGMP multicast"} : Amended ToSubclass] uint8 IGMPLevel;
  [Units("milliseconds") : Amended ToSubclass,Description("The KeepAliveInterval property indicates the interval separating Keep Alive Retransmissions until a response is received. Once a response is received, the delay until the next Keep Alive Transmission is again controlled by the value of KeepAliveTime. The connection will be aborted after the number of retransmissions specified by TcpMaxDataRetransmissions have gone unanswered. Default: 1000, Valid Range: 1 - 0xFFFFFFFF.") : Amended ToSubclass] uint32 KeepAliveInterval;
  [Units("milliseconds") : Amended ToSubclass,Description("The KeepAliveTime property indicates how often the TCP attempts to verify that an idle connection is still intact by sending a Keep Alive Packet. A remote system that is reachable will acknowledge the keep alive transmission. Keep Alive packets are not sent by default. This feature may be enabled in a connection by an application. Default: 7,200,000 (two hours)") : Amended ToSubclass] uint32 KeepAliveTime;
  [Units("bytes") : Amended ToSubclass,Description("The MTU property overrides the default Maximum Transmission Unit (MTU) for a network interface. The MTU is the maximum packet size (including the transport header) that the transport will transmit over the underlying network. The IP datagram can span multiple packets. The range of this value spans the minimum packet size (68) to the MTU supported by the underlying network.") : Amended ToSubclass] uint32 MTU;
  [Description("The NumForwardPackets property indicates the number of IP packet headers allocated for the router packet queue. When all headers are in use, the router will begin to discard packets from the queue at random. This value should be at least as large as the ForwardBufferMemory value divided by the maximum IP data size of the networks connected to the router. It should be no larger than the ForwardBufferMemory value divided by 256, since at least 256 bytes of forward buffer memory are used for each packet. The optimal number of forward packets for a given ForwardBufferMemory size depends on the type of traffic carried on the network. It will lie somewhere between these two values. If the router is not enabled, this parameter is ignored and no headers are allocated. Default: 50, Valid Range: 1 - 0xFFFFFFFE.") : Amended ToSubclass] uint32 NumForwardPackets;
  [Description("The TcpMaxConnectRetransmissions property indicates the number of times TCP will attempt to retransmit a Connect Request before terminating the connection. The initial retransmission timeout is 3 seconds. The retransmission timeout doubles for each attempt. Default: 3, Valid Range: 0 - 0xFFFFFFFF.") : Amended ToSubclass] uint32 TcpMaxConnectRetransmissions;
  [Description("The TcpMaxDataRetransmissions property indicates the number of times TCP will retransmit an individual data segment (non-connect segment) before terminating the connection. The retransmission timeout doubles with each successive retransmission on a connection. Default: 5, Valid Range: 0 - 0xFFFFFFFF.") : Amended ToSubclass] uint32 TcpMaxDataRetransmissions;
  [Description("The TcpNumConnections property indicates the maximum number of connections that TCP can have open simultaneously. Default: 0xFFFFFE, Valid Range: 0 - 0xFFFFFE.") : Amended ToSubclass] uint32 TcpNumConnections;
  [Description("The TcpUseRFC1122UrgentPointer property indicates whether TCP uses the RFC 1122 specification or the mode used by Berkeley Software Design (BSD) derived systems, for urgent data. The two mechanisms interpret the urgent pointer differently and are not interoperable. Windows 2000 and Windows NT version 3.51 and higher defaults to BSD mode. If TRUE, urgent data is sent in RFC 1122 mode. Default: FALSE.") : Amended ToSubclass] boolean TcpUseRFC1122UrgentPointer;
  [Units("bytes") : Amended ToSubclass,Description("The TcpWindowSize property contains the maximum TCP Receive  Window size offered by the system. The Receive Window specifies the number of bytes a sender may transmit without receiving an acknowledgment. In general, larger receiving windows will improve performance over high delay and high bandwidth networks. For efficiency, the receiving window should be an even multiple of the TCP Maximum Segment Size (MSS). Default: Four times the maximum TCP data size or an even multiple of TCP data size rounded up to the nearest multiple of 8192. Ethernet networks default to 8760. Valid Range: 0 - 65535.") : Amended ToSubclass] uint16 TcpWindowSize;
  [Description("The IPPortSecurityEnabled property indicates whether IP port security is enabled globally across all IP-bound network adapters. This property has been deprecated in favor of IPFilterSecurityEnabled.") : Amended ToSubclass] boolean IPPortSecurityEnabled;
  [Description("The IPFilterSecurityEnabled property indicates whether IP port security is enabled globally across all IP-bound network adapters. This property is used in conjunction with IPSecPermitTCPPorts, IPSecPermitUDPPorts, and IPSecPermitIPProtocols. A value of TRUE indicates that IP port security is enabled and that the security values associated with individual network adapters are in effect. A value of FALSE indicates IP filter security is disabled across all network adapters and allows all port and protocol traffic to flow unfiltered.") : Amended ToSubclass] boolean IPFilterSecurityEnabled;
  [Description("The IPSecPermitTCPPorts property lists the ports that will be granted access permission for TCP. The list of protocols is defined using the EnableIPSec method. The list will either be empty or contain numeric values. A numeric value of zero indicates access permission is granted for all ports. An empty string indicates that no ports are granted access permission when IPFilterSecurityEnabled is TRUE.") : Amended ToSubclass] string IPSecPermitTCPPorts[];
  [Description("The IPSecPermitUDPPorts property lists the ports that will be granted User Datagram Protocol (UDP) access permission. The list of protocols is defined using the EnableIPSec method. The list will either be empty or contain numeric values. A numeric value of zero indicates access permission is granted for all ports. An empty string indicates that no ports are granted access permission when IPFilterSecurityEnabled is TRUE.") : Amended ToSubclass] string IPSecPermitUDPPorts[];
  [Description("The IPSecPermitIPProtocols property lists the protocols permitted to run over the IP. The list of protocols is defined using the EnableIPSec method. The list will either be empty or contain numeric values. A numeric value of zero indicates access permission is granted for all protocols. An empty string indicates that no protocols are permitted to run when IPFilterSecurityEnabled is TRUE.") : Amended ToSubclass] string IPSecPermitIPProtocols[];
  [Description("The DNSHostName property indicates the host name used to identify the local computer for authentication by some utilities. Other TCP/IP-based utilities can use this value to acquire the name of the local computer. Host names are stored on DNS servers in a table that maps names to IP addresses for use by DNS. The name can be any combination of the letters A through Z, the numerals 0 through 9, and the hyphen (-), plus the period (.) character used as a separator. By default, this value is the Microsoft networking computer name, but the network administrator can assign another host name without affecting the computer name.\nExample: corpdns") : Amended ToSubclass] string DNSHostName;
  [Description("The DNSDomain property indicates an organization name followed by a period and an extension that indicates the type of organization, such as microsoft.com. The name can be any combination of the letters A through Z, the numerals 0 through 9, and the hyphen (-), plus the period (.) character used as a separator.\nExample: microsoft.com") : Amended ToSubclass] string DNSDomain;
  [Description("The DNSServerSearchOrder property indicates an ordered list of server IP addresses to be used in querying for DNS Servers.") : Amended ToSubclass] string DNSServerSearchOrder[];
  [Description("The DNSDomainSuffixSearchOrder property specifies the DNS domain suffixes to be appended to the end of host names during name resolution. When attempting to resolve a fully qualified domain name (FQDN) from a host only name, the system will first append the local domain name. If this is not successful, the system will use the domain suffix list to create additional FQDNs in the order listed and query DNS servers for each.\nExample: samples.microsoft.com example.microsoft.com") : Amended ToSubclass] string DNSDomainSuffixSearchOrder[];
  [Description("The DNSEnabledForWINSResolution property indicates whether the Domain Name System (DNS) is enabled for name resolution over Windows Internet Naming Service (WINS) resolution. If the name cannot be resolved using DNS, the name request is forwarded to WINS for resolution.") : Amended ToSubclass] boolean DNSEnabledForWINSResolution;
  [Description("The WINSEnableLMHostsLookup property indicates whether local lookup files are used. Lookup files will contain a map of IP addresses to host names. If they exist on the local system, they will be found in %SystemRoot%\\system32\\drivers\\etc.") : Amended ToSubclass] boolean WINSEnableLMHostsLookup;
  [Description("The WINSPrimaryServer property indicates the IP address for the primary WINS server. ") : Amended ToSubclass] string WINSPrimaryServer;
  [Description("The WINSSecondaryServer property indicates the IP address for the secondary WINS server. ") : Amended ToSubclass] string WINSSecondaryServer;
  [Description("The WINSHostLookupFile property contains a path to a WINS lookup file on the local system. This file will contain a map of IP addresses to host names. If the file specified in this property is found, it will be copied to the %SystemRoot%\\system32\\drivers\\etc folder of the local system. Valid only if the WINSEnableLMHostsLookup property is TRUE.") : Amended ToSubclass] string WINSHostLookupFile;
  [Description("The WINSScopeID property provides a way to isolate a group of computer systems that communicate with each other only. The Scope ID is a character string value that is appended to the end of the NetBIOS name. It is used for all NetBIOS transactions  over TCP/IP communications from that computer system. Computers configured with identical Scope IDs are able to communicate with this computer. TCP/IP clients with different Scope IDs disregard packets from computers with this Scope ID. Valid only when the EnableWINS method executes successfully.") : Amended ToSubclass] string WINSScopeID;
  [Description("The TcpipNetbiosOptions property specifies a bitmap of the possible settings related to NetBIOS over TCP/IP. Windows 2000 only.") : Amended ToSubclass,Values{"EnableNetbiosViaDhcp", "EnableNetbios", "DisableNetbios"} : Amended ToSubclass] uint32 TcpipNetbiosOptions;
  [Description("The IPXVirtualNetNumber property uniquely identifies the computer system on the network. It is represented in the form of an eight-character hexadecimal digit. Windows NT/2000 uses the virtual network number (also known as an internal network number) for internal routing.") : Amended ToSubclass] string IPXVirtualNetNumber;
  [Description("The IPXNetworkNumber property represents an array of characters that uniquely identifies a frame/network adapter combination on the computer system. The NetWare Link (NWLink) IPX/SPX-compatible transport in Windows 2000 and Windows NT 4.0 and greater uses two distinctly different types of network numbers. This number is sometimes referred to as the external network number. It must be unique for each network segment. The order in this string list will correspond item-for-item with the elements in the IPXFrameType property.") : Amended ToSubclass] string IPXNetworkNumber[];
  [Description("The IPXFrameType property represents an integer array of frame type identifiers. The values in this array correspond to the elements in the IPXNetworkNumber.") : Amended ToSubclass,Values{"Ethernet II", "Ethernet 802.3", "Ethernet 802.2", "Ethernet SNAP", "AUTO"} : Amended ToSubclass] uint32 IPXFrameType[];
  [Description("The IPXMediaType property represents an Internetworking Packet Exchange (IPX) media type identifier.") : Amended ToSubclass,Values{"Ethernet", "Token ring", "FDDI", "ARCNET"} : Amended ToSubclass] uint32 IPXMediaType;
  [Description("The EnableDHCP method enables the Dynamic Host Configuration Protocol (DHCP) for service with this network adapter. DHCP allows IP addresses to be dynamic allocated. The method returns an integer value that can be interpretted as follows: \n0 - Successful completion, no reboot required\n1 - Successful completion, reboot required\n64 - Method not supported on this platform\n65 - Unknown failure\n66 - Invalid subnet mask\n67 - An error occurred while processing an Instance that was returned\n68 - Invalid input parameter\n69 - More than 5 gateways specified\n70 - Invalid IP  address\n71 - Invalid gateway IP address\n72 - An error occurred while accessing the Registry for the requested information\n73 - Invalid domain name\n74 - Invalid host name\n75 - No primary/secondary WINS server defined\n76 - Invalid file\n77 - Invalid system path\n78 - File copy failed\n79 - Invalid security parameter\n80 - Unable to configure TCP/IP service\n81 - Unable to configure DHCP service\n82 - Unable to renew DHCP lease\n83 - Unable to release DHCP lease\n84 - IP not enabled on adapter\n85 - IPX not enabled on adapter\n86 - Frame/network number bounds error\n87 - Invalid frame type\n88 - Invalid network number\n89 - Duplicate network number\n90 - Parameter out of bounds\n91 - Access denied\n92 - Out of memory\n93 - Already exists\n94 - Path, file or object not found\n95 - Unable to notify service\n96 - Unable to notify DNS service\n97 - Interface not configurable\n98 - Not all DHCP leases could be released/renewed\n100 - DHCP not enabled on adapter\nOther - For integer values other than those listed above, refer to Win32 error code documentation. ") : Amended ToSubclass,Values{"Successful completion, no reboot required", "Successful completion, reboot required", "Method not supported on this platform", "Unknown failure", "Invalid subnet mask", "An error occurred while processing an Instance that was returned", "Invalid input parameter", "More than 5 gateways specified", "Invalid IP  address", "Invalid gateway IP address", "An error occurred while accessing the Registry for the requested information", "Invalid domain name", "Invalid host name", "No primary/secondary WINS server defined", "Invalid file", "Invalid system path", "File copy failed", "Invalid security parameter", "Unable to configure TCP/IP service", "Unable to configure DHCP service", "Unable to renew DHCP lease", "Unable to release DHCP lease", "IP not enabled on adapter", "IPX not enabled on adapter", "Frame/network number bounds error", "Invalid frame type", "Invalid network number", "Duplicate network number", "Parameter out of bounds", "Access denied", "Out of memory", "Already exists", "Path, file or object not found", "Unable to notify service", "Unable to notify DNS service", "Interface not configurable", "Not all DHCP leases could be released/renewed", "DHCP not enabled on adapter", "Other"} : Amended ToSubclass] uint32 EnableDHCP();
  [Description("The RenewDHCPLease method renews the IP address on specific DHCP-enabled network adapters. The lease for the IP address assigned via a DHCP server has an expiration date that the client must renew if it intends to continue use of the assigned IP address. The method returns an integer value that can be interpretted as follows: \n0 - Successful completion, no reboot required\n1 - Successful completion, reboot required\n64 - Method not supported on this platform\n65 - Unknown failure\n66 - Invalid subnet mask\n67 - An error occurred while processing an Instance that was returned\n68 - Invalid input parameter\n69 - More than 5 gateways specified\n70 - Invalid IP  address\n71 - Invalid gateway IP address\n72 - An error occurred while accessing the Registry for the requested information\n73 - Invalid domain name\n74 - Invalid host name\n75 - No primary/secondary WINS server defined\n76 - Invalid file\n77 - Invalid system path\n78 - File copy failed\n79 - Invalid security parameter\n80 - Unable to configure TCP/IP service\n81 - Unable to configure DHCP service\n82 - Unable to renew DHCP lease\n83 - Unable to release DHCP lease\n84 - IP not enabled on adapter\n85 - IPX not enabled on adapter\n86 - Frame/network number bounds error\n87 - Invalid frame type\n88 - Invalid network number\n89 - Duplicate network number\n90 - Parameter out of bounds\n91 - Access denied\n92 - Out of memory\n93 - Already exists\n94 - Path, file or object not found\n95 - Unable to notify service\n96 - Unable to notify DNS service\n97 - Interface not configurable\n98 - Not all DHCP leases could be released/renewed\n100 - DHCP not enabled on adapter\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Successful completion, no reboot required", "Successful completion, reboot required", "Method not supported on this platform", "Unknown failure", "Invalid subnet mask", "An error occurred while processing an Instance that was returned", "Invalid input parameter", "More than 5 gateways specified", "Invalid IP  address", "Invalid gateway IP address", "An error occurred while accessing the Registry for the requested information", "Invalid domain name", "Invalid host name", "No primary/secondary WINS server defined", "Invalid file", "Invalid system path", "File copy failed", "Invalid security parameter", "Unable to configure TCP/IP service", "Unable to configure DHCP service", "Unable to renew DHCP lease", "Unable to release DHCP lease", "IP not enabled on adapter", "IPX not enabled on adapter", "Frame/network number bounds error", "Invalid frame type", "Invalid network number", "Duplicate network number", "Parameter out of bounds", "Access denied", "Out of memory", "Already exists", "Path, file or object not found", "Unable to notify service", "Unable to notify DNS service", "Interface not configurable", "Not all DHCP leases could be released/renewed", "DHCP not enabled on adapter", "Other"} : Amended ToSubclass] uint32 RenewDHCPLease();
  [Description("The RenewDHCPLeaseAll method renews the IP addresses on all DHCP-enabled network adapters. The lease for the IP address assigned via a DHCP server has an expiration date that the client must renew if it intends to continue use of the assigned IP address. The method returns an integer value that can be interpretted as follows: \n0 - Successful completion, no reboot required\n1 - Successful completion, reboot required\n64 - Method not supported on this platform\n65 - Unknown failure\n66 - Invalid subnet mask\n67 - An error occurred while processing an Instance that was returned\n68 - Invalid input parameter\n69 - More than 5 gateways specified\n70 - Invalid IP  address\n71 - Invalid gateway IP address\n72 - An error occurred while accessing the Registry for the requested information\n73 - Invalid domain name\n74 - Invalid host name\n75 - No primary/secondary WINS server defined\n76 - Invalid file\n77 - Invalid system path\n78 - File copy failed\n79 - Invalid security parameter\n80 - Unable to configure TCP/IP service\n81 - Unable to configure DHCP service\n82 - Unable to renew DHCP lease\n83 - Unable to release DHCP lease\n84 - IP not enabled on adapter\n85 - IPX not enabled on adapter\n86 - Frame/network number bounds error\n87 - Invalid frame type\n88 - Invalid network number\n89 - Duplicate network number\n90 - Parameter out of bounds\n91 - Access denied\n92 - Out of memory\n93 - Already exists\n94 - Path, file or object not found\n95 - Unable to notify service\n96 - Unable to notify DNS service\n97 - Interface not configurable\n98 - Not all DHCP leases could be released/renewed\n100 - DHCP not enabled on adapter\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Successful completion, no reboot required", "Successful completion, reboot required", "Method not supported on this platform", "Unknown failure", "Invalid subnet mask", "An error occurred while processing an Instance that was returned", "Invalid input parameter", "More than 5 gateways specified", "Invalid IP  address", "Invalid gateway IP address", "An error occurred while accessing the Registry for the requested information", "Invalid domain name", "Invalid host name", "No primary/secondary WINS server defined", "Invalid file", "Invalid system path", "File copy failed", "Invalid security parameter", "Unable to configure TCP/IP service", "Unable to configure DHCP service", "Unable to renew DHCP lease", "Unable to release DHCP lease", "IP not enabled on adapter", "IPX not enabled on adapter", "Frame/network number bounds error", "Invalid frame type", "Invalid network number", "Duplicate network number", "Parameter out of bounds", "Access denied", "Out of memory", "Already exists", "Path, file or object not found", "Unable to notify service", "Unable to notify DNS service", "Interface not configurable", "Not all DHCP leases could be released/renewed", "DHCP not enabled on adapter", "Other"} : Amended ToSubclass] uint32 RenewDHCPLeaseAll();
  [Description("The ReleaseDHCPLease method releases the IP address bound to a specific DHCP enabled network adapter. WARNING: If DHCP is enabled on this local computer system, the option disables TCP/IP on this specific network adapter. Unless you have an alternate path to the target system; that is, another TCP/IP bound network adapter, all TCP/IP communications will be lost. The method returns an integer value that can be interpretted as follows: \n0 - Successful completion, no reboot required\n1 - Successful completion, reboot required\n64 - Method not supported on this platform\n65 - Unknown failure\n66 - Invalid subnet mask\n67 - An error occurred while processing an Instance that was returned\n68 - Invalid input parameter\n69 - More than 5 gateways specified\n70 - Invalid IP  address\n71 - Invalid gateway IP address\n72 - An error occurred while accessing the Registry for the requested information\n73 - Invalid domain name\n74 - Invalid host name\n75 - No primary/secondary WINS server defined\n76 - Invalid file\n77 - Invalid system path\n78 - File copy failed\n79 - Invalid security parameter\n80 - Unable to configure TCP/IP service\n81 - Unable to configure DHCP service\n82 - Unable to renew DHCP lease\n83 - Unable to release DHCP lease\n84 - IP not enabled on adapter\n85 - IPX not enabled on adapter\n86 - Frame/network number bounds error\n87 - Invalid frame type\n88 - Invalid network number\n89 - Duplicate network number\n90 - Parameter out of bounds\n91 - Access denied\n92 - Out of memory\n93 - Already exists\n94 - Path, file or object not found\n95 - Unable to notify service\n96 - Unable to notify DNS service\n97 - Interface not configurable\n98 - Not all DHCP leases could be released/renewed\n100 - DHCP not enabled on adapter\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Successful completion, no reboot required", "Successful completion, reboot required", "Method not supported on this platform", "Unknown failure", "Invalid subnet mask", "An error occurred while processing an Instance that was returned", "Invalid input parameter", "More than 5 gateways specified", "Invalid IP  address", "Invalid gateway IP address", "An error occurred while accessing the Registry for the requested information", "Invalid domain name", "Invalid host name", "No primary/secondary WINS server defined", "Invalid file", "Invalid system path", "File copy failed", "Invalid security parameter", "Unable to configure TCP/IP service", "Unable to configure DHCP service", "Unable to renew DHCP lease", "Unable to release DHCP lease", "IP not enabled on adapter", "IPX not enabled on adapter", "Frame/network number bounds error", "Invalid frame type", "Invalid network number", "Duplicate network number", "Parameter out of bounds", "Access denied", "Out of memory", "Already exists", "Path, file or object not found", "Unable to notify service", "Unable to notify DNS service", "Interface not configurable", "Not all DHCP leases could be released/renewed", "DHCP not enabled on adapter", "Other"} : Amended ToSubclass] uint32 ReleaseDHCPLease();
  [Description("The ReleaseDHCPLeaseAll method releases the IP addresses bound to all DHCP enabled network adapters. WARNING: If DHCP is enabled on this local computer system, the option will terminate all DHCP TCP/IP connections.The method returns an integer value that can be interpretted as follows: \n0 - Successful completion, no reboot required\n1 - Successful completion, reboot required\n64 - Method not supported on this platform\n65 - Unknown failure\n66 - Invalid subnet mask\n67 - An error occurred while processing an Instance that was returned\n68 - Invalid input parameter\n69 - More than 5 gateways specified\n70 - Invalid IP  address\n71 - Invalid gateway IP address\n72 - An error occurred while accessing the Registry for the requested information\n73 - Invalid domain name\n74 - Invalid host name\n75 - No primary/secondary WINS server defined\n76 - Invalid file\n77 - Invalid system path\n78 - File copy failed\n79 - Invalid security parameter\n80 - Unable to configure TCP/IP service\n81 - Unable to configure DHCP service\n82 - Unable to renew DHCP lease\n83 - Unable to release DHCP lease\n84 - IP not enabled on adapter\n85 - IPX not enabled on adapter\n86 - Frame/network number bounds error\n87 - Invalid frame type\n88 - Invalid network number\n89 - Duplicate network number\n90 - Parameter out of bounds\n91 - Access denied\n92 - Out of memory\n93 - Already exists\n94 - Path, file or object not found\n95 - Unable to notify service\n96 - Unable to notify DNS service\n97 - Interface not configurable\n98 - Not all DHCP leases could be released/renewed\n100 - DHCP not enabled on adapter\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Successful completion, no reboot required", "Successful completion, reboot required", "Method not supported on this platform", "Unknown failure", "Invalid subnet mask", "An error occurred while processing an Instance that was returned", "Invalid input parameter", "More than 5 gateways specified", "Invalid IP  address", "Invalid gateway IP address", "An error occurred while accessing the Registry for the requested information", "Invalid domain name", "Invalid host name", "No primary/secondary WINS server defined", "Invalid file", "Invalid system path", "File copy failed", "Invalid security parameter", "Unable to configure TCP/IP service", "Unable to configure DHCP service", "Unable to renew DHCP lease", "Unable to release DHCP lease", "IP not enabled on adapter", "IPX not enabled on adapter", "Frame/network number bounds error", "Invalid frame type", "Invalid network number", "Duplicate network number", "Parameter out of bounds", "Access denied", "Out of memory", "Already exists", "Path, file or object not found", "Unable to notify service", "Unable to notify DNS service", "Interface not configurable", "Not all DHCP leases could be released/renewed", "DHCP not enabled on adapter", "Other"} : Amended ToSubclass] uint32 ReleaseDHCPLeaseAll();
  [Description("The EnableStatic method enables static TCP/IP addressing for the target network adapter. As a result, DHCP for this network adapter is disabled. The method returns an integer value that can be interpretted as follows: \n0 - Successful completion, no reboot required\n1 - Successful completion, reboot required\n64 - Method not supported on this platform\n65 - Unknown failure\n66 - Invalid subnet mask\n67 - An error occurred while processing an Instance that was returned\n68 - Invalid input parameter\n69 - More than 5 gateways specified\n70 - Invalid IP  address\n71 - Invalid gateway IP address\n72 - An error occurred while accessing the Registry for the requested information\n73 - Invalid domain name\n74 - Invalid host name\n75 - No primary/secondary WINS server defined\n76 - Invalid file\n77 - Invalid system path\n78 - File copy failed\n79 - Invalid security parameter\n80 - Unable to configure TCP/IP service\n81 - Unable to configure DHCP service\n82 - Unable to renew DHCP lease\n83 - Unable to release DHCP lease\n84 - IP not enabled on adapter\n85 - IPX not enabled on adapter\n86 - Frame/network number bounds error\n87 - Invalid frame type\n88 - Invalid network number\n89 - Duplicate network number\n90 - Parameter out of bounds\n91 - Access denied\n92 - Out of memory\n93 - Already exists\n94 - Path, file or object not found\n95 - Unable to notify service\n96 - Unable to notify DNS service\n97 - Interface not configurable\n98 - Not all DHCP leases could be released/renewed\n100 - DHCP not enabled on adapter\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Successful completion, no reboot required", "Successful completion, reboot required", "Method not supported on this platform", "Unknown failure", "Invalid subnet mask", "An error occurred while processing an Instance that was returned", "Invalid input parameter", "More than 5 gateways specified", "Invalid IP  address", "Invalid gateway IP address", "An error occurred while accessing the Registry for the requested information", "Invalid domain name", "Invalid host name", "No primary/secondary WINS server defined", "Invalid file", "Invalid system path", "File copy failed", "Invalid security parameter", "Unable to configure TCP/IP service", "Unable to configure DHCP service", "Unable to renew DHCP lease", "Unable to release DHCP lease", "IP not enabled on adapter", "IPX not enabled on adapter", "Frame/network number bounds error", "Invalid frame type", "Invalid network number", "Duplicate network number", "Parameter out of bounds", "Access denied", "Out of memory", "Already exists", "Path, file or object not found", "Unable to notify service", "Unable to notify DNS service", "Interface not configurable", "Not all DHCP leases could be released/renewed", "DHCP not enabled on adapter", "Other"} : Amended ToSubclass] uint32 EnableStatic([In : ToSubclass,Description("The IPAddress parameter lists all of the static IP addresses for the current network adapter. \nExample: 155.34.22.0") : Amended ToSubclass] string IPAddress[],[In : ToSubclass,Description("The SubnetMask parameter contains the subnet masks that complement the values in the IPAddress parameter.\nExample: 255.255.0.0") : Amended ToSubclass] string SubnetMask[]);
  [Description("The SetGateways method is used to specify a list of gateways for routing packets destined for a different subnet than the one this adapter is connected to.  A more specific route should not exist for this subnet. The method returns an integer value that can be interpretted as follows: \n0 - Successful completion, no reboot required\n1 - Successful completion, reboot required\n64 - Method not supported on this platform\n65 - Unknown failure\n66 - Invalid subnet mask\n67 - An error occurred while processing an Instance that was returned\n68 - Invalid input parameter\n69 - More than 5 gateways specified\n70 - Invalid IP  address\n71 - Invalid gateway IP address\n72 - An error occurred while accessing the Registry for the requested information\n73 - Invalid domain name\n74 - Invalid host name\n75 - No primary/secondary WINS server defined\n76 - Invalid file\n77 - Invalid system path\n78 - File copy failed\n79 - Invalid security parameter\n80 - Unable to configure TCP/IP service\n81 - Unable to configure DHCP service\n82 - Unable to renew DHCP lease\n83 - Unable to release DHCP lease\n84 - IP not enabled on adapter\n85 - IPX not enabled on adapter\n86 - Frame/network number bounds error\n87 - Invalid frame type\n88 - Invalid network number\n89 - Duplicate network number\n90 - Parameter out of bounds\n91 - Access denied\n92 - Out of memory\n93 - Already exists\n94 - Path, file or object not found\n95 - Unable to notify service\n96 - Unable to notify DNS service\n97 - Interface not configurable\n98 - Not all DHCP leases could be released/renewed\n100 - DHCP not enabled on adapter\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Successful completion, no reboot required", "Successful completion, reboot required", "Method not supported on this platform", "Unknown failure", "Invalid subnet mask", "An error occurred while processing an Instance that was returned", "Invalid input parameter", "More than 5 gateways specified", "Invalid IP  address", "Invalid gateway IP address", "An error occurred while accessing the Registry for the requested information", "Invalid domain name", "Invalid host name", "No primary/secondary WINS server defined", "Invalid file", "Invalid system path", "File copy failed", "Invalid security parameter", "Unable to configure TCP/IP service", "Unable to configure DHCP service", "Unable to renew DHCP lease", "Unable to release DHCP lease", "IP not enabled on adapter", "IPX not enabled on adapter", "Frame/network number bounds error", "Invalid frame type", "Invalid network number", "Duplicate network number", "Parameter out of bounds", "Access denied", "Out of memory", "Already exists", "Path, file or object not found", "Unable to notify service", "Unable to notify DNS service", "Interface not configurable", "Not all DHCP leases could be released/renewed", "DHCP not enabled on adapter", "Other"} : Amended ToSubclass] uint32 SetGateways([In : ToSubclass,Description("The DefaultIPGateway is an input parameter to the SetGateways method. It contains a list of IP addresses to gateways where network packets should be routed.") : Amended ToSubclass] string DefaultIPGateway[],[In : ToSubclass,Description("The GatewayCostMetric parameter assigns an value ranging from 1 to 9999, used to calculate fastest and most reliable routes. The values of this parameter correspondence with the values in the DefaultIPGateway[] parameter. The default value for a gateway is 1. This parameter is for Windows 2000 only.") : Amended ToSubclass] uint16 GatewayCostMetric[]);
  [Description("The EnableDNS method enables the Domain Name System (DNS) for service on TCP/IP-bound network adapters. The method returns an integer value that can be interpretted as follows: \n0 - Successful completion, no reboot required\n1 - Successful completion, reboot required\n64 - Method not supported on this platform\n65 - Unknown failure\n66 - Invalid subnet mask\n67 - An error occurred while processing an Instance that was returned\n68 - Invalid input parameter\n69 - More than 5 gateways specified\n70 - Invalid IP  address\n71 - Invalid gateway IP address\n72 - An error occurred while accessing the Registry for the requested information\n73 - Invalid domain name\n74 - Invalid host name\n75 - No primary/secondary WINS server defined\n76 - Invalid file\n77 - Invalid system path\n78 - File copy failed\n79 - Invalid security parameter\n80 - Unable to configure TCP/IP service\n81 - Unable to configure DHCP service\n82 - Unable to renew DHCP lease\n83 - Unable to release DHCP lease\n84 - IP not enabled on adapter\n85 - IPX not enabled on adapter\n86 - Frame/network number bounds error\n87 - Invalid frame type\n88 - Invalid network number\n89 - Duplicate network number\n90 - Parameter out of bounds\n91 - Access denied\n92 - Out of memory\n93 - Already exists\n94 - Path, file or object not found\n95 - Unable to notify service\n96 - Unable to notify DNS service\n97 - Interface not configurable\n98 - Not all DHCP leases could be released/renewed\n100 - DHCP not enabled on adapter\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Successful completion, no reboot required", "Successful completion, reboot required", "Method not supported on this platform", "Unknown failure", "Invalid subnet mask", "An error occurred while processing an Instance that was returned", "Invalid input parameter", "More than 5 gateways specified", "Invalid IP  address", "Invalid gateway IP address", "An error occurred while accessing the Registry for the requested information", "Invalid domain name", "Invalid host name", "No primary/secondary WINS server defined", "Invalid file", "Invalid system path", "File copy failed", "Invalid security parameter", "Unable to configure TCP/IP service", "Unable to configure DHCP service", "Unable to renew DHCP lease", "Unable to release DHCP lease", "IP not enabled on adapter", "IPX not enabled on adapter", "Frame/network number bounds error", "Invalid frame type", "Invalid network number", "Duplicate network number", "Parameter out of bounds", "Access denied", "Out of memory", "Already exists", "Path, file or object not found", "Unable to notify service", "Unable to notify DNS service", "Interface not configurable", "Not all DHCP leases could be released/renewed", "DHCP not enabled on adapter", "Other"} : Amended ToSubclass] uint32 EnableDNS([In : ToSubclass,Description("The DNSHostName parameter specifies the name of the DNS host to be enabled by this method.\nExample: corpdns") : Amended ToSubclass] string DNSHostName,[In : ToSubclass,Description("The DNSDomain parameter specifies the DNS's domain. This parameter is represented by an organization name followed by a period, then an extension that indicates the type of organization.\n Example: microsoft.com") : Amended ToSubclass] string DNSDomain,[In : ToSubclass,Description("The DNSServerSearchOrder parameter specifies the list of server IP addresses to query for DNS servers.") : Amended ToSubclass] string DNSServerSearchOrder[],[In : ToSubclass,Description("The DNSDomainSuffixSearchOrder parameter specifies the DNS domain suffixes that is appended to the host names during name resolution. When attempting to resolve a fully qualified domain name (FQDN) from a host only name, the system appends the local domain name. If this is not successful, the system uses the domain suffix list to create additional FQDNs in the order listed, and queries DNS servers for each one.") : Amended ToSubclass] string DNSDomainSuffixSearchOrder[]);
  [Description("The SetDNSDomain method allows for the setting of the DNS domain. This is an instance dependent method call that applies on a per adapter basis. On Windows 2000 the setting applies to the targeted adapter. On NT4 this setting is global.The method returns an integer value that can be interpretted as follows: \n0 - Successful completion, no reboot required\n1 - Successful completion, reboot required\n64 - Method not supported on this platform\n65 - Unknown failure\n66 - Invalid subnet mask\n67 - An error occurred while processing an Instance that was returned\n68 - Invalid input parameter\n69 - More than 5 gateways specified\n70 - Invalid IP  address\n71 - Invalid gateway IP address\n72 - An error occurred while accessing the Registry for the requested information\n73 - Invalid domain name\n74 - Invalid host name\n75 - No primary/secondary WINS server defined\n76 - Invalid file\n77 - Invalid system path\n78 - File copy failed\n79 - Invalid security parameter\n80 - Unable to configure TCP/IP service\n81 - Unable to configure DHCP service\n82 - Unable to renew DHCP lease\n83 - Unable to release DHCP lease\n84 - IP not enabled on adapter\n85 - IPX not enabled on adapter\n86 - Frame/network number bounds error\n87 - Invalid frame type\n88 - Invalid network number\n89 - Duplicate network number\n90 - Parameter out of bounds\n91 - Access denied\n92 - Out of memory\n93 - Already exists\n94 - Path, file or object not found\n95 - Unable to notify service\n96 - Unable to notify DNS service\n97 - Interface not configurable\n98 - Not all DHCP leases could be released/renewed\n100 - DHCP not enabled on adapter\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Successful completion, no reboot required", "Successful completion, reboot required", "Method not supported on this platform", "Unknown failure", "Invalid subnet mask", "An error occurred while processing an Instance that was returned", "Invalid input parameter", "More than 5 gateways specified", "Invalid IP  address", "Invalid gateway IP address", "An error occurred while accessing the Registry for the requested information", "Invalid domain name", "Invalid host name", "No primary/secondary WINS server defined", "Invalid file", "Invalid system path", "File copy failed", "Invalid security parameter", "Unable to configure TCP/IP service", "Unable to configure DHCP service", "Unable to renew DHCP lease", "Unable to release DHCP lease", "IP not enabled on adapter", "IPX not enabled on adapter", "Frame/network number bounds error", "Invalid frame type", "Invalid network number", "Duplicate network number", "Parameter out of bounds", "Access denied", "Out of memory", "Already exists", "Path, file or object not found", "Unable to notify service", "Unable to notify DNS service", "Interface not configurable", "Not all DHCP leases could be released/renewed", "DHCP not enabled on adapter", "Other"} : Amended ToSubclass] uint32 SetDNSDomain([In : ToSubclass,Description("The DNSDomain parameter indicates the domain the DNSis associated with and is represented by an organization name followed by a period and an extension that indicates the type of organization.\nExample: microsoft.com.") : Amended ToSubclass] string DNSDomain);
  [Description("The SetDNSServerSearchOrder method allows for the setting of the server search order as a array of elements. This is an instance dependent method call that applies on a per adapter basis. On Windows 2000 the setting applies to the targeted adapter. On NT4 this setting is global.The method returns an integer value that can be interpretted as follows: \n0 - Successful completion, no reboot required\n1 - Successful completion, reboot required\n64 - Method not supported on this platform\n65 - Unknown failure\n66 - Invalid subnet mask\n67 - An error occurred while processing an Instance that was returned\n68 - Invalid input parameter\n69 - More than 5 gateways specified\n70 - Invalid IP  address\n71 - Invalid gateway IP address\n72 - An error occurred while accessing the Registry for the requested information\n73 - Invalid domain name\n74 - Invalid host name\n75 - No primary/secondary WINS server defined\n76 - Invalid file\n77 - Invalid system path\n78 - File copy failed\n79 - Invalid security parameter\n80 - Unable to configure TCP/IP service\n81 - Unable to configure DHCP service\n82 - Unable to renew DHCP lease\n83 - Unable to release DHCP lease\n84 - IP not enabled on adapter\n85 - IPX not enabled on adapter\n86 - Frame/network number bounds error\n87 - Invalid frame type\n88 - Invalid network number\n89 - Duplicate network number\n90 - Parameter out of bounds\n91 - Access denied\n92 - Out of memory\n93 - Already exists\n94 - Path, file or object not found\n95 - Unable to notify service\n96 - Unable to notify DNS service\n97 - Interface not configurable\n98 - Not all DHCP leases could be released/renewed\n100 - DHCP not enabled on adapter\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Successful completion, no reboot required", "Successful completion, reboot required", "Method not supported on this platform", "Unknown failure", "Invalid subnet mask", "An error occurred while processing an Instance that was returned", "Invalid input parameter", "More than 5 gateways specified", "Invalid IP  address", "Invalid gateway IP address", "An error occurred while accessing the Registry for the requested information", "Invalid domain name", "Invalid host name", "No primary/secondary WINS server defined", "Invalid file", "Invalid system path", "File copy failed", "Invalid security parameter", "Unable to configure TCP/IP service", "Unable to configure DHCP service", "Unable to renew DHCP lease", "Unable to release DHCP lease", "IP not enabled on adapter", "IPX not enabled on adapter", "Frame/network number bounds error", "Invalid frame type", "Invalid network number", "Duplicate network number", "Parameter out of bounds", "Access denied", "Out of memory", "Already exists", "Path, file or object not found", "Unable to notify service", "Unable to notify DNS service", "Interface not configurable", "Not all DHCP leases could be released/renewed", "DHCP not enabled on adapter", "Other"} : Amended ToSubclass] uint32 SetDNSServerSearchOrder([In : ToSubclass,Description("The DNSServerSearchOrder parameter indicates the list of server IP addresses to query for DNS Servers.\nExample:130.215.24.1 157.54.164.1") : Amended ToSubclass] string DNSServerSearchOrder[]);
  [Description("The SetDNSSuffixSearchOrder method allows for the setting of the suffix search order as a array of elements. This is an instance independent method call that applies across all adapters. Windows NT only. The method returns an integer value that can be interpretted as follows: \n0 - Successful completion, no reboot required\n1 - Successful completion, reboot required\n64 - Method not supported on this platform\n65 - Unknown failure\n66 - Invalid subnet mask\n67 - An error occurred while processing an Instance that was returned\n68 - Invalid input parameter\n69 - More than 5 gateways specified\n70 - Invalid IP  address\n71 - Invalid gateway IP address\n72 - An error occurred while accessing the Registry for the requested information\n73 - Invalid domain name\n74 - Invalid host name\n75 - No primary/secondary WINS server defined\n76 - Invalid file\n77 - Invalid system path\n78 - File copy failed\n79 - Invalid security parameter\n80 - Unable to configure TCP/IP service\n81 - Unable to configure DHCP service\n82 - Unable to renew DHCP lease\n83 - Unable to release DHCP lease\n84 - IP not enabled on adapter\n85 - IPX not enabled on adapter\n86 - Frame/network number bounds error\n87 - Invalid frame type\n88 - Invalid network number\n89 - Duplicate network number\n90 - Parameter out of bounds\n91 - Access denied\n92 - Out of memory\n93 - Already exists\n94 - Path, file or object not found\n95 - Unable to notify service\n96 - Unable to notify DNS service\n97 - Interface not configurable\n98 - Not all DHCP leases could be released/renewed\n100 - DHCP not enabled on adapter\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Successful completion, no reboot required", "Successful completion, reboot required", "Method not supported on this platform", "Unknown failure", "Invalid subnet mask", "An error occurred while processing an Instance that was returned", "Invalid input parameter", "More than 5 gateways specified", "Invalid IP  address", "Invalid gateway IP address", "An error occurred while accessing the Registry for the requested information", "Invalid domain name", "Invalid host name", "No primary/secondary WINS server defined", "Invalid file", "Invalid system path", "File copy failed", "Invalid security parameter", "Unable to configure TCP/IP service", "Unable to configure DHCP service", "Unable to renew DHCP lease", "Unable to release DHCP lease", "IP not enabled on adapter", "IPX not enabled on adapter", "Frame/network number bounds error", "Invalid frame type", "Invalid network number", "Duplicate network number", "Parameter out of bounds", "Access denied", "Out of memory", "Already exists", "Path, file or object not found", "Unable to notify service", "Unable to notify DNS service", "Interface not configurable", "Not all DHCP leases could be released/renewed", "DHCP not enabled on adapter", "Other"} : Amended ToSubclass] uint32 SetDNSSuffixSearchOrder([In : ToSubclass,Description("The DNSServerSearchOrder parameter indicates the list of server IP addresses suffixes to query for DNS Servers.\nExample:130.215.24.1 157.54.164.1") : Amended ToSubclass] string DNSDomainSuffixSearchOrder[]);
  [Description("The SetDynamicDNSRegistration method is used to indicate dynamic DNS registration of IP addresses for this IP bound adapter. The method returns an integer value that can be interpretted as follows: \n0 - Successful completion, no reboot required\n1 - Successful completion, reboot required\n64 - Method not supported on this platform\n65 - Unknown failure\n66 - Invalid subnet mask\n67 - An error occurred while processing an Instance that was returned\n68 - Invalid input parameter\n69 - More than 5 gateways specified\n70 - Invalid IP  address\n71 - Invalid gateway IP address\n72 - An error occurred while accessing the Registry for the requested information\n73 - Invalid domain name\n74 - Invalid host name\n75 - No primary/secondary WINS server defined\n76 - Invalid file\n77 - Invalid system path\n78 - File copy failed\n79 - Invalid security parameter\n80 - Unable to configure TCP/IP service\n81 - Unable to configure DHCP service\n82 - Unable to renew DHCP lease\n83 - Unable to release DHCP lease\n84 - IP not enabled on adapter\n85 - IPX not enabled on adapter\n86 - Frame/network number bounds error\n87 - Invalid frame type\n88 - Invalid network number\n89 - Duplicate network number\n90 - Parameter out of bounds\n91 - Access denied\n92 - Out of memory\n93 - Already exists\n94 - Path, file or object not found\n95 - Unable to notify service\n96 - Unable to notify DNS service\n97 - Interface not configurable\n98 - Not all DHCP leases could be released/renewed\n100 - DHCP not enabled on adapter\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Successful completion, no reboot required", "Successful completion, reboot required", "Method not supported on this platform", "Unknown failure", "Invalid subnet mask", "An error occurred while processing an Instance that was returned", "Invalid input parameter", "More than 5 gateways specified", "Invalid IP  address", "Invalid gateway IP address", "An error occurred while accessing the Registry for the requested information", "Invalid domain name", "Invalid host name", "No primary/secondary WINS server defined", "Invalid file", "Invalid system path", "File copy failed", "Invalid security parameter", "Unable to configure TCP/IP service", "Unable to configure DHCP service", "Unable to renew DHCP lease", "Unable to release DHCP lease", "IP not enabled on adapter", "IPX not enabled on adapter", "Frame/network number bounds error", "Invalid frame type", "Invalid network number", "Duplicate network number", "Parameter out of bounds", "Access denied", "Out of memory", "Already exists", "Path, file or object not found", "Unable to notify service", "Unable to notify DNS service", "Interface not configurable", "Not all DHCP leases could be released/renewed", "DHCP not enabled on adapter", "Other"} : Amended ToSubclass] uint32 SetDynamicDNSRegistration([In : ToSubclass,Description("The FullDNSRegistrationEnabled parameter specifies whether the IP addresses for this connection are registered in DNS under the computer's full DNS name. The full DNS name of the computer is displayed on the Network Identification tab of the System Control Panel. Windows 2000 only.") : Amended ToSubclass] boolean FullDNSRegistrationEnabled,[In : ToSubclass,Description("The DomainDNSRegistrationEnabled parameter specifies whether the IP addresses for this connection are registered in DNS under the domain name of this connection, in addition to registering under the computer's full DNS name. The domain name of this connection is either set via the method SetDNSDomain() or assigned by DHCP. The registered name is the host name of the computer with the domain name appended. This parameter has meaning only when FullDNSRegistrationEnabled is enabled. Default: FALSE. Windows 2000 only.") : Amended ToSubclass] boolean DomainDNSRegistrationEnabled);
  [Description("The SetIPConnectionMetric method is used to set the routing metric associated with this IP bound adapter. The method returns an integer value that can be interpretted as follows: \n0 - Successful completion, no reboot required\n1 - Successful completion, reboot required\n64 - Method not supported on this platform\n65 - Unknown failure\n66 - Invalid subnet mask\n67 - An error occurred while processing an Instance that was returned\n68 - Invalid input parameter\n69 - More than 5 gateways specified\n70 - Invalid IP  address\n71 - Invalid gateway IP address\n72 - An error occurred while accessing the Registry for the requested information\n73 - Invalid domain name\n74 - Invalid host name\n75 - No primary/secondary WINS server defined\n76 - Invalid file\n77 - Invalid system path\n78 - File copy failed\n79 - Invalid security parameter\n80 - Unable to configure TCP/IP service\n81 - Unable to configure DHCP service\n82 - Unable to renew DHCP lease\n83 - Unable to release DHCP lease\n84 - IP not enabled on adapter\n85 - IPX not enabled on adapter\n86 - Frame/network number bounds error\n87 - Invalid frame type\n88 - Invalid network number\n89 - Duplicate network number\n90 - Parameter out of bounds\n91 - Access denied\n92 - Out of memory\n93 - Already exists\n94 - Path, file or object not found\n95 - Unable to notify service\n96 - Unable to notify DNS service\n97 - Interface not configurable\n98 - Not all DHCP leases could be released/renewed\n100 - DHCP not enabled on adapter\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Successful completion, no reboot required", "Successful completion, reboot required", "Method not supported on this platform", "Unknown failure", "Invalid subnet mask", "An error occurred while processing an Instance that was returned", "Invalid input parameter", "More than 5 gateways specified", "Invalid IP  address", "Invalid gateway IP address", "An error occurred while accessing the Registry for the requested information", "Invalid domain name", "Invalid host name", "No primary/secondary WINS server defined", "Invalid file", "Invalid system path", "File copy failed", "Invalid security parameter", "Unable to configure TCP/IP service", "Unable to configure DHCP service", "Unable to renew DHCP lease", "Unable to release DHCP lease", "IP not enabled on adapter", "IPX not enabled on adapter", "Frame/network number bounds error", "Invalid frame type", "Invalid network number", "Duplicate network number", "Parameter out of bounds", "Access denied", "Out of memory", "Already exists", "Path, file or object not found", "Unable to notify service", "Unable to notify DNS service", "Interface not configurable", "Not all DHCP leases could be released/renewed", "DHCP not enabled on adapter", "Other"} : Amended ToSubclass] uint32 SetIPConnectionMetric([In : ToSubclass,Description("The IPConnectionMetric parameter assigns an value ranging from 1 to 9999, and indicates the cost of using the configured routes for this IP bound adapter and is the weighted value for those routes in the IP routing table. If there are multiple routes to a destination in the IP routing table, the route with the lowest metric is used. The default value is 1. Windows 2000 only.") : Amended ToSubclass] uint32 IPConnectionMetric);
  [Description("The SetWINSServer method sets the primary and secondary Windows Internet Naming Service (WINS) servers on this TCP/IP-bound network adapter. This method is applied independently of the network adapter. The method returns an integer value that can be interpretted as follows: \n0 - Successful completion, no reboot required\n1 - Successful completion, reboot required\n64 - Method not supported on this platform\n65 - Unknown failure\n66 - Invalid subnet mask\n67 - An error occurred while processing an Instance that was returned\n68 - Invalid input parameter\n69 - More than 5 gateways specified\n70 - Invalid IP  address\n71 - Invalid gateway IP address\n72 - An error occurred while accessing the Registry for the requested information\n73 - Invalid domain name\n74 - Invalid host name\n75 - No primary/secondary WINS server defined\n76 - Invalid file\n77 - Invalid system path\n78 - File copy failed\n79 - Invalid security parameter\n80 - Unable to configure TCP/IP service\n81 - Unable to configure DHCP service\n82 - Unable to renew DHCP lease\n83 - Unable to release DHCP lease\n84 - IP not enabled on adapter\n85 - IPX not enabled on adapter\n86 - Frame/network number bounds error\n87 - Invalid frame type\n88 - Invalid network number\n89 - Duplicate network number\n90 - Parameter out of bounds\n91 - Access denied\n92 - Out of memory\n93 - Already exists\n94 - Path, file or object not found\n95 - Unable to notify service\n96 - Unable to notify DNS service\n97 - Interface not configurable\n98 - Not all DHCP leases could be released/renewed\n100 - DHCP not enabled on adapter\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Successful completion, no reboot required", "Successful completion, reboot required", "Method not supported on this platform", "Unknown failure", "Invalid subnet mask", "An error occurred while processing an Instance that was returned", "Invalid input parameter", "More than 5 gateways specified", "Invalid IP  address", "Invalid gateway IP address", "An error occurred while accessing the Registry for the requested information", "Invalid domain name", "Invalid host name", "No primary/secondary WINS server defined", "Invalid file", "Invalid system path", "File copy failed", "Invalid security parameter", "Unable to configure TCP/IP service", "Unable to configure DHCP service", "Unable to renew DHCP lease", "Unable to release DHCP lease", "IP not enabled on adapter", "IPX not enabled on adapter", "Frame/network number bounds error", "Invalid frame type", "Invalid network number", "Duplicate network number", "Parameter out of bounds", "Access denied", "Out of memory", "Already exists", "Path, file or object not found", "Unable to notify service", "Unable to notify DNS service", "Interface not configurable", "Not all DHCP leases could be released/renewed", "DHCP not enabled on adapter", "Other"} : Amended ToSubclass] uint32 SetWINSServer([In : ToSubclass,Description("The WINSPrimaryServer parameter specifies the IP address of the primary WINS server.") : Amended ToSubclass] string WINSPrimaryServer,[In : ToSubclass,Description("The WINSSecondaryServer parameter specifies the IP address of the secondary WINS server.") : Amended ToSubclass] string WINSSecondaryServer);
  [Description("The EnableWINS method enables Windows Internet Naming Service (WINS) settings specific to TCP/IP, but independent of the network adapter. The method returns an integer value that can be interpretted as follows: \n0 - Successful completion, no reboot required\n1 - Successful completion, reboot required\n64 - Method not supported on this platform\n65 - Unknown failure\n66 - Invalid subnet mask\n67 - An error occurred while processing an Instance that was returned\n68 - Invalid input parameter\n69 - More than 5 gateways specified\n70 - Invalid IP  address\n71 - Invalid gateway IP address\n72 - An error occurred while accessing the Registry for the requested information\n73 - Invalid domain name\n74 - Invalid host name\n75 - No primary/secondary WINS server defined\n76 - Invalid file\n77 - Invalid system path\n78 - File copy failed\n79 - Invalid security parameter\n80 - Unable to configure TCP/IP service\n81 - Unable to configure DHCP service\n82 - Unable to renew DHCP lease\n83 - Unable to release DHCP lease\n84 - IP not enabled on adapter\n85 - IPX not enabled on adapter\n86 - Frame/network number bounds error\n87 - Invalid frame type\n88 - Invalid network number\n89 - Duplicate network number\n90 - Parameter out of bounds\n91 - Access denied\n92 - Out of memory\n93 - Already exists\n94 - Path, file or object not found\n95 - Unable to notify service\n96 - Unable to notify DNS service\n97 - Interface not configurable\n98 - Not all DHCP leases could be released/renewed\n100 - DHCP not enabled on adapter\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Successful completion, no reboot required", "Successful completion, reboot required", "Method not supported on this platform", "Unknown failure", "Invalid subnet mask", "An error occurred while processing an Instance that was returned", "Invalid input parameter", "More than 5 gateways specified", "Invalid IP  address", "Invalid gateway IP address", "An error occurred while accessing the Registry for the requested information", "Invalid domain name", "Invalid host name", "No primary/secondary WINS server defined", "Invalid file", "Invalid system path", "File copy failed", "Invalid security parameter", "Unable to configure TCP/IP service", "Unable to configure DHCP service", "Unable to renew DHCP lease", "Unable to release DHCP lease", "IP not enabled on adapter", "IPX not enabled on adapter", "Frame/network number bounds error", "Invalid frame type", "Invalid network number", "Duplicate network number", "Parameter out of bounds", "Access denied", "Out of memory", "Already exists", "Path, file or object not found", "Unable to notify service", "Unable to notify DNS service", "Interface not configurable", "Not all DHCP leases could be released/renewed", "DHCP not enabled on adapter", "Other"} : Amended ToSubclass] uint32 EnableWINS([In : ToSubclass,Description("The DNSEnabledForWINSResolution parameter specifies whether the Domain Name System (DNS) is enabled for name resolution over WINS resolution.") : Amended ToSubclass] boolean DNSEnabledForWINSResolution,[In : ToSubclass,Description("The WINSEnableLMHostsLookup parameter specifies whether local lookup files are used. Lookup files will contain mappings of IP addresses to host names.") : Amended ToSubclass] boolean WINSEnableLMHostsLookup,[In : ToSubclass,Description("The WINSEnableLMHostsLookup parameter specifies the lookup files containing mappings of IP addresses to host names. If available, the files will be found in %SystemRoot%\\system32\\drivers\\etc.") : Amended ToSubclass] string WINSHostLookupFile,[In : ToSubclass,Description("The WINSScopeID parameter specifies the Scope ID value that will be appended to the end of the computer's NetBIOS name. Systems using the same Scope ID can communicate with this computer.") : Amended ToSubclass] string WINSScopeID);
  [Description("The SetTcpipNetbios method is used to set the default operation of NetBIOS over TCP/IP for this network adapter. Windows 2000 only. The method returns an integer value that can be interpretted as follows: \n0 - Successful completion, no reboot required\n1 - Successful completion, reboot required\n64 - Method not supported on this platform\n65 - Unknown failure\n66 - Invalid subnet mask\n67 - An error occurred while processing an Instance that was returned\n68 - Invalid input parameter\n69 - More than 5 gateways specified\n70 - Invalid IP  address\n71 - Invalid gateway IP address\n72 - An error occurred while accessing the Registry for the requested information\n73 - Invalid domain name\n74 - Invalid host name\n75 - No primary/secondary WINS server defined\n76 - Invalid file\n77 - Invalid system path\n78 - File copy failed\n79 - Invalid security parameter\n80 - Unable to configure TCP/IP service\n81 - Unable to configure DHCP service\n82 - Unable to renew DHCP lease\n83 - Unable to release DHCP lease\n84 - IP not enabled on adapter\n85 - IPX not enabled on adapter\n86 - Frame/network number bounds error\n87 - Invalid frame type\n88 - Invalid network number\n89 - Duplicate network number\n90 - Parameter out of bounds\n91 - Access denied\n92 - Out of memory\n93 - Already exists\n94 - Path, file or object not found\n95 - Unable to notify service\n96 - Unable to notify DNS service\n97 - Interface not configurable\n98 - Not all DHCP leases could be released/renewed\n100 - DHCP not enabled on adapter\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Successful completion, no reboot required", "Successful completion, reboot required", "Method not supported on this platform", "Unknown failure", "Invalid subnet mask", "An error occurred while processing an Instance that was returned", "Invalid input parameter", "More than 5 gateways specified", "Invalid IP  address", "Invalid gateway IP address", "An error occurred while accessing the Registry for the requested information", "Invalid domain name", "Invalid host name", "No primary/secondary WINS server defined", "Invalid file", "Invalid system path", "File copy failed", "Invalid security parameter", "Unable to configure TCP/IP service", "Unable to configure DHCP service", "Unable to renew DHCP lease", "Unable to release DHCP lease", "IP not enabled on adapter", "IPX not enabled on adapter", "Frame/network number bounds error", "Invalid frame type", "Invalid network number", "Duplicate network number", "Parameter out of bounds", "Access denied", "Out of memory", "Already exists", "Path, file or object not found", "Unable to notify service", "Unable to notify DNS service", "Interface not configurable", "Not all DHCP leases could be released/renewed", "DHCP not enabled on adapter", "Other"} : Amended ToSubclass] uint32 SetTcpipNetbios([In : ToSubclass,Description("The TcpipNetbiosOptions parameter specifies a bitmap of the possible settings related to NetBIOS over TCP/IP.") : Amended ToSubclass,Values{"EnableNetbiosViaDhcp", "EnableNetbios", "DisableNetbios"} : Amended ToSubclass] uint32 TcpipNetbiosOptions);
  [Description("The EnableIPSec method is used to enable IP security on this specific TCP/IP-enabled network adapter. Ports are secured only when the IPFilterSecurityEnabled property is TRUE.The method returns an integer value that can be interpretted as follows: \n0 - Successful completion, no reboot required\n1 - Successful completion, reboot required\n64 - Method not supported on this platform\n65 - Unknown failure\n66 - Invalid subnet mask\n67 - An error occurred while processing an Instance that was returned\n68 - Invalid input parameter\n69 - More than 5 gateways specified\n70 - Invalid IP  address\n71 - Invalid gateway IP address\n72 - An error occurred while accessing the Registry for the requested information\n73 - Invalid domain name\n74 - Invalid host name\n75 - No primary/secondary WINS server defined\n76 - Invalid file\n77 - Invalid system path\n78 - File copy failed\n79 - Invalid security parameter\n80 - Unable to configure TCP/IP service\n81 - Unable to configure DHCP service\n82 - Unable to renew DHCP lease\n83 - Unable to release DHCP lease\n84 - IP not enabled on adapter\n85 - IPX not enabled on adapter\n86 - Frame/network number bounds error\n87 - Invalid frame type\n88 - Invalid network number\n89 - Duplicate network number\n90 - Parameter out of bounds\n91 - Access denied\n92 - Out of memory\n93 - Already exists\n94 - Path, file or object not found\n95 - Unable to notify service\n96 - Unable to notify DNS service\n97 - Interface not configurable\n98 - Not all DHCP leases could be released/renewed\n100 - DHCP not enabled on adapter\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Successful completion, no reboot required", "Successful completion, reboot required", "Method not supported on this platform", "Unknown failure", "Invalid subnet mask", "An error occurred while processing an Instance that was returned", "Invalid input parameter", "More than 5 gateways specified", "Invalid IP  address", "Invalid gateway IP address", "An error occurred while accessing the Registry for the requested information", "Invalid domain name", "Invalid host name", "No primary/secondary WINS server defined", "Invalid file", "Invalid system path", "File copy failed", "Invalid security parameter", "Unable to configure TCP/IP service", "Unable to configure DHCP service", "Unable to renew DHCP lease", "Unable to release DHCP lease", "IP not enabled on adapter", "IPX not enabled on adapter", "Frame/network number bounds error", "Invalid frame type", "Invalid network number", "Duplicate network number", "Parameter out of bounds", "Access denied", "Out of memory", "Already exists", "Path, file or object not found", "Unable to notify service", "Unable to notify DNS service", "Interface not configurable", "Not all DHCP leases could be released/renewed", "DHCP not enabled on adapter", "Other"} : Amended ToSubclass] uint32 EnableIPSec([In : ToSubclass,Description("The IPSecPermitTCPPorts parameter specifies the list of ports that should be granted access permission for TCP. A numeric value of zero indicates access permission is granted for all ports. An empty string indicates that no ports should be granted access permission.") : Amended ToSubclass] string IPSecPermitTCPPorts[],[In : ToSubclass,Description("The IPSecPermitUDPPorts parameter specifies the list of ports that should be granted access permission for UDP. A numeric value of zero indicates access permission is granted for all ports. An empty string indicates that no ports should be granted access permission.") : Amended ToSubclass] string IPSecPermitUDPPorts[],[In : ToSubclass,Description("The IPSecPermitIPProtocols parameter specifies the list of protocols permitted to run over the IP. A numeric value of zero indicates access permission is granted for all protocols. An empty string indicates that no protocols should be granted access permission.") : Amended ToSubclass] string IPSecPermitIPProtocols[]);
  [Description("The DisableIPSec method is used to disable IP security on this TCP/IP-enabled network adapter. The method returns an integer value that can be interpretted as follows: \n0 - Successful completion, no reboot required\n1 - Successful completion, reboot required\n64 - Method not supported on this platform\n65 - Unknown failure\n66 - Invalid subnet mask\n67 - An error occurred while processing an Instance that was returned\n68 - Invalid input parameter\n69 - More than 5 gateways specified\n70 - Invalid IP  address\n71 - Invalid gateway IP address\n72 - An error occurred while accessing the Registry for the requested information\n73 - Invalid domain name\n74 - Invalid host name\n75 - No primary/secondary WINS server defined\n76 - Invalid file\n77 - Invalid system path\n78 - File copy failed\n79 - Invalid security parameter\n80 - Unable to configure TCP/IP service\n81 - Unable to configure DHCP service\n82 - Unable to renew DHCP lease\n83 - Unable to release DHCP lease\n84 - IP not enabled on adapter\n85 - IPX not enabled on adapter\n86 - Frame/network number bounds error\n87 - Invalid frame type\n88 - Invalid network number\n89 - Duplicate network number\n90 - Parameter out of bounds\n91 - Access denied\n92 - Out of memory\n93 - Already exists\n94 - Path, file or object not found\n95 - Unable to notify service\n96 - Unable to notify DNS service\n97 - Interface not configurable\n98 - Not all DHCP leases could be released/renewed\n100 - DHCP not enabled on adapter\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Successful completion, no reboot required", "Successful completion, reboot required", "Method not supported on this platform", "Unknown failure", "Invalid subnet mask", "An error occurred while processing an Instance that was returned", "Invalid input parameter", "More than 5 gateways specified", "Invalid IP  address", "Invalid gateway IP address", "An error occurred while accessing the Registry for the requested information", "Invalid domain name", "Invalid host name", "No primary/secondary WINS server defined", "Invalid file", "Invalid system path", "File copy failed", "Invalid security parameter", "Unable to configure TCP/IP service", "Unable to configure DHCP service", "Unable to renew DHCP lease", "Unable to release DHCP lease", "IP not enabled on adapter", "IPX not enabled on adapter", "Frame/network number bounds error", "Invalid frame type", "Invalid network number", "Duplicate network number", "Parameter out of bounds", "Access denied", "Out of memory", "Already exists", "Path, file or object not found", "Unable to notify service", "Unable to notify DNS service", "Interface not configurable", "Not all DHCP leases could be released/renewed", "DHCP not enabled on adapter", "Other"} : Amended ToSubclass] uint32 DisableIPSec();
  [Description("The SetIPXVirtualNetworkNumber method is used to set the Internetworking Packet Exchange (IPX) virtual network number on the target computer system. Windows 2000 and Windows NT 3.51 or greater uses an internal network number for internal routing. The internal network number is also known as a virtual network number. It uniquely identifies the computer system on the network. The method returns an integer value that can be interpretted as follows: \n0 - Successful completion, no reboot required\n1 - Successful completion, reboot required\n64 - Method not supported on this platform\n65 - Unknown failure\n66 - Invalid subnet mask\n67 - An error occurred while processing an Instance that was returned\n68 - Invalid input parameter\n69 - More than 5 gateways specified\n70 - Invalid IP  address\n71 - Invalid gateway IP address\n72 - An error occurred while accessing the Registry for the requested information\n73 - Invalid domain name\n74 - Invalid host name\n75 - No primary/secondary WINS server defined\n76 - Invalid file\n77 - Invalid system path\n78 - File copy failed\n79 - Invalid security parameter\n80 - Unable to configure TCP/IP service\n81 - Unable to configure DHCP service\n82 - Unable to renew DHCP lease\n83 - Unable to release DHCP lease\n84 - IP not enabled on adapter\n85 - IPX not enabled on adapter\n86 - Frame/network number bounds error\n87 - Invalid frame type\n88 - Invalid network number\n89 - Duplicate network number\n90 - Parameter out of bounds\n91 - Access denied\n92 - Out of memory\n93 - Already exists\n94 - Path, file or object not found\n95 - Unable to notify service\n96 - Unable to notify DNS service\n97 - Interface not configurable\n98 - Not all DHCP leases could be released/renewed\n100 - DHCP not enabled on adapter\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Successful completion, no reboot required", "Successful completion, reboot required", "Method not supported on this platform", "Unknown failure", "Invalid subnet mask", "An error occurred while processing an Instance that was returned", "Invalid input parameter", "More than 5 gateways specified", "Invalid IP  address", "Invalid gateway IP address", "An error occurred while accessing the Registry for the requested information", "Invalid domain name", "Invalid host name", "No primary/secondary WINS server defined", "Invalid file", "Invalid system path", "File copy failed", "Invalid security parameter", "Unable to configure TCP/IP service", "Unable to configure DHCP service", "Unable to renew DHCP lease", "Unable to release DHCP lease", "IP not enabled on adapter", "IPX not enabled on adapter", "Frame/network number bounds error", "Invalid frame type", "Invalid network number", "Duplicate network number", "Parameter out of bounds", "Access denied", "Out of memory", "Already exists", "Path, file or object not found", "Unable to notify service", "Unable to notify DNS service", "Interface not configurable", "Not all DHCP leases could be released/renewed", "DHCP not enabled on adapter", "Other"} : Amended ToSubclass] uint32 SetIPXVirtualNetworkNumber([In : ToSubclass,Description("The IPXVirtualNetNumber parameter specifies the virtual network number for this system.") : Amended ToSubclass] string IPXVirtualNetNumber);
  [Description("The SetIPXFrameTypeNetworkPairs method is used to set Internetworking Packet Exchange (IPX) network number/frame pairs for this network adapter. Windows 2000 and Windows NT 3.51 and higher use an IPX network number for routing purposes. It is assigned to each configured frame type/network adapter combination on your computer system. This number is sometimes referred to as the \"external network number.\" It must be unique for each network segment. If the frame type is set to AUTO, the network number should to zero. The method returns an integer value that can be interpretted as follows: \n0 - Successful completion, no reboot required\n1 - Successful completion, reboot required\n64 - Method not supported on this platform\n65 - Unknown failure\n66 - Invalid subnet mask\n67 - An error occurred while processing an Instance that was returned\n68 - Invalid input parameter\n69 - More than 5 gateways specified\n70 - Invalid IP  address\n71 - Invalid gateway IP address\n72 - An error occurred while accessing the Registry for the requested information\n73 - Invalid domain name\n74 - Invalid host name\n75 - No primary/secondary WINS server defined\n76 - Invalid file\n77 - Invalid system path\n78 - File copy failed\n79 - Invalid security parameter\n80 - Unable to configure TCP/IP service\n81 - Unable to configure DHCP service\n82 - Unable to renew DHCP lease\n83 - Unable to release DHCP lease\n84 - IP not enabled on adapter\n85 - IPX not enabled on adapter\n86 - Frame/network number bounds error\n87 - Invalid frame type\n88 - Invalid network number\n89 - Duplicate network number\n90 - Parameter out of bounds\n91 - Access denied\n92 - Out of memory\n93 - Already exists\n94 - Path, file or object not found\n95 - Unable to notify service\n96 - Unable to notify DNS service\n97 - Interface not configurable\n98 - Not all DHCP leases could be released/renewed\n100 - DHCP not enabled on adapter\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Successful completion, no reboot required", "Successful completion, reboot required", "Method not supported on this platform", "Unknown failure", "Invalid subnet mask", "An error occurred while processing an Instance that was returned", "Invalid input parameter", "More than 5 gateways specified", "Invalid IP  address", "Invalid gateway IP address", "An error occurred while accessing the Registry for the requested information", "Invalid domain name", "Invalid host name", "No primary/secondary WINS server defined", "Invalid file", "Invalid system path", "File copy failed", "Invalid security parameter", "Unable to configure TCP/IP service", "Unable to configure DHCP service", "Unable to renew DHCP lease", "Unable to release DHCP lease", "IP not enabled on adapter", "IPX not enabled on adapter", "Frame/network number bounds error", "Invalid frame type", "Invalid network number", "Duplicate network number", "Parameter out of bounds", "Access denied", "Out of memory", "Already exists", "Path, file or object not found", "Unable to notify service", "Unable to notify DNS service", "Interface not configurable", "Not all DHCP leases could be released/renewed", "DHCP not enabled on adapter", "Other"} : Amended ToSubclass] uint32 SetIPXFrameTypeNetworkPairs([In : ToSubclass,Description("The IPXNetworkNumber parameter specifies an array of characters that uniquely identify an adapter on the computer system. The NetWare Link (NWLink) IPX/SPX-compatible transport in Windows 2000 and Windows NT 3.51 or higher, uses two different types of network numbers. This number is sometimes referred to as the External Network Number. It must be unique for each network segment. The values in this string list must have a corresponding value in the IPXFrameType parameter identifying the packet frame type used for this network.") : Amended ToSubclass] string IPXNetworkNumber[],[In : ToSubclass,Description("The IPXFrameType parameter specifies an integer array of frame type identifiers. The values in this array correspond to the elements in the IPXNetworkNumber parameter.") : Amended ToSubclass,Values{"Ethernet II", "Ethernet 802.3", "Ethernet 802.2", "Ethernet SNAP", "AUTO"} : Amended ToSubclass] uint32 IPXFrameType[]);
  [Description("The SetDatabasePath method sets the path to the standard Internet database files (HOSTS, LMHOSTS, NETWORKS, PROTOCOLS). It is used by the Windows Sockets interface. The method returns an integer value that can be interpretted as follows: \n0 - Successful completion, no reboot required\n1 - Successful completion, reboot required\n64 - Method not supported on this platform\n65 - Unknown failure\n66 - Invalid subnet mask\n67 - An error occurred while processing an Instance that was returned\n68 - Invalid input parameter\n69 - More than 5 gateways specified\n70 - Invalid IP  address\n71 - Invalid gateway IP address\n72 - An error occurred while accessing the Registry for the requested information\n73 - Invalid domain name\n74 - Invalid host name\n75 - No primary/secondary WINS server defined\n76 - Invalid file\n77 - Invalid system path\n78 - File copy failed\n79 - Invalid security parameter\n80 - Unable to configure TCP/IP service\n81 - Unable to configure DHCP service\n82 - Unable to renew DHCP lease\n83 - Unable to release DHCP lease\n84 - IP not enabled on adapter\n85 - IPX not enabled on adapter\n86 - Frame/network number bounds error\n87 - Invalid frame type\n88 - Invalid network number\n89 - Duplicate network number\n90 - Parameter out of bounds\n91 - Access denied\n92 - Out of memory\n93 - Already exists\n94 - Path, file or object not found\n95 - Unable to notify service\n96 - Unable to notify DNS service\n97 - Interface not configurable\n98 - Not all DHCP leases could be released/renewed\n100 - DHCP not enabled on adapter\nOther - For integer values other than those listed above, refer to Win32 error code documentation. ") : Amended ToSubclass,Values{"Successful completion, no reboot required", "Successful completion, reboot required", "Method not supported on this platform", "Unknown failure", "Invalid subnet mask", "An error occurred while processing an Instance that was returned", "Invalid input parameter", "More than 5 gateways specified", "Invalid IP  address", "Invalid gateway IP address", "An error occurred while accessing the Registry for the requested information", "Invalid domain name", "Invalid host name", "No primary/secondary WINS server defined", "Invalid file", "Invalid system path", "File copy failed", "Invalid security parameter", "Unable to configure TCP/IP service", "Unable to configure DHCP service", "Unable to renew DHCP lease", "Unable to release DHCP lease", "IP not enabled on adapter", "IPX not enabled on adapter", "Frame/network number bounds error", "Invalid frame type", "Invalid network number", "Duplicate network number", "Parameter out of bounds", "Access denied", "Out of memory", "Already exists", "Path, file or object not found", "Unable to notify service", "Unable to notify DNS service", "Interface not configurable", "Not all DHCP leases could be released/renewed", "DHCP not enabled on adapter", "Other"} : Amended ToSubclass] uint32 SetDatabasePath([In : ToSubclass,Description("The DatabasePath parameter specifies a valid Windows 2000 and Windows NT 3.51 or higher file path to standard Internet database files (HOSTS, LMHOSTS, NETWORKS, PROTOCOLS) used by the Windows Sockets interface.") : Amended ToSubclass] string DatabasePath);
  [Description("The SetIPUseZeroBroadcast method is used to set IP zero broadcast usage. If this parameter is set to TRUE, then IP will use zeros-broadcasts (0.0.0.0) instead of ones-broadcasts (255.255.255.255). Most systems use ones-broadcasts, but systems derived from BSD implementations use zeros-broadcasts. Systems that use different broadcasts will not interoperate on the same network. Default: FALSE. The method returns an integer value that can be interpretted as follows: \n0 - Successful completion, no reboot required\n1 - Successful completion, reboot required\n64 - Method not supported on this platform\n65 - Unknown failure\n66 - Invalid subnet mask\n67 - An error occurred while processing an Instance that was returned\n68 - Invalid input parameter\n69 - More than 5 gateways specified\n70 - Invalid IP  address\n71 - Invalid gateway IP address\n72 - An error occurred while accessing the Registry for the requested information\n73 - Invalid domain name\n74 - Invalid host name\n75 - No primary/secondary WINS server defined\n76 - Invalid file\n77 - Invalid system path\n78 - File copy failed\n79 - Invalid security parameter\n80 - Unable to configure TCP/IP service\n81 - Unable to configure DHCP service\n82 - Unable to renew DHCP lease\n83 - Unable to release DHCP lease\n84 - IP not enabled on adapter\n85 - IPX not enabled on adapter\n86 - Frame/network number bounds error\n87 - Invalid frame type\n88 - Invalid network number\n89 - Duplicate network number\n90 - Parameter out of bounds\n91 - Access denied\n92 - Out of memory\n93 - Already exists\n94 - Path, file or object not found\n95 - Unable to notify service\n96 - Unable to notify DNS service\n97 - Interface not configurable\n98 - Not all DHCP leases could be released/renewed\n100 - DHCP not enabled on adapter\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Successful completion, no reboot required", "Successful completion, reboot required", "Method not supported on this platform", "Unknown failure", "Invalid subnet mask", "An error occurred while processing an Instance that was returned", "Invalid input parameter", "More than 5 gateways specified", "Invalid IP  address", "Invalid gateway IP address", "An error occurred while accessing the Registry for the requested information", "Invalid domain name", "Invalid host name", "No primary/secondary WINS server defined", "Invalid file", "Invalid system path", "File copy failed", "Invalid security parameter", "Unable to configure TCP/IP service", "Unable to configure DHCP service", "Unable to renew DHCP lease", "Unable to release DHCP lease", "IP not enabled on adapter", "IPX not enabled on adapter", "Frame/network number bounds error", "Invalid frame type", "Invalid network number", "Duplicate network number", "Parameter out of bounds", "Access denied", "Out of memory", "Already exists", "Path, file or object not found", "Unable to notify service", "Unable to notify DNS service", "Interface not configurable", "Not all DHCP leases could be released/renewed", "DHCP not enabled on adapter", "Other"} : Amended ToSubclass] uint32 SetIPUseZeroBroadcast([In : ToSubclass,Description("The IPUseZeroBroadcast parameter specifies the value indicating whether IP zero broadcast is used. Setting the parameter to TRUE indicates that IP zero broadcast is used.") : Amended ToSubclass] boolean IPUseZeroBroadcast);
  [Description("The SetArpAlwaysSourceRoute method is used to set the transmission of ARP queries by the TCP/IP. The method returns an integer value that can be interpretted as follows: \n0 - Successful completion, no reboot required\n1 - Successful completion, reboot required\n64 - Method not supported on this platform\n65 - Unknown failure\n66 - Invalid subnet mask\n67 - An error occurred while processing an Instance that was returned\n68 - Invalid input parameter\n69 - More than 5 gateways specified\n70 - Invalid IP  address\n71 - Invalid gateway IP address\n72 - An error occurred while accessing the Registry for the requested information\n73 - Invalid domain name\n74 - Invalid host name\n75 - No primary/secondary WINS server defined\n76 - Invalid file\n77 - Invalid system path\n78 - File copy failed\n79 - Invalid security parameter\n80 - Unable to configure TCP/IP service\n81 - Unable to configure DHCP service\n82 - Unable to renew DHCP lease\n83 - Unable to release DHCP lease\n84 - IP not enabled on adapter\n85 - IPX not enabled on adapter\n86 - Frame/network number bounds error\n87 - Invalid frame type\n88 - Invalid network number\n89 - Duplicate network number\n90 - Parameter out of bounds\n91 - Access denied\n92 - Out of memory\n93 - Already exists\n94 - Path, file or object not found\n95 - Unable to notify service\n96 - Unable to notify DNS service\n97 - Interface not configurable\n98 - Not all DHCP leases could be released/renewed\n100 - DHCP not enabled on adapter\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Successful completion, no reboot required", "Successful completion, reboot required", "Method not supported on this platform", "Unknown failure", "Invalid subnet mask", "An error occurred while processing an Instance that was returned", "Invalid input parameter", "More than 5 gateways specified", "Invalid IP  address", "Invalid gateway IP address", "An error occurred while accessing the Registry for the requested information", "Invalid domain name", "Invalid host name", "No primary/secondary WINS server defined", "Invalid file", "Invalid system path", "File copy failed", "Invalid security parameter", "Unable to configure TCP/IP service", "Unable to configure DHCP service", "Unable to renew DHCP lease", "Unable to release DHCP lease", "IP not enabled on adapter", "IPX not enabled on adapter", "Frame/network number bounds error", "Invalid frame type", "Invalid network number", "Duplicate network number", "Parameter out of bounds", "Access denied", "Out of memory", "Already exists", "Path, file or object not found", "Unable to notify service", "Unable to notify DNS service", "Interface not configurable", "Not all DHCP leases could be released/renewed", "DHCP not enabled on adapter", "Other"} : Amended ToSubclass] uint32 SetArpAlwaysSourceRoute([In : ToSubclass,Description("The ArpAlwaysSourceRoute parameter specifies a value that indicates if TCP/IP transmits ARP queries. Setting this parameter to TRUE will force TCP/IP to transmit ARP queries with source routing enabled on Token Ring networks. By default, the stack transmits ARP queries without source routing first, then retries with source routing enabled if no reply is received.") : Amended ToSubclass] boolean ArpAlwaysSourceRoute);
  [Description("The SetArpUseEtherSNAP method is used to enable ethernet packets to use 802.3 SNAP encoding. By default, the stack transmits packets in Digital, Intel, Xerox(DIX) Ethernet format. It will always receive both formats. The method returns an integer value that can be interpretted as follows: \n0 - Successful completion, no reboot required\n1 - Successful completion, reboot required\n64 - Method not supported on this platform\n65 - Unknown failure\n66 - Invalid subnet mask\n67 - An error occurred while processing an Instance that was returned\n68 - Invalid input parameter\n69 - More than 5 gateways specified\n70 - Invalid IP  address\n71 - Invalid gateway IP address\n72 - An error occurred while accessing the Registry for the requested information\n73 - Invalid domain name\n74 - Invalid host name\n75 - No primary/secondary WINS server defined\n76 - Invalid file\n77 - Invalid system path\n78 - File copy failed\n79 - Invalid security parameter\n80 - Unable to configure TCP/IP service\n81 - Unable to configure DHCP service\n82 - Unable to renew DHCP lease\n83 - Unable to release DHCP lease\n84 - IP not enabled on adapter\n85 - IPX not enabled on adapter\n86 - Frame/network number bounds error\n87 - Invalid frame type\n88 - Invalid network number\n89 - Duplicate network number\n90 - Parameter out of bounds\n91 - Access denied\n92 - Out of memory\n93 - Already exists\n94 - Path, file or object not found\n95 - Unable to notify service\n96 - Unable to notify DNS service\n97 - Interface not configurable\n98 - Not all DHCP leases could be released/renewed\n100 - DHCP not enabled on adapter\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Successful completion, no reboot required", "Successful completion, reboot required", "Method not supported on this platform", "Unknown failure", "Invalid subnet mask", "An error occurred while processing an Instance that was returned", "Invalid input parameter", "More than 5 gateways specified", "Invalid IP  address", "Invalid gateway IP address", "An error occurred while accessing the Registry for the requested information", "Invalid domain name", "Invalid host name", "No primary/secondary WINS server defined", "Invalid file", "Invalid system path", "File copy failed", "Invalid security parameter", "Unable to configure TCP/IP service", "Unable to configure DHCP service", "Unable to renew DHCP lease", "Unable to release DHCP lease", "IP not enabled on adapter", "IPX not enabled on adapter", "Frame/network number bounds error", "Invalid frame type", "Invalid network number", "Duplicate network number", "Parameter out of bounds", "Access denied", "Out of memory", "Already exists", "Path, file or object not found", "Unable to notify service", "Unable to notify DNS service", "Interface not configurable", "Not all DHCP leases could be released/renewed", "DHCP not enabled on adapter", "Other"} : Amended ToSubclass] uint32 SetArpUseEtherSNAP([In : ToSubclass,Description("The ArpUseEtherSNAP parameter enables (TRUE)TCP/IP to transmit Ethernet packets using 802.3 SNAP encoding.") : Amended ToSubclass] boolean ArpUseEtherSNAP);
  [Description("The SetDefaultTOS method is used to set the default Type of Service (TOS) value in the header of outgoing IP packets. The method returns an integer value that can be interpretted as follows: \n0 - Successful completion, no reboot required\n1 - Successful completion, reboot required\n64 - Method not supported on this platform\n65 - Unknown failure\n66 - Invalid subnet mask\n67 - An error occurred while processing an Instance that was returned\n68 - Invalid input parameter\n69 - More than 5 gateways specified\n70 - Invalid IP  address\n71 - Invalid gateway IP address\n72 - An error occurred while accessing the Registry for the requested information\n73 - Invalid domain name\n74 - Invalid host name\n75 - No primary/secondary WINS server defined\n76 - Invalid file\n77 - Invalid system path\n78 - File copy failed\n79 - Invalid security parameter\n80 - Unable to configure TCP/IP service\n81 - Unable to configure DHCP service\n82 - Unable to renew DHCP lease\n83 - Unable to release DHCP lease\n84 - IP not enabled on adapter\n85 - IPX not enabled on adapter\n86 - Frame/network number bounds error\n87 - Invalid frame type\n88 - Invalid network number\n89 - Duplicate network number\n90 - Parameter out of bounds\n91 - Access denied\n92 - Out of memory\n93 - Already exists\n94 - Path, file or object not found\n95 - Unable to notify service\n96 - Unable to notify DNS service\n97 - Interface not configurable\n98 - Not all DHCP leases could be released/renewed\n100 - DHCP not enabled on adapter\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Successful completion, no reboot required", "Successful completion, reboot required", "Method not supported on this platform", "Unknown failure", "Invalid subnet mask", "An error occurred while processing an Instance that was returned", "Invalid input parameter", "More than 5 gateways specified", "Invalid IP  address", "Invalid gateway IP address", "An error occurred while accessing the Registry for the requested information", "Invalid domain name", "Invalid host name", "No primary/secondary WINS server defined", "Invalid file", "Invalid system path", "File copy failed", "Invalid security parameter", "Unable to configure TCP/IP service", "Unable to configure DHCP service", "Unable to renew DHCP lease", "Unable to release DHCP lease", "IP not enabled on adapter", "IPX not enabled on adapter", "Frame/network number bounds error", "Invalid frame type", "Invalid network number", "Duplicate network number", "Parameter out of bounds", "Access denied", "Out of memory", "Already exists", "Path, file or object not found", "Unable to notify service", "Unable to notify DNS service", "Interface not configurable", "Not all DHCP leases could be released/renewed", "DHCP not enabled on adapter", "Other"} : Amended ToSubclass] uint32 SetDefaultTOS([In : ToSubclass,Description("The DefaultTOS parameter specifies the Type of Service (TOS) value put in the header of outgoing IP packets. See RFC 791 for a definition of the values.") : Amended ToSubclass] uint8 DefaultTOS);
  [Description("The SetDefaultTTL method is used to set the default Time to Live (TTL) value in the header of outgoing IP packets. The TTL specifies the number of routers an IP packet may pass through to reach its destination before being discarded. Each router decrements the TTL count of a packet by one and discards the packets with a TTL of 0. Default: 32, Valid Range: 1 - 255The method returns an integer value that can be interpretted as follows: \n0 - Successful completion, no reboot required\n1 - Successful completion, reboot required\n64 - Method not supported on this platform\n65 - Unknown failure\n66 - Invalid subnet mask\n67 - An error occurred while processing an Instance that was returned\n68 - Invalid input parameter\n69 - More than 5 gateways specified\n70 - Invalid IP  address\n71 - Invalid gateway IP address\n72 - An error occurred while accessing the Registry for the requested information\n73 - Invalid domain name\n74 - Invalid host name\n75 - No primary/secondary WINS server defined\n76 - Invalid file\n77 - Invalid system path\n78 - File copy failed\n79 - Invalid security parameter\n80 - Unable to configure TCP/IP service\n81 - Unable to configure DHCP service\n82 - Unable to renew DHCP lease\n83 - Unable to release DHCP lease\n84 - IP not enabled on adapter\n85 - IPX not enabled on adapter\n86 - Frame/network number bounds error\n87 - Invalid frame type\n88 - Invalid network number\n89 - Duplicate network number\n90 - Parameter out of bounds\n91 - Access denied\n92 - Out of memory\n93 - Already exists\n94 - Path, file or object not found\n95 - Unable to notify service\n96 - Unable to notify DNS service\n97 - Interface not configurable\n98 - Not all DHCP leases could be released/renewed\n100 - DHCP not enabled on adapter\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Successful completion, no reboot required", "Successful completion, reboot required", "Method not supported on this platform", "Unknown failure", "Invalid subnet mask", "An error occurred while processing an Instance that was returned", "Invalid input parameter", "More than 5 gateways specified", "Invalid IP  address", "Invalid gateway IP address", "An error occurred while accessing the Registry for the requested information", "Invalid domain name", "Invalid host name", "No primary/secondary WINS server defined", "Invalid file", "Invalid system path", "File copy failed", "Invalid security parameter", "Unable to configure TCP/IP service", "Unable to configure DHCP service", "Unable to renew DHCP lease", "Unable to release DHCP lease", "IP not enabled on adapter", "IPX not enabled on adapter", "Frame/network number bounds error", "Invalid frame type", "Invalid network number", "Duplicate network number", "Parameter out of bounds", "Access denied", "Out of memory", "Already exists", "Path, file or object not found", "Unable to notify service", "Unable to notify DNS service", "Interface not configurable", "Not all DHCP leases could be released/renewed", "DHCP not enabled on adapter", "Other"} : Amended ToSubclass] uint32 SetDefaultTTL([In : ToSubclass,Description("The DefaultTTL parameter specifies the Time to Live value set in the header of outgoing IP packets.") : Amended ToSubclass] uint8 DefaultTTL);
  [Description("The SetDeadGWDetect method is used to enable Dead Gateway detection. Setting this parameter to TRUE causes TCP to perform Dead Gateway Detection. With this feature enabled, TCP asks IP to change to a backup gateway if it retransmits a segment several times without receiving a response. The method returns an integer value that can be interpretted as follows: \n0 - Successful completion, no reboot required\n1 - Successful completion, reboot required\n64 - Method not supported on this platform\n65 - Unknown failure\n66 - Invalid subnet mask\n67 - An error occurred while processing an Instance that was returned\n68 - Invalid input parameter\n69 - More than 5 gateways specified\n70 - Invalid IP  address\n71 - Invalid gateway IP address\n72 - An error occurred while accessing the Registry for the requested information\n73 - Invalid domain name\n74 - Invalid host name\n75 - No primary/secondary WINS server defined\n76 - Invalid file\n77 - Invalid system path\n78 - File copy failed\n79 - Invalid security parameter\n80 - Unable to configure TCP/IP service\n81 - Unable to configure DHCP service\n82 - Unable to renew DHCP lease\n83 - Unable to release DHCP lease\n84 - IP not enabled on adapter\n85 - IPX not enabled on adapter\n86 - Frame/network number bounds error\n87 - Invalid frame type\n88 - Invalid network number\n89 - Duplicate network number\n90 - Parameter out of bounds\n91 - Access denied\n92 - Out of memory\n93 - Already exists\n94 - Path, file or object not found\n95 - Unable to notify service\n96 - Unable to notify DNS service\n97 - Interface not configurable\n98 - Not all DHCP leases could be released/renewed\n100 - DHCP not enabled on adapter\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Successful completion, no reboot required", "Successful completion, reboot required", "Method not supported on this platform", "Unknown failure", "Invalid subnet mask", "An error occurred while processing an Instance that was returned", "Invalid input parameter", "More than 5 gateways specified", "Invalid IP  address", "Invalid gateway IP address", "An error occurred while accessing the Registry for the requested information", "Invalid domain name", "Invalid host name", "No primary/secondary WINS server defined", "Invalid file", "Invalid system path", "File copy failed", "Invalid security parameter", "Unable to configure TCP/IP service", "Unable to configure DHCP service", "Unable to renew DHCP lease", "Unable to release DHCP lease", "IP not enabled on adapter", "IPX not enabled on adapter", "Frame/network number bounds error", "Invalid frame type", "Invalid network number", "Duplicate network number", "Parameter out of bounds", "Access denied", "Out of memory", "Already exists", "Path, file or object not found", "Unable to notify service", "Unable to notify DNS service", "Interface not configurable", "Not all DHCP leases could be released/renewed", "DHCP not enabled on adapter", "Other"} : Amended ToSubclass] uint32 SetDeadGWDetect([In : ToSubclass,Description("The DeadGWDetectEnabled parameter specifies a value that can enable the TCP to perform dead gateway detection. If TRUE, the method will enable dead gateway detection.") : Amended ToSubclass] boolean DeadGWDetectEnabled);
  [Description("The SetPMTUBHDetect method is used to enable detection of Black Hole routers. Setting this parameter to TRUE causes TCP to try to detect Black Hole routers while doing Path MTU Discovery. A Black Hole router does not return the Internet Control Message Protocol (ICMP) Destination Unreachable messages when it needs to fragment an IP datagram with the Don't Fragment bit set. TCP depends on receiving these messages to perform Path MTU Discovery. With this feature enabled, TCP will try to send segments without the Don't Fragment bit set if several retransmissions of a segment go unacknowledged. If the segment is acknowledged as a result, the maximum segment size (MSS) will be decreased and the Don't Fragment bit will be set in future packets on the connection. Enabling black hole detection increases the maximum number of retransmissions performed for a given segment. The method returns an integer value that can be interpretted as follows: \n0 - Successful completion, no reboot required\n1 - Successful completion, reboot required\n64 - Method not supported on this platform\n65 - Unknown failure\n66 - Invalid subnet mask\n67 - An error occurred while processing an Instance that was returned\n68 - Invalid input parameter\n69 - More than 5 gateways specified\n70 - Invalid IP  address\n71 - Invalid gateway IP address\n72 - An error occurred while accessing the Registry for the requested information\n73 - Invalid domain name\n74 - Invalid host name\n75 - No primary/secondary WINS server defined\n76 - Invalid file\n77 - Invalid system path\n78 - File copy failed\n79 - Invalid security parameter\n80 - Unable to configure TCP/IP service\n81 - Unable to configure DHCP service\n82 - Unable to renew DHCP lease\n83 - Unable to release DHCP lease\n84 - IP not enabled on adapter\n85 - IPX not enabled on adapter\n86 - Frame/network number bounds error\n87 - Invalid frame type\n88 - Invalid network number\n89 - Duplicate network number\n90 - Parameter out of bounds\n91 - Access denied\n92 - Out of memory\n93 - Already exists\n94 - Path, file or object not found\n95 - Unable to notify service\n96 - Unable to notify DNS service\n97 - Interface not configurable\n98 - Not all DHCP leases could be released/renewed\n100 - DHCP not enabled on adapter\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Successful completion, no reboot required", "Successful completion, reboot required", "Method not supported on this platform", "Unknown failure", "Invalid subnet mask", "An error occurred while processing an Instance that was returned", "Invalid input parameter", "More than 5 gateways specified", "Invalid IP  address", "Invalid gateway IP address", "An error occurred while accessing the Registry for the requested information", "Invalid domain name", "Invalid host name", "No primary/secondary WINS server defined", "Invalid file", "Invalid system path", "File copy failed", "Invalid security parameter", "Unable to configure TCP/IP service", "Unable to configure DHCP service", "Unable to renew DHCP lease", "Unable to release DHCP lease", "IP not enabled on adapter", "IPX not enabled on adapter", "Frame/network number bounds error", "Invalid frame type", "Invalid network number", "Duplicate network number", "Parameter out of bounds", "Access denied", "Out of memory", "Already exists", "Path, file or object not found", "Unable to notify service", "Unable to notify DNS service", "Interface not configurable", "Not all DHCP leases could be released/renewed", "DHCP not enabled on adapter", "Other"} : Amended ToSubclass] uint32 SetPMTUBHDetect([In : ToSubclass,Description("The PMTUBHDetectEnabled parameter specifies whether the detection of \"Black Hole\" routers is enabled. If TRUE, the method makes TCP attempt to discover \"Black Hole\" and route packets in different network paths.") : Amended ToSubclass] boolean PMTUBHDetectEnabled);
  [Description("The SetPMTUDiscovery method is used to enable Maximum Transmission Unit (MTU) discovery. Setting this parameter to TRUE causes TCP to attempt to discover the MTU (or largest packet size) over the path to a remote host. By discovering the Path MTU and limiting TCP segments to this size, TCP can eliminate fragmentation at routers along the path that connect networks with different MTUs. Fragmentation adversely affects TCP throughput and network congestion. Setting this parameter to FALSE causes an MTU of 576 bytes to be used for all connections that are not to machines on the local subnet. Default: TRUE. The method returns an integer value that can be interpretted as follows: \n0 - Successful completion, no reboot required\n1 - Successful completion, reboot required\n64 - Method not supported on this platform\n65 - Unknown failure\n66 - Invalid subnet mask\n67 - An error occurred while processing an Instance that was returned\n68 - Invalid input parameter\n69 - More than 5 gateways specified\n70 - Invalid IP  address\n71 - Invalid gateway IP address\n72 - An error occurred while accessing the Registry for the requested information\n73 - Invalid domain name\n74 - Invalid host name\n75 - No primary/secondary WINS server defined\n76 - Invalid file\n77 - Invalid system path\n78 - File copy failed\n79 - Invalid security parameter\n80 - Unable to configure TCP/IP service\n81 - Unable to configure DHCP service\n82 - Unable to renew DHCP lease\n83 - Unable to release DHCP lease\n84 - IP not enabled on adapter\n85 - IPX not enabled on adapter\n86 - Frame/network number bounds error\n87 - Invalid frame type\n88 - Invalid network number\n89 - Duplicate network number\n90 - Parameter out of bounds\n91 - Access denied\n92 - Out of memory\n93 - Already exists\n94 - Path, file or object not found\n95 - Unable to notify service\n96 - Unable to notify DNS service\n97 - Interface not configurable\n98 - Not all DHCP leases could be released/renewed\n100 - DHCP not enabled on adapter\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Successful completion, no reboot required", "Successful completion, reboot required", "Method not supported on this platform", "Unknown failure", "Invalid subnet mask", "An error occurred while processing an Instance that was returned", "Invalid input parameter", "More than 5 gateways specified", "Invalid IP  address", "Invalid gateway IP address", "An error occurred while accessing the Registry for the requested information", "Invalid domain name", "Invalid host name", "No primary/secondary WINS server defined", "Invalid file", "Invalid system path", "File copy failed", "Invalid security parameter", "Unable to configure TCP/IP service", "Unable to configure DHCP service", "Unable to renew DHCP lease", "Unable to release DHCP lease", "IP not enabled on adapter", "IPX not enabled on adapter", "Frame/network number bounds error", "Invalid frame type", "Invalid network number", "Duplicate network number", "Parameter out of bounds", "Access denied", "Out of memory", "Already exists", "Path, file or object not found", "Unable to notify service", "Unable to notify DNS service", "Interface not configurable", "Not all DHCP leases could be released/renewed", "DHCP not enabled on adapter", "Other"} : Amended ToSubclass] uint32 SetPMTUDiscovery([In : ToSubclass,Description("The PMTUDiscoveryEnabled parameter can enable TCP to attempt to discover the Maximum Transmission Unit (MTU) or largest packet size over the path to a remote host. If TRUE, the method makes TCP to attempt to discover the MTU.") : Amended ToSubclass] boolean PMTUDiscoveryEnabled);
  [Description("The SetForwardBufferMemory method is used to specify how much memory IP allocates to store packet data in the router packet queue. When this buffer space is filled, the router begins discarding packets at random from its queue. Packet queue data buffers are 256 bytes in length, so the value of this parameter should be a multiple of 256. Multiple buffers are chained together for larger packets. The IP header for a packet is stored separately. This parameter is ignored and no buffers are allocated if the IP router is not enabled. The buffer size can range from the network MTU to the a value smaller than 0xFFFFFFFF. Default: 74240 (fifty 1480-byte packets, rounded to a multiple of 256).The method returns an integer value that can be interpretted as follows: \n0 - Successful completion, no reboot required\n1 - Successful completion, reboot required\n64 - Method not supported on this platform\n65 - Unknown failure\n66 - Invalid subnet mask\n67 - An error occurred while processing an Instance that was returned\n68 - Invalid input parameter\n69 - More than 5 gateways specified\n70 - Invalid IP  address\n71 - Invalid gateway IP address\n72 - An error occurred while accessing the Registry for the requested information\n73 - Invalid domain name\n74 - Invalid host name\n75 - No primary/secondary WINS server defined\n76 - Invalid file\n77 - Invalid system path\n78 - File copy failed\n79 - Invalid security parameter\n80 - Unable to configure TCP/IP service\n81 - Unable to configure DHCP service\n82 - Unable to renew DHCP lease\n83 - Unable to release DHCP lease\n84 - IP not enabled on adapter\n85 - IPX not enabled on adapter\n86 - Frame/network number bounds error\n87 - Invalid frame type\n88 - Invalid network number\n89 - Duplicate network number\n90 - Parameter out of bounds\n91 - Access denied\n92 - Out of memory\n93 - Already exists\n94 - Path, file or object not found\n95 - Unable to notify service\n96 - Unable to notify DNS service\n97 - Interface not configurable\n98 - Not all DHCP leases could be released/renewed\n100 - DHCP not enabled on adapter\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Successful completion, no reboot required", "Successful completion, reboot required", "Method not supported on this platform", "Unknown failure", "Invalid subnet mask", "An error occurred while processing an Instance that was returned", "Invalid input parameter", "More than 5 gateways specified", "Invalid IP  address", "Invalid gateway IP address", "An error occurred while accessing the Registry for the requested information", "Invalid domain name", "Invalid host name", "No primary/secondary WINS server defined", "Invalid file", "Invalid system path", "File copy failed", "Invalid security parameter", "Unable to configure TCP/IP service", "Unable to configure DHCP service", "Unable to renew DHCP lease", "Unable to release DHCP lease", "IP not enabled on adapter", "IPX not enabled on adapter", "Frame/network number bounds error", "Invalid frame type", "Invalid network number", "Duplicate network number", "Parameter out of bounds", "Access denied", "Out of memory", "Already exists", "Path, file or object not found", "Unable to notify service", "Unable to notify DNS service", "Interface not configurable", "Not all DHCP leases could be released/renewed", "DHCP not enabled on adapter", "Other"} : Amended ToSubclass] uint32 SetForwardBufferMemory([In : ToSubclass,Units("bytes") : Amended ToSubclass,Description("The ForwardBufferMemory parameter specifies the size of the router packet queue used to store packet data.") : Amended ToSubclass] uint32 ForwardBufferMemory);
  [Description("The SetIGMPLevel method is used to set the extent to which the system supports IP multicasting and participates in the Internet Group Management Protocol. The method returns an integer value that can be interpretted as follows: \n0 - Successful completion, no reboot required\n1 - Successful completion, reboot required\n64 - Method not supported on this platform\n65 - Unknown failure\n66 - Invalid subnet mask\n67 - An error occurred while processing an Instance that was returned\n68 - Invalid input parameter\n69 - More than 5 gateways specified\n70 - Invalid IP  address\n71 - Invalid gateway IP address\n72 - An error occurred while accessing the Registry for the requested information\n73 - Invalid domain name\n74 - Invalid host name\n75 - No primary/secondary WINS server defined\n76 - Invalid file\n77 - Invalid system path\n78 - File copy failed\n79 - Invalid security parameter\n80 - Unable to configure TCP/IP service\n81 - Unable to configure DHCP service\n82 - Unable to renew DHCP lease\n83 - Unable to release DHCP lease\n84 - IP not enabled on adapter\n85 - IPX not enabled on adapter\n86 - Frame/network number bounds error\n87 - Invalid frame type\n88 - Invalid network number\n89 - Duplicate network number\n90 - Parameter out of bounds\n91 - Access denied\n92 - Out of memory\n93 - Already exists\n94 - Path, file or object not found\n95 - Unable to notify service\n96 - Unable to notify DNS service\n97 - Interface not configurable\n98 - Not all DHCP leases could be released/renewed\n100 - DHCP not enabled on adapter\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Successful completion, no reboot required", "Successful completion, reboot required", "Method not supported on this platform", "Unknown failure", "Invalid subnet mask", "An error occurred while processing an Instance that was returned", "Invalid input parameter", "More than 5 gateways specified", "Invalid IP  address", "Invalid gateway IP address", "An error occurred while accessing the Registry for the requested information", "Invalid domain name", "Invalid host name", "No primary/secondary WINS server defined", "Invalid file", "Invalid system path", "File copy failed", "Invalid security parameter", "Unable to configure TCP/IP service", "Unable to configure DHCP service", "Unable to renew DHCP lease", "Unable to release DHCP lease", "IP not enabled on adapter", "IPX not enabled on adapter", "Frame/network number bounds error", "Invalid frame type", "Invalid network number", "Duplicate network number", "Parameter out of bounds", "Access denied", "Out of memory", "Already exists", "Path, file or object not found", "Unable to notify service", "Unable to notify DNS service", "Interface not configurable", "Not all DHCP leases could be released/renewed", "DHCP not enabled on adapter", "Other"} : Amended ToSubclass] uint32 SetIGMPLevel([In : ToSubclass,Description("The IGMPLevel parameter sets the level that the system supports IP multicast and participates in the Internet Group Management Protocol. At level 0, the system provides no multicast support. At level 1, the system may only send IP multicast packets. At level 2, the system may send IP multicast packets and fully participate in IGMP to receive multicast packets.") : Amended ToSubclass,Values{"No Multicast", "IP Multicast", "IP & IGMP multicast"} : Amended ToSubclass] uint8 IGMPLevel);
  [Description("The SetKeepAliveInterval method is used to set the interval separating Keep Alive Retransmissions until a response is received. Once a response is received, the delay until the next Keep Alive Transmission is again controlled by the value of KeepAliveTime. The connection will be terminated after the number of retransmissions specified by TcpMaxDataRetransmissions have gone unanswered. The method returns an integer value that can be interpretted as follows: \n0 - Successful completion, no reboot required\n1 - Successful completion, reboot required\n64 - Method not supported on this platform\n65 - Unknown failure\n66 - Invalid subnet mask\n67 - An error occurred while processing an Instance that was returned\n68 - Invalid input parameter\n69 - More than 5 gateways specified\n70 - Invalid IP  address\n71 - Invalid gateway IP address\n72 - An error occurred while accessing the Registry for the requested information\n73 - Invalid domain name\n74 - Invalid host name\n75 - No primary/secondary WINS server defined\n76 - Invalid file\n77 - Invalid system path\n78 - File copy failed\n79 - Invalid security parameter\n80 - Unable to configure TCP/IP service\n81 - Unable to configure DHCP service\n82 - Unable to renew DHCP lease\n83 - Unable to release DHCP lease\n84 - IP not enabled on adapter\n85 - IPX not enabled on adapter\n86 - Frame/network number bounds error\n87 - Invalid frame type\n88 - Invalid network number\n89 - Duplicate network number\n90 - Parameter out of bounds\n91 - Access denied\n92 - Out of memory\n93 - Already exists\n94 - Path, file or object not found\n95 - Unable to notify service\n96 - Unable to notify DNS service\n97 - Interface not configurable\n98 - Not all DHCP leases could be released/renewed\n100 - DHCP not enabled on adapter\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Successful completion, no reboot required", "Successful completion, reboot required", "Method not supported on this platform", "Unknown failure", "Invalid subnet mask", "An error occurred while processing an Instance that was returned", "Invalid input parameter", "More than 5 gateways specified", "Invalid IP  address", "Invalid gateway IP address", "An error occurred while accessing the Registry for the requested information", "Invalid domain name", "Invalid host name", "No primary/secondary WINS server defined", "Invalid file", "Invalid system path", "File copy failed", "Invalid security parameter", "Unable to configure TCP/IP service", "Unable to configure DHCP service", "Unable to renew DHCP lease", "Unable to release DHCP lease", "IP not enabled on adapter", "IPX not enabled on adapter", "Frame/network number bounds error", "Invalid frame type", "Invalid network number", "Duplicate network number", "Parameter out of bounds", "Access denied", "Out of memory", "Already exists", "Path, file or object not found", "Unable to notify service", "Unable to notify DNS service", "Interface not configurable", "Not all DHCP leases could be released/renewed", "DHCP not enabled on adapter", "Other"} : Amended ToSubclass] uint32 SetKeepAliveInterval([In : ToSubclass,Units("milliseconds") : Amended ToSubclass,Description("The KeepAliveInterval parameter specifies the value for the interval separating Keep Alive Retransmissions until a response is received.") : Amended ToSubclass] uint32 KeepAliveInterval);
  [Description("The SetKeepAliveTime method is used to set how often TCP attempts to verify that an idle connection is still available by sending a Keep Alive packet. If the remote system is still reachable and functioning, it will acknowledge the Keep Alive transmission. Keep Alive packets are not sent by default. This feature may be enabled in a connection by an application. The method returns an integer value that can be interpretted as follows: \n0 - Successful completion, no reboot required\n1 - Successful completion, reboot required\n64 - Method not supported on this platform\n65 - Unknown failure\n66 - Invalid subnet mask\n67 - An error occurred while processing an Instance that was returned\n68 - Invalid input parameter\n69 - More than 5 gateways specified\n70 - Invalid IP  address\n71 - Invalid gateway IP address\n72 - An error occurred while accessing the Registry for the requested information\n73 - Invalid domain name\n74 - Invalid host name\n75 - No primary/secondary WINS server defined\n76 - Invalid file\n77 - Invalid system path\n78 - File copy failed\n79 - Invalid security parameter\n80 - Unable to configure TCP/IP service\n81 - Unable to configure DHCP service\n82 - Unable to renew DHCP lease\n83 - Unable to release DHCP lease\n84 - IP not enabled on adapter\n85 - IPX not enabled on adapter\n86 - Frame/network number bounds error\n87 - Invalid frame type\n88 - Invalid network number\n89 - Duplicate network number\n90 - Parameter out of bounds\n91 - Access denied\n92 - Out of memory\n93 - Already exists\n94 - Path, file or object not found\n95 - Unable to notify service\n96 - Unable to notify DNS service\n97 - Interface not configurable\n98 - Not all DHCP leases could be released/renewed\n100 - DHCP not enabled on adapter\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Successful completion, no reboot required", "Successful completion, reboot required", "Method not supported on this platform", "Unknown failure", "Invalid subnet mask", "An error occurred while processing an Instance that was returned", "Invalid input parameter", "More than 5 gateways specified", "Invalid IP  address", "Invalid gateway IP address", "An error occurred while accessing the Registry for the requested information", "Invalid domain name", "Invalid host name", "No primary/secondary WINS server defined", "Invalid file", "Invalid system path", "File copy failed", "Invalid security parameter", "Unable to configure TCP/IP service", "Unable to configure DHCP service", "Unable to renew DHCP lease", "Unable to release DHCP lease", "IP not enabled on adapter", "IPX not enabled on adapter", "Frame/network number bounds error", "Invalid frame type", "Invalid network number", "Duplicate network number", "Parameter out of bounds", "Access denied", "Out of memory", "Already exists", "Path, file or object not found", "Unable to notify service", "Unable to notify DNS service", "Interface not configurable", "Not all DHCP leases could be released/renewed", "DHCP not enabled on adapter", "Other"} : Amended ToSubclass] uint32 SetKeepAliveTime([In : ToSubclass,Units("milliseconds") : Amended ToSubclass,Description("The KeepAliveTime parameter specifies the interval the TCP waits to check that an idle connection is still available.") : Amended ToSubclass] uint32 KeepAliveTime);
  [Description("The SetMTU method is used to set the default Maximum Transmission Unit (MTU) for a network interface. \nThe SetMTU method has been deprecated.  There is no replacementand the values returned do not corresepond to the method's intended purpose. \nThe MTU is the maximum packet size (in bytes) that the transport will transmit over the underlying network. The size includes the transport header. Note that an IP datagram may span multiple packets. Values larger than the default for the underlying network will result in the transport using the network default MTU. Values smaller than 68 will result in the transport using an MTU of 68. The method returns an integer value that can be interpretted as follows: \n0 - Successful completion, no reboot required\n1 - Successful completion, reboot required\n64 - Method not supported on this platform\n65 - Unknown failure\n66 - Invalid subnet mask\n67 - An error occurred while processing an Instance that was returned\n68 - Invalid input parameter\n69 - More than 5 gateways specified\n70 - Invalid IP  address\n71 - Invalid gateway IP address\n72 - An error occurred while accessing the Registry for the requested information\n73 - Invalid domain name\n74 - Invalid host name\n75 - No primary/secondary WINS server defined\n76 - Invalid file\n77 - Invalid system path\n78 - File copy failed\n79 - Invalid security parameter\n80 - Unable to configure TCP/IP service\n81 - Unable to configure DHCP service\n82 - Unable to renew DHCP lease\n83 - Unable to release DHCP lease\n84 - IP not enabled on adapter\n85 - IPX not enabled on adapter\n86 - Frame/network number bounds error\n87 - Invalid frame type\n88 - Invalid network number\n89 - Duplicate network number\n90 - Parameter out of bounds\n91 - Access denied\n92 - Out of memory\n93 - Already exists\n94 - Path, file or object not found\n95 - Unable to notify service\n96 - Unable to notify DNS service\n97 - Interface not configurable\n98 - Not all DHCP leases could be released/renewed\n100 - DHCP not enabled on adapter\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Successful completion, no reboot required", "Successful completion, reboot required", "Method not supported on this platform", "Unknown failure", "Invalid subnet mask", "An error occurred while processing an Instance that was returned", "Invalid input parameter", "More than 5 gateways specified", "Invalid IP  address", "Invalid gateway IP address", "An error occurred while accessing the Registry for the requested information", "Invalid domain name", "Invalid host name", "No primary/secondary WINS server defined", "Invalid file", "Invalid system path", "File copy failed", "Invalid security parameter", "Unable to configure TCP/IP service", "Unable to configure DHCP service", "Unable to renew DHCP lease", "Unable to release DHCP lease", "IP not enabled on adapter", "IPX not enabled on adapter", "Frame/network number bounds error", "Invalid frame type", "Invalid network number", "Duplicate network number", "Parameter out of bounds", "Access denied", "Out of memory", "Already exists", "Path, file or object not found", "Unable to notify service", "Unable to notify DNS service", "Interface not configurable", "Not all DHCP leases could be released/renewed", "DHCP not enabled on adapter", "Other"} : Amended ToSubclass] uint32 SetMTU([In : ToSubclass,Description("The MTU input parameter specifies the default Maximum Transmission Unit (MTU) for a network interface The range of this value spans the minimum packet size (68) to the MTU supported by the underlying network.") : Amended ToSubclass] uint32 MTU);
  [Description("The SetNumForwardPackets method is used to set the number of IP packet headers allocated for the router packet queue. When all headers are in use, the router will begin to discard packets from the queue at random.The method returns an integer value that can be interpretted as follows: \n0 - Successful completion, no reboot required\n1 - Successful completion, reboot required\n64 - Method not supported on this platform\n65 - Unknown failure\n66 - Invalid subnet mask\n67 - An error occurred while processing an Instance that was returned\n68 - Invalid input parameter\n69 - More than 5 gateways specified\n70 - Invalid IP  address\n71 - Invalid gateway IP address\n72 - An error occurred while accessing the Registry for the requested information\n73 - Invalid domain name\n74 - Invalid host name\n75 - No primary/secondary WINS server defined\n76 - Invalid file\n77 - Invalid system path\n78 - File copy failed\n79 - Invalid security parameter\n80 - Unable to configure TCP/IP service\n81 - Unable to configure DHCP service\n82 - Unable to renew DHCP lease\n83 - Unable to release DHCP lease\n84 - IP not enabled on adapter\n85 - IPX not enabled on adapter\n86 - Frame/network number bounds error\n87 - Invalid frame type\n88 - Invalid network number\n89 - Duplicate network number\n90 - Parameter out of bounds\n91 - Access denied\n92 - Out of memory\n93 - Already exists\n94 - Path, file or object not found\n95 - Unable to notify service\n96 - Unable to notify DNS service\n97 - Interface not configurable\n98 - Not all DHCP leases could be released/renewed\n100 - DHCP not enabled on adapter\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Successful completion, no reboot required", "Successful completion, reboot required", "Method not supported on this platform", "Unknown failure", "Invalid subnet mask", "An error occurred while processing an Instance that was returned", "Invalid input parameter", "More than 5 gateways specified", "Invalid IP  address", "Invalid gateway IP address", "An error occurred while accessing the Registry for the requested information", "Invalid domain name", "Invalid host name", "No primary/secondary WINS server defined", "Invalid file", "Invalid system path", "File copy failed", "Invalid security parameter", "Unable to configure TCP/IP service", "Unable to configure DHCP service", "Unable to renew DHCP lease", "Unable to release DHCP lease", "IP not enabled on adapter", "IPX not enabled on adapter", "Frame/network number bounds error", "Invalid frame type", "Invalid network number", "Duplicate network number", "Parameter out of bounds", "Access denied", "Out of memory", "Already exists", "Path, file or object not found", "Unable to notify service", "Unable to notify DNS service", "Interface not configurable", "Not all DHCP leases could be released/renewed", "DHCP not enabled on adapter", "Other"} : Amended ToSubclass] uint32 SetNumForwardPackets([In : ToSubclass,Description("The NumForwardPackets parameter specifies the number of IP packet headers allocated for the router packet queue. This should be at least as large as the value of the ForwardBufferMemory property divided by the maximum IP data size of the networks connected to the router. It should be no larger than the ForwardBufferMemory value divided by 256, since at least 256 bytes of forward buffer memory are required by each packet. The optimal number of forward packets for a given ForwardBufferMemory size depends on the type of traffic carried on the network, and will be somewhere between these two values. If the router is disabled, this parameter is ignored and no headers are allocated. Valid Range: 1 - 0xFFFFFFFE.") : Amended ToSubclass] uint32 NumForwardPackets);
  [Description("The SetTcpMaxConnectRetransmissions method is used to set the number of attempts TCP will retransmit a Connect Request before aborting. The initial retransmission timeout is 3 seconds and doubles for each attempt.The method returns an integer value that can be interpretted as follows: \n0 - Successful completion, no reboot required\n1 - Successful completion, reboot required\n64 - Method not supported on this platform\n65 - Unknown failure\n66 - Invalid subnet mask\n67 - An error occurred while processing an Instance that was returned\n68 - Invalid input parameter\n69 - More than 5 gateways specified\n70 - Invalid IP  address\n71 - Invalid gateway IP address\n72 - An error occurred while accessing the Registry for the requested information\n73 - Invalid domain name\n74 - Invalid host name\n75 - No primary/secondary WINS server defined\n76 - Invalid file\n77 - Invalid system path\n78 - File copy failed\n79 - Invalid security parameter\n80 - Unable to configure TCP/IP service\n81 - Unable to configure DHCP service\n82 - Unable to renew DHCP lease\n83 - Unable to release DHCP lease\n84 - IP not enabled on adapter\n85 - IPX not enabled on adapter\n86 - Frame/network number bounds error\n87 - Invalid frame type\n88 - Invalid network number\n89 - Duplicate network number\n90 - Parameter out of bounds\n91 - Access denied\n92 - Out of memory\n93 - Already exists\n94 - Path, file or object not found\n95 - Unable to notify service\n96 - Unable to notify DNS service\n97 - Interface not configurable\n98 - Not all DHCP leases could be released/renewed\n100 - DHCP not enabled on adapter\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Successful completion, no reboot required", "Successful completion, reboot required", "Method not supported on this platform", "Unknown failure", "Invalid subnet mask", "An error occurred while processing an Instance that was returned", "Invalid input parameter", "More than 5 gateways specified", "Invalid IP  address", "Invalid gateway IP address", "An error occurred while accessing the Registry for the requested information", "Invalid domain name", "Invalid host name", "No primary/secondary WINS server defined", "Invalid file", "Invalid system path", "File copy failed", "Invalid security parameter", "Unable to configure TCP/IP service", "Unable to configure DHCP service", "Unable to renew DHCP lease", "Unable to release DHCP lease", "IP not enabled on adapter", "IPX not enabled on adapter", "Frame/network number bounds error", "Invalid frame type", "Invalid network number", "Duplicate network number", "Parameter out of bounds", "Access denied", "Out of memory", "Already exists", "Path, file or object not found", "Unable to notify service", "Unable to notify DNS service", "Interface not configurable", "Not all DHCP leases could be released/renewed", "DHCP not enabled on adapter", "Other"} : Amended ToSubclass] uint32 SetTcpMaxConnectRetransmissions([In : ToSubclass,Description("The TcpMaxConnectRetransmissions parameter specifies the number of attempts TCP will retransmit a connect request before aborting. Valid Range: 0 - 0xFFFFFFFF.") : Amended ToSubclass] uint32 TcpMaxConnectRetransmissions);
  [Description("The SetTcpMaxDataRetransmissions method is used to set the  number of times TCP will retransmit an individual data segment before aborting the connection. The retransmission timeout doubles with each successive retransmission on a connection.The method returns an integer value that can be interpretted as follows: \n0 - Successful completion, no reboot required\n1 - Successful completion, reboot required\n64 - Method not supported on this platform\n65 - Unknown failure\n66 - Invalid subnet mask\n67 - An error occurred while processing an Instance that was returned\n68 - Invalid input parameter\n69 - More than 5 gateways specified\n70 - Invalid IP  address\n71 - Invalid gateway IP address\n72 - An error occurred while accessing the Registry for the requested information\n73 - Invalid domain name\n74 - Invalid host name\n75 - No primary/secondary WINS server defined\n76 - Invalid file\n77 - Invalid system path\n78 - File copy failed\n79 - Invalid security parameter\n80 - Unable to configure TCP/IP service\n81 - Unable to configure DHCP service\n82 - Unable to renew DHCP lease\n83 - Unable to release DHCP lease\n84 - IP not enabled on adapter\n85 - IPX not enabled on adapter\n86 - Frame/network number bounds error\n87 - Invalid frame type\n88 - Invalid network number\n89 - Duplicate network number\n90 - Parameter out of bounds\n91 - Access denied\n92 - Out of memory\n93 - Already exists\n94 - Path, file or object not found\n95 - Unable to notify service\n96 - Unable to notify DNS service\n97 - Interface not configurable\n98 - Not all DHCP leases could be released/renewed\n100 - DHCP not enabled on adapter\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Successful completion, no reboot required", "Successful completion, reboot required", "Method not supported on this platform", "Unknown failure", "Invalid subnet mask", "An error occurred while processing an Instance that was returned", "Invalid input parameter", "More than 5 gateways specified", "Invalid IP  address", "Invalid gateway IP address", "An error occurred while accessing the Registry for the requested information", "Invalid domain name", "Invalid host name", "No primary/secondary WINS server defined", "Invalid file", "Invalid system path", "File copy failed", "Invalid security parameter", "Unable to configure TCP/IP service", "Unable to configure DHCP service", "Unable to renew DHCP lease", "Unable to release DHCP lease", "IP not enabled on adapter", "IPX not enabled on adapter", "Frame/network number bounds error", "Invalid frame type", "Invalid network number", "Duplicate network number", "Parameter out of bounds", "Access denied", "Out of memory", "Already exists", "Path, file or object not found", "Unable to notify service", "Unable to notify DNS service", "Interface not configurable", "Not all DHCP leases could be released/renewed", "DHCP not enabled on adapter", "Other"} : Amended ToSubclass] uint32 SetTcpMaxDataRetransmissions([In : ToSubclass,Description("The TcpMaxDataRetransmissions parameter specifies the number of times TCP will retransmit an individual data segment before aborting the connection. Valid Range: 0 - 0xFFFFFFFF.") : Amended ToSubclass] uint32 TcpMaxDataRetransmissions);
  [Description("The SetTcpNumConnections method is used to set the maximum number of connections that TCP may have open simultaneously.The method returns an integer value that can be interpretted as follows: \n0 - Successful completion, no reboot required\n1 - Successful completion, reboot required\n64 - Method not supported on this platform\n65 - Unknown failure\n66 - Invalid subnet mask\n67 - An error occurred while processing an Instance that was returned\n68 - Invalid input parameter\n69 - More than 5 gateways specified\n70 - Invalid IP  address\n71 - Invalid gateway IP address\n72 - An error occurred while accessing the Registry for the requested information\n73 - Invalid domain name\n74 - Invalid host name\n75 - No primary/secondary WINS server defined\n76 - Invalid file\n77 - Invalid system path\n78 - File copy failed\n79 - Invalid security parameter\n80 - Unable to configure TCP/IP service\n81 - Unable to configure DHCP service\n82 - Unable to renew DHCP lease\n83 - Unable to release DHCP lease\n84 - IP not enabled on adapter\n85 - IPX not enabled on adapter\n86 - Frame/network number bounds error\n87 - Invalid frame type\n88 - Invalid network number\n89 - Duplicate network number\n90 - Parameter out of bounds\n91 - Access denied\n92 - Out of memory\n93 - Already exists\n94 - Path, file or object not found\n95 - Unable to notify service\n96 - Unable to notify DNS service\n97 - Interface not configurable\n98 - Not all DHCP leases could be released/renewed\n100 - DHCP not enabled on adapter\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Successful completion, no reboot required", "Successful completion, reboot required", "Method not supported on this platform", "Unknown failure", "Invalid subnet mask", "An error occurred while processing an Instance that was returned", "Invalid input parameter", "More than 5 gateways specified", "Invalid IP  address", "Invalid gateway IP address", "An error occurred while accessing the Registry for the requested information", "Invalid domain name", "Invalid host name", "No primary/secondary WINS server defined", "Invalid file", "Invalid system path", "File copy failed", "Invalid security parameter", "Unable to configure TCP/IP service", "Unable to configure DHCP service", "Unable to renew DHCP lease", "Unable to release DHCP lease", "IP not enabled on adapter", "IPX not enabled on adapter", "Frame/network number bounds error", "Invalid frame type", "Invalid network number", "Duplicate network number", "Parameter out of bounds", "Access denied", "Out of memory", "Already exists", "Path, file or object not found", "Unable to notify service", "Unable to notify DNS service", "Interface not configurable", "Not all DHCP leases could be released/renewed", "DHCP not enabled on adapter", "Other"} : Amended ToSubclass] uint32 SetTcpNumConnections([In : ToSubclass,Description("The TcpNumConnections parameter specifies the maximum number of connections that TCP may have open simultaneously. Valid Range: 0 - 0xFFFFFE.") : Amended ToSubclass] uint32 TcpNumConnections);
  [Description("The SetTcpUseRFC1122UrgentPointer method is used to specify whether TCP uses the RFC 1122 specification for urgent data, or the mode used by Berkeley Software Design (BSD) derived systems. The two mechanisms interpret the urgent pointer in the TCP header and the length of the urgent data differently. They are not interoperable. Windows 2000 and Windows NT version 3.51 or higher defaults to BSD mode. The method returns an integer value that can be interpretted as follows: \n0 - Successful completion, no reboot required\n1 - Successful completion, reboot required\n64 - Method not supported on this platform\n65 - Unknown failure\n66 - Invalid subnet mask\n67 - An error occurred while processing an Instance that was returned\n68 - Invalid input parameter\n69 - More than 5 gateways specified\n70 - Invalid IP  address\n71 - Invalid gateway IP address\n72 - An error occurred while accessing the Registry for the requested information\n73 - Invalid domain name\n74 - Invalid host name\n75 - No primary/secondary WINS server defined\n76 - Invalid file\n77 - Invalid system path\n78 - File copy failed\n79 - Invalid security parameter\n80 - Unable to configure TCP/IP service\n81 - Unable to configure DHCP service\n82 - Unable to renew DHCP lease\n83 - Unable to release DHCP lease\n84 - IP not enabled on adapter\n85 - IPX not enabled on adapter\n86 - Frame/network number bounds error\n87 - Invalid frame type\n88 - Invalid network number\n89 - Duplicate network number\n90 - Parameter out of bounds\n91 - Access denied\n92 - Out of memory\n93 - Already exists\n94 - Path, file or object not found\n95 - Unable to notify service\n96 - Unable to notify DNS service\n97 - Interface not configurable\n98 - Not all DHCP leases could be released/renewed\n100 - DHCP not enabled on adapter\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Successful completion, no reboot required", "Successful completion, reboot required", "Method not supported on this platform", "Unknown failure", "Invalid subnet mask", "An error occurred while processing an Instance that was returned", "Invalid input parameter", "More than 5 gateways specified", "Invalid IP  address", "Invalid gateway IP address", "An error occurred while accessing the Registry for the requested information", "Invalid domain name", "Invalid host name", "No primary/secondary WINS server defined", "Invalid file", "Invalid system path", "File copy failed", "Invalid security parameter", "Unable to configure TCP/IP service", "Unable to configure DHCP service", "Unable to renew DHCP lease", "Unable to release DHCP lease", "IP not enabled on adapter", "IPX not enabled on adapter", "Frame/network number bounds error", "Invalid frame type", "Invalid network number", "Duplicate network number", "Parameter out of bounds", "Access denied", "Out of memory", "Already exists", "Path, file or object not found", "Unable to notify service", "Unable to notify DNS service", "Interface not configurable", "Not all DHCP leases could be released/renewed", "DHCP not enabled on adapter", "Other"} : Amended ToSubclass] uint32 SetTcpUseRFC1122UrgentPointer([In : ToSubclass,Description("The TcpUseRFC1122UrgentPointer parameter specifies whether TCP uses the RFC 1122 specification or the mode used by BSD-derived systems, for urgent data. If TRUE, urgent data is sent in RFC 1122 mode.") : Amended ToSubclass] boolean TcpUseRFC1122UrgentPointer);
  [Description("The SetTcpWindowSize method is used to set the maximum TCP Receive Window size offered by the system. The Receive Window specifies the number of bytes a sender can transmit without receiving an acknowledgment. In general, larger receive windows improve performance over high delay and high bandwidth networks. For efficiency, the receive window should be an even multiple of the TCP Maximum Segment Size (MSS). The method returns an integer value that can be interpretted as follows: \n0 - Successful completion, no reboot required\n1 - Successful completion, reboot required\n64 - Method not supported on this platform\n65 - Unknown failure\n66 - Invalid subnet mask\n67 - An error occurred while processing an Instance that was returned\n68 - Invalid input parameter\n69 - More than 5 gateways specified\n70 - Invalid IP  address\n71 - Invalid gateway IP address\n72 - An error occurred while accessing the Registry for the requested information\n73 - Invalid domain name\n74 - Invalid host name\n75 - No primary/secondary WINS server defined\n76 - Invalid file\n77 - Invalid system path\n78 - File copy failed\n79 - Invalid security parameter\n80 - Unable to configure TCP/IP service\n81 - Unable to configure DHCP service\n82 - Unable to renew DHCP lease\n83 - Unable to release DHCP lease\n84 - IP not enabled on adapter\n85 - IPX not enabled on adapter\n86 - Frame/network number bounds error\n87 - Invalid frame type\n88 - Invalid network number\n89 - Duplicate network number\n90 - Parameter out of bounds\n91 - Access denied\n92 - Out of memory\n93 - Already exists\n94 - Path, file or object not found\n95 - Unable to notify service\n96 - Unable to notify DNS service\n97 - Interface not configurable\n98 - Not all DHCP leases could be released/renewed\n100 - DHCP not enabled on adapter\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Successful completion, no reboot required", "Successful completion, reboot required", "Method not supported on this platform", "Unknown failure", "Invalid subnet mask", "An error occurred while processing an Instance that was returned", "Invalid input parameter", "More than 5 gateways specified", "Invalid IP  address", "Invalid gateway IP address", "An error occurred while accessing the Registry for the requested information", "Invalid domain name", "Invalid host name", "No primary/secondary WINS server defined", "Invalid file", "Invalid system path", "File copy failed", "Invalid security parameter", "Unable to configure TCP/IP service", "Unable to configure DHCP service", "Unable to renew DHCP lease", "Unable to release DHCP lease", "IP not enabled on adapter", "IPX not enabled on adapter", "Frame/network number bounds error", "Invalid frame type", "Invalid network number", "Duplicate network number", "Parameter out of bounds", "Access denied", "Out of memory", "Already exists", "Path, file or object not found", "Unable to notify service", "Unable to notify DNS service", "Interface not configurable", "Not all DHCP leases could be released/renewed", "DHCP not enabled on adapter", "Other"} : Amended ToSubclass] uint32 SetTcpWindowSize([In : ToSubclass,Units("bytes") : Amended ToSubclass,Description("The TcpWindowSize parameter specifies the maximum TCP receive window size offered by the system. Valid Range: 0 - 65535.") : Amended ToSubclass] uint16 TcpWindowSize);
  [Description("The EnableIPFilterSec method is used to enable IP security globally across all IP-bound network adapters. With security enabled, the operational security characteristics for any single network adapter can be controlled using the network adapter specific EnableIPSec method. The method returns an integer value that can be interpretted as follows: \n0 - Successful completion, no reboot required\n1 - Successful completion, reboot required\n64 - Method not supported on this platform\n65 - Unknown failure\n66 - Invalid subnet mask\n67 - An error occurred while processing an Instance that was returned\n68 - Invalid input parameter\n69 - More than 5 gateways specified\n70 - Invalid IP  address\n71 - Invalid gateway IP address\n72 - An error occurred while accessing the Registry for the requested information\n73 - Invalid domain name\n74 - Invalid host name\n75 - No primary/secondary WINS server defined\n76 - Invalid file\n77 - Invalid system path\n78 - File copy failed\n79 - Invalid security parameter\n80 - Unable to configure TCP/IP service\n81 - Unable to configure DHCP service\n82 - Unable to renew DHCP lease\n83 - Unable to release DHCP lease\n84 - IP not enabled on adapter\n85 - IPX not enabled on adapter\n86 - Frame/network number bounds error\n87 - Invalid frame type\n88 - Invalid network number\n89 - Duplicate network number\n90 - Parameter out of bounds\n91 - Access denied\n92 - Out of memory\n93 - Already exists\n94 - Path, file or object not found\n95 - Unable to notify service\n96 - Unable to notify DNS service\n97 - Interface not configurable\n98 - Not all DHCP leases could be released/renewed\n100 - DHCP not enabled on adapter\nOther - For integer values other than those listed above, refer to Win32 error code documentation.") : Amended ToSubclass,Values{"Successful completion, no reboot required", "Successful completion, reboot required", "Method not supported on this platform", "Unknown failure", "Invalid subnet mask", "An error occurred while processing an Instance that was returned", "Invalid input parameter", "More than 5 gateways specified", "Invalid IP  address", "Invalid gateway IP address", "An error occurred while accessing the Registry for the requested information", "Invalid domain name", "Invalid host name", "No primary/secondary WINS server defined", "Invalid file", "Invalid system path", "File copy failed", "Invalid security parameter", "Unable to configure TCP/IP service", "Unable to configure DHCP service", "Unable to renew DHCP lease", "Unable to release DHCP lease", "IP not enabled on adapter", "IPX not enabled on adapter", "Frame/network number bounds error", "Invalid frame type", "Invalid network number", "Duplicate network number", "Parameter out of bounds", "Access denied", "Out of memory", "Already exists", "Path, file or object not found", "Unable to notify service", "Unable to notify DNS service", "Interface not configurable", "Not all DHCP leases could be released/renewed", "DHCP not enabled on adapter", "Other"} : Amended ToSubclass] uint32 EnableIPFilterSec([In : ToSubclass,Description("The IPFilterSecurityEnabled parameter specifies whether IP security is enabled globally across all IP-bound network adapters. If the input parameter IPFilterSecurityEnabled is TRUE, security is enabled. If the input parameter IPFilterSecurityEnabled is FALSE, all port and protocol traffic are allowed to flow unfiltered.") : Amended ToSubclass] boolean IPFilterSecurityEnabled);
};

[Description("The Win32_NetworkAdapterSetting class represents an association between a network adapter and its configuration settings.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_NetworkAdapterSetting : Win32_DeviceSettings
{
  [Description("The Element reference represents the properties of anetwork adapter that is using a particular network adapter setting.") : Amended ToSubclass] Win32_NetworkAdapter Ref Element;
  [Description("The Setting reference represents the configuration settings used on the network adapter.") : Amended ToSubclass] Win32_NetworkAdapterConfiguration Ref Setting;
};

[Description("The Win32_USBController class manages the capabilities of a Universal Serial Bus (USB) controller.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_USBController : CIM_USBController
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The DeviceID property contains a string uniquely identifying the USB controller from other devices on the system.") : Amended ToSubclass] string DeviceID;
};

[Description("Capabilities and management of an CIM_InfraredController.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class CIM_InfraredController : CIM_Controller
{
};

[Description("The Win32_InfraredDevice class represents the capabilities and management of an infrared device.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_InfraredDevice : CIM_InfraredController
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The DeviceID property contains a string uniquely identifying the infrared device with other devices on the system.") : Amended ToSubclass] string DeviceID;
  [Description("The Manufacturer property indicates the name of the manufacturer of the infrared device .\nExample: Acme") : Amended ToSubclass] string Manufacturer;
};

[Description("The Win32_SerialPort class represents a serial port on a Win32 system.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_SerialPort : CIM_SerialController
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The DeviceID property contains a string uniquely identifying the serial port with other devices on the system.") : Amended ToSubclass] string DeviceID;
  [Description("The Binary property indicates whether the serial port is configured for binary data transfer. Since the Win32 API does not support non-binary mode transfers, this property must be TRUE. Specifying FALSE will not work. Values: TRUE or FALSE. A value of TRUE indicates the serial port is configured for binary data transfer.") : Amended ToSubclass] boolean Binary;
  [units("bytes") : Amended ToSubclass,Description("The MaximumInputBufferSize property specifies the maximum size of the serial port driver's internal input buffer. A value of zero indicates that no maximum value is imposed by the serial provider.") : Amended ToSubclass] uint32 MaximumInputBufferSize;
  [units("bytes") : Amended ToSubclass,Description("The MaximumOutputBufferSize property specifies the maximum size of the serial port driver's internal output buffer. A value of zero indicates that no maximum value is imposed by the serial provider.") : Amended ToSubclass] uint32 MaximumOutputBufferSize;
  [Description("The ProviderType property specifies the communications provider type.") : Amended ToSubclass,Values{"FAX Device", "LAT Protocol", "Modem Device", "Network Bridge", "Parallel Port", "RS232 Serial Port", "RS422 Port", "RS423 Port", "RS449 Port", "Scanner Device", "TCP/IP TelNet", "X.25", "Unspecified"} : Amended ToSubclass] string ProviderType;
  [Description("The SettableBaudRate property indicates whether the baud rate can be changed for this serial port.\nValues: TRUE or FALSE. A value of TRUE indicates the baud rate can be changed.") : Amended ToSubclass] boolean SettableBaudRate;
  [Description("The SettableDataBits property indicates whether data bits can be set for this serial port.\nValues: TRUE or FALSE. A value of  TRUE indicates the data bits can be set.") : Amended ToSubclass] boolean SettableDataBits;
  [Description("The SettableFlowControl property indicates whether flow control can be set for this serial port.\nValues: TRUE or FALSE. A value of TRUE indicates the flow control can be set.") : Amended ToSubclass] boolean SettableFlowControl;
  [Description("The SettableParity property indicates whether parity can be set for this serial port.\nValues: TRUE or FALSE. A value of TRUE indicates the parity can be set.") : Amended ToSubclass] boolean SettableParity;
  [Description("The SettableParityCheck property indicates whether parity checking can be set for this serial port (if parity checking is supported). \nValues: TRUE or FALSE. A value of TRUE indicates parity checking can be set.") : Amended ToSubclass] boolean SettableParityCheck;
  [Description("The SettableRLSD property indicates whether RLSD can be set for this serial port (if Received Line Signal Detect (RLSD) is supported). \nValues: TRUE or FALSE.  A value of TRUE indicates the RLSD can be set.") : Amended ToSubclass] boolean SettableRLSD;
  [Description("The SettableStopBits property indicates whether stop bits can be set for this serial port.\nValues: TRUE or FALSE. A value of TRUE indicates the stop bits can be set.") : Amended ToSubclass] boolean SettableStopBits;
  [Description("The Supports16BitMode property indicates whether 16-bit mode is supported on this serial port.\nValues: TRUE or FALSE. A value of TRUE indicates 16-bit mode is supported.") : Amended ToSubclass] boolean Supports16BitMode;
  [Description("The SupportsDTRDSR property indicates whether Data Terminal Ready (DTR) and Data Set Ready (DSR) signals are supported on this serial port.\nValues: TRUE or FALSE. A value of TRUE indicates DTR and DSR signals are supported.") : Amended ToSubclass] boolean SupportsDTRDSR;
  [Description("The SupportsElapsedTimeouts property indicates whether elapsed timeouts are supported on this serial port. Elapsed timeouts track the total amount of time between data transmissions.\nValues: TRUE or FALSE.  A value of TRUE indicates elapsed timeouts are supported.") : Amended ToSubclass] boolean SupportsElapsedTimeouts;
  [Description("The SupportsIntTimeouts property indicates whether interval time-outs are supported. An interval timeout is the amount of time allowed to elapse between the arrival of each piece of data.\nValues: TRUE or FALSE. A value of TRUE indicates interval timeouts are supported.") : Amended ToSubclass] boolean SupportsIntTimeouts;
  [Description("The SupportsParityCheck property indicates whether parity checking is supported on this serial port.\nValues: TRUE or FALSE. A value of TRUE indicates parity checking is supported.") : Amended ToSubclass] boolean SupportsParityCheck;
  [Description("The SupportsRLSD property indicates whether Received Line Signal Detect (RLSD) is supported on this serial port.\nValues: TRUE or FALSE. A value of TRUE indicates RLSD is supported.") : Amended ToSubclass] boolean SupportsRLSD;
  [Description("The SupportsRTSCTS property indicates whether Ready To Send (RTS) and Clear To Send (CTS) signals are supported on this serial port.\nValues: TRUE or FALSE. A value of TRUE indicates RTS and CTS signals are supported.") : Amended ToSubclass] boolean SupportsRTSCTS;
  [Description("The SupportsSpecialCharacters property indicates whether serial port control characters are supported. These characters signal events rather than data. These characters are not displayable and are set by the driver. They include EofChar, ErrorChar, BreakChar, EventChar, XonChar, and XoffChar.\nValues: TRUE or FALSE. A value of TRUE indicates special characters are supported.") : Amended ToSubclass] boolean SupportsSpecialCharacters;
  [Description("The SupportsXOnXOff property indicates whether XON/XOFF flow control is supported on this serial port.\nValues: TRUE or FALSE. A value of TRUE indicates XON/XOFF is supported.") : Amended ToSubclass] boolean SupportsXOnXOff;
  [Description("The SupportsXOnXOffSet property indicates whether the communications provider supports configuration of the XON/XOFF flow control setting.\nValues: TRUE or FALSE. A value of TRUE indicates  XON/XOFF flow control setting is supported.") : Amended ToSubclass] boolean SupportsXOnXOffSet;
  [Description("The OSAutoDiscovered property distinguishes the instances of this class that were automatically discovered by the operating system. If, for example, hardware was added through the Control Panel, the operating system finds instances of this class by querying hardware from the instances of this class. A value of TRUE indicates that the instance was automatically discovered.") : Amended ToSubclass] boolean OSAutoDiscovered;
};

[Description("The Win32_SCSIController class represents a SCSI controller on a Win32 system.\nExample: Adaptec AHA-2940UW.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_SCSIController : CIM_SCSIController
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The DeviceID property contains a string uniquely identifying the SCSI controller with other devices on the system.") : Amended ToSubclass] string DeviceID;
  [Description("The Index property indicates the index number of the SCSI controller in the system registry.\nExample: 0.") : Amended ToSubclass] uint32 Index;
  [Description("The DriverName property indicates the driver file name of the SCSI controller.\nExample: Adaptec") : Amended ToSubclass] string DriverName;
  [Description("The DeviceMap property indicates the order in which devices are listed with this SCSI controller. \nThe DeviceMap property has been deprecated.  There is no replacementvalue and this property is now considered obsolete.") : Amended ToSubclass] string DeviceMap;
  [Description("The HardwareVersion property indicates the hardware version number of the SCSI controller.\nExample: 1.25") : Amended ToSubclass] string HardwareVersion;
  [Description("The Manufacturer property indicates the name of the SCSI controller manufacturer.\nExample: Adaptec") : Amended ToSubclass] string Manufacturer;
};

[Description("The Win32_USBControllerDevice class represents an association between a Universal Serial Bus (USB) controller and the CIM_LogicalDevice connected to it.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_USBControllerDevice : CIM_ControlledBy
{
  [key : ToInstance ToSubclass DisableOverride,Description("The CIM_LogicalDevice dependent reference represents the CIM_LogicalDevice connected to the Universal Serial Bus (USB) controller.") : Amended ToSubclass] CIM_LogicalDevice Ref Dependent;
  [key : ToInstance ToSubclass DisableOverride,Description("The CIM_USBController antecedent reference represents the Universal Serial Bus (USB) controller associated with this device.") : Amended ToSubclass] CIM_USBController Ref Antecedent;
};

[Description("The Win32_SCSIControllerDevice class represents an association between a Small Computer System Interface (SCSI) controller and the logical device (disk drive) connected to it. Instances for this class are only provided on  Microsoft Windows NT/Windows 2000 or later and Windows 95 or later.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_SCSIControllerDevice : CIM_ControlledBy
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The CIM_LogicalDevice Dependent reference represents the logical device connected to the SCSI controller.") : Amended ToSubclass] CIM_LogicalDevice Ref Dependent;
  [Key : ToInstance ToSubclass DisableOverride,Description("The Win32_SCSIController antecedent reference represents the SCSI controller associated with this device.") : Amended ToSubclass] Win32_SCSIController Ref Antecedent;
};

[Description("The Win32_ParallelPort class represents the properties of a parallel port on a Win32 computer system.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_ParallelPort : CIM_ParallelController
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The DeviceID property contains a string identifying the parallel port.") : Amended ToSubclass] string DeviceID;
  [Description("The OSAutoDiscovered property indicates whether the parallel port was automatically detected by the operating system or by other means (such as being manually added through the Control Panel).\nValues: TRUE or FALSE. A value of TRUE indicates the parallel port was automatically discovered by the operating system.") : Amended ToSubclass] boolean OSAutoDiscovered;
};

[Description("The Win32_SerialPortConfiguration class represents the default settings for data transmission on a Win32 serial port. this may include the default configuration for establishing a connection and error checking.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_SerialPortConfiguration : CIM_Setting
{
  [Description("The AbortReadWriteOnError property indicates whether read and write operations are terminated if an error occurs.\nValues: TRUE or FALSE. If TRUE, the driver terminates all read and write operations with an error status if an error occurs. The driver will not accept any further communications operations until the application acknowledges the error.") : Amended ToSubclass] boolean AbortReadWriteOnError;
  [Description("The BaudRate property indicates the baud (bits per second) rate at which the communications device operates. \nExample: 9600") : Amended ToSubclass] uint32 BaudRate;
  [Description("The BinaryModeEnabled property indicates whether binary-mode data transfers are enabled for the serial port. Win32 systems only allow binary transfers through serial ports, so this value will always be TRUE.") : Amended ToSubclass] boolean BinaryModeEnabled;
  [Description("The BitsPerByte property indicates the number of bits transmitted and received for each byte of data for the Win32 serial port. The number may vary with control and error correction bits, such as parity bits.\nExample: 8") : Amended ToSubclass] uint32 BitsPerByte;
  [Description("The ContinueXMitOnXOff property specifies whether data transmissions continue when the receiving buffer is close to full and an XoffChar character has been sent to the transmitter.\nValues: TRUE or FALSE. If TRUE, transmission continues after the input buffer has come within XoffLim bytes of being full and the driver has transmitted the XoffChar character to stop receiving bytes. If FALSE, transmission does not continue until the input buffer is within XonLim bytes of being empty and the driver has transmitted the XonChar character to resume reception.") : Amended ToSubclass] boolean ContinueXMitOnXOff;
  [Description("The CTSOutflowControl property determines whether the Clear To Send (CTS) is checked before transmitting data. CTS signals that both devices on the serial connection are ready to transfer data. \nValues: TRUE or FALSE. If TRUE, data transmission is suspended until CTS signal is given.") : Amended ToSubclass] boolean CTSOutflowControl;
  [Description("The DiscardNULLBytes property determines whether to discard NULL bytes (characters) when they are received.\nValues: TRUE or FALSE. If TRUE, NULL bytes are discarded.") : Amended ToSubclass] boolean DiscardNULLBytes;
  [Description("The DSROutflowControl property determines whether data outflow control is enabled when there is a Data Set Ready (DSR) condition. DSR signals that the connection has been established by the devices on the serial connection.\nValues: TRUE or FALSE. If TRUE, DSR data transmission is suspended until DSR signal is given.") : Amended ToSubclass] boolean DSROutflowControl;
  [Description("The DSRSensitivity property specifies whether the communications driver is sensitive to the state of the DSR signal. \nValues: TRUE or FALSE. If TRUE, the driver ignores any bytes received, unless the DSR modem input line is high.") : Amended ToSubclass] boolean DSRSensitivity;
  [Description("The DTRFlowControlType property specifies the use of the data-terminal-ready (DTR) flow control after a connection has been established. After a communication line has been established the DTR can be left in the following states: enabled, to show that the connection is still active; disabled, to ignore the DTR once received; or it can be used as a data flow control flag.") : Amended ToSubclass,Values{"Enable", "Disable", "Handshake"} : Amended ToSubclass] string DTRFlowControlType;
  [Description("The EOFCharacter property specifies the value of the character used to signal the end of data. .\nExample: ^Z") : Amended ToSubclass] uint32 EOFCharacter;
  [Description("The ErrorReplaceCharacter property specifies the value of the character used to replace bytes received with a parity error. \nExample: ^C") : Amended ToSubclass] uint32 ErrorReplaceCharacter;
  [Description("The ErrorReplacementEnabled specifies whether bytes received with parity errors are replaced with the ErrorReplaceCharacter value. Characters with parity errors are only replaced if this member is TRUE and the parity is enabled.") : Amended ToSubclass] boolean ErrorReplacementEnabled;
  [Description("The EventCharacter specifies the value of the control character that is used to signal an event, such as end of file.\nExample: ^e") : Amended ToSubclass] uint32 EventCharacter;
  [Description("The IsBusy property determines whether the serial port is busy.\nValues: TRUE or FALSE. If TRUE, the serial port is busy.") : Amended ToSubclass] boolean IsBusy;
  [key : ToInstance ToSubclass DisableOverride,Description("The Name property indicates the name of the Win32 serial port.\nExample: COM1") : Amended ToSubclass] string Name;
  [Description("The Parity property specifies the method of parity checking to be used. Parity is used as an error checking technique where an extra parity bit is included with every unit of data. If even parity is used, the parity bit is used to make the total count of bits set an even number. The receiver can then verify the validity of the data by counting the bits that are set. Odd parity, sets the parity bit so that the count of bits set is an odd number. Mark parity always leaves the parity bit set to 1, while space parity always leaves the parity bit set to 0.\nExample: Even") : Amended ToSubclass,Values{"None", "Odd", "Even", "Mark", "Space"} : Amended ToSubclass] string Parity;
  [Description("The ParityCheckEnabled property determines whether parity checking is enabled.\nValues: TRUE or FALSE. If TRUE, parity checking is enabled.") : Amended ToSubclass] boolean ParityCheckEnabled;
  [Description("The RTSFlowControlType property specifies the  request-to-send (RTS) flow control. RTS is used to signal that data is available for transmission. Uses of this member include:\nDisable - RTS is ignored after the first RTS signal is received.\nEnable - RTS is left on for the data transfer session.\nHandshake - RTS is turned off if the transmission buffer is more than three-quarters full, and RTS is turned on when the buffer is less than one-half full.\nToggle - RTS is turned on if there is any data buffered for transmission.\n") : Amended ToSubclass,Values{"Enable", "Disable", "Handshake", "Toggle"} : Amended ToSubclass] string RTSFlowControlType;
  [Description("The StopBits specifies the number of stop bits to be used. StopBits separate each unit of data on an asynchronous serial connection. They are also sent continuously when no data is available for transmission.\nExample: 1") : Amended ToSubclass,Values{"1", "1.5", "2"} : Amended ToSubclass] string StopBits;
  [Description("The XOffCharacter property specifies the value of the XOFF character for both transmission and reception. XOFF is a software control to stop the transmission of data (whereas RTS and CTS are hardware controls). XON resumes the transmission.") : Amended ToSubclass] uint32 XOffCharacter;
  [Description("The XOffXMitThreshold property specifies the maximum number of bytes allowed in the input buffer before the XOFF character is sent.") : Amended ToSubclass] uint32 XOffXMitThreshold;
  [Description("The XOnCharacter property specifies the value of the XON character for both transmission and reception. XON is a software control to resume the transmission of data (whereas RTS and CTS are hardware controls). XOFF stops the transmission.") : Amended ToSubclass] uint32 XOnCharacter;
  [Description("The XOnXMitThreshold property specifies the minimum number of bytes allowed in the input buffer before the XON character is sent. This member works in conjunction with XOffXMitThreshold to regulate the rate at which data is transferred.") : Amended ToSubclass] uint32 XOnXMitThreshold;
  [Description("The XOnXOffInFlowControl property specifies whether XON/XOFF flow control is used during reception.\nValues TRUE or FALSE. If TRUE the XOffCharacter is sent when the input buffer comes within XOffXMitThreshold bytes of being full, and the XOnCharacter is sent when the input buffer comes within XOnXMitThreshold bytes of being empty.") : Amended ToSubclass] uint32 XOnXOffInFlowControl;
  [Description("The XOnXOffOutFlowControl specifies whether XON/XOFF flow control is used during transmission.\nValues TRUE or FALSE. If TRUE, transmission stops when the XOffCharacter is received and starts again when the XonCharacter is received.") : Amended ToSubclass] uint32 XOnXOffOutFlowControl;
};

[Description("The Win32_SerialPortSetting class represents an association between a serial port and its configuration settings.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_SerialPortSetting : Win32_DeviceSettings
{
  [Description("The Element reference represents the Win32_SerialPort containing the properties of a serial port on the computer system.") : Amended ToSubclass] Win32_SerialPort Ref Element;
  [Description("The Setting reference represents the Win32_SerialPortConfiguration containing a configuration setting for the serial port.") : Amended ToSubclass] Win32_SerialPortConfiguration Ref Setting;
};

[Description("The Win32_PortConnector class represents physical connection ports, such as DB-25 pin male, Centronics, and PS/2.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_PortConnector : CIM_PhysicalConnector
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The Tag property contains a string that uniquely identifies a port connection on the computer system.\nExample: Port Connector 1") : Amended ToSubclass] string Tag;
  [Description("The InternalReferenceDesignator property indicates the internal reference designator of the port. Internal reference designators are specific to the manufacturer and identify the circuit board location or use of the port.\nExample: J101") : Amended ToSubclass] string InternalReferenceDesignator;
  [Description("The ExternalReferenceDesignator property indicates the external reference designator of the port. External reference designators are identifiers that determine the type and use of the port.\nExample: COM1") : Amended ToSubclass] string ExternalReferenceDesignator;
  [Description("The ConnectorType property indicates the physical attributes of the connector used by this port.\nExample: 2 25 (Male RS-232)") : Amended ToSubclass,Values{"Unknown", "Other", "Male", "Female", "Shielded", "Unshielded", "SCSI (A) High-Density (50 pins)", "SCSI (A) Low-Density (50 pins)", "SCSI (P) High-Density (68 pins)", "SCSI SCA-I (80 pins)", "SCSI SCA-II (80 pins)", "SCSI Fibre Channel (DB-9, Copper)", "SCSI Fibre Channel (Fibre)", "SCSI Fibre Channel SCA-II (40 pins)", "SCSI Fibre Channel SCA-II (20 pins)", "SCSI Fibre Channel BNC", "ATA 3-1/2 Inch (40 pins)", "ATA 2-1/2 Inch (44 pins)", "ATA-2", "ATA-3", "ATA/66", "DB-9", "DB-15", "DB-25", "DB-36", "RS-232C", "RS-422", "RS-423", "RS-485", "RS-449", "V.35", "X.21", "IEEE-488", "AUI", "UTP Category 3", "UTP Category 4", "UTP Category 5", "BNC", "RJ11", "RJ45", "Fiber MIC", "Apple AUI", "Apple GeoPort", "PCI", "ISA", "EISA", "VESA", "PCMCIA", "PCMCIA Type I", "PCMCIA Type II", "PCMCIA Type III", "ZV Port", "CardBus", "USB", "IEEE 1394", "HIPPI", "HSSDC (6 pins)", "GBIC", "DIN", "Mini-DIN", "Micro-DIN", "PS/2", "Infrared", "HP-HIL", "Access.bus", "NuBus", "Centronics", "Mini-Centronics", "Mini-Centronics Type-14", "Mini-Centronics Type-20", "Mini-Centronics Type-26", "Bus Mouse", "ADB", "AGP", "VME Bus", "VME64", "Proprietary", "Proprietary Processor Card Slot", "Proprietary Memory Card Slot", "Proprietary I/O Riser Slot", "PCI-66MHZ", "AGP2X", "AGP4X", "PC-98", "PC-98Hireso", "PC-H98", "PC-98Note", "PC-98Full", "Mini-Jack", "On Board Floppy", "9 Pin Dual Inline (pin 10 cut)", "25 Pin Dual Inline (pin 26 cut)", "50 Pin Dual Inline", "68 Pin  Dual Inline", "On Board Sound Input from CD-ROM"} : Amended ToSubclass] uint16 ConnectorType[];
  [Description("The PortType property describes the function of the port.\nExample: USB") : Amended ToSubclass,Values{"None", "Parallel Port XT/AT Compatible", "Parallel Port PS/2", "Parallel Port ECP", "Parallel Port EPP", "Parallel Port ECP/EPP", "Serial Port XT/AT Compatible", "Serial Port 16450 Compatible", "Serial Port 16550 Compatible", "Serial Port 16550A Compatible", "SCSI Port", "MIDI Port", "Joy Stick Port", "Keyboard Port", "Mouse Port", "SSA SCSI", "USB", "FireWire (IEEE P1394)", "PCMCIA Type II", "PCMCIA Type II", "PCMCIA Type III", "Cardbus", "Access Bus Port", "SCSI II", "SCSI Wide", "PC-98", "PC-98-Hireso", "PC-H98", "Video Port", "Audio Port", "Modem Port", "Network Port", "8251 Compatible", "8251 FIFO Compatible"} : Amended ToSubclass] uint16 PortType;
};

[Description("The Win32_PhysicalMemory class represents a physical memory device located on a computer system as available to the operating system.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_PhysicalMemory : CIM_PhysicalMemory
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The Tag property contains a string that uniquely identifies the physical memory device represented by an instance of Win32_PhysicalMemory.\nExample: Physical Memory 1") : Amended ToSubclass] string Tag;
  [Description("The DeviceLocator property indicates the label of the socket or circuit board that holds this memory.\nExample: SIMM 3") : Amended ToSubclass] string DeviceLocator;
  [Description("The TypeDetail property indicates the type of physical memory represented by Win32_PhysicalMemory.") : Amended ToSubclass,BitValues{"Reserved", "Other", "Unknown", "Fast-paged", "Static column", "Pseudo-static", "RAMBUS", "Synchronous", "CMOS", "EDO", "Window DRAM", "Cache DRAM", "Non-volatile"} : Amended ToSubclass] uint16 TypeDetail;
  [Description("The InterleaveDataDepth property indicates the maximum number of consecutive rows of data that are accessed in a single interleaved transfer from the memory device. If the value is 0, then the memory is not interleaved.") : Amended ToSubclass] uint16 InterleaveDataDepth;
};

[Description("The Win32_CacheMemory class represents cache memory (internal and external) on a computer system.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_CacheMemory : CIM_CacheMemory
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The DeviceID property contains a string that uniquely identifies the cache represented by an instance of Win32_CacheMemory.\nExample: Cache Memory 1") : Amended ToSubclass] string DeviceID;
  [Description("The Location property indicates the physical location of the cache memory.") : Amended ToSubclass,Values{"Internal", "External", "Reserved", "Unknown"} : Amended ToSubclass] uint16 Location;
  [Units("kilobytes") : Amended ToSubclass,Description("The MaxCacheSize property indicates the maximum cache size installable to this particular cache memory.") : Amended ToSubclass] uint32 MaxCacheSize;
  [Units("kilobytes") : Amended ToSubclass,Description("The InstalledSize property indicates the current size of the installed cache memory.") : Amended ToSubclass] uint32 InstalledSize;
  [Description("The SupportedSRAM property indicates the supported types of Static Random Access Memory (SRAM) that can be used for the cache memory.") : Amended ToSubclass,Values{"Other", "Unknown", "Non-Burst", "Burst", "Pipeline Burst", "Synchronous", "Asynchronous"} : Amended ToSubclass] uint16 SupportedSRAM[];
  [Description("The CurrentSRAM property indicates the types of Static Random Access Memory (SRAM) that being used for the cache memory.") : Amended ToSubclass,Values{"Other", "Unknown", "Non-Burst", "Burst", "Pipeline Burst", "Synchronous", "Asynchronous"} : Amended ToSubclass] uint16 CurrentSRAM[];
  [Description("The ErrorCorrectType property indicates the error correction method used by the cache memory.") : Amended ToSubclass,Values{"Reserved", "Other", "Unknown", "None", "Parity", "Single-bit ECC", "Multi-bit ECC"} : Amended ToSubclass] uint16 ErrorCorrectType;
  [Units("nanoseconds") : Amended ToSubclass,Description("The CacheSpeed property specifies the speed of the cache in nanoseconds.") : Amended ToSubclass] uint32 CacheSpeed;
};

[Description("The Win32_PhysicalMemoryArray class represents details about the computer system's physical memory. This includes the number of memory devices,  memory capacity available, and memory type (for example, system memory or video memory).") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_PhysicalMemoryArray : CIM_PhysicalPackage
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The Tag property contains a string that uniquely identifies the physical memory array.\nExample: Physical Memory Array 1") : Amended ToSubclass] string Tag;
  [Description("The Location property indicates the physical location of the memory array.") : Amended ToSubclass,Values{"Reserved", "Other", "Unknown", "System board or motherboard", "ISA add-on card", "EISA add-on card", "PCI add-on card", "MCA add-on card", "PCMCIA add-on card", "Proprietary add-on card", "NuBus", "PC-98/C20 add-on card", "PC-98/C24 add-on card", "PC-98/E add-on card", "PC-98/Local bus add-on card"} : Amended ToSubclass] uint16 Location;
  [Description("The Use property indicates how the memory is used in the computer system.") : Amended ToSubclass,Values{"Reserved", "Other", "Unknown", "System memory", "Video memory", "Flash memory", "Non-volatile RAM", "Cache memory"} : Amended ToSubclass] uint16 Use;
  [Description("The MemoryErrorCorrection property indicates the type of error correction used by the memory array.") : Amended ToSubclass,Values{"Reserved", "Other", "Unknown", "None", "Parity", "Single-bit ECC", "Multi-bit ECC", "CRC"} : Amended ToSubclass] uint16 MemoryErrorCorrection;
  [Units("kilobytes") : Amended ToSubclass,Description("The MaxCapacity property indicates the maximum memory size (in bytes) installable for this particular memory array. If the size is unknown, the property is given a value of 0.") : Amended ToSubclass] uint32 MaxCapacity;
  [Description("The MemoryDevices property indicates the number of physical slots or sockets available in this memory array.") : Amended ToSubclass] uint16 MemoryDevices;
};

[Description("The Win32_SMBIOSMemory class represents the properties of a computer system's memory as seen through the System Management BIOS (SMBIOS) interface. The SMBIOS interface does not distinguish between non-volatile, volatile, and flash memories. As such, the CIM_Memory class is the parent class of all types of memory.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_SMBIOSMemory : CIM_StorageExtent
{
  [Description("The ErrorMethodology property specifies the types of error checking used by the memory hardware.") : Amended ToSubclass,Values{"Other", "Unknown", "None", "Parity", "Single-bit ECC", "Multi-bit ECC", "CRC"} : Amended ToSubclass] string ErrorMethodology;
  [Description("The StartingAddress property specifies the beginning address referenced by an application or the operating system. This memory address is mapped by a memory controller for this memory object.") : Amended ToSubclass] uint64 StartingAddress;
  [Description("The EndingAddress property specifies the ending address referenced by an application or operating system. This memory address is mapped by a memory controller for this memory object.") : Amended ToSubclass] uint64 EndingAddress;
  [Description("The ErrorInfo property contains an integer enumeration describing the type of error that occurred most recently.  The values, 12-14 are not used with this property. These values indicate whether an error is correctable but this information is found in the CorrectableError property.") : Amended ToSubclass,Values{"Other", "Unknown", "OK", "Bad Read", "Parity Error", "Single-Bit Error", "Double-Bit Error", "Multi-Bit Error", "Nibble Error", "Checksum Error", "CRC Error", "Corrected single-bit error", "Corrected error", "Uncorrectable error"} : Amended ToSubclass] uint16 ErrorInfo;
  [Description("The OtherErrorDescription property provides more information when the ErrorInfo property is set to 1.") : Amended ToSubclass] string OtherErrorDescription;
  [Description("CorrectableError property indicates whether the most recent error was correctable. This property is not used if ErrorInfo is set to 3.\nValues: TRUE or FALSE.  If TRUE, the error is correctable.") : Amended ToSubclass] boolean CorrectableError;
  [Description("The ErrorTime property contains the time that the last memory error occurred. This property is valid only when ErrorInfo is not set to 3.") : Amended ToSubclass] datetime ErrorTime;
  [Description("The ErrorAccess property indicates the memory access operation that caused the last error. This property is valid only when ErrorInfo is not set to 3.") : Amended ToSubclass,Values{"Other", "Unknown", "Read", "Write", "Partial Write"} : Amended ToSubclass] uint16 ErrorAccess;
  [Units("bits") : Amended ToSubclass,Description("The ErrorTransferSize property specifies the size of the data (containing the last error) being transferred. This property is set to 0 if there is no error.") : Amended ToSubclass] uint32 ErrorTransferSize;
  [Description("The ErrorData property contains data captured from the last memory access with an error. The data occupies the first n octets of the array necessary to hold the number of bits specified by the ErrorTransferSize property. If ErrorTransferSize is 0, then this property is not used.") : Amended ToSubclass] uint8 ErrorData[];
  [Description("The ErrorDataOrder property indicates the ordering for data stored in the ErrorData property. This property is used only when ErrorTransferSize is 0.") : Amended ToSubclass,Values{"Unknown", "Least Significant Byte First", "Most Significant Byte First"} : Amended ToSubclass] uint16 ErrorDataOrder;
  [Description("The ErrorAddress property specifies the address of the last memory error. This property is used only when ErrorInfo is not set to 3.") : Amended ToSubclass] uint64 ErrorAddress;
  [Description("The SystemLevelAddress property indicates whether the address information in the ErrorAddress property is a system-level address (TRUE) or a physical address (FALSE). This property is used only when ErrorInfo is not set to 3.\nValues: TRUE or FALSE. If TRUE, ErrorAddress contains a system-level address.") : Amended ToSubclass] boolean SystemLevelAddress;
  [Units("bytes") : Amended ToSubclass,Description("The ErrorResolution property specifies the amount of data actually determined to cause the error. This property is unused when the ErrorInfo property is set to 3.") : Amended ToSubclass] uint64 ErrorResolution;
  [Description("The AdditionalErrorData property contains additional error information. An example is ECC Syndrome, or the return of the check bits if a CRC-based ErrorMethodology is used. In the latter case, if a single bit error is recognized and the CRC algorithm is known, it is possible to determine the exact bit that failed. This type of data (ECC Syndrome, Check Bit, Parity Bit data, or other vendor-supplied information) is included in this field. This property is used only when the ErrorInfo property is not equal to 3.") : Amended ToSubclass] uint8 AdditionalErrorData[];
};

[Description("The Win32_MemoryArray class represents the properties of the computer system memory array and mapped addresses.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_MemoryArray : Win32_SMBIOSMemory
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The DeviceID property contains a string that uniquely identifies the memory array.\nExample: Memory Array 1") : Amended ToSubclass] string DeviceID;
  [Description("The ErrorGranularity identifies the level where the error can be resolved.\nExample: Device level.") : Amended ToSubclass,Values{"1", "2", "3", "4"} : Amended ToSubclass] uint16 ErrorGranularity;
};

[Description("The Win32_MemoryDevice class represents the properties of a computer system's memory device along with it's associated mapped addresses.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_MemoryDevice : Win32_SMBIOSMemory
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The DeviceID property contains a string that uniquely identifies the memory device.\nExample: Memory Device 1") : Amended ToSubclass] string DeviceID;
  [Description("The ErrorGranularity property identifies the level where the error can be resolved.\nExample: Device level.") : Amended ToSubclass,Values{"Other", "Unknown", "Device level", "Memory partition level"} : Amended ToSubclass] uint16 ErrorGranularity;
};

[Description("The Win32_MemoryDeviceLocation class represents an association between a memory device and the physical memory on which it exists.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_MemoryDeviceLocation : CIM_Realizes
{
  [key : ToInstance ToSubclass DisableOverride,Description("The Antecedent reference represents the physical memory containing the memory device.") : Amended ToSubclass] Win32_PhysicalMemory Ref Antecedent;
  [key : ToInstance ToSubclass DisableOverride,Description("The Dependent reference represents the memory device existing in the physical memory.") : Amended ToSubclass] Win32_MemoryDevice Ref Dependent;
};

[Description("The Win32_MemoryArrayLocation class represents an association between a logical memory array and the physical memory array upon which it exists.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_MemoryArrayLocation : CIM_Realizes
{
  [key : ToInstance ToSubclass DisableOverride,Description("The Antecedent reference represents the physical memory array that implements the logical memory array.") : Amended ToSubclass] Win32_PhysicalMemoryArray Ref Antecedent;
  [key : ToInstance ToSubclass DisableOverride,Description("The Dependent reference indicates the logical memory array implemented by the physical memory array.") : Amended ToSubclass] Win32_MemoryArray Ref Dependent;
};

[Description("The Win32_PhysicalMemoryLocation class represents an association between an array of physical memory and its physical memory.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_PhysicalMemoryLocation : CIM_PackagedComponent
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The GroupComponent reference represents the physical memory array that contains the physical memory.") : Amended ToSubclass] Win32_PhysicalMemoryArray Ref GroupComponent;
  [Key : ToInstance ToSubclass DisableOverride,Description("The PartComponent reference represents the physical memory contained in the physical memory array.") : Amended ToSubclass] Win32_PhysicalMemory Ref PartComponent;
};

[Description("The Win32_MemoryDeviceArray class represents an association between a memory device and the memory array in which it resides.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_MemoryDeviceArray : CIM_Component
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The PartComponent reference represents a memory device part of the Win32_MemoryDeviceArray association.") : Amended ToSubclass] Win32_MemoryDevice Ref PartComponent;
  [Key : ToInstance ToSubclass DisableOverride,Description("The GroupComponent reference represents the memory array part of the Win32_MemoryDeviceArray association.") : Amended ToSubclass] Win32_MemoryArray Ref GroupComponent;
};

[Description("The Win32_COMApplication class represents a COM application. In this context, a COM application is a logical grouping of COM classes.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_COMApplication : CIM_LogicalElement
{
};

[Description("The Win32_COMClass class represents the properties of a Component Object Model (COM) component.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_COMClass : CIM_LogicalElement
{
};

[Description("The Win32_COMSetting class represents the settings associated with a COM component or COM application.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_COMSetting : CIM_Setting
{
};

[Description("The Win32_COMApplicationClasses class represents an association between a COM component and the COM application where it resides.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_COMApplicationClasses : CIM_Component
{
  [key : ToInstance ToSubclass DisableOverride,Description("The GroupComponent reference represents the COM application containing the COM component.") : Amended ToSubclass] Win32_COMApplication Ref GroupComponent;
  [key : ToInstance ToSubclass DisableOverride,Description("The Win32_COMClass represents the COM component grouped under the COM application.") : Amended ToSubclass] Win32_COMClass Ref PartComponent;
};

[Description("The Win32_DCOMApplication class represents the properties of a DCOM application.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_DCOMApplication : Win32_COMApplication
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The AppID property is a Globally Unique Identifier (GUID) for the DCOM application.") : Amended ToSubclass] string AppID;
};

[Description("The Win32_DCOMApplicationSetting class represents the settings of a DCOM application. It contains DCOM configuration options associated with the AppID key in the registry. These options are valid on the components logically grouped under the given application class.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_DCOMApplicationSetting : Win32_COMSetting
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The AppID property is a Globally Unique Identifier (GUID) for this DCOM application.") : Amended ToSubclass] string AppID;
  [Description("The AuthenticationLevel property specifies the minimum client authentication level required by this COM server. If NULL, the default values are used. Authentication levels include:\nNone - no authentication is performed.\nConnect - authentication is performed only when the client establishes a relationship with the application.\nCall - authentication is performed only at the beginning of each call when the application receives the request.\nPacket - authentication is performed on all data received from the client.\nPacketIntegrity - all the data transferred between client and application is authenticated and verified.\nPacketPrivacy - The properties of the other authentication levels are used, and all data is encrypted.") : Amended ToSubclass,Values{"None", "Connect", "Call", "Packet", "PacketIntegrity", "PacketPrivacy"} : Amended ToSubclass] uint32 AuthenticationLevel;
  [Description("The RemoteServerName property indicates the name of the remote server where the application is activated.") : Amended ToSubclass] string RemoteServerName;
  [Description("The RunAsUser property indicates whether the application is to be run under a specific user account on activation.") : Amended ToSubclass] string RunAsUser;
  [Description("The EnableAtStorageActivation property indicates whether the instance of the DCOM application retrieves the saved state of the application or begins from the state in which the application is first initialized.") : Amended ToSubclass] boolean EnableAtStorageActivation;
  [Description("The UseSurrogate property specifies whether the DCOM application can be activated as an out-of-processserver by use of a surrogate executable.") : Amended ToSubclass] boolean UseSurrogate;
  [Description("The CustomSurrogate property contains the name of the custom surrogate in which the in-process DCOM application is activated. If this value is NULL and the UseSurrogate key is TRUE, then the system provides a surrogate process.") : Amended ToSubclass] string CustomSurrogate;
  [Description("The LocalService property contains the name for the services provided by the DCOM application.") : Amended ToSubclass] string LocalService;
  [Description("The ServiceParameters property contains the command line parameters passed to the DCOM application. This is valid only if the application is written as a Win32 service") : Amended ToSubclass] string ServiceParameters;
  [description("Retrieves a structural representation of the object's security descriptor.\nThe method returns an integer value that can be interpreted as follows: \n0 - Successful completion.\nOther - HRESULT Win32 error code.\n") : Amended ToSubclass,Values{"Success", "Other"} : Amended ToSubclass] uint32 GetLaunchSecurityDescriptor([out] Win32_SecurityDescriptor Descriptor);
  [description("Sets security descriptor to the specified structure.\nThe method returns an integer value that can be interpreted as follows: \n0 - Successful completion.\nOther - HRESULT Win32 error code.\n") : Amended ToSubclass,Values{"Success", "Other"} : Amended ToSubclass] uint32 SetLaunchSecurityDescriptor([in] Win32_SecurityDescriptor Descriptor);
  [description("Retrieves a structural representation of the object's security descriptor.\nThe method returns an integer value that can be interpreted as follows: \n0 - Successful completion.\nOther - HRESULT Win32 error code.\n") : Amended ToSubclass,Values{"Success", "Other"} : Amended ToSubclass] uint32 GetAccessSecurityDescriptor([out] Win32_SecurityDescriptor Descriptor);
  [description("Sets security descriptor to the specified structure.\nThe method returns an integer value that can be interpreted as follows: \n0 - Successful completion.\nOther - HRESULT Win32 error code.\n") : Amended ToSubclass,Values{"Success", "Other"} : Amended ToSubclass] uint32 SetAccessSecurityDescriptor([in] Win32_SecurityDescriptor Descriptor);
  [description("Retrieves a structural representation of the object's security descriptor.\nThe method returns an integer value that can be interpreted as follows: \n0 - Successful completion.\nOther - HRESULT Win32 error code.\n") : Amended ToSubclass,Values{"Success", "Other"} : Amended ToSubclass] uint32 GetConfigurationSecurityDescriptor([out] Win32_SecurityDescriptor Descriptor);
  [description("Sets security descriptor to the specified structure.\nThe method returns an integer value that can be interpreted as follows: \n0 - Successful completion.\nOther - HRESULT Win32 error code.\n") : Amended ToSubclass,Values{"Success", "Other"} : Amended ToSubclass] uint32 SetConfigurationSecurityDescriptor([in] Win32_SecurityDescriptor Descriptor);
};

[Description("The Win32_ClassicCOMClass class represents the properties of a COM component.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_ClassicCOMClass : Win32_COMClass
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The ComponentId property contains the Globally Unique Identifier (GUID) of this COM class.") : Amended ToSubclass] string ComponentId;
  [Description("The Name property contains the human-readable name for the COM class.") : Amended ToSubclass] string Name;
};

[Description("The Win32_ClassicCOMClassSetting class represents the settings of a COM component.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_ClassicCOMClassSetting : Win32_COMSetting
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The ComponentId property contains the Globally Unique Identifier (GUID) of this COM component.") : Amended ToSubclass] string ComponentId;
  [Description("The ProgId property contains a programmatic identifier associated with the COM component. The format of a ProgID is <Vendor>.<Component>.<Version>. This identifier is not guaranteed to be unique.") : Amended ToSubclass] string ProgId;
  [Description("The AppID property contains a Globally Unique Identifier (GUID) for the COM application using this COM component.") : Amended ToSubclass] string AppID;
  [Description("The ThreadingModel property specifies the threading model used by in-process COM classes, including:\nApartment - components may be entered by one and only one thread. Common data held by these kinds of object servers must be protected against thread collisions since the object server supports multiple components. Each component can be entered simultaneously by different threads.\nFree - components place no restrictions on which threads or how many threads can enter the object. The object cannot contain thread-specific data and must protect its data from simultaneous access by multiple threads. Free-threaded components however, cannot be accessed by apartment threads directly, and calls to them are marshaled across from the client apartment.\nBoth - components that can be used in either apartment-threaded or free-threaded modes. These components can be entered by multiple threads, protect their data from thread collisions, and do not contain thread-specific data.\nIf this property is NULL, then no threading model is used. The component is created on the main thread of the client and calls from other threads are marshaled to this thread. Please refer to the Platform Software Development Kit for information on the various threading models.") : Amended ToSubclass,Values{"Apartment", "Free", "Both"} : Amended ToSubclass] string ThreadingModel;
  [Description("The Version property contains the version number of this COM class.") : Amended ToSubclass] string Version;
  [Description("The Insertable property indicates whether the COM component can be inserted into OLE container applications.") : Amended ToSubclass] boolean Insertable;
  [Description("The Control property indicates whether this COM component is an OLE control.") : Amended ToSubclass] boolean Control;
  [Description("The TypeLibraryId property contains a Globally Unique Identifier (GUID) for the Type-Library for this COM component.") : Amended ToSubclass] string TypeLibraryId;
  [Description("The JavaClass property indicates whether the COM component is a Java component.") : Amended ToSubclass] boolean JavaClass;
  [Description("The TreatAsClsid property contains a Globally Unique Identifier (GUID), of a COM component that can emulate instances of this component.") : Amended ToSubclass] string TreatAsClsid;
  [Description("The InprocServer property contains the full path to a 16-bit in-process server DLL for this COM component.") : Amended ToSubclass] string InprocServer;
  [Description("The InprocServer32 property contains the full path to a 32-bit in-process server DLL for this COM component.") : Amended ToSubclass] string InprocServer32;
  [Description("The LocalServer property contains the full path to a 16-bit local server application.") : Amended ToSubclass] string LocalServer;
  [Description("The LocalServer32 property contains the full path to a 32-bit local server application.") : Amended ToSubclass] string LocalServer32;
  [Description("The InprocHandler property contains the full path to a 16-bit custom handler for the COM component.") : Amended ToSubclass] string InprocHandler;
  [Description("The InprocHandler32 property contains the full path to a 32-bit custom handler for the COM component.") : Amended ToSubclass] string InprocHandler32;
  [Description("The AutoConvertToClsid property contains the Globally Unique Identifier (GUID)of the COM class to which this COM component will automatically be converted.") : Amended ToSubclass] string AutoConvertToClsid;
  [Description("The AutoTreatAsClsid property contains a Globally Unique Identifier (GUID) for the COM component that will automatically emulate instances of this class.") : Amended ToSubclass] string AutoTreatAsClsid;
  [Description("The DefaultIcon property contains the path to the executable file and the resource identifier of the default icon used by the class.") : Amended ToSubclass] string DefaultIcon;
  [Description("The VersionIndependentProgId property contains a program identifier that is consistent for all versions of the same program.") : Amended ToSubclass] string VersionIndependentProgId;
  [Description("The ShortDisplayName property specifies the COM application's short name (used in menus and pop-ups).") : Amended ToSubclass] string ShortDisplayName;
  [Description("The LongDisplayName property specifies the COM application's full name. It is used in areas such as the Results field of the OLE Paste Special dialog box.") : Amended ToSubclass] string LongDisplayName;
  [Description("The ToolBoxBitmap32 property indicates the module name and resource ID for a small (16 x 16) bitmap used for the face of a toolbar or toolbox button. Used when the COM component is an OLE or ActiveX control") : Amended ToSubclass] string ToolBoxBitmap32;
};

[Description("The Win32_ClassicCOMApplicationClasses class represents an association between a DCOM application and a COM component grouped under it.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_ClassicCOMApplicationClasses : Win32_COMApplicationClasses
{
  [Description("The GroupComponent reference represents a DCOM application containing or using the COM component.") : Amended ToSubclass] Win32_DCOMApplication Ref GroupComponent;
  [Description("The PartComponent reference represents the COM component existing in or used by the DCOM application.") : Amended ToSubclass] Win32_ClassicCOMClass Ref PartComponent;
};

[Description("The Win32_COMApplicationSettings class represents an association between a DCOM application and its configuration settings.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_COMApplicationSettings : CIM_ElementSetting
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The Element reference represents the DCOM application where the settings are applied.") : Amended ToSubclass] Win32_DCOMApplication Ref Element;
  [Key : ToInstance ToSubclass DisableOverride,Description("The Setting reference represents the configuration settings associated with the DCOM application.") : Amended ToSubclass] Win32_DCOMApplicationSetting Ref Setting;
};

[Description("The Win32_ClassicCOMClassSettings class represents an association between a COM class and the settings used to configure instances of the COM class.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_ClassicCOMClassSettings : CIM_ElementSetting
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The Element reference represents the COM class where the settings are applied.") : Amended ToSubclass] Win32_ClassicCOMClass Ref Element;
  [Key : ToInstance ToSubclass DisableOverride,Description("The Setting reference represents configuration settings associated with the COM class.") : Amended ToSubclass] Win32_ClassicCOMClassSetting Ref Setting;
};

[Description("The Win32_ComponentCategory class represents a component category. Component categories are groups of COM classes with a defined functionality set shared between them. A client using these interfaces queries the registry for the category title and unique identifier called a CategoryID, which is created from a globally unique identifier (GUID).") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_ComponentCategory : CIM_LogicalElement
{
  [key : ToInstance ToSubclass DisableOverride,Description("The CategoryId property indicates a GUID for this component category.") : Amended ToSubclass] string CategoryId;
  [Description("The Name property indicates a descriptive name of this component category.") : Amended ToSubclass] string Name;
};

[Description("The Win32_ImplementedCategory class represents an association between a component category and the COM classusing its interfaces.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_ImplementedCategory
{
  [key : ToInstance ToSubclass DisableOverride,Description("The Category reference represents the component category being used by the COM class.") : Amended ToSubclass] Win32_ComponentCategory Ref Category;
  [key : ToInstance ToSubclass DisableOverride,Description("The Component reference represents the COM class using the associated category.") : Amended ToSubclass] Win32_ClassicCOMClass Ref Component;
};

[Description("The Win32_ComClassEmulator class represents an association between two versions of a COM class.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_ComClassEmulator
{
  [key : ToInstance ToSubclass DisableOverride,Description("The OldVersion reference represents the COM component with interfaces that can be emulated by the new version of the component.") : Amended ToSubclass] Win32_ClassicCOMClass Ref OldVersion;
  [key : ToInstance ToSubclass DisableOverride,Description("The NewVersion reference represents the COM component containing interfaces that emulate the older version of the component.") : Amended ToSubclass] Win32_ClassicCOMClass Ref NewVersion;
};

[Description("The Win32_ComClassAutoEmulator class represents an association between a COM class and another COM class that it automatically emulates.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_ComClassAutoEmulator
{
  [Key : ToInstance ToSubclass DisableOverride,Description("The OldVersion reference represents the COM component that is automatically emulated by another component.") : Amended ToSubclass] Win32_ClassicCOMClass Ref OldVersion;
  [Key : ToInstance ToSubclass DisableOverride,Description("The NewVersion reference represents the COM component that can automatically emulate the associated COM component. This information is obtained through the AutoTreatAs registry entry.") : Amended ToSubclass] Win32_ClassicCOMClass Ref NewVersion;
};

[Description("The Win32_ClientApplicationSetting class represents an association between an executable and a DCOM application that contains the DCOM configuration options for the executable.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_ClientApplicationSetting
{
  [key : ToInstance ToSubclass DisableOverride,Description("The Client reference represents an executable that uses DCOM settings.") : Amended ToSubclass] CIM_DataFile Ref Client;
  [key : ToInstance ToSubclass DisableOverride,Description("The Application reference represents the DCOM application containing configuration options of the executable.") : Amended ToSubclass] Win32_DCOMApplication Ref Application;
};

[Description("The Win32_Account class contains information about user accounts and group accounts known to the Win32 system. User or group names recognized by a Windows NT domain are descendents (or members) of this class. The Win32_Account class is not included in a default hardware inventory operation.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_Account : CIM_LogicalElement
{
  [key : ToInstance ToSubclass DisableOverride,Description("The Domain property indicates the name of the Windows domain to which a group or user belongs.\nExample: NA-SALES") : Amended ToSubclass] string Domain;
  [Description("The SID property contains the security identifier (SID) for this account. a SID is a string value of variable length used to identify a trustee. Each account has a unique SID issued by an authority (such as a Windows domain), stored in a security database. When a user logs on, the system retrieves the user's SID from the database and places it in the user's access token. The system uses the SID in the user's access token to identify the user in all subsequent interactions with Windows security. When a SID has been used as the unique identifier for a user or group, it cannot be used again to identify another user or group.") : Amended ToSubclass] string SID;
  [Description("The SIDType property contains enumerated values that specify the type of security identifier (SID). SIDTypes include:\nSidTypeUser - Indicates a user SID.\nSidTypeGroup - Indicates a group SID.\nSidTypeDomain - Indicates a domain SID.\nSidTypeAlias - Indicates an alias SID.\nSidTypeWellKnownGroup - Indicates a SID for a well-known group.\nSidTypeDeletedAccount - Indicates a SID for a deleted account.\nSidTypeInvalid - Indicates an invalid SID.\nSidTypeUnknown - Indicates an unknown SID type.\nSidTypeComputer - Indicates a SID for a computer.\n") : Amended ToSubclass,Values{"SidTypeUser", "SidTypeGroup", "SidTypeDomain", "SidTypeAlias", "SidTypeWellKnownGroup", "SidTypeDeletedAccount", "SidTypeInvalid", "SidTypeUnknown", "SidTypeComputer"} : Amended ToSubclass] uint8 SIDType;
  [key : ToInstance ToSubclass DisableOverride,Description("The Name property indicates the name of the Win32 system account on the domain specified by the Domain member of this class.") : Amended ToSubclass] string Name;
  [Description("The LocalAccount property indicates whether the account is defined on the local machine. To retrieve only accounts defined on the local machine state a query that includes the condition 'LocalAccount=TRUE'.") : Amended ToSubclass] Boolean LocalAccount;
};

[Description("The Win32_SystemAccount class represents a system account.  The system account is used by the operating system and by services that run under Windows NT.  There are many services and processes within NT that need the capability to logon internally (for example during a Windows NT installation).  The system account was designed for that purpose; it is an internal account, does not show up in User Manager, cannot be added to any groups, and cannot have user rights assigned to it.  On the other hand, the system account does show up on an NTFS volume in File Manager in the Permissions portion of the Security menu.  By default, the system account is granted full control to all files on an NTFS volume.  Here the system account has the same functional privileges as the administrator account.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_SystemAccount : Win32_Account
{
  [Description("The Domain property indicates the name of the Windows domain to which the system account belongs.\nExample: NA-SALES") : Amended ToSubclass] string Domain;
  [Description("The Name property indicates the name of the Win32 system account on the domain specified by the Domain member of this class.") : Amended ToSubclass] string Name;
};

[Description("The Win32_Group class represents data about a group account. A group account allows access privileges to be changed for a list of users. \nExample: Marketing2.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_Group : Win32_Account
{
  [Description("The Domain property indicates the name of the Windows domain to which the group account belongs.\nExample: NA-SALES") : Amended ToSubclass] string Domain;
  [Description("The Name property indicates the name of the Win32 group account on the domain specified by the Domain member of this class.") : Amended ToSubclass] string Name;
  [Description("The Rename() allows for the renaming of the group name; a key in this class. The functionality to change the key property \"Name\" is implemented as a method to provide a separate context for the new name distinguishable from the key name associated with the instance to be modified in this class.") : Amended ToSubclass,Values{"Success", "Instance not found", "Instance required", "Invalid parameter", "Group not found", "Domain not found", "Operation is allowed only on the primary domain controller of the domain", "Operation is not allowed on specified special groups; user, admin, local or guest.", "Other API error", "Internal error"} : Amended ToSubclass] uint32 Rename([In : ToSubclass,Description("The Name property indicates the name of the Win32 user account on the domain specified by the Domain member of this class.\nExample: thomasw") : Amended ToSubclass] string Name);
};

[Description("The Win32_UserAccount class contains information about a user account on a Win32 system.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_UserAccount : Win32_Account
{
  [Description("The AccountType property contains flags describing the characteristics of Win32 user account:\nUF_TEMP_DUPLICATE_ACCOUNT - Local user account for users whose primary account is in another domain. This account provides user access to this domain, but not to any domain that trusts this domain.\nUF_NORMAL_ACCOUNT - default account type that representing a typical user. \nUF_INTERDOMAIN_TRUST_ACCOUNT - account is for a system domain that trusts other domains.\nUF_WORKSTATION_TRUST_ACCOUNT - This is a computer account for a Windows NT/Windows 2000 machine that is a member of this domain.\nUF_SERVER_TRUST_ACCOUNT - account is for a system backup domain controller that is a member of this domain. \n") : Amended ToSubclass,BitValues{"Temporary duplicate account", "Normal account", "Interdomain trust account", "Workstation trust account", "Server trust account"} : Amended ToSubclass] uint32 AccountType;
  [Description("The Disabled property determines whether the Win32 user account is disabled.\nValues: TRUE or FALSE. If TRUE, the user account is disabled.") : Amended ToSubclass] boolean Disabled;
  [Description("The Domain property indicates the name of the Windows domain to which the user account belongs.\nExample: NA-SALES") : Amended ToSubclass] string Domain;
  [Description("The FullName property indicates the full name of the local user.\nExample: Thomas Williams") : Amended ToSubclass] string FullName;
  [Description("The Lockout property determines whether the user account is locked out of the Win32 system.\nValues: TRUE or FALSE. If TRUE, the user account is locked out.") : Amended ToSubclass] boolean Lockout;
  [Description("The Name property indicates the name of the Win32 user account on the domain specified by the Domain member of this class.\nExample: thomasw") : Amended ToSubclass] string Name;
  [Description("The PasswordChangeable property determines whether the password on the Win32 user account can be changed.\nValues: TRUE or FALSE. If TRUE, the password can be changed.") : Amended ToSubclass] boolean PasswordChangeable;
  [Description("The PasswordExpires property determines whether the password on the Win32 user account will expire.\nValues: TRUE or FALSE. If TRUE, the password will expire.") : Amended ToSubclass] boolean PasswordExpires;
  [Description("The PasswordRequired property determines whether a password is required on the Win32 user account.\nValues: TRUE or FALSE. If TRUE, a password is required.") : Amended ToSubclass] boolean PasswordRequired;
  [Description("The Rename() allows for the renaming of the user account name; a key in this class. The functionality to change the key property \"Name\" is implemented as a method to provide a separate context for the new name distinguishable from the key name associated with the instance to be modified in this class.") : Amended ToSubclass,Values{"Success", "Instance not found", "Instance required", "Invalid parameter", "User not found", "Domain not found", "Operation is allowed only on the primary domain controller of the domain", "Operation is not allowed on the last administrative account.", "Operation is not allowed on specified special groups; user, admin, local or guest.", "Other API error", "Internal error"} : Amended ToSubclass] uint32 Rename([In : ToSubclass,Description("The Name property indicates the name of the Win32 user account on the domain specified by the Domain member of this class.\nExample: thomasw") : Amended ToSubclass] string Name);
};

[Description("The Win32_NetworkLoginProfile class represents the network login information of a particular user on a Win32 system. This includes, but is not limited to, password status, access privileges, disk quotas, and login directory paths.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_NetworkLoginProfile : CIM_Setting
{
  [Description("The AccountExpires property specifies when the account will expire. This value is calculated from the number of seconds elapsed since 00:00:00, January 1, 1970, and is set in this format: yyyymmddhhmmss.mmmmmm sutc.\nExample: 20521201000230.000000 000") : Amended ToSubclass] datetime AccountExpires;
  [Description("The AuthorizationFlags property contains a set of flags that specify the resources a user is authorized to use or modify.") : Amended ToSubclass,BitValues{"Printer", "Communication", "Server", "Accounts"} : Amended ToSubclass] uint32 AuthorizationFlags;
  [Description("The BadPasswordCount property indicates the number of times the user enters a bad password when logging on to a Win32 system.\nExample: 0") : Amended ToSubclass] uint32 BadPasswordCount;
  [Description("The CodePage property specifies the code page for the user's language of choice.  A code page is the character set used.") : Amended ToSubclass] uint32 CodePage;
  [Description("The Comment property contains a comment or description for this login profile.") : Amended ToSubclass] string Comment;
  [Description("The CountryCode property specifies the country/region code for the user's language of choice.") : Amended ToSubclass] uint32 CountryCode;
  [Description("The Flags property indicates the properties available to this network profile.  Properties that can be set include:\n0 - Script -  A logon script executed. This value must be set for LAN Manager 2.0 and Windows NT/Windows 2000.\n1 - Account Disabled -  The user's account is disabled.\n3 - Home Dir Required -  A home directory is required. This value is ignored in Windows NT/Windows 2000.\n4 - Lockout -  The account is currently locked out. For NetUserSetInfo, this value can be cleared to unlock a previously locked account. This value cannot be used to lock a previously unlocked account.\n5 - Password Not Required -  No password is required.\n6 - Paswword Can't Change -  The user cannot change the password.\n7 - Encrypted Test Password Allowed - Windows 2000: The user's password is stored under reversible encryption in the Active Directory. \n8 - Temp Duplicate Account -  An account for users whose primary account is in another domain. This account provides user access to this domain, but not to any domain that trusts this domain. The User Manager refers to this account type as a local user account.\n9 - Normal Account -  Default account type that represents a typical user.\n11 - InterDomain Trust Account -  A permit to trust account for a domain that trusts other domains.\n12 - WorkStation Trust Account -  A computer account for a Windows NT/Windows 2000 workstation or a Windows NT/Windows 2000 server that is a member of this domain.\n13 - Server Trust Account -  A computer account for a backup domain controller that is a member of this domain.\n16 - Don't Expire Password -  For Windows NT/Windows 2000: password should never expire on the account.\n17 - MNS Logon Account - MNS locon account type that represents a MNS user. \n18 - Smartcard Required - Windows 2000: Requires the user to log on to the user account with a smart card.  \n19 - Trusted For Delegation - Windows 2000: The account is enabled for delegation. This is a security-sensitive setting; accounts with this option enabled should be tightly controlled. This setting allows a service running under the account to assume a client's identity and authenticate as that user to other remote servers on the network. \n20 - Not Delegated - Windows 2000: Marks the account as 'sensitive'; other users cannot act as delegates of this user account.  \n21 - Use DES Key Only - Windows 2000: Restrict this principal to use only Data Encryption Standard (DES) encryption types for keys. \n22 - Don't Require Preauthorization - Windows 2000: This account does not require Kerberos preauthentication for logon. \n23 - Password Expired - Indicates that password has expired.") : Amended ToSubclass,BitValues{"Script", "Account Disabled", "Home Dir Required", "Lockout", "Password Not Required", "Paswword Can't Change", "Encrypted Test Password Allowed", "Temp Duplicate Account", "Normal Account", "InterDomain Trust Account", "WorkStation Trust Account", "Server Trust Account", "Don't Expire Password", "MNS Logon Account", "Smartcard Required", "Trusted For Delegation", "Not Delegated", "Use DES Key Only", "Don't Require Preauthorization", "Password Expired"} : Amended ToSubclass] uint32 Flags;
  [Description("The FullName property indicates the full name of the user belonging to the network login profile. This string can beempty if the user chooses not to associate a full name with a user name.") : Amended ToSubclass] string FullName;
  [Description("The HomeDirectory property specifies the path to the home directory of the user.  This string may be empty if the user chooses not to specify a home directory.\nExample: \\HOMEDIR") : Amended ToSubclass] string HomeDirectory;
  [Description("The HomeDirectoryDrive property specifies the drive letter assigned to the user's home directory for logon purposes. \nExample: C:") : Amended ToSubclass] string HomeDirectoryDrive;
  [Description("The LastLogoff property specifies the date and time the user last logged off the system. This value is calculated from the number of seconds elapsed since 00:00:00, January 1, 1970.  A value of zero means that the last logoff time is unknown. The format of this value is yyyymmddhhmmss.mmmmmm sutc.\nExample: 19521201000230.000000 000") : Amended ToSubclass] datetime LastLogoff;
  [Description("The LastLogon property indicates the date and time the user last logged on to the system. This value is calculated from the number of seconds elapsed since 00:00:00, January 1, 1970.  The format of this value is yyyymmddhhmmss.mmmmmm sutc.\nExample: 19521201000230.000000 000") : Amended ToSubclass] datetime LastLogon;
  [Description("The LogonHours property specifies the times during the week when the user can log on. Each bit represents a unit of time specified by the UnitsPerWeek member. For instance, if the unit of time is hourly, the first bit (bit 0, word 0) is Sunday, 0:00 to 0:59; the second bit (bit 1, word 0) is Sunday, 1:00 to 1:59; and so on.  If this member is set to NULL, then there is no time restriction.  The time is set to GMT and must be adjusted for other time zones (for example, GMT minus 8 hours for PST).") : Amended ToSubclass] string LogonHours;
  [Description("The LogonServer property contains the name of the server to which logon requests are sent.  Server names should be preceded by two backslashes (\\\\). A server name with an asterisk (\\\\*) indicates that the logon request can be handled by any logon server. A null string indicates that requests are sent to the domain controller. \nExample: \\\\MyServer") : Amended ToSubclass] string LogonServer;
  [Units("bytes") : Amended ToSubclass,Description("The MaximumStorage property specifies the maximum amount of disk space available to the user.  If MaximumStorage is set to USER_MAXSTORAGE_UNLIMITED the user is allowed to use all available disk space.\nExample: 10000000") : Amended ToSubclass] uint64 MaximumStorage;
  [key : ToInstance ToSubclass DisableOverride,Description("The Name property specifies the name of the user account on a particular domain or machine. The number of characters in the name cannot exceed the value of UNLEN.\nExample: somedomain\\johndoe") : Amended ToSubclass] string Name;
  [Description("The NumberOfLogons property indicates the number of successful times the user tried to log on to this account.  A value of 0xFFFFFFFF indicates that the value is unknown. This property is maintained separately on each backup domain controller (BDC) in the domain. To get an accurate value only the largest value from all BDCs should be used.\nExample: 4") : Amended ToSubclass] uint32 NumberOfLogons;
  [Description("The Parameters property contains space set aside for use by applications. This string can be null, or it can have any number of characters before the terminating null character. Microsoft products use this member to store user configuration information. Do not modify this information because this value is specific to an application.") : Amended ToSubclass] string Parameters;
  [Description("The PasswordAge property indicates the length of time a password has been in effect.  This value is measured from the number of seconds elapsed since the password was last changed.\nExample: 00001201000230.000000 000") : Amended ToSubclass] datetime PasswordAge;
  [Description("The PasswordExpires property indicates the date and time when the password will expire. The value is set in this format: yyyymmddhhmmss.mmmmmm sutc\nExample: 19521201000230.000000 000") : Amended ToSubclass] datetime PasswordExpires;
  [Description("The PrimaryGroupId property specifies the relative ID (RID) of the Primary Global Group for this user.  The identifier verifies the primary group to which the user's profile belongs.") : Amended ToSubclass] uint32 PrimaryGroupId;
  [Description("The privileges property specifies the level of privilege assigned to the usri3_name property.") : Amended ToSubclass,Values{"Guest", "User", "Administrator"} : Amended ToSubclass] uint32 Privileges;
  [Description("The Profile property specifies a directory path to the user's profile. This value can be a null string, a local absolute path, or a UNC path. A user profile contains settings that are customizable for each user such as the desktop colors.\nExample: C:\\Winnt") : Amended ToSubclass] string Profile;
  [Description("The ScriptPath property indicates the directory path to the user's logon script.  A logon script automatically executes a set of commands each time a user logs on to a system.\nExample: C:\\win\\profiles\\ThomasSteven") : Amended ToSubclass] string ScriptPath;
  [Description("The UnitsPerWeek property indicates the number of time units the week is divided into.  It is used with the LogonHours property to limit user access to the computer.\nExample: 168 (hours per week") : Amended ToSubclass] uint32 UnitsPerWeek;
  [Description("The UserComment property contains a user defined comment or description for this profile.") : Amended ToSubclass] string UserComment;
  [Description("The UserId property specifies the relative ID (RID) of the user.  The identifier verifies that the user exists and is unique to this domain.") : Amended ToSubclass] uint32 UserId;
  [Description("The UserType property indicates the type of account  the user has privileges to.") : Amended ToSubclass,Values{"Normal Account", "Duplicate Account", "Workstation Trust Account", "Server Trust Account", "Interdomain Trust Account", "Unknown"} : Amended ToSubclass] string UserType;
  [Description("The Workstations property contains the names of workstations from which the user can log on. Up to eight workstations can be specified; the names must be separated by commas (,). A null string indicates no restrictions. To disable logons from all workstations to this account, set the UF_ACCOUNTDISABLE in the Flags property of this class.") : Amended ToSubclass] string Workstations;
};

[Description("The Win32_GroupUser class represents an association between a group and an account that is a member of that group.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_GroupUser : CIM_Component
{
  [key : ToInstance ToSubclass DisableOverride,Description("The GroupComponent reference represents a group that the account is a member of.") : Amended ToSubclass] Win32_Group Ref GroupComponent;
  [key : ToInstance ToSubclass DisableOverride,Description("The PartComponent reference represents a user or  system account that is a part of a group of accounts.") : Amended ToSubclass] Win32_Account Ref PartComponent;
};

[Description("The Win32_Session class defines state information specific to the interaction between a user and a resource, typically a computer system or a terminal session.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_Session : CIM_logicalElement
{
  [Description("The StartTime property represents the time at which the session started.") : Amended ToSubclass] DateTime StartTime;
};

[Description("The Win32_LogonSession class describes the logon session or sessions associated with a user who has logged on to Windows NT or Windows 2000.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_LogonSession : Win32_Session
{
  [key : ToInstance ToSubclass DisableOverride,Description("The LogonId is the ID assigned to the logon session. The application that initiated the session should have called AllocateLocallyUniqueId in order to generate this ID. ") : Amended ToSubclass] String LogonId;
  [Description("The AuthenticationPackage is the name of the subsystem used to authenticate the logon session. ") : Amended ToSubclass] String AuthenticationPackage;
  [Description("The LogonType is a numeric value indicating what type of logon session this is. \nSystem - Interactive - This logon type is intended for users who will be interactively using the machine, such as a user being logged on by a terminal server, remote shell, or similar process. \nNetwork - This logon type is intended for high performance servers to authenticate clear text passwords. LogonUser does not cache credentials for this logon type. \nBatch - This logon type is intended for batch servers, where processes may be executing on behalf of a user without their direct intervention; or for higher performance servers that process many clear-text authentication attempts at a time, such as mail or web servers. LogonUser does not cache credentials for this logon type.\nService - Indicates a service-type logon. The account provided must have the service privilege enabled.\nProxy - Proxy logon. This logon type is not supported.\nUnlock - This logon type is intended for GINA DLLs logging on users who will be interactively using the machine. This logon type allows a unique audit record to be generated that shows when the workstation was unlocked. \nNetwork Cleartext - Windows 2000: This logon type preserves the name and password in the authentication packages, allowing the server to make connections to other network servers while impersonating the client. This allows a server to accept clear text credentials from a client, call LogonUser, verify that the user can access the system across the network, and still communicate with other servers. \nNew Credentials - Windows 2000: This logon type allows the caller to clone its current token and specify new credentials for outbound connections. The new logon session has the same local identify, but uses different credentials for other network connections. \n") : Amended ToSubclass,Values{"Interactive", "Network", "Batch", "Service", "Unlock", "NetworkCleartext", "NewCredentials"} : Amended ToSubclass] uint32 LogonType;
};

[Description("The Win32_SubSession association defines relationships between sessions where one session is a part of or utilizes another session for example where a Terminal session uses a Logon Session.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_SubSession : CIM_Dependency
{
  [Description("The Antecedent reference is the session in the SubSession association that has a subsession.") : Amended ToSubclass] Win32_Session Ref Antecedent;
  [Description("The Dependent reference is the session in the SubSession association that is the subsession.") : Amended ToSubclass] Win32_Session Ref Dependent;
};

[Description("The Win32_LoggedOnUser association represents the relationship between a session and the user account using that session. Although the association will usually be one to one - users are possible that involve more than one session. At the termination of the session the association instance is deleted.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_LoggedOnUser : CIM_Dependency
{
  [key : ToInstance ToSubclass DisableOverride,Description("The Antecedent reference is the Account used in the initiation of this session. The account could be either a user account or a system account.") : Amended ToSubclass] Win32_Account Ref Antecedent;
  [key : ToInstance ToSubclass DisableOverride,Description("The Dependent reference is the session that the account is currently using.") : Amended ToSubclass] Win32_LogonSession Ref Dependent;
};

[Description("The Win32_SessionResource association represents the relationship between a session and the resources that the session provides access to.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_SessionResource : CIM_Dependency
{
  [Description("The Antecedent reference represents resources used by this session.") : Amended ToSubclass] Win32_LogicalElement Ref Antecedent;
  [Description("The Dependent reference represents the session using the resource.") : Amended ToSubclass] Win32_Session Ref Dependent;
};

[Description("The Win32_SessionProcess represents the association between a logon-session and the processes belonging to that session.") : Amended ToSubclass,AMENDMENT, LOCALE("ms_409") : ToInstance] 
class Win32_SessionProcess : Win32_SessionResource
{
  [Description("The Dependent reference represents the process associated with the session.") : Amended ToSubclass,Key : ToInstance ToSubclass DisableOverride] Win32_Process Ref Dependent;
  [Description("The Antecedent reference represents the session which is related to the process.") : Amended ToSubclass,Key : ToInstance ToSubclass DisableOverride] Win32_LogonSession Ref Antecedent;
};
