/*NOCHKSRC*/
//==============================================================================
//
// PLEASE DO NOT EDIT; THIS FILE WAS AUTOMATICALLY GENERATED BY GENCLASS 2.0.24
//
//==============================================================================

#ifndef _cimple_CIM_RegisteredProfile_h
#define _cimple_CIM_RegisteredProfile_h

#include <cimple/cimple.h>
#include "CIM_RegisteredSpecification.h"
#include "CIM_ManagedElement.h"
#include "CIM_ManagedElement.h"

CIMPLE_NAMESPACE_BEGIN

// CIM_RegisteredProfile keys:
//     InstanceID

/*[1194]*/
class CIM_RegisteredProfile : public Instance
{
public:
    // CIM_ManagedElement features:
    Property<String> InstanceID;
    Property<String> Caption;
    Property<String> Description;
    Property<String> ElementName;
    Property<uint64> Generation;

    // CIM_RegisteredSpecification features:
    struct _SpecificationType
    {
        enum
        {
            enum_Other = 1,
            enum_Profile = 2,
            enum_Initiative_Wrapper = 3,
            enum_Mapping = 4,
            enum_DMTF_Reserved = 0,
        };
        uint16 value;
        uint8 null;
    }
    SpecificationType;
    Property<String> OtherSpecificationType;
    struct _RegisteredOrganization
    {
        enum
        {
            enum_Other = 1,
            enum_DMTF = 2,
            enum_CompTIA = 3,
            enum_Consortium_for_Service_Innovation = 4,
            enum_FAST = 5,
            enum_GGF = 6,
            enum_INTAP = 7,
            enum_itSMF = 8,
            enum_NAC = 9,
            enum_Northwest_Energy_Efficiency_Alliance = 10,
            enum_SNIA = 11,
            enum_TM_Forum = 12,
            enum_The_Open_Group = 13,
            enum_ANSI = 14,
            enum_IEEE = 15,
            enum_IETF = 16,
            enum_INCITS = 17,
            enum_ISO = 18,
            enum_W3C = 19,
            enum_OGF = 20,
            enum_The_Green_Grid = 21,
            enum_DMTF_Reserved = 0,
        };
        uint16 value;
        uint8 null;
    }
    RegisteredOrganization;
    Property<String> OtherRegisteredOrganization;
    Property<String> RegisteredName;
    Property<String> RegisteredVersion;
    struct _AdvertiseTypes
    {
        enum
        {
            enum_Other = 1,
            enum_Not_Advertised = 2,
            enum_SLP = 3,
            enum_WS_Identify = 4,
        };
        Array_uint16 value;
        uint8 null;
    }
    AdvertiseTypes;
    Property<Array_String> AdvertiseTypeDescriptions;

    // CIM_RegisteredProfile features:
    Property<Array_String> ImplementedFeatures;

    CIMPLE_CLASS(CIM_RegisteredProfile)
};

/*[1280]*/
class CIM_RegisteredProfile_CloseConformantInstances_method : public Instance
{
public:
    Property<String> EnumerationContext;
    Property<uint32> return_value;
    CIMPLE_METHOD(CIM_RegisteredProfile_CloseConformantInstances_method)
};

/*[1280]*/
class CIM_RegisteredProfile_OpenConformantInstances_method : public Instance
{
public:
    Property<String> ResultClass;
    Property<Array_String> IncludedPropertyList;
    Property<uint32> OperationTimeout;
    Property<boolean> ContinueOnError;
    Property<uint32> MaxObjectCount;
    Property<String> EnumerationContext;
    Property<boolean> EndOfSequence;
    Property<Array_uint16> InstanceType;
    Property< Array<CIM_ManagedElement*> > InstanceWithPathList;
    Property<uint32> return_value;
    CIMPLE_METHOD(CIM_RegisteredProfile_OpenConformantInstances_method)
};

/*[1280]*/
class CIM_RegisteredProfile_PullConformantInstances_method : public Instance
{
public:
    Property<uint32> MaxObjectCount;
    Property<String> EnumerationContext;
    Property<boolean> EndOfSequence;
    Property<Array_uint16> InstanceType;
    Property< Array<CIM_ManagedElement*> > InstanceWithPathList;
    Property<uint32> return_value;
    CIMPLE_METHOD(CIM_RegisteredProfile_PullConformantInstances_method)
};

CIMPLE_NAMESPACE_END

#endif /* _cimple_CIM_RegisteredProfile_h */
