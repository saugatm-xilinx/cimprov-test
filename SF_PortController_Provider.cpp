// Generated by genprov 2.0.24
#include "SF_PortController_Provider.h"
#include "sf_provider.h"

CIMPLE_NAMESPACE_BEGIN

SF_PortController_Provider::SF_PortController_Provider()
{
}

SF_PortController_Provider::~SF_PortController_Provider()
{
}

Load_Status SF_PortController_Provider::load()
{
    solarflare::CIMHelper::initialize();
    return LOAD_OK;
}

Unload_Status SF_PortController_Provider::unload()
{
    return UNLOAD_OK;
}

Get_Instance_Status SF_PortController_Provider::get_instance(
    const SF_PortController* model,
    SF_PortController*& instance)
{
    return GET_INSTANCE_UNSUPPORTED;
}

Enum_Instances_Status SF_PortController_Provider::enum_instances(
    const SF_PortController* model,
    Enum_Instances_Handler<SF_PortController>* handler)
{
    solarflare::EnumInstances<SF_PortController>::allNICs(handler);
    
    return ENUM_INSTANCES_OK;
}

Create_Instance_Status SF_PortController_Provider::create_instance(
    SF_PortController* instance)
{
    return CREATE_INSTANCE_UNSUPPORTED;
}

Delete_Instance_Status SF_PortController_Provider::delete_instance(
    const SF_PortController* instance)
{
    return DELETE_INSTANCE_UNSUPPORTED;
}

Modify_Instance_Status SF_PortController_Provider::modify_instance(
    const SF_PortController* model,
    const SF_PortController* instance)
{
    return MODIFY_INSTANCE_UNSUPPORTED;
}

Invoke_Method_Status SF_PortController_Provider::RequestStateChange(
    const SF_PortController* self,
    const Property<uint16>& RequestedState,
    CIM_ConcreteJob*& Job,
    const Property<Datetime>& TimeoutPeriod,
    Property<uint32>& return_value)
{
    return INVOKE_METHOD_UNSUPPORTED;
}

Invoke_Method_Status SF_PortController_Provider::SetPowerState(
    const SF_PortController* self,
    const Property<uint16>& PowerState,
    const Property<Datetime>& Time,
    Property<uint32>& return_value)
{
    return INVOKE_METHOD_UNSUPPORTED;
}

Invoke_Method_Status SF_PortController_Provider::Reset(
    const SF_PortController* self,
    Property<uint32>& return_value)
{
    return INVOKE_METHOD_UNSUPPORTED;
}

Invoke_Method_Status SF_PortController_Provider::EnableDevice(
    const SF_PortController* self,
    const Property<boolean>& Enabled,
    Property<uint32>& return_value)
{
    return INVOKE_METHOD_UNSUPPORTED;
}

Invoke_Method_Status SF_PortController_Provider::OnlineDevice(
    const SF_PortController* self,
    const Property<boolean>& Online,
    Property<uint32>& return_value)
{
    return INVOKE_METHOD_UNSUPPORTED;
}

Invoke_Method_Status SF_PortController_Provider::QuiesceDevice(
    const SF_PortController* self,
    const Property<boolean>& Quiesce,
    Property<uint32>& return_value)
{
    return INVOKE_METHOD_UNSUPPORTED;
}

Invoke_Method_Status SF_PortController_Provider::SaveProperties(
    const SF_PortController* self,
    Property<uint32>& return_value)
{
    return INVOKE_METHOD_UNSUPPORTED;
}

Invoke_Method_Status SF_PortController_Provider::RestoreProperties(
    const SF_PortController* self,
    Property<uint32>& return_value)
{
    return INVOKE_METHOD_UNSUPPORTED;
}

/*@END@*/

CIMPLE_NAMESPACE_END
