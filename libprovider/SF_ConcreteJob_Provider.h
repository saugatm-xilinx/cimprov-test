/***************************************************************************//*! \file liprovider/SF_ConcreteJob_Provider.h
** <L5_PRIVATE L5_SOURCE>
** \author  OktetLabs
**  \brief  CIM Provider
**   \date  2013/10/02
**    \cop  (c) Solarflare Communications Inc.
** </L5_PRIVATE>
*//*
\**************************************************************************/

// Generated by genprov 2.0.24
#ifndef _SF_ConcreteJob_Provider_h
#define _SF_ConcreteJob_Provider_h

#include <cimple/cimple.h>
#include "SF_ConcreteJob.h"
#include "sf_provider.h"

CIMPLE_NAMESPACE_BEGIN

class SF_ConcreteJob_Provider
{
    class StopThread : public solarflare::Action
    {
    protected:
        virtual void handler(solarflare::SystemElement& se, unsigned);
    public:
        StopThread(const Instance *inst) : solarflare::Action(inst) {}
    };

    class GetThreadError : public solarflare::Action
    {
        CIM_Error *&errdest;
    public:
        GetThreadError(CIM_Error *&d, const Instance *inst) : 
            solarflare::Action(inst),
            errdest(d) {}
    protected:
        virtual void handler(solarflare::SystemElement& se, unsigned);
    };

public:

    typedef SF_ConcreteJob Class;

    SF_ConcreteJob_Provider();

    ~SF_ConcreteJob_Provider();

    Load_Status load();

    Unload_Status unload();

    Get_Instance_Status get_instance(
        const SF_ConcreteJob* model,
        SF_ConcreteJob*& instance);

    Enum_Instances_Status enum_instances(
        const SF_ConcreteJob* model,
        Enum_Instances_Handler<SF_ConcreteJob>* handler);

    Create_Instance_Status create_instance(
        SF_ConcreteJob* instance);

    Delete_Instance_Status delete_instance(
        const SF_ConcreteJob* instance);

    Modify_Instance_Status modify_instance(
        const SF_ConcreteJob* model,
        const SF_ConcreteJob* instance);

    Invoke_Method_Status KillJob(
        const SF_ConcreteJob* self,
        const Property<boolean>& DeleteOnKill,
        Property<uint32>& return_value);

    Invoke_Method_Status RequestStateChange(
        const SF_ConcreteJob* self,
        const Property<uint16>& RequestedState,
        const Property<Datetime>& TimeoutPeriod,
        Property<uint32>& return_value);

    Invoke_Method_Status GetError(
        const SF_ConcreteJob* self,
        CIM_Error*& Error,
        Property<uint32>& return_value);

#if CIM_SCHEMA_VERSION_MINOR == 26 || CIM_SCHEMA_VERSION_MINOR == 32
    Invoke_Method_Status GetErrors(
        const SF_ConcreteJob* self,
        Property< Array<CIM_Error*> >& Errors,
        Property<uint32>& return_value);
#endif

    /*@END@*/
};

CIMPLE_NAMESPACE_END

#endif /* _SF_ConcreteJob_Provider_h */
