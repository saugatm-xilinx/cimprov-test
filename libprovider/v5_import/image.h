/*
 * Copyright 2008 Solarflare Communications Inc. All rights reserved.
 * Use is subject to license terms.
 */

#ifndef IMAGE_H
#define IMAGE_H

/*
 * Refer to document SF-102785-PS for details of the header structure.
 */

#define IMAGE_HEADER_MAGIC	0x0106F1A5
#define IMAGE_HEADER_VERSION	0x00000004

/* Image types */
typedef enum image_type_e {			/* GENERATED BY scripts/genfwdef */
	IMAGE_TYPE_PHY = 0,
	IMAGE_TYPE_PHY_LOADER = 1,
	IMAGE_TYPE_BOOTROM = 2,
	IMAGE_TYPE_MCFW = 3,
	IMAGE_TYPE_MCFW_BACKUP = 4,
	IMAGE_TYPE_DISABLED_CALLISTO = 5,
	IMAGE_TYPE_FPGA = 6,
	IMAGE_TYPE_FPGA_BACKUP = 7,
	IMAGE_TYPE_FCFW = 8,
	IMAGE_TYPE_FCFW_BACKUP = 9,
	IMAGE_TYPE_CPLD = 10,
} image_type_t;

/* PHY flash subtypes */
typedef enum image_subtype_phy_e {		/* GENERATED BY scripts/genfwdef */
	IMAGE_SUBTYPE_PHY_SFX7101B = 0x3,
	IMAGE_SUBTYPE_PHY_SFT9001A = 0x8,
	IMAGE_SUBTYPE_PHY_QT2025C = 0x9,
	IMAGE_SUBTYPE_PHY_SFT9001B = 0xa,
	IMAGE_SUBTYPE_PHY_SFL9021 = 0x10,      /* used for loader only */
	IMAGE_SUBTYPE_PHY_QT2025_KR = 0x11,    /* QT2025 in KR rather than SFP+ mode */
	IMAGE_SUBTYPE_PHY_AEL3020 = 0x12,      /* As seen on the R2 HP blade NIC */
} image_subtype_phy_t;

typedef enum image_subtype_bootrom_e {		/* GENERATED BY scripts/genfwdef */
	IMAGE_SUBTYPE_BOOTROM_FALCON = 0,
	IMAGE_SUBTYPE_BOOTROM_BETHPAGE = 1,
	IMAGE_SUBTYPE_BOOTROM_SIENA = 2,
	IMAGE_SUBTYPE_BOOTROM_HUNTINGTON = 3,
	IMAGE_SUBTYPE_BOOTROM_FARMINGDALE = 4,
	IMAGE_SUBTYPE_BOOTROM_GREENPORT = 5,
} image_subtype_bootrom_t;

typedef enum image_subtype_mcfw_e {		/* GENERATED BY scripts/genfwdef */
	IMAGE_SUBTYPE_MCFW_COSIM = 0,
	IMAGE_SUBTYPE_MCFW_HALFSPEED = 6,
	IMAGE_SUBTYPE_MCFW_FLORENCE = 7,
	IMAGE_SUBTYPE_MCFW_ZEBEDEE = 8,
	IMAGE_SUBTYPE_MCFW_ERMINTRUDE = 9,
	IMAGE_SUBTYPE_MCFW_DYLAN = 10,
	IMAGE_SUBTYPE_MCFW_BRIAN = 11,
	IMAGE_SUBTYPE_MCFW_DOUGAL = 12,
	IMAGE_SUBTYPE_MCFW_MR_RUSTY = 13,
	IMAGE_SUBTYPE_MCFW_BUXTON = 14,
	IMAGE_SUBTYPE_MCFW_HOPE = 15,
	IMAGE_SUBTYPE_MCFW_MR_MCHENRY = 16,
	IMAGE_SUBTYPE_MCFW_UNCLE_HAMISH = 17,
	IMAGE_SUBTYPE_MCFW_TUTTLE = 18,
	IMAGE_SUBTYPE_MCFW_FINLAY = 19,
	IMAGE_SUBTYPE_MCFW_KAPTEYN = 20,
	IMAGE_SUBTYPE_MCFW_JOHNSON = 21,
	IMAGE_SUBTYPE_MCFW_GEHRELS = 22,
	IMAGE_SUBTYPE_MCFW_WHIPPLE = 23,
	IMAGE_SUBTYPE_MCFW_FORBES = 24,
	IMAGE_SUBTYPE_MCFW_LONGMORE = 25,
} image_subtype_mcfw_t;

typedef enum image_subtype_disabled_callisto_e {/* GENERATED BY scripts/genfwdef */
	IMAGE_SUBTYPE_DISABLED_CALLISTO_ALL = 0
} image_subtype_disabled_callisto_t;

typedef enum image_subtype_fpga_e {		/* GENERATED BY scripts/genfwdef */
	IMAGE_SUBTYPE_FPGA_PTP = 1,                /* PTP peripheral */
	IMAGE_SUBTYPE_FPGA_PTP_MR_MCHENRY = 2,     /* PTP peripheral on R7 boards */
	IMAGE_SUBTYPE_FPGA_FLORENCE = 3,           /* Modena FPGA */
	IMAGE_SUBTYPE_FPGA_UNCLE_HAMISH = 4,       /* Modena FPGA: Unknown silicon */
	IMAGE_SUBTYPE_FPGA_UNCLE_HAMISH_A7 = 5,    /* Modena FPGA: A7 silicon */
	IMAGE_SUBTYPE_FPGA_UNCLE_HAMISH_A5 = 6,    /* Modena FPGA: A5 silicon */
} image_subtype_fpga_t;

typedef enum image_subtype_fcfw_e {		/* GENERATED BY scripts/genfwdef */
	IMAGE_SUBTYPE_FCFW_MODENA = 1,
} image_subtype_fcfw_t;

typedef enum image_subtype_cpld_e {		/* GENERATED BY scripts/genfwdef */
	IMAGE_SUBTYPE_CPLD_SFA6902 = 1,            /* CPLD on Modena (2-port) */
} image_subtype_cpld_t;

typedef enum image_subtype_license_e {		/* GENERATED BY scripts/genfwdef */
	IMAGE_SUBTYPE_LICENSE_AOE = 1,            /* AOE */
} image_subtype_license_t;

/* Controller versions (denoted by PCI device id) */
#define	IMAGE_CONTROLLER_RESERVED	0x00000000
#define	IMAGE_CONTROLLER_0703		0x00000001      /* Falcon A0/A1 */
#define	IMAGE_CONTROLLER_0710		0x00000002      /* Falcon B0 */
#define	IMAGE_CONTROLLER_0803		0x00000003      /* Siena */
#define	IMAGE_CONTROLLER_0903		0x00000004      /* Huntington */

#ifdef _MSC_VER
#pragma pack(push,1)
#else
#pragma pack(1)
#endif

typedef	struct image_header_s {
	unsigned int	ih_magic;
	unsigned int	ih_version;
	unsigned int	ih_type;
	unsigned int	ih_subtype;
	unsigned int	ih_code_size;
	unsigned int	ih_size;
	unsigned int	ih_controller_version_min;
	unsigned int	ih_controller_version_max;
	unsigned short	ih_code_version_a;
	unsigned short	ih_code_version_b;
	unsigned short	ih_code_version_c;
	unsigned short	ih_code_version_d;
} image_header_t;

#ifdef _MSC_VER
#pragma pack(pop)
#else
#pragma pack()
#endif

#define	IMAGE_HEADER_SIZE	40	

#endif /* IMAGE_H */
