#!/bin/sh

#######
# Script to do the following -
# Update the Version number for cimprov
# Checkin the Cimprov version file.
# Updates the Version number for sfupdate_esxi
# Checkin the sfupdate_esxi version file.
# Tags->repository with the new tag.


args="$@"
repo=cimprov

err () { echo "$*" 1>&2; }
fail () { err "$@"; exit 1; }
msg () { echo "$*" 2>&1; }

# Usage
usage () {
    msg "Usage: createtag  <desired new tag>"
    msg "  desired new tag: The tag with which cimprov repo shall be tagged"
    msg "  tag format: vX.X.X.X"
    msg "  Note that createtag will check that this tag does not already exist"
    exit 1
}

hgcommit () {
    local filename=$1 msg=$2
    msg "Committing $filename with message -$msg"
    hg --noninteractive commit $filename -m "$msg"
}

hgtag() {
    msg "Repo ${repo} tag ${tagparam}"
    hg --noninteractive tag ${tagparam}
}


hgpush () {
    msg "Push back ${repo} changes"
    hg --noninteractive push || fail "hg push failed"
}

sanitychecks () {
    # Check no local changes
    lines=$(hg --noninteractive status |  grep -v "^?" | wc -l)
    [ "${lines}" = 0 ] || fail "Repo ${repo} has local changes. Aborting"

    # Check no outgoing commits
    hg --noninteractive outgoing | egrep '^no changes found' > /dev/null || \
       fail "Repo ${repo} has outgoing changes"

   # Check no applied mqueue patches - without needing mqueue extension
    hg --noninteractive tags | grep qparent && \
        fail "Repo ${repo} has mqueue patches applied. Aborting" || true
}

checktagexists() {
    msg "Checking if tag exists .."
    hg tags | grep "^$tagparam" >/dev/null 2>&1
}

updatecimprov_version() {
    local filename=../mk/identity.mk
    if [[ -e $filename ]]; then
        msg "Changing cimprovider version"
        sed -i "s/PROVIDER_VERSION_MAJOR = .*/PROVIDER_VERSION_MAJOR = $provider_major_ver/g" $filename
        sed -i "s/PROVIDER_VERSION_MINOR = .*/PROVIDER_VERSION_MINOR = $provider_minor_ver/g" $filename
        sed -i "s/PROVIDER_REVISION = .*/PROVIDER_REVISION = $provider_revision/g" $filename
    else
        fail "File not found"
    fi
    hgcommit $filename "Updating $filename revision to $tagparam"
    hgpush
}

tagcimprovider() {
    hgtag
    hgpush
}

if [ $# -eq 0 ]; then
    err "No arguments supplied"
    usage
fi
tagparam="$1"
if [[ $tagparam =~ v([0-9]+).([0-9]+).([0-9]+).([0-9]+) ]]; then
    tagvalue=$(echo = "$tagparam" | cut -d 'v' -f 2)
else
    err "Incorrect Tag Format"
    usage
fi
provider_major_ver=$(echo "$tagvalue" | cut -d '.' -f1)
provider_minor_ver=$(echo "$tagvalue" | cut -d '.' -f2)
provider_revision=$(echo "$tagvalue" | cut -d '.' -f3).$(echo "$tagvalue" | cut -d '.' -f4)
sanitychecks
checktagexists &&
     fail "Tag already exists"
updatecimprov_version
tagcimprovider
