Python testsuite howto:

1. Getting and installing PyWBEM library

Run pywbem_setup.sh script. It performs following actions:
* wget's the tar
* unpacks it into /tmp/pywbem.xxx
* installs it into cimprov/testsuite/pywbem
* removes the temporary directory


2. Running tests

Use run.sh wrapper script. By default it runs whole test package
for default configuration.

marsik@sinda:~/work/wbem/src/cimprov_el/testsuite$ ./run.sh --help
USAGE: run.sh [options] [test_name[:param=value[,param=value]*]]*
Options:
--cfg=<CFG>           Configuration to be used
--list-cfg            Print the list of known configurations

You can specify configuration, test names and parameters:
-bash-4.1$ ./testsuite/run.sh  --cfg=ibm namespace
Starting package misc
Starting test namespace                                     PASSED
Done package misc

marsik@frar:~$ /home/marsik/work/wbem/src/cimprov_el/testsuite/run.sh namespace \
association:names_only=True,role=False
Starting package misc
Starting test namespace                                     PASSED
Done package misc
Starting package intrinsics
Starting test association                                   FAILED
Starting test association                                   FAILED
Done package intrinsics

You can find logs in /tmp/tester.log:
marsik@frar:~$ grep TEST /tmp/tester.log
TEST namespace: Check namespaces existance
TEST namespace: PASSED
TEST association: Check associations traversal
TEST association: FAILED
TEST association: Check associations traversal
TEST association: FAILED


Environment Variables.

You can set CIMPROV_CLASSES to the file with provider classes list,
which is u—ïed by enumeration, association, reference and stress tests.
By default it points to the classes file in cimprov directory:
export CIMPROV_CLASSES=/home/marsik/work/wbem/src/cimprov_el/classes

If you have installed pywbem manually, set PYTHONPATH to installation location:
export PYTHONPATH=/home/marsik/work/wbem/build/pywbem_frar

If you want to add new configuration, you should describe configuration
parameters in the tester_vars_<cfg>.py file.


