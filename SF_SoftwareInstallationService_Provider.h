// Generated by genprov 2.0.24
#ifndef _SF_SoftwareInstallationService_Provider_h
#define _SF_SoftwareInstallationService_Provider_h

#include <cimple/cimple.h>
#include "SF_SoftwareInstallationService.h"
#include "sf_platform.h"

CIMPLE_NAMESPACE_BEGIN

class SF_SoftwareInstallationService_Provider
{
    class SWEnum : public solarflare::ConstSoftwareEnumerator
    {
        Enum_Instances_Handler<SF_SoftwareInstallationService>* handler;
    public:
        SWEnum(Enum_Instances_Handler<SF_SoftwareInstallationService>* h) :
            handler(h) {};
        virtual bool process(const solarflare::SWElement& sw);
    };

public:

    static SF_SoftwareInstallationService *makeReference(const solarflare::SWElement& ve);
    static solarflare::SWElement *findByInstance(const SF_SoftwareInstallationService& svc,
                                                 solarflare::SoftwareContainer& scope);

    typedef SF_SoftwareInstallationService Class;

    SF_SoftwareInstallationService_Provider();

    ~SF_SoftwareInstallationService_Provider();

    Load_Status load();

    Unload_Status unload();

    Get_Instance_Status get_instance(
        const SF_SoftwareInstallationService* model,
        SF_SoftwareInstallationService*& instance);

    Enum_Instances_Status enum_instances(
        const SF_SoftwareInstallationService* model,
        Enum_Instances_Handler<SF_SoftwareInstallationService>* handler);

    Create_Instance_Status create_instance(
        SF_SoftwareInstallationService* instance);

    Delete_Instance_Status delete_instance(
        const SF_SoftwareInstallationService* instance);

    Modify_Instance_Status modify_instance(
        const SF_SoftwareInstallationService* model,
        const SF_SoftwareInstallationService* instance);

    Invoke_Method_Status RequestStateChange(
        const SF_SoftwareInstallationService* self,
        const Property<uint16>& RequestedState,
        CIM_ConcreteJob*& Job,
        const Property<Datetime>& TimeoutPeriod,
        Property<uint32>& return_value);

    Invoke_Method_Status StartService(
        const SF_SoftwareInstallationService* self,
        Property<uint32>& return_value);

    Invoke_Method_Status StopService(
        const SF_SoftwareInstallationService* self,
        Property<uint32>& return_value);

    Invoke_Method_Status CheckSoftwareIdentity(
        const SF_SoftwareInstallationService* self,
        const CIM_SoftwareIdentity* Source,
        const CIM_ManagedElement* Target,
        const CIM_Collection* Collection,
        Property<Array_uint16>& InstallCharacteristics,
        Property<uint32>& return_value);

    Invoke_Method_Status InstallFromSoftwareIdentity(
        const SF_SoftwareInstallationService* self,
        CIM_ConcreteJob*& Job,
        const Property<Array_uint16>& InstallOptions,
        const Property<Array_String>& InstallOptionsValues,
        const CIM_SoftwareIdentity* Source,
        const CIM_ManagedElement* Target,
        const CIM_Collection* Collection,
        Property<uint32>& return_value);

    Invoke_Method_Status InstallFromURI(
        const SF_SoftwareInstallationService* self,
        CIM_ConcreteJob*& Job,
        const Property<String>& URI,
        const CIM_ManagedElement* Target,
        const Property<Array_uint16>& InstallOptions,
        const Property<Array_String>& InstallOptionsValues,
        Property<uint32>& return_value);

    /*@END@*/
};

CIMPLE_NAMESPACE_END

#endif /* _SF_SoftwareInstallationService_Provider_h */
