/*NOCHKSRC*/
//==============================================================================
//
// PLEASE DO NOT EDIT; THIS FILE WAS AUTOMATICALLY GENERATED BY GENCLASS 2.0.24
//
//==============================================================================

#ifndef _cimple_SF_RegisteredProfile_h
#define _cimple_SF_RegisteredProfile_h

#include <cimple/cimple.h>
#include "CIM_RegisteredProfile.h"

CIMPLE_NAMESPACE_BEGIN

// SF_RegisteredProfile keys:
//     InstanceID

/*[1194]*/
class SF_RegisteredProfile : public Instance
{
public:
    // CIM_ManagedElement features:
    Property<String> InstanceID;
    Property<String> Caption;
    Property<String> Description;
    Property<String> ElementName;

    // CIM_RegisteredProfile features:
    struct _RegisteredOrganization
    {
        enum
        {
            enum_Other = 1,
            enum_DMTF = 2,
            enum_CompTIA = 3,
            enum_Consortium_for_Service_Innovation = 4,
            enum_FAST = 5,
            enum_GGF = 6,
            enum_INTAP = 7,
            enum_itSMF = 8,
            enum_NAC = 9,
            enum_Northwest_Energy_Efficiency_Alliance = 10,
            enum_SNIA = 11,
            enum_TM_Forum = 12,
            enum_The_Open_Group = 13,
            enum_ANSI = 14,
            enum_IEEE = 15,
            enum_IETF = 16,
            enum_INCITS = 17,
            enum_ISO = 18,
            enum_W3C = 19,
            enum_OGF = 20,
            enum_The_Green_Grid = 21,
            enum_DMTF_Reserved = 0,
        };
        uint16 value;
        uint8 null;
    }
    RegisteredOrganization;
    Property<String> OtherRegisteredOrganization;
    Property<String> RegisteredName;
    Property<String> RegisteredVersion;
    struct _AdvertiseTypes
    {
        enum
        {
            enum_Other = 1,
            enum_Not_Advertised = 2,
            enum_SLP = 3,
        };
        Array_uint16 value;
        uint8 null;
    }
    AdvertiseTypes;
    Property<Array_String> AdvertiseTypeDescriptions;
    Property<Array_String> ImplementedFeatures;

    // SF_RegisteredProfile features:

    CIMPLE_CLASS(SF_RegisteredProfile)
};

typedef CIM_RegisteredProfile_CloseConformantInstances_method SF_RegisteredProfile_CloseConformantInstances_method;

typedef CIM_RegisteredProfile_OpenConformantInstances_method SF_RegisteredProfile_OpenConformantInstances_method;

typedef CIM_RegisteredProfile_PullConformantInstances_method SF_RegisteredProfile_PullConformantInstances_method;

CIMPLE_NAMESPACE_END

#endif /* _cimple_SF_RegisteredProfile_h */
