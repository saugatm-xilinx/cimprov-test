// Generated by genprov 2.0.24
#include "SF_RecordLog_Provider.h"

CIMPLE_NAMESPACE_BEGIN

SF_RecordLog_Provider::SF_RecordLog_Provider()
{
}

SF_RecordLog_Provider::~SF_RecordLog_Provider()
{
}

Load_Status SF_RecordLog_Provider::load()
{
    return LOAD_OK;
}

Unload_Status SF_RecordLog_Provider::unload()
{
    return UNLOAD_OK;
}

Get_Instance_Status SF_RecordLog_Provider::get_instance(
    const SF_RecordLog* model,
    SF_RecordLog*& instance)
{
    return GET_INSTANCE_UNSUPPORTED;
}

Enum_Instances_Status SF_RecordLog_Provider::enum_instances(
    const SF_RecordLog* model,
    Enum_Instances_Handler<SF_RecordLog>* handler)
{
    return ENUM_INSTANCES_OK;
}

Create_Instance_Status SF_RecordLog_Provider::create_instance(
    SF_RecordLog* instance)
{
    return CREATE_INSTANCE_UNSUPPORTED;
}

Delete_Instance_Status SF_RecordLog_Provider::delete_instance(
    const SF_RecordLog* instance)
{
    return DELETE_INSTANCE_UNSUPPORTED;
}

Modify_Instance_Status SF_RecordLog_Provider::modify_instance(
    const SF_RecordLog* model,
    const SF_RecordLog* instance)
{
    return MODIFY_INSTANCE_UNSUPPORTED;
}

Invoke_Method_Status SF_RecordLog_Provider::RequestStateChange(
    const SF_RecordLog* self,
    const Property<uint16>& RequestedState,
    CIM_ConcreteJob*& Job,
    const Property<Datetime>& TimeoutPeriod,
    Property<uint32>& return_value)
{
    return INVOKE_METHOD_UNSUPPORTED;
}

Invoke_Method_Status SF_RecordLog_Provider::ClearLog(
    const SF_RecordLog* self,
    Property<uint32>& return_value)
{
    return INVOKE_METHOD_UNSUPPORTED;
}

/*@END@*/

CIMPLE_NAMESPACE_END
