/*NOCHKSRC*/
//==============================================================================
//
// PLEASE DO NOT EDIT; THIS FILE WAS AUTOMATICALLY GENERATED BY GENCLASS 2.0.24
//
//==============================================================================

#include <cimple/Meta_Class.h>
#include <cimple/Meta_Property.h>
#include <cimple/Meta_Reference.h>
#include "CIM_AvailableDiagnosticService.h"

CIMPLE_NAMESPACE_BEGIN

using namespace cimple;

extern const Meta_Repository __meta_repository_480038F9449B17AC9E2210119CF38AF2;

/*[1653]*/
extern const Meta_Reference
_CIM_AvailableDiagnosticService_ServiceProvided;

/*[1664]*/
const Meta_Reference
_CIM_AvailableDiagnosticService_ServiceProvided =
{
    CIMPLE_ATOMIC_INITIALIZER, /* refs */
    CIMPLE_FLAG_REFERENCE|CIMPLE_FLAG_KEY,
    "ServiceProvided",
    0, /* meta_qualifiers */
    0, /* num_meta_qaulifiers */
    0, /* subscript */
    &CIM_DiagnosticService::static_meta_class,
    CIMPLE_OFF(CIM_AvailableDiagnosticService,ServiceProvided)
};

/*[1653]*/
extern const Meta_Reference
_CIM_ServiceAvailableToElement_UserOfService;

/*[1568]*/
extern const Meta_Property
_CIM_AvailableDiagnosticService_EstimatedDurationOfService;

/*[1591]*/
const Meta_Property
_CIM_AvailableDiagnosticService_EstimatedDurationOfService =
{
    CIMPLE_ATOMIC_INITIALIZER, /* refs */
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_READ,
    "EstimatedDurationOfService",
    0, /* meta_qualifiers */
    0, /* num_meta_qaulifiers */
    UINT16,
    0, /* subscript */
    CIMPLE_OFF(CIM_AvailableDiagnosticService,EstimatedDurationOfService),
    0, /* value */
};

/*[1568]*/
extern const Meta_Property
_CIM_AvailableDiagnosticService_EstimatedDurationQualifier;

/*[1591]*/
const Meta_Property
_CIM_AvailableDiagnosticService_EstimatedDurationQualifier =
{
    CIMPLE_ATOMIC_INITIALIZER, /* refs */
    CIMPLE_FLAG_PROPERTY|CIMPLE_FLAG_READ,
    "EstimatedDurationQualifier",
    0, /* meta_qualifiers */
    0, /* num_meta_qaulifiers */
    UINT32,
    0, /* subscript */
    CIMPLE_OFF(CIM_AvailableDiagnosticService,EstimatedDurationQualifier),
    0, /* value */
};

/*[2291]*/
static Meta_Feature* _CIM_AvailableDiagnosticService_MFA[] =
{
    (Meta_Feature*)(void*)&_CIM_AvailableDiagnosticService_ServiceProvided,
    (Meta_Feature*)(void*)&_CIM_ServiceAvailableToElement_UserOfService,
    (Meta_Feature*)(void*)&_CIM_AvailableDiagnosticService_EstimatedDurationOfService,
    (Meta_Feature*)(void*)&_CIM_AvailableDiagnosticService_EstimatedDurationQualifier,
};

/*[2338]*/
static const Meta_Feature_Local _locals[] =
{
    {1},
    {0},
    {1},
    {1},
};

/*[2358]*/
const Meta_Class CIM_AvailableDiagnosticService::static_meta_class =
{
    CIMPLE_ATOMIC_INITIALIZER, /* refs */
    CIMPLE_FLAG_ASSOCIATION,
    "CIM_AvailableDiagnosticService",
    0, /* meta_qualifiers */
    0, /* num_meta_qaulifiers */
    _CIM_AvailableDiagnosticService_MFA,
    CIMPLE_ARRAY_SIZE(_CIM_AvailableDiagnosticService_MFA),
    sizeof(CIM_AvailableDiagnosticService),
    _locals,
    &CIM_ServiceAvailableToElement::static_meta_class,
    2, /* num_keys */
    &__meta_repository_480038F9449B17AC9E2210119CF38AF2,
};

CIMPLE_NAMESPACE_END

