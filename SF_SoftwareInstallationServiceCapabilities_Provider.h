// Generated by genprov 2.0.24
#ifndef _SF_SoftwareInstallationServiceCapabilities_Provider_h
#define _SF_SoftwareInstallationServiceCapabilities_Provider_h

#include <cimple/cimple.h>
#include "SF_SoftwareInstallationServiceCapabilities.h"
#include "sf_platform.h"

CIMPLE_NAMESPACE_BEGIN

class SF_SoftwareInstallationServiceCapabilities_Provider
{
    class SWEnum : public solarflare::ConstElementEnumerator
    {
        Enum_Instances_Handler<SF_SoftwareInstallationServiceCapabilities>* handler;
    public:
        SWEnum(Enum_Instances_Handler<SF_SoftwareInstallationServiceCapabilities>* h) :
            handler(h) {};
        virtual bool process(const solarflare::SystemElement& sw);
    };

public:

    static SF_SoftwareInstallationServiceCapabilities *makeReference(const solarflare::SWElement& ve);

    typedef SF_SoftwareInstallationServiceCapabilities Class;

    SF_SoftwareInstallationServiceCapabilities_Provider();

    ~SF_SoftwareInstallationServiceCapabilities_Provider();

    Load_Status load();

    Unload_Status unload();

    Get_Instance_Status get_instance(
        const SF_SoftwareInstallationServiceCapabilities* model,
        SF_SoftwareInstallationServiceCapabilities*& instance);

    Enum_Instances_Status enum_instances(
        const SF_SoftwareInstallationServiceCapabilities* model,
        Enum_Instances_Handler<SF_SoftwareInstallationServiceCapabilities>* handler);

    Create_Instance_Status create_instance(
        SF_SoftwareInstallationServiceCapabilities* instance);

    Delete_Instance_Status delete_instance(
        const SF_SoftwareInstallationServiceCapabilities* instance);

    Modify_Instance_Status modify_instance(
        const SF_SoftwareInstallationServiceCapabilities* model,
        const SF_SoftwareInstallationServiceCapabilities* instance);

    /*@END@*/
};

CIMPLE_NAMESPACE_END

#endif /* _SF_SoftwareInstallationServiceCapabilities_Provider_h */
